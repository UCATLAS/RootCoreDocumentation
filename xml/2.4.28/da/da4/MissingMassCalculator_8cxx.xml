<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/da4/MissingMassCalculator_8cxx" kind="file">
    <compoundname>MissingMassCalculator.cxx</compoundname>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes refid="db/dfd/MissingMassCalculator_8h" local="yes">DiTauMassTools/MissingMassCalculator.h</includes>
    <includes local="no">TRandom.h</includes>
    <includes local="no">TObject.h</includes>
    <includes local="no">TStopwatch.h</includes>
    <includes local="no">TFitResult.h</includes>
    <includes local="no">TF1.h</includes>
    <includes local="no">TFitResultPtr.h</includes>
    <includes local="no">TMatrixDSym.h</includes>
    <includes local="no">TVectorD.h</includes>
    <incdepgraph>
      <node id="114254">
        <label>TMatrixDSym.h</label>
      </node>
      <node id="114235">
        <label>iomanip</label>
      </node>
      <node id="114251">
        <label>TStopwatch.h</label>
      </node>
      <node id="114243">
        <label>TLorentzVector.h</label>
      </node>
      <node id="114241">
        <label>TF1.h</label>
      </node>
      <node id="114247">
        <label>TDirectory.h</label>
      </node>
      <node id="114237">
        <label>fstream</label>
      </node>
      <node id="114240">
        <label>TH1.h</label>
      </node>
      <node id="114244">
        <label>TVector3.h</label>
      </node>
      <node id="114246">
        <label>TObject.h</label>
      </node>
      <node id="114239">
        <label>DiTauMassTools/MissingMassCalculator.h</label>
        <link refid="db/dfd/MissingMassCalculator_8h_source"/>
        <childnode refid="114240" relation="include">
        </childnode>
        <childnode refid="114241" relation="include">
        </childnode>
        <childnode refid="114242" relation="include">
        </childnode>
        <childnode refid="114243" relation="include">
        </childnode>
        <childnode refid="114244" relation="include">
        </childnode>
        <childnode refid="114245" relation="include">
        </childnode>
        <childnode refid="114246" relation="include">
        </childnode>
        <childnode refid="114247" relation="include">
        </childnode>
        <childnode refid="114248" relation="include">
        </childnode>
        <childnode refid="114249" relation="include">
        </childnode>
      </node>
      <node id="114245">
        <label>vector</label>
      </node>
      <node id="114252">
        <label>TFitResult.h</label>
      </node>
      <node id="114238">
        <label>sstream</label>
      </node>
      <node id="114249">
        <label>TRandom2.h</label>
      </node>
      <node id="114236">
        <label>iostream</label>
      </node>
      <node id="114242">
        <label>TMath.h</label>
      </node>
      <node id="114250">
        <label>TRandom.h</label>
      </node>
      <node id="114234">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx</label>
        <link refid="MissingMassCalculator.cxx"/>
        <childnode refid="114235" relation="include">
        </childnode>
        <childnode refid="114236" relation="include">
        </childnode>
        <childnode refid="114237" relation="include">
        </childnode>
        <childnode refid="114238" relation="include">
        </childnode>
        <childnode refid="114239" relation="include">
        </childnode>
        <childnode refid="114250" relation="include">
        </childnode>
        <childnode refid="114246" relation="include">
        </childnode>
        <childnode refid="114251" relation="include">
        </childnode>
        <childnode refid="114252" relation="include">
        </childnode>
        <childnode refid="114241" relation="include">
        </childnode>
        <childnode refid="114253" relation="include">
        </childnode>
        <childnode refid="114254" relation="include">
        </childnode>
        <childnode refid="114255" relation="include">
        </childnode>
      </node>
      <node id="114255">
        <label>TVectorD.h</label>
      </node>
      <node id="114253">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="114248">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="da/da4/MissingMassCalculator_8cxx_1ab8accb9e271896a977d3b6d6ca6208c2" prot="public" static="no">
        <name>WALKSTRATEGY</name>
        <initializer>WalkStrategy::MARKOVCHAIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" line="9" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="da/da4/MissingMassCalculator_8cxx_1a43016d873124d39034edb8cd164794db" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double pi</definition>
        <argsstring></argsstring>
        <name>pi</name>
        <initializer>TMath::Pi()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" line="91" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da4/MissingMassCalculator_8cxx_1ad996edbbc287b4e5f3dd072a10bd6122" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double twopi</definition>
        <argsstring></argsstring>
        <name>twopi</name>
        <initializer>2*pi</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da4/MissingMassCalculator_8cxx_1ab0bf38bc19b14ba80f346e7b22ddec9f" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double piOverTwo</definition>
        <argsstring></argsstring>
        <name>piOverTwo</name>
        <initializer>pi/2.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" line="6856" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" bodystart="6856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da4/MissingMassCalculator_8cxx_1acc991162a310dfd2d180ee8819766e9a" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double fastB</definition>
        <argsstring></argsstring>
        <name>fastB</name>
        <initializer>4/pi</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" line="6857" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" bodystart="6857" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da4/MissingMassCalculator_8cxx_1a8fe0958126383c574005603c81e1d5ae" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double fastC</definition>
        <argsstring></argsstring>
        <name>fastC</name>
        <initializer>-4/(pi*pi)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" line="6858" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" bodystart="6858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da4/MissingMassCalculator_8cxx_1a21560f60bc2c9c6da51642205cbec4cf" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double fastP</definition>
        <argsstring></argsstring>
        <name>fastP</name>
        <initializer>9./40.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" line="6859" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" bodystart="6859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da4/MissingMassCalculator_8cxx_1a24a6c76f1a8aa1e01647d02a10285fc3" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double fastQ</definition>
        <argsstring></argsstring>
        <name>fastQ</name>
        <initializer>31./40.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" line="6860" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx" bodystart="6860" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>vim:<sp/>ts=8<sp/>sw=2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Missing<sp/>Mass<sp/>Calculator</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>done<sp/>:<sp/>tau<sp/>4-vect<sp/>and<sp/>type<sp/>should<sp/>be<sp/>data<sp/>member<sp/>of<sp/>MMC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>walk<sp/>strategy<sp/>for<sp/>alg<sp/>3.<sp/>Markov<sp/>is<sp/>now<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WALKSTRATEGY<sp/>WalkStrategy::MARKOVCHAIN<sp/>//<sp/>new<sp/>recommended</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="comment">//#define<sp/>WALKSTRATEGY<sp/>WalkStrategy::RANDOM<sp/><sp/>//<sp/>old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>WALKSTRATEGY<sp/>WalkStrategy::GRID<sp/><sp/>//<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>directives<sp/>below<sp/>allow<sp/>to<sp/>alter<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>they<sp/>should<sp/>ALL<sp/>be<sp/>commented<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Change<sp/>for<sp/>experts<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//disable<sp/>inlining<sp/>(to<sp/>get<sp/>better<sp/>callgraph<sp/>from<sp/>callgrind),<sp/>but<sp/>this<sp/>slow<sp/>down<sp/>the<sp/>code<sp/>a<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//The<sp/>following<sp/>directive<sp/>allows<sp/>to<sp/>enable<sp/>various<sp/>debugging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>be<sp/>used<sp/>with<sp/>care<sp/>and<sp/>only<sp/>on<sp/>a<sp/>few<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>dump<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DUMPITERATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>dump<sp/>specific<sp/>iterations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DEBUGTHISITERATION<sp/>618</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>make<sp/>histogram<sp/>of<sp/>input<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>HISTITERATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>fill<sp/>ntuple<sp/>wit<sp/>the<sp/>vector<sp/>of<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>FILLPOINTSOUTPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>fill<sp/>the<sp/>vector<sp/>point<sp/>only<sp/>with<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>FILLPOINTSOUTPUTONLYSOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>make<sp/>histogram<sp/>of<sp/>separate<sp/>probabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>HISTPROBA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>keep<sp/>mass<sp/>histogram<sp/>(they<sp/>are<sp/>defined<sp/>in<sp/>all<sp/>cases)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>HISTMASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>debug<sp/>nupsolutionv3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DEBUG_NUPSOLV3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>directives<sp/>allow<sp/>to<sp/>test<sp/>algorithms<sp/>modifications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>most<sp/>case<sp/>either<sp/>obsolete<sp/>or<sp/>untested.<sp/>Only<sp/>for<sp/>experts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>tau<sp/>energy<sp/>scanning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>TAUESCAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>histogram<sp/>smoothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>SMOOTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>do<sp/>not<sp/>use<sp/>fast<sp/>sin/cos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>NOFASTSINCOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>do<sp/>not<sp/>reorder<sp/>input<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DONOTREORDERTAU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>do<sp/>not<sp/>cut<sp/>corner<sp/>for<sp/>MET<sp/>(default<sp/>is<sp/>disabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>METNOTCUTCORNER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>rerun<sp/>after<sp/>fixing<sp/>met<sp/>to<sp/>best<sp/>value<sp/>from<sp/>MMC<sp/>(does<sp/>not<sp/>help<sp/>at<sp/>all)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>RERUNWITHBESTMET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>use<sp/>of<sp/>real<sp/>solution<sp/>or<sp/>approx<sp/>solution<sp/>-b/2a<sp/>(worst<sp/>result)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>USEAPPROXSOLUTION<sp/>do<sp/>not<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>tau<sp/>visible<sp/>momentum<sp/>instead<sp/>of<sp/>total<sp/>tau<sp/>momentum<sp/>(not<sp/>debugged)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>USETAUVISFORPROB<sp/>do<sp/>not<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>tau<sp/>prob<sp/>from<sp/>matrix<sp/>element<sp/>Weizman/Freiburg<sp/>(not<sp/>debugged)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>maxdelphi<sp/>(recommended<sp/>for<sp/>random,<sp/>otherwise<sp/>phi<sp/>angle<sp/>scanning<sp/>too<sp/>wide)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>USEMAXDELPHI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>TAUPROBMATRIX<sp/>do<sp/>not<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>use<sp/>all<sp/>solution<sp/>for<sp/>each<sp/>point<sp/>(otherwise<sp/>pick<sp/>one<sp/>randomly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>USEALLSOLUTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hand<sp/>written<sp/>maximum<sp/>fitting<sp/>instead<sp/>of<sp/>root<sp/>fitting.<sp/>Does<sp/>not<sp/>gain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>anything,<sp/>only<sp/>useful<sp/>to<sp/>remove<sp/>root<sp/>Fit<sp/>overhead<sp/>when<sp/>running<sp/>valgrind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MAXFITTINGBYHAND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>burn<sp/>in<sp/>the<sp/>markov<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>BURNIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DiTauMassTools/MissingMassCalculator.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>for<sp/>RootCore<sp/>package</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;MissingMassCalculator.h&quot;<sp/>//<sp/>this<sp/>is<sp/>for<sp/>standalone<sp/>package</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TRandom.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TObject.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//SpeedUp<sp/>committed<sp/>from<sp/>revision<sp/>163876</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TStopwatch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFitResult.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TF1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFitResultPtr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TMatrixDSym.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TVectorD.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>!defined(__CINT__)<sp/>|<sp/>defined(__MAKECINT__)</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight><highlight class="comment">//ClassImp(MissingMassCalculator)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pi=TMath::Pi();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>twopi=2*pi;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dTheta<sp/>probability<sp/>density<sp/>function<sp/>for<sp/>hadronic<sp/>taus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::myDelThetaHadFunc(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*par)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fitval=1.0E-10;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x[0]&gt;TMath::Pi()<sp/>||<sp/>x[0]&lt;0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fitval;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg=x[0];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg_L=arg;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean=par[1];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaG=par[2];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mpv=par[3];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaL=par[4];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normL=par[5];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(normL&lt;0.0)<sp/>normL=0.0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g1=normL*TMath::Gaus(arg,mean,sigmaG);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g2=TMath::Landau(arg_L,mpv,sigmaL);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>fitval=par[0]*(g1+g2)/(1.0+normL);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::UPGRADE</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::LFVMMC2012){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm=sqrt(2.0*TMath::Pi());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g1=TMath::Gaus(arg,mean,sigmaG)/norm;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g2=TMath::Landau(arg_L,mpv,sigmaL)/norm;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>fitval=par[0]*g1/sigmaG+par[5]*g2/sigmaL;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fitval&lt;0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fitval;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dTheta<sp/>probability<sp/>density<sp/>function<sp/>for<sp/>leptonic<sp/>taus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::myDelThetaLepFunc(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*par)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fitval=1.0E-10;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x[0]&gt;TMath::Pi()<sp/>||<sp/>x[0]&lt;0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fitval;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg=x[0]/par[1];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normL=par[5];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(normL&lt;0.0)<sp/>normL=0.0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg&lt;1)<sp/>arg=sqrt(fabs(arg));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>arg=arg*arg;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg_L=x[0];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean=1.0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaG=par[2];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mpv=par[3];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaL=par[4];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g1=normL*TMath::Gaus(arg,mean,sigmaG);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g2=TMath::Landau(arg_L,mpv,sigmaL);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>fitval=par[0]*(g1+g2)/(1.0+normL);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fitval&lt;0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fitval;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//ClassImp(MissingMassCalculator)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//______________________________constructor________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="d1/da9/classMissingMassCalculator_1a1831f389483007adaeeb7c673742a657" kindref="member">MissingMassCalculator::MissingMassCalculator</ref>(){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>m_MMCCalibrationSet=MMCCalibrationSet::MAXMMCCALIBRATIONSET;<sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>value<sp/>invalid,<sp/>to<sp/>force<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>m_apoiIndex=0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>fUseVerbose=0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>fSpeedStudy=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>AlgorithmVersion=3;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>V9Walk<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>beamEnergy=6500.0;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>now<sp/>LHC<sp/>default<sp/>is<sp/>sqrt(S)=7<sp/>TeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>Niter_fit1=20;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>Niter_fit2=30;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>Niter_fit3=10;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>NsucStop=-1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>NiterRandom=-1;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>user<sp/>does<sp/>not<sp/>set<sp/>it<sp/>to<sp/>positive<sp/>value,will<sp/>be<sp/>set<sp/>in<sp/>SpaceWalkerInit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>m_NiterRandomLocal=-1;<sp/></highlight><highlight class="comment">//<sp/>niterandom<sp/>which<sp/>is<sp/>really<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//to<sp/>be<sp/>used<sp/>with<sp/>RMSSTOP<sp/><sp/>NiterRandom=10000000;<sp/>//<sp/>number<sp/>of<sp/>random<sp/>iterations<sp/>for<sp/>lh.<sp/>Multiplied<sp/>by<sp/>10<sp/>for<sp/>ll,<sp/>divided<sp/>by<sp/>10<sp/>for<sp/>hh<sp/>(to<sp/>be<sp/>optimised)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>RMSStop=200;//<sp/>Stop<sp/>criteria<sp/>depending<sp/>of<sp/>rms<sp/>of<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>reRunWithBestMET=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>RMSStop=-1;</highlight><highlight class="comment">//<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>RndmSeedAltering=0;<sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>changed<sp/>to<sp/>re-compute<sp/>with<sp/>different<sp/>random<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>dRmax_tau=0.4;<sp/></highlight><highlight class="comment">//<sp/>changed<sp/>from<sp/>0.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>SearchMode=0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>Nsigma_METscan=-1;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>sigmas<sp/>for<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>Nsigma_METscan_ll=3.0;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>sigmas<sp/>for<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>Nsigma_METscan_lh=3.0;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>sigmas<sp/>for<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>Nsigma_METscan_hh=4.0;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>sigmas<sp/>for<sp/>MET<sp/>scan<sp/>(4<sp/>for<sp/>hh<sp/>2013)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>m_meanbinStop=-1;<sp/></highlight><highlight class="comment">//<sp/>meanbin<sp/>stopping<sp/>criterion<sp/>(-1<sp/>if<sp/>not<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>m_ProposalTryMEt=-1;<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>on<sp/>METproposal<sp/>disable<sp/>//<sp/>FIXME<sp/>should<sp/>be<sp/>cleaner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>m_ProposalTryPhi=-1;<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>on<sp/>Phiproposal<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>m_ProposalTryMnu=-1;<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>on<sp/>MNuProposal<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>m_ProposalTryEtau=-1;<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>on<sp/>ETauProposal<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>dTheta3d_binMin=0.0025;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>dTheta3d_binMax=0.02;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>fJERsyst=0;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>JER<sp/>systematics<sp/>by<sp/>default<sp/>(+/-1:<sp/>up/down<sp/>1<sp/>sigma)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>METresSyst=0;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>MET<sp/>resolution<sp/>systematics<sp/>by<sp/>default<sp/>(+/-1:<sp/>up/down<sp/>1<sp/>sigma)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>fApplyMassScale=0;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>apply<sp/>mass<sp/>scale<sp/>correction<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>rawInput.dataType=1;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>&quot;data&quot;<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>fUseTailCleanup=1;<sp/></highlight><highlight class="comment">//<sp/>cleanup<sp/>by<sp/>default<sp/>for<sp/>lep-had<sp/>Moriond<sp/>2012<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>fUseTauProbability=1;<sp/></highlight><highlight class="comment">//<sp/>TauProbability<sp/>is<sp/>ON<sp/>by<sp/>default<sp/>DRMERGE<sp/>comment<sp/>out<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>fUseMnuProbability=0;<sp/></highlight><highlight class="comment">//<sp/>MnuProbability<sp/>is<sp/>OFF<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>fUseDefaults=0;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>pre-set<sp/>defaults<sp/>for<sp/>various<sp/>configurations;<sp/>if<sp/>set<sp/>it<sp/>to<sp/>0<sp/>if<sp/>need<sp/>to<sp/>study<sp/>various<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>fUseEfficiencyRecovery=0;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>re-fit<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>METScanScheme=1;<sp/></highlight><highlight class="comment">//<sp/>MET-scan<sp/>scheme:<sp/>0-<sp/>use<sp/>JER;<sp/>1-<sp/>use<sp/>simple<sp/>sumEt<sp/>&amp;<sp/>missingHt<sp/>for<sp/>Njet=0<sp/>events<sp/>in<sp/>(lep-had<sp/>winter<sp/>2012)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>MnuScanRange=1.777;<sp/>//<sp/>range<sp/>of<sp/>M(nunu)<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>MnuScanRange=1.5;<sp/></highlight><highlight class="comment">//<sp/>better<sp/>value<sp/>(sacha)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>LFVmode=0;<sp/></highlight><highlight class="comment">//<sp/>by<sp/>default<sp/>consider<sp/>case<sp/>of<sp/>H-&gt;mu+tau(-&gt;ele)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>ClearInputStuff();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>by<sp/>Tomas<sp/>Davidek<sp/>for<sp/>lep-lep:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>fUseDphiLL<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>randomGen<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TRandom2();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//walkStrategy=WalkStrategy::RANDOMNONUNIF;<sp/><sp/>//<sp/>experimental,<sp/>do<sp/>not<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>nCallprobCalculatorV9fast=0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>iterTheta3d=0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>debugThisIteration=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>nsolmax=4;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>nsolfinalmax=nsolmax*nsolmax;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>nuvecsol1.resize(nsolmax);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>nuvecsol2.resize(nsolmax);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>tauvecsol1.resize(nsolmax);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>tauvecsol2.resize(nsolmax);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>tauvecprob1.resize(nsolmax);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>tauvecprob2.resize(nsolmax);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>m_nsol=0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>m_probFinalSolVec.resize(nsolfinalmax);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>m_mtautauFinalSolVec.resize(nsolfinalmax);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>m_nu1FinalSolVec.resize(nsolfinalmax);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>m_nu2FinalSolVec.resize(nsolfinalmax);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>m_nsolOld=0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>m_probFinalSolOldVec.resize(nsolfinalmax);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>m_mtautauFinalSolOldVec.resize(nsolfinalmax);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>m_nu1FinalSolOldVec.resize(nsolfinalmax);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>m_nu2FinalSolOldVec.resize(nsolfinalmax);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>float<sp/>hEmax=1000;<sp/>//<sp/>maximum<sp/>energy<sp/>(GeV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hEmax=3000.0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>hNbins=500;<sp/>//<sp/>original<sp/>2500<sp/>for<sp/>mass,<sp/>10000<sp/>for<sp/>P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hNbins=1500;<sp/></highlight><highlight class="comment">//<sp/>original<sp/>2500<sp/>for<sp/>mass,<sp/>10000<sp/>for<sp/>P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>choice<sp/>of<sp/>hNbins<sp/>also<sp/>related<sp/>to<sp/>size<sp/>of<sp/>window<sp/>for<sp/>fitting<sp/>(see<sp/>maxFromHist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---<sp/>define<sp/>histograms<sp/>for<sp/>histogram<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---<sp/>upper<sp/>limits<sp/>need<sp/>to<sp/>be<sp/>revisied<sp/>in<sp/>the<sp/>future!!!<sp/>It<sp/>may<sp/>be<sp/>not<sp/>enough<sp/>for<sp/>some<sp/>analyses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>fMfit_all<sp/>=<sp/>std::make_shared&lt;TH1F&gt;(</highlight><highlight class="stringliteral">&quot;MMC_h1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">,hNbins,0.0,hEmax);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>fMfit_all-&gt;Sumw2();<sp/></highlight><highlight class="comment">//<sp/>allow<sp/>proper<sp/>error<sp/>bin<sp/>calculation.<sp/>Slightly<sp/>slower<sp/>but<sp/>completely<sp/>negligible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//histogram<sp/>without<sp/>weight.<sp/>useful<sp/>for<sp/>debugging.<sp/>negligibly<sp/>slow<sp/>until<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>fMfit_allNoWeight<sp/>=<sp/>std::make_shared&lt;TH1F&gt;(</highlight><highlight class="stringliteral">&quot;MMC_h1NoW&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;M<sp/>no<sp/>weight&quot;</highlight><highlight class="normal">,hNbins,0.0,hEmax);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>fPXfit1<sp/>=<sp/>std::make_shared&lt;TH1F&gt;(</highlight><highlight class="stringliteral">&quot;MMC_h2&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Px1&quot;</highlight><highlight class="normal">,4*hNbins,-hEmax,hEmax);<sp/></highlight><highlight class="comment">//<sp/>Px<sp/>for<sp/>tau1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>fPYfit1<sp/>=<sp/>std::make_shared&lt;TH1F&gt;(</highlight><highlight class="stringliteral">&quot;MMC_h3&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Py1&quot;</highlight><highlight class="normal">,4*hNbins,-hEmax,hEmax);<sp/></highlight><highlight class="comment">//<sp/>Py<sp/>for<sp/>tau1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>fPZfit1<sp/>=<sp/>std::make_shared&lt;TH1F&gt;(</highlight><highlight class="stringliteral">&quot;MMC_h4&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Pz1&quot;</highlight><highlight class="normal">,4*hNbins,-hEmax,hEmax);<sp/></highlight><highlight class="comment">//<sp/>Pz<sp/>for<sp/>tau1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>fPXfit2<sp/>=<sp/>std::make_shared&lt;TH1F&gt;(</highlight><highlight class="stringliteral">&quot;MMC_h5&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Px2&quot;</highlight><highlight class="normal">,4*hNbins,-hEmax,hEmax);<sp/></highlight><highlight class="comment">//<sp/>Px<sp/>for<sp/>tau2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>fPYfit2<sp/>=<sp/>std::make_shared&lt;TH1F&gt;(</highlight><highlight class="stringliteral">&quot;MMC_h6&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Py2&quot;</highlight><highlight class="normal">,4*hNbins,-hEmax,hEmax);<sp/></highlight><highlight class="comment">//<sp/>Py<sp/>for<sp/>tau2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>fPZfit2<sp/>=<sp/>std::make_shared&lt;TH1F&gt;(</highlight><highlight class="stringliteral">&quot;MMC_h7&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Pz2&quot;</highlight><highlight class="normal">,4*hNbins,-hEmax,hEmax);<sp/></highlight><highlight class="comment">//<sp/>Pz<sp/>for<sp/>tau2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>fMfit_all-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>fMfit_allNoWeight-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>fPXfit1-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>fPYfit1-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>fPZfit1-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>fPXfit2-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>fPYfit2-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>fPZfit2-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>hist<sp/>fitting<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_fFitting<sp/>=<sp/>new<sp/>TF1(&quot;maxFitting&quot;,this,&amp;MissingMassCalculator::maxFitting,0.,1000.,3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>m_fFitting<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;MMC_maxFitting&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,&amp;MissingMassCalculator::maxFitting,0.,hEmax,3);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>initial<sp/>parameter<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>m_fFitting-&gt;SetParNames(</highlight><highlight class="stringliteral">&quot;Max&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Mean&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;InvWidth2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gDirectory-&gt;pwd();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gDirectory-&gt;ls();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTITERATION</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//debug<sp/>histo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>fPhi1=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;MMC_hphi1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;phi1&quot;</highlight><highlight class="normal">,500,-3.2,3.2);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>fPhi2=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;MMC_hphi2&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;phi2&quot;</highlight><highlight class="normal">,500,-3.2,3.2);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>fMnu1=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;MMC_hmnu1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Mnu1&quot;</highlight><highlight class="normal">,500,-1.,10.);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>fMnu2=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;MMC_hmnu2&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Mnu2&quot;</highlight><highlight class="normal">,500,-1.,10.);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>fMetx=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;MMC_hmetx&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;METx&quot;</highlight><highlight class="normal">,400,-100.,100.);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>fMety=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;MMC_hmety&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;METy&quot;</highlight><highlight class="normal">,400,-100.,100.);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTPROBA</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>fTheta3D=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;MMC_htheta3d&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;lprob&quot;</highlight><highlight class="normal">,500,-10.,1.);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>fTauProb=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;MMC_htauprob&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;lprob&quot;</highlight><highlight class="normal">,500,-10.,2.);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gDirectory-&gt;pwd();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gDirectory-&gt;ls();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[tau_type][parLG][par]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>leptonic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>fit_param[0][0][0][0]=-9.82013E-1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>fit_param[0][0][0][1]=9.09874E-1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>fit_param[0][0][0][2]=0.0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>fit_param[0][0][0][3]=0.0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>fit_param[0][0][1][0]=9.96303E1;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>fit_param[0][0][1][1]=1.68873E1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>fit_param[0][0][1][2]=3.23798E-2;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>fit_param[0][0][1][3]=0.0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>fit_param[0][0][2][0]=0.0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>fit_param[0][0][2][1]=0.0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>fit_param[0][0][2][2]=0.0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>fit_param[0][0][2][3]=0.3;<sp/></highlight><highlight class="comment">//<sp/>fit<sp/>value<sp/>is<sp/>2.8898E-1,<sp/>I<sp/>use<sp/>0.3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>fit_param[0][0][3][0]=9.70055E1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>fit_param[0][0][3][1]=6.46175E1;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>fit_param[0][0][3][2]=3.20679E-2;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>fit_param[0][0][3][3]=0.0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>fit_param[0][0][4][0]=1.56865;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>fit_param[0][0][4][1]=2.28336E-1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>fit_param[0][0][4][2]=1.09396E-1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>fit_param[0][0][4][3]=1.99975E-3;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>fit_param[0][0][5][0]=0.0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>fit_param[0][0][5][1]=0.0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>fit_param[0][0][5][2]=0.0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>fit_param[0][0][5][3]=0.66;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1-prong<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>fit_param[0][1][0][0]=-2.42674;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>fit_param[0][1][0][1]=7.69124E-1;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>fit_param[0][1][0][2]=0.0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>fit_param[0][1][0][3]=0.0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>fit_param[0][1][1][0]=9.52747E1;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>fit_param[0][1][1][1]=1.26319E1;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>fit_param[0][1][1][2]=3.09643E-2;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>fit_param[0][1][1][3]=0.0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>fit_param[0][1][2][0]=1.71302E1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>fit_param[0][1][2][1]=3.00455E1;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>fit_param[0][1][2][2]=7.49445E-2;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>fit_param[0][1][2][3]=0.0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>fit_param[0][1][3][0]=1.06137E2;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>fit_param[0][1][3][1]=6.01548E1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>fit_param[0][1][3][2]=3.50867E-2;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>fit_param[0][1][3][3]=0.0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>fit_param[0][1][4][0]=4.26079E-1;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>fit_param[0][1][4][1]=1.76978E-1;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>fit_param[0][1][4][2]=1.43419;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>fit_param[0][1][4][3]=0.0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>fit_param[0][1][5][0]=0.0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>fit_param[0][1][5][1]=0.0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>fit_param[0][1][5][2]=0.0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>fit_param[0][1][5][3]=0.4;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3-prong<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>fit_param[0][2][0][0]=-2.43533;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>fit_param[0][2][0][1]=6.12947E-1;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>fit_param[0][2][0][2]=0.0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>fit_param[0][2][0][3]=0.0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>fit_param[0][2][1][0]=9.54202;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>fit_param[0][2][1][1]=2.80011E-1;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>fit_param[0][2][1][2]=2.49782E-1;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>fit_param[0][2][1][3]=0.0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>fit_param[0][2][2][0]=1.61325E1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>fit_param[0][2][2][1]=1.74892E1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>fit_param[0][2][2][2]=7.05797E-2;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>fit_param[0][2][2][3]=0.0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>fit_param[0][2][3][0]=1.17093E2;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>fit_param[0][2][3][1]=4.70000E1;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>fit_param[0][2][3][2]=3.87085E-2;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>fit_param[0][2][3][3]=0.0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>fit_param[0][2][4][0]=4.16557E-1;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>fit_param[0][2][4][1]=1.58902E-1;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>fit_param[0][2][4][2]=1.53516;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>fit_param[0][2][4][3]=0.0;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>fit_param[0][2][5][0]=0.0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>fit_param[0][2][5][1]=0.0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>fit_param[0][2][5][2]=0.0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>fit_param[0][2][5][3]=0.95;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[tau_type][parLG][par]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>leptonic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>fit_param[1][0][0][0]=-9.82013E-1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>fit_param[1][0][0][1]=9.09874E-1;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>fit_param[1][0][0][2]=0.0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>fit_param[1][0][0][3]=0.0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>fit_param[1][0][0][4]=0.0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>fit_param[1][0][1][0]=9.96303E1;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>fit_param[1][0][1][1]=1.68873E1;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>fit_param[1][0][1][2]=3.23798E-2;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>fit_param[1][0][1][3]=0.0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>fit_param[1][0][1][4]=0.0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>fit_param[1][0][2][0]=0.0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>fit_param[1][0][2][1]=0.0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>fit_param[1][0][2][2]=0.0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>fit_param[1][0][2][3]=0.3;<sp/></highlight><highlight class="comment">//<sp/>fit<sp/>value<sp/>is<sp/>2.8898E-1,<sp/>I<sp/>use<sp/>0.3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>fit_param[1][0][2][4]=0.0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>fit_param[1][0][3][0]=9.70055E1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>fit_param[1][0][3][1]=6.46175E1;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>fit_param[1][0][3][2]=3.20679E-2;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>fit_param[1][0][3][3]=0.0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>fit_param[1][0][3][4]=0.0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>fit_param[1][0][4][0]=1.56865;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>fit_param[1][0][4][1]=2.28336E-1;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>fit_param[1][0][4][2]=1.09396E-1;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>fit_param[1][0][4][3]=1.99975E-3;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>fit_param[1][0][4][4]=0.0;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>fit_param[1][0][5][0]=0.0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>fit_param[1][0][5][1]=0.0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>fit_param[1][0][5][2]=0.0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>fit_param[1][0][5][3]=0.66;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>fit_param[1][0][5][4]=0.0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>hadronic<sp/>tau&apos;s<sp/>were<sp/>re-parametrized<sp/>in<sp/>MC12.<sp/>The<sp/>parameterization<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>goes<sp/>to<sp/>P(tau)=1<sp/>TeV.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1-prong<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>fit_param[1][1][0][0]=0.7568;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>fit_param[1][1][0][1]=-0.0001469;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>fit_param[1][1][0][2]=5.413E-7;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>fit_param[1][1][0][3]=-6.754E-10;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>fit_param[1][1][0][4]=2.269E-13;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>fit_param[1][1][1][0]=-0.0288208;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>fit_param[1][1][1][1]=0.134174;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>fit_param[1][1][1][2]=-142.588;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>fit_param[1][1][1][3]=-0.00035606;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>fit_param[1][1][1][4]=-6.94567E-20;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>fit_param[1][1][2][0]=-0.00468927;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>fit_param[1][1][2][1]=0.0378737;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>fit_param[1][1][2][2]=-260.284;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>fit_param[1][1][2][3]=0.00241158;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>fit_param[1][1][2][4]=-6.01766E-7;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>fit_param[1][1][3][0]=-0.170424;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>fit_param[1][1][3][1]=0.135764;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>fit_param[1][1][3][2]=-50.2361;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>fit_param[1][1][3][3]=0.00735544;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>fit_param[1][1][3][4]=-7.34073E-6;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>fit_param[1][1][4][0]=-0.0081364;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>fit_param[1][1][4][1]=0.0391428;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>fit_param[1][1][4][2]=-141.936;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>fit_param[1][1][4][3]=0.0035034;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>fit_param[1][1][4][4]=-1.21956E-6;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>fit_param[1][1][5][0]=0.0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>fit_param[1][1][5][1]=0.0;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>fit_param[1][1][5][2]=0.0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>fit_param[1][1][5][3]=0.624*0.00125;<sp/></highlight><highlight class="comment">//<sp/>multiplied<sp/>by<sp/>a<sp/>bin<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>fit_param[1][1][5][4]=0.0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3-prong<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>fit_param[1][2][0][0]=0.7562;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>fit_param[1][2][0][1]=-1.168E-5;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>fit_param[1][2][0][2]=0.0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>fit_param[1][2][0][3]=0.0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>fit_param[1][2][0][4]=0.0;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>fit_param[1][2][1][0]=-0.0420458;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>fit_param[1][2][1][1]=0.15917;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>fit_param[1][2][1][2]=-80.3259;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>fit_param[1][2][1][3]=0.000125729;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>fit_param[1][2][1][4]=-2.43945E-18;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>fit_param[1][2][2][0]=-0.0216898;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>fit_param[1][2][2][1]=0.0243497;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>fit_param[1][2][2][2]=-63.8273;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>fit_param[1][2][2][3]=0.0148339;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>fit_param[1][2][2][4]=-4.45351E-6;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>fit_param[1][2][3][0]=-0.0879411;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>fit_param[1][2][3][1]=0.110092;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>fit_param[1][2][3][2]=-75.4901;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>fit_param[1][2][3][3]=0.0116915;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>fit_param[1][2][3][4]=-1E-5;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---par[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>fit_param[1][2][4][0]=-0.0118324;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>fit_param[1][2][4][1]=0.0280538;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>fit_param[1][2][4][2]=-85.127;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>fit_param[1][2][4][3]=0.00724948;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>fit_param[1][2][4][4]=-2.38792E-6;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-par[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>fit_param[1][2][5][0]=0.0;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>fit_param[1][2][5][1]=0.0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>fit_param[1][2][5][2]=0.0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>fit_param[1][2][5][3]=0.6167*0.00125;<sp/></highlight><highlight class="comment">//<sp/>multiplied<sp/>by<sp/>a<sp/>bin<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>fit_param[1][2][5][4]=0.0;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TER<sp/>parameterization,<sp/>for<sp/>now<sp/>based<sp/>on<sp/>p1130,<sp/>to<sp/>be<sp/>checked<sp/>and<sp/>updated<sp/>with<sp/>new<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[tau_type][eta_bin][parameter]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>1-prongs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][0][0]=0.311717;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][0][1]=0.0221615;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][0][2]=0.859698;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][1][0]=0.290019;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][1][1]=0.0225794;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][1][2]=0.883407;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][2][0]=0.352312;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][2][1]=0.0196381;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][2][2]=0.629708;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][3][0]=0.342059;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][3][1]=0.0275107;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][3][2]=0.48065;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][4][0]=0.481564;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][4][1]=0.0197219;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][4][2]=0.0571714;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][5][0]=0.41264;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][5][1]=0.0233964;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][5][2]=0.515674;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][6][0]=0.20112;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][6][1]=0.0339914;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][6][2]=0.944524;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][7][0]=0.0892094;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][7][1]=0.0210225;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][7][2]=1.34014;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][8][0]=0.175554;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][8][1]=0.0210968;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][8][2]=0.813925;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][9][0]=0.0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][9][1]=0.0340279;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>ter_sigma_par[0][9][2]=1.30856;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>3-prongs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][0][0]=0.303356;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][0][1]=0.0299807;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][0][2]=1.25388;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][1][0]=0.358106;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][1][1]=0.0229604;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][1][2]=1.02222;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][2][0]=0.328643;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][2][1]=0.025684;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][2][2]=1.02594;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][3][0]=0.497332;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][3][1]=0.0215113;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][3][2]=0.30055;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][4][0]=0.4493;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][4][1]=0.0280311;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][4][2]=0.285793;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][5][0]=0.427811;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][5][1]=0.0316536;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][5][2]=0.457286;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][6][0]=0.165288;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][6][1]=0.0376361;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][6][2]=1.3913;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][7][0]=0.289798;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][7][1]=0.0140801;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][7][2]=0.83603;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][8][0]=0.186823;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][8][1]=0.0213053;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][8][2]=0.968934;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][9][0]=0.301673;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][9][1]=0.0145606;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>ter_sigma_par[1][9][2]=0.514022;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">MissingMassCalculator::~MissingMassCalculator(){</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(fUseVerbose==1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>MMC<sp/>destructor<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>gDirectory-&gt;pwd();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gDirectory-&gt;ls();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTITERATION</highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fPhi1;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fPhi2;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fMnu1;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fMnu2;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fMetx;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fMety;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="619"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTPROBA</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fTheta3D;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fTauProb;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">//_____________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Main<sp/>Method<sp/>to<sp/>run<sp/>MissingMassCalculator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::RunMissingMassCalculator()<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>reRunWithBestMET=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>ClearOutputStuff();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>InputInfoStuff<sp/>preparedInput;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;-------------<sp/>Raw<sp/>Input<sp/>for<sp/>MissingMassCalculator<sp/>--------------&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintInputInfo(rawInput)<sp/>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>FinalizeInputStuff();</highlight><highlight class="comment">//rawInput,<sp/>preparedInput<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;-------------<sp/>Prepared<sp/>Input<sp/>for<sp/>MissingMassCalculator<sp/>--------------&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintInputInfo(preparedInput)<sp/>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>ClearInputStuff();<sp/></highlight><highlight class="comment">//<sp/>DR<sp/>just<sp/>to<sp/>be<sp/>sure<sp/>InputInfo<sp/>is<sp/>never<sp/>used<sp/>downstream,<sp/>only<sp/>preparedInput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SearchMode==0)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(AlgorithmVersion==3)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>argument<sp/>DiTauMassCalculatorV9Walk<sp/>work<sp/>directly<sp/>on<sp/>preparedInput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FitStatus=DitauMassCalculatorV9walk();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-running<sp/>MMC<sp/>for<sp/>on<sp/>failed<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseEfficiencyRecovery==1<sp/>&amp;&amp;<sp/>OutputInfo.FitStatus!=1)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>most<sp/>events<sp/>where<sp/>MMC<sp/>failed<sp/>happened<sp/>to<sp/>have<sp/>dPhi&gt;2.9.<sp/>Run<sp/>re-fit<sp/>only<sp/>on<sp/>these<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.DelPhiTT&gt;2.9)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.MetVec.Set(-(preparedInput.vistau1+preparedInput.vistau2).Px(),-(preparedInput.vistau1+preparedInput.vistau2).Py());<sp/>//<sp/>replace<sp/>MET<sp/>by<sp/>MPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVector2<sp/>dummy_met(-(preparedInput.vistau1+preparedInput.vistau2).Px(),-(preparedInput.vistau1+preparedInput.vistau2).Py());</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METcovphi=dummy_met.Phi();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy_METres=sqrt(pow(preparedInput.METsigmaL,2)<sp/>+<sp/>pow(preparedInput.METsigmaP,2));</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=dummy_METres*fabs(cos(dummy_met.Phi()-preparedInput.MetVec.Phi()));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=dummy_METres*fabs(sin(dummy_met.Phi()-preparedInput.MetVec.Phi()));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.METsigmaP&lt;5.0)<sp/>preparedInput.METsigmaP=5.0;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan_lh=6.0;<sp/></highlight><highlight class="comment">//<sp/>increase<sp/>range<sp/>of<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan_hh=6.0;<sp/></highlight><highlight class="comment">//<sp/>increase<sp/>range<sp/>of<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearOutputStuff();<sp/></highlight><highlight class="comment">//<sp/>clear<sp/>output<sp/>stuff<sp/>before<sp/>re-running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FitStatus=DitauMassCalculatorV9walk();<sp/></highlight><highlight class="comment">//<sp/>run<sp/>MMC<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RERUNWITHBESTMET</highlight></codeline>
<codeline lineno="673"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OutputInfo.FitStatus==1)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>NON<sp/>FUNCTIONAL<sp/>!<sp/>TO<sp/>BE<sp/>REIMPLEMENTED<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>experimental<sp/>re-iterate<sp/>after<sp/>fixing<sp/>MET<sp/>to<sp/>be<sp/>the<sp/>neutrino<sp/>momentum<sp/>from<sp/>the<sp/>previous<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>best<sp/>met<sp/>from<sp/>method<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>TLorentzVector<sp/>&amp;<sp/>p4nu0=fDitauStuffFit.nutau1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>TLorentzVector<sp/>&amp;<sp/>p4nu1=fDitauStuffFit.nutau2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>best<sp/>met<sp/>from<sp/>method<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>p4nu0=fDitauStuffHisto.nutau1;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>p4nu1=fDitauStuffHisto.nutau2;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVector2<sp/>newMetVec(p4nu0.Px()+p4nu1.Px(),p4nu0.Py()+p4nu1.Py());</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>old<sp/>MET<sp/>&quot;<sp/>&lt;&lt;<sp/>InputInfo.MetVec.Px()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>InputInfo.MetVec.Py()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>new<sp/>MET<sp/>&quot;<sp/>&lt;&lt;<sp/>newMetVec.Px()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>newMetVec.Py()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>sigma<sp/>met<sp/>to<sp/>very<sp/>small<sp/>number<sp/>(avoid<sp/>zero<sp/>which<sp/>could<sp/>cause<sp/>instabilities)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Nsigma_METscanSave=Nsigma_METscan;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan=0.000001;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reRunWithBestMET=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OutputInfo.FitStatus=DitauMassCalculatorV9walk(preparedInput.vistau1,preparedInput.type_visTau1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//preparedInput.vistau2,preparedInput.type_visTau2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMetVec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reRunWithBestMET=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector&amp;<sp/>p4renu0<sp/>=<sp/>fDitauStuffFit.nutau1;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector&amp;<sp/>p4renu1<sp/>=<sp/>fDitauStuffFit.nutau2;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVector2<sp/>reMetVec(p4renu0.Px()+p4renu1.Px(),p4renu0.Py()+p4renu1.Py());</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((newMetVec-reMetVec).Mod()&gt;0.1)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>new<sp/>MET<sp/>after<sp/>reiteration<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>old<sp/>MET<sp/>!!!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>sigma<sp/>met<sp/>to<sp/>original<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan=Nsigma_METscanSave;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="706"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>running<sp/>MMC<sp/>in<sp/>LFV<sp/>mode<sp/>for<sp/>reconstructing<sp/>mass<sp/>of<sp/>X-&gt;lep+tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(AlgorithmVersion==4)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>DitauMassCalculatorV9lfv&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FitStatus<sp/>=<sp/>DitauMassCalculatorV9lfv();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>DoOutputInfo();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>PrintResults();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>ClearInputStuff();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----<sp/>input<sp/>Met<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetMetVec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector2<sp/>&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>rawInput.MetVec<sp/>=<sp/>vec;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----<sp/>input<sp/>vis<sp/>Tau<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetVisTauVec(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Seting<sp/>input<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>pT=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec.Pt()<sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==0)<sp/>rawInput.vistau1<sp/>=<sp/>vec;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==1)<sp/>rawInput.vistau2<sp/>=<sp/>vec;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----<sp/>input<sp/>vis<sp/>Tau<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetVisTauType(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tautype)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==0)<sp/>rawInput.type_visTau1<sp/>=<sp/>tautype/10;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==1)<sp/>rawInput.type_visTau2<sp/>=<sp/>tautype/10;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----<sp/>input<sp/>vis<sp/>Tau<sp/>N-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetNprong(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprong)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==0)<sp/>rawInput.Nprong_tau1<sp/>=<sp/>nprong;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==1)<sp/>rawInput.Nprong_tau2<sp/>=<sp/>nprong;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----<sp/>input<sp/>SumEt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetSumEt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumEt)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>rawInput.SumEt<sp/>=<sp/>sumEt;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----<sp/>input<sp/>data<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetIsData(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val==0<sp/>||<sp/>val==1)<sp/>rawInput.dataType<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----<sp/>input<sp/>number<sp/>of<sp/>jets<sp/>with<sp/>Et&gt;25<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetNjet25(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&gt;-1)<sp/>rawInput.Njet25<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----<sp/>input<sp/>Met<sp/>Scan<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetMetScanParams(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaP,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaL)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>rawInput.METcovphi<sp/>=<sp/>phi;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>rawInput.METsigmaP<sp/>=<sp/>sigmaP;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>rawInput.METsigmaL<sp/>=<sp/>sigmaL;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----<sp/>input<sp/>Met<sp/>covariance<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetMetCovariance(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>varX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>varY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>varXY)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>MET<sp/>covariance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>covariance<sp/>is<sp/>obtained<sp/>from<sp/>summing<sp/>on<sp/>MET<sp/>elements,<sp/>each<sp/>one<sp/>with<sp/>ET<sp/>uncertainty<sp/>sigma_i<sp/>and<sp/>direction<sp/>phi_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//varX=Sigma_i<sp/><sp/>sigma_i^2<sp/>cos<sp/>^2<sp/>phi_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//varY=Sigma_i<sp/><sp/>sigma_i^2<sp/>sin<sp/>^2<sp/>phi_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//varXY=Sigma_i<sp/><sp/>sigma_i^2<sp/>cos<sp/>phi_i<sp/>cos<sp/>phi_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(varX&lt;1E-6<sp/><sp/>||<sp/>varY&lt;1E-6<sp/><sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SetMetCovariance.<sp/>Negative<sp/>or<sp/>null<sp/>diagonal<sp/>element.<sp/>FATAL<sp/>ERROR<sp/>pathological<sp/>error<sp/>matrix<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>varX=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varX<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>varY=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varY<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>varXY=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varXY<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>fatal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det<sp/>=<sp/>varX*varY<sp/>-<sp/>std::pow(varXY,2);<sp/></highlight><highlight class="comment">//<sp/>matrix<sp/>determinant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(det&lt;1E-6)<sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SetMetCovariance.<sp/>matrix<sp/>determinant<sp/>is<sp/>negative<sp/>or<sp/>null.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>det<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>FATAL<sp/>ERROR<sp/>pathological<sp/>error<sp/>matrix<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>varX=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varX<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>varY=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varY<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>varXY=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varXY<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>fatal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trace<sp/>=<sp/>varX<sp/>+<sp/>varY;<sp/></highlight><highlight class="comment">//<sp/>matrix<sp/>trace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>discri<sp/>=<sp/>std::pow(trace,2)<sp/>-<sp/>4*det;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqdiscri;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(discri&lt;-1e-6)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SetMetCovariance.<sp/>Negative<sp/>discriminant.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>discri<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>FATAL<sp/>ERROR<sp/>pathological<sp/>error<sp/>matrix<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>varX=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varX<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>varY=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varY<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>varXY=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>varXY<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>fatal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(discri&lt;0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>some<sp/>margin<sp/>for<sp/>rounding<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>sqdiscri=0.;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>sqdiscri=sqrt(discri);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>varL<sp/>=<sp/>1/2.<sp/>*(trace<sp/>+<sp/>sqdiscri);<sp/></highlight><highlight class="comment">//larger<sp/>eigenvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>varP<sp/>=<sp/>1/2.<sp/>*(trace<sp/>-<sp/>sqdiscri);<sp/></highlight><highlight class="comment">//smaller<sp/>eigenvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaL<sp/>=<sp/>sqrt(varL);<sp/></highlight><highlight class="comment">//<sp/>ellipse<sp/>major<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaP<sp/>=<sp/>sqrt(varP);<sp/></highlight><highlight class="comment">//<sp/>ellipse<sp/>minor<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(varXY)<sp/>&lt;<sp/>1E-6)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>phi=0.;<sp/></highlight><highlight class="comment">//<sp/>isotropic,<sp/>undefined<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>atan((varL<sp/>-<sp/>varX)/varXY);<sp/></highlight><highlight class="comment">//<sp/>angle<sp/>ellipse<sp/>major<sp/>axis<sp/>wrt<sp/>to<sp/>x<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;SetMetCovariance<sp/>phi=&quot;<sp/>&lt;&lt;<sp/>phi<sp/>&lt;&lt;<sp/>&quot;<sp/>sigmaP=&quot;<sp/>&lt;&lt;<sp/>sigmaP<sp/>&lt;&lt;<sp/>&quot;<sp/>sigmaL=&quot;<sp/>&lt;&lt;<sp/>sigmaL<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>SetMetScanParams(phi,<sp/>sigmaP,<sp/>sigmaL);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>is<sp/>sumEt<sp/>after<sp/>electrons<sp/>and<sp/>taus<sp/>have<sp/>been<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="comment">//<sp/>data_code=0<sp/>for<sp/>data<sp/>and<sp/>=1<sp/>for<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetMetScanParamsUE(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumEt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi_scan,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_code)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>rawInput.METcovphi<sp/>=<sp/>phi_scan;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sumEt&gt;2.0*beamEnergy)<sp/>sumEt<sp/>=<sp/>sumEt/1000.0;<sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>likely<sp/>that<sp/>sumEt<sp/>was<sp/>entered<sp/>in<sp/>MeV;<sp/>this<sp/>fix<sp/>won&apos;t<sp/>work<sp/>only<sp/>for<sp/>a<sp/>very<sp/>small<sp/>fraction<sp/>of<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.7;<sp/></highlight><highlight class="comment">//<sp/>using<sp/>inclusive<sp/>number<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_code==1)<sp/>METresScale=0.7;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>same<sp/>for<sp/>data<sp/>&amp;<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>METresScale<sp/>=<sp/>METresScale*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt<sp/>=<sp/>5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>sigma<sp/>=<sp/>sumEt&gt;pow(3.0/METresScale,2)<sp/>?<sp/>METresScale*sqrt(sumEt)<sp/>:<sp/>3.0;<sp/></highlight><highlight class="comment">//<sp/>assume<sp/>that<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>better<sp/>than<sp/>3<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>rawInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>rawInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>rawInput.SumEt<sp/>=<sp/>sumEt;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>rawInput.dataType<sp/>=<sp/>data_code;<sp/></highlight><highlight class="comment">//<sp/>Sasha<sp/>added<sp/>on<sp/>09/26/11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>jet<sp/>vectors<sp/>and<sp/>for<sp/>MET<sp/>resolution<sp/>due<sp/>to<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>consider<sp/>jets<sp/>with<sp/>Et&gt;20<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SetMetScanParamsJets(std::vector&lt;TLorentzVector&gt;<sp/>jets)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;jets.size();<sp/>i++)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jets[i].Pt()&gt;20.0)<sp/>rawInput.jet4vecs.push_back(jets[i]);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>re-order<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rawInput.jet4vecs.size()&gt;1)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>jet1(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;rawInput.jet4vecs.size();<sp/>i++)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rawInput.jet4vecs[i].Pt()&gt;rawInput.jet4vecs[i-1].Pt())</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jet1<sp/>=<sp/>rawInput.jet4vecs[i-1];</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawInput.jet4vecs[i-1]<sp/>=<sp/>rawInput.jet4vecs[i];</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawInput.jet4vecs[i]<sp/>=<sp/>jet1;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="comment">//--------<sp/>clearing<sp/>ditau<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::ClearDitauStuff(DitauStuff<sp/>&amp;fStuff)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>fStuff.Mditau_best<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>fStuff.Sign_best<sp/>=<sp/>1.0E6;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>fStuff.nutau1.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>fStuff.nutau2.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>fStuff.vistau1.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>fStuff.vistau2.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>fStuff.taufit1.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>fStuff.taufit2.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>fStuff.RMSoverMPV<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="comment">//-------<sp/>clearing<sp/>input<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::ClearInputStuff()<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>rawInput.MetVec.Set(0.0,0.0);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>rawInput.detMetVec.Set(0.0,0.0);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>rawInput.vistau1.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>rawInput.vistau2.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>rawInput.type_visTau1<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>rawInput.type_visTau2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>rawInput.Nprong_tau1<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>rawInput.Nprong_tau2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>rawInput.dataType<sp/>=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>rawInput.METcovphi<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>rawInput.METsigmaP<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>rawInput.METsigmaL<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>rawInput.SumEt<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>rawInput.sigmaEtau1<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>rawInput.sigmaEtau2<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>rawInput.jet4vecs.clear();</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//DR<sp/>default<sp/>at<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>rawInput.Njet25<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>rawInput.allowUseHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>rawInput.DelPhiTT<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>rawInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>rawInput.MHtSigma1<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>rawInput.MHtSigma2<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>rawInput.MHtGaussFr<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>rawInput.HtOffset<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment">//<sp/>checks<sp/>units<sp/>of<sp/>input<sp/>variables,<sp/>converts<sp/>into<sp/>[GeV]<sp/>if<sp/>needed,<sp/>make<sp/>all<sp/>possible<sp/>corrections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DR<sp/>new<sp/>:<sp/>now<sp/>a<sp/>second<sp/>structure<sp/>preparedInput<sp/>is<sp/>derived<sp/>from<sp/>the<sp/>input<sp/>one<sp/>which<sp/>only<sp/>has<sp/>direct<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::FinalizeInputStuff()</highlight><highlight class="comment">//const<sp/>InputInfoStuff<sp/>&amp;rawInput,<sp/>InputInfoStuff<sp/>&amp;preparedInput)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>calibration<sp/>set<sp/>has<sp/>been<sp/>chosen<sp/>explicitly,<sp/>otherwise<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MAXMMCCALIBRATIONSET)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ERROR<sp/>MMCCalibrationSet<sp/>has<sp/>not<sp/>been<sp/>set<sp/>!.<sp/>Please<sp/>use<sp/>fMMC.SetCalibrationSet(MMCCalibrationSet::MMC2011)<sp/>or<sp/>MMC2012.<sp/>Abort<sp/>now.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>stop<sp/>job</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------<sp/>Re-ordering<sp/>input<sp/>info,<sp/>to<sp/>make<sp/>sure<sp/>there<sp/>is<sp/>no<sp/>dependence<sp/>of<sp/>results<sp/>on<sp/>input<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>might<sp/>be<sp/>needed<sp/>because<sp/>a<sp/>random<sp/>scan<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>highest<sp/>pT<sp/>tau<sp/>is<sp/>always<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>InputReorder=0;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>flag<sp/>to<sp/>0<sp/>by<sp/>default,<sp/>i.e.<sp/>no<sp/>re-ordering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DONOTREORDERTAU</highlight></codeline>
<codeline lineno="924"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rawInput.type_visTau1&gt;0<sp/>&amp;&amp;<sp/>rawInput.type_visTau2==0)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>hadron-lepton,<sp/>reorder<sp/>to<sp/>have<sp/>lepton<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InputReorder=1;<sp/><sp/></highlight><highlight class="comment">//<sp/>re-order<sp/>to<sp/>be<sp/>done,<sp/>this<sp/>flag<sp/>is<sp/>to<sp/>be<sp/>checked<sp/>in<sp/>DoOutputInfo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(rawInput.type_visTau2&gt;0<sp/>&amp;&amp;<sp/>rawInput.type_visTau1==0))<sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>lep-had<sp/>nor<sp/>had<sp/>lep,<sp/>reorder<sp/>if<sp/>tau1<sp/>is<sp/>after<sp/>tau2<sp/>clockwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixPhiRange(rawInput.vistau1.Phi()-rawInput.vistau2.Phi())&gt;0)<sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputReorder=1;<sp/></highlight><highlight class="comment">//<sp/>re-order<sp/>to<sp/>be<sp/>done,<sp/>this<sp/>flag<sp/>is<sp/>to<sp/>be<sp/>checked<sp/>in<sp/>DoOutputInfo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="935"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(InputReorder==1)<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>and<sp/>re-order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau1<sp/>=<sp/>rawInput.vistau2;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau2<sp/>=<sp/>rawInput.vistau1;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.type_visTau1<sp/>=<sp/>rawInput.type_visTau2;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.type_visTau2<sp/>=<sp/>rawInput.type_visTau1;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.Nprong_tau1<sp/>=<sp/>rawInput.Nprong_tau2;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.Nprong_tau2<sp/>=<sp/>rawInput.Nprong_tau1;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau1<sp/>=<sp/>rawInput.vistau1;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau2<sp/>=<sp/>rawInput.vistau2;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.type_visTau1<sp/>=<sp/>rawInput.type_visTau1;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.type_visTau2<sp/>=<sp/>rawInput.type_visTau2;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.Nprong_tau1<sp/>=<sp/>rawInput.Nprong_tau1;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.Nprong_tau2<sp/>=<sp/>rawInput.Nprong_tau2;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------<sp/>re-ordering<sp/>is<sp/>done<sp/>---------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>preparedInput.MetVec<sp/>=<sp/>rawInput.MetVec;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>preparedInput.detMetVec<sp/>=<sp/>rawInput.MetVec;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>preparedInput.DelPhiTT<sp/>=<sp/>fabs(TVector2::Phi_mpi_pi(preparedInput.vistau1.Phi()-preparedInput.vistau2.Phi()));</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.vistau1.P()&gt;3000.0<sp/>||<sp/>preparedInput.vistau2.P()&gt;3000.0)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>units<sp/>are<sp/>MeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;converting<sp/>to<sp/>GeV&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scale=0.001;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.MetVec<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.detMetVec<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau1<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau2<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>preparedInput.SumEt<sp/>=<sp/>scale*rawInput.SumEt;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>preparedInput.METcovphi<sp/>=<sp/>rawInput.METcovphi;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>scale*rawInput.METsigmaP;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>scale*rawInput.METsigmaL;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>preparedInput.sigmaEtau1<sp/>=<sp/>scale*rawInput.sigmaEtau1;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>preparedInput.sigmaEtau2<sp/>=<sp/>scale*rawInput.sigmaEtau2;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>preparedInput.jet4vecs<sp/>=<sp/>rawInput.jet4vecs;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;preparedInput.jet4vecs.size();<sp/>i++)</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale!=1.)<sp/>preparedInput.jet4vecs[i]*=scale;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correcting<sp/>sumEt,<sp/>give<sp/>priority<sp/>to<sp/>SetMetScanParamsUE()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(METScanScheme==0)</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((preparedInput.METsigmaP&lt;0.1<sp/>||<sp/>preparedInput.METsigmaL&lt;0.1)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>preparedInput.SumEt&gt;preparedInput.jet4vecs[i].Pt()</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>preparedInput.jet4vecs[i].Pt()&gt;20.0)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;correcting<sp/>sumET&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.SumEt<sp/>-=<sp/>preparedInput.jet4vecs[i].Pt();</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>priority<sp/>to<sp/>SetVisTauType,<sp/>only<sp/>do<sp/>this<sp/>if<sp/>type_visTau1<sp/>and<sp/>type_visTau2<sp/>are<sp/>not<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1&lt;0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2&lt;0<sp/>&amp;&amp;<sp/>preparedInput.Nprong_tau1&gt;-1<sp/>&amp;&amp;<sp/>preparedInput.Nprong_tau2&gt;-1)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Nprong_tau1==0<sp/>||<sp/>preparedInput.Nprong_tau1==1<sp/>||<sp/>preparedInput.Nprong_tau1==3)<sp/>preparedInput.type_visTau1=preparedInput.Nprong_tau1;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Nprong_tau2==0<sp/>||<sp/>preparedInput.Nprong_tau2==1<sp/>||<sp/>preparedInput.Nprong_tau2==3)<sp/>preparedInput.type_visTau2=preparedInput.Nprong_tau2;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>input<sp/>mass<sp/>of<sp/>hadronic<sp/>tau-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>checking<sp/>input<sp/>mass<sp/>of<sp/>hadronic<sp/>tau-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//DRMERGE<sp/>LFV<sp/>addition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::LFVMMC2012)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1==1<sp/>&amp;&amp;<sp/>preparedInput.vistau1.M()!=1.1)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_pt,<sp/>_phi,<sp/>_eta,<sp/>_m;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pt<sp/>=<sp/>preparedInput.vistau1.Pt();</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_phi<sp/>=<sp/>preparedInput.vistau1.Phi();</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eta<sp/>=<sp/>preparedInput.vistau1.Eta();</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_m<sp/>=<sp/>1.1;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau1.SetPtEtaPhiM(_pt,_eta,_phi,_m);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1==3<sp/>&amp;&amp;<sp/>preparedInput.vistau1.M()!=1.35)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_pt,<sp/>_phi,<sp/>_eta,<sp/>_m;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pt<sp/>=<sp/>preparedInput.vistau1.Pt();</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_phi<sp/>=<sp/>preparedInput.vistau1.Phi();</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eta<sp/>=<sp/>preparedInput.vistau1.Eta();</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_m<sp/>=<sp/>1.35;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau1.SetPtEtaPhiM(_pt,_eta,_phi,_m);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>input<sp/>mass<sp/>of<sp/>hadronic<sp/>tau-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau2==1<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()!=1.1)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_pt,<sp/>_phi,<sp/>_eta,<sp/>_m;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pt<sp/>=<sp/>preparedInput.vistau2.Pt();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_phi<sp/>=<sp/>preparedInput.vistau2.Phi();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eta<sp/>=<sp/>preparedInput.vistau2.Eta();</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_m<sp/>=<sp/>1.1;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau2.SetPtEtaPhiM(_pt,_eta,_phi,_m);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau2==3<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()!=1.35)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_pt,<sp/>_phi,<sp/>_eta,<sp/>_m;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pt<sp/>=<sp/>preparedInput.vistau2.Pt();</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_phi<sp/>=<sp/>preparedInput.vistau2.Phi();</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eta<sp/>=<sp/>preparedInput.vistau2.Eta();</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_m<sp/>=<sp/>1.35;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau2.SetPtEtaPhiM(_pt,_eta,_phi,_m);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DRMERGE<sp/>end<sp/>LFV<sp/>addition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1==1<sp/>&amp;&amp;<sp/>preparedInput.vistau1.M()!=0.8)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_pt,<sp/>_phi,<sp/>_eta,<sp/>_m;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pt<sp/>=<sp/>preparedInput.vistau1.Pt();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_phi<sp/>=<sp/>preparedInput.vistau1.Phi();</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eta<sp/>=<sp/>preparedInput.vistau1.Eta();</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_m<sp/>=<sp/>0.8;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau1.SetPtEtaPhiM(_pt,_eta,_phi,_m);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1==3<sp/>&amp;&amp;<sp/>preparedInput.vistau1.M()!=1.2)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_pt,<sp/>_phi,<sp/>_eta,<sp/>_m;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pt<sp/>=<sp/>preparedInput.vistau1.Pt();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_phi<sp/>=<sp/>preparedInput.vistau1.Phi();</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eta<sp/>=<sp/>preparedInput.vistau1.Eta();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_m<sp/>=<sp/>1.2;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau1.SetPtEtaPhiM(_pt,_eta,_phi,_m);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>input<sp/>mass<sp/>of<sp/>hadronic<sp/>tau-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau2==1<sp/>&amp;&amp;<sp/><sp/>preparedInput.vistau2.M()!=0.8)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_pt,<sp/>_phi,<sp/>_eta,<sp/>_m;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pt<sp/>=<sp/>preparedInput.vistau2.Pt();</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_phi<sp/>=<sp/>preparedInput.vistau2.Phi();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eta<sp/>=<sp/>preparedInput.vistau2.Eta();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_m<sp/>=<sp/>0.8;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau2.SetPtEtaPhiM(_pt,_eta,_phi,_m);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau2==3<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()!=1.2)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_pt,<sp/>_phi,<sp/>_eta,<sp/>_m;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pt<sp/>=<sp/>preparedInput.vistau2.Pt();</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_phi<sp/>=<sp/>preparedInput.vistau2.Phi();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eta<sp/>=<sp/>preparedInput.vistau2.Eta();</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_m<sp/>=<sp/>1.2;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau2.SetPtEtaPhiM(_pt,_eta,_phi,_m);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//DRDRMERGE<sp/>LFV<sp/>else<sp/>closing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correcting<sp/>sumEt<sp/>for<sp/>electron<sp/>pt,<sp/>give<sp/>priority<sp/>to<sp/>SetMetScanParamsUE()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DR20150615<sp/>in<sp/>tag<sp/>00-00-11<sp/>and<sp/>before.<sp/>The<sp/>following<sp/>was<sp/>done<sp/>before<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>hadronic<sp/>tau<sp/>was<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>mean<sp/>that<sp/>sumEt<sp/>was<sp/>wrongly<sp/>corrected<sp/>for<sp/>the<sp/>hadronic<sp/>tau<sp/>pt<sp/>if<sp/>the<sp/>hadronic<sp/>tau<sp/>mass<sp/>was<sp/>set<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sasha<sp/>08/12/15:<sp/>don&apos;t<sp/>do<sp/>electron<sp/>Pt<sp/>subtraction<sp/>for<sp/>high<sp/>mass<sp/>studies;<sp/>in<sp/>the<sp/>future,<sp/>need<sp/>to<sp/>check<sp/>if<sp/>lepton<sp/>Pt<sp/>needs<sp/>to<sp/>be<sp/>subtracted<sp/>for<sp/>both<sp/>ele<sp/>and<sp/>muon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.METsigmaP&lt;0.1<sp/>||<sp/>preparedInput.METsigmaL&lt;0.1)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>T.<sp/>Davidek:<sp/>hack<sp/>for<sp/>lep-lep<sp/>--<sp/>subtract<sp/>lepton<sp/>pT<sp/>both<sp/>for<sp/>muon<sp/>and<sp/>electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet<sp/>==<sp/>MMCCalibrationSet::MMC2016MC15C<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau1.M()<sp/>&lt;<sp/>0.12<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.vistau2.M()<sp/>&lt;<sp/>0.12)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>lep-lep<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.SumEt&gt;preparedInput.vistau1.Pt())</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.SumEt<sp/>-=<sp/>preparedInput.vistau1.Pt();</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.SumEt&gt;preparedInput.vistau2.Pt())</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.SumEt<sp/>-=<sp/>preparedInput.vistau2.Pt();</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue<sp/>with<sp/>the<sp/>original<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.SumEt&gt;preparedInput.vistau1.Pt()</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>preparedInput.vistau1.M()&lt;0.05</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>m_MMCCalibrationSet<sp/>!=<sp/>MMCCalibrationSet::MMC2015HIGHMASS)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{<sp/>std::cout<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Substracting<sp/>pt1<sp/>from<sp/>sumEt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.SumEt<sp/>-=<sp/>preparedInput.vistau1.Pt();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.SumEt&gt;preparedInput.vistau2.Pt()</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&lt;0.05</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>m_MMCCalibrationSet<sp/>!=<sp/>MMCCalibrationSet::MMC2015HIGHMASS)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{<sp/>std::cout<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Substracting<sp/>pt2<sp/>from<sp/>sumEt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.SumEt<sp/>-=<sp/>preparedInput.vistau2.Pt();</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>priority<sp/>to<sp/>SetMetScanParamsUE()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>preparedInput.allowUseHT<sp/>=<sp/>rawInput.allowUseHT;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>preparedInput.Njet25<sp/>=<sp/>rawInput.Njet25;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>controling<sp/>TauProbability<sp/>settings<sp/>for<sp/>UPGRADE<sp/>studies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::UPGRADE<sp/>&amp;&amp;<sp/>fUseDefaults==1)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((preparedInput.vistau1.M()<sp/>&lt;<sp/>0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()<sp/>&gt;<sp/>0.12)<sp/>||<sp/>(preparedInput.vistau2.M()<sp/>&lt;<sp/>0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau1.M()<sp/>&gt;<sp/>0.12))<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUseTauProbability=1;<sp/></highlight><highlight class="comment">//<sp/>lep-had<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.vistau1.M()<sp/>&gt;<sp/>0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()<sp/>&gt;<sp/>0.12)<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUseTauProbability=0;<sp/></highlight><highlight class="comment">//<sp/>had-had<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>compute<sp/>tau<sp/>energy<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>should<sp/>be<sp/>possible<sp/>to<sp/>set<sp/>sigmaEtau1<sp/>from<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>preparedInput.sigmaEtau1<sp/>=<sp/>rawInput.sigmaEtau1;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>preparedInput.sigmaEtau2<sp/>=<sp/>rawInput.sigmaEtau2;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rawInput.sigmaEtau1&lt;0)<sp/>preparedInput.sigmaEtau1<sp/>=<sp/>tauSigmaE(preparedInput.vistau1,preparedInput.type_visTau1);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rawInput.sigmaEtau2&lt;0)<sp/>preparedInput.sigmaEtau2<sp/>=<sp/>tauSigmaE(preparedInput.vistau2,preparedInput.type_visTau2);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>preparedInput.MHtSigma1<sp/>=<sp/>rawInput.MHtSigma1;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>preparedInput.MHtSigma2<sp/>=<sp/>rawInput.MHtSigma2;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>preparedInput.MHtGaussFr<sp/>=<sp/>rawInput.MHtGaussFr;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>Beam<sp/>Energy<sp/>for<sp/>different<sp/>running<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::UPGRADE)<sp/>beamEnergy=6500.0;<sp/></highlight><highlight class="comment">//<sp/>13<sp/>TeV<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------<sp/>pre-set<sp/>defaults<sp/>for<sp/>Run-2.<sp/>To<sp/>disable<sp/>pre-set<sp/>defaults<sp/>set<sp/>fUseDefaults=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseDefaults==1)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan_ll<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan_lh<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan_hh<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUseTailCleanup<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((preparedInput.vistau1.M()&lt;0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&gt;0.12)<sp/>||<sp/>(preparedInput.vistau2.M()&lt;0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau1.M()&gt;0.12))<sp/>fUseTauProbability=0;<sp/></highlight><highlight class="comment">//<sp/>lep-had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1&gt;0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2&gt;0)<sp/>fUseTauProbability=1;<sp/></highlight><highlight class="comment">//<sp/>had-had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fUseMnuProbability=0;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>MET<sp/>resolution<sp/>(eventually<sp/>use<sp/>HT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.METsigmaP&lt;0.1<sp/>||<sp/>preparedInput.METsigmaL&lt;0.1)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::LFVMMC2012)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>set<sp/>LFV<sp/>MMC<sp/>settings&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mT1<sp/>=<sp/>mT(preparedInput.vistau1,preparedInput.MetVec);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mT2<sp/>=<sp/>mT(preparedInput.vistau2,preparedInput.MetVec);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sr_switch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.vistau1.M()&lt;0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&lt;0.12)<sp/></highlight><highlight class="comment">//<sp/>lep-lep<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(LFVmode==0)<sp/></highlight><highlight class="comment">//<sp/>e+tau(-&gt;mu)<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.vistau1.M()&lt;0.05<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&gt;0.05)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mT1&gt;mT2)<sp/>sr_switch<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SR1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sr_switch<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>SR2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mT1&gt;mT2)<sp/>sr_switch<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>SR2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sr_switch<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SR1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(LFVmode==1)<sp/></highlight><highlight class="comment">//<sp/>mu+tau(-&gt;e)<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.vistau1.M()&gt;0.05<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&lt;0.05)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mT1&gt;mT2)<sp/>sr_switch<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SR1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sr_switch<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>SR2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mT1&gt;mT2)<sp/>sr_switch<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>SR2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sr_switch<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SR1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((preparedInput.vistau1.M()&lt;0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&gt;0.12)<sp/>||<sp/>(preparedInput.vistau2.M()&lt;0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau1.M()&gt;0.12))<sp/></highlight><highlight class="comment">//<sp/>lep-had<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.vistau1.M()&lt;0.12<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&gt;0.12)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mT1&gt;mT2)<sp/>sr_switch<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SR1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sr_switch<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>SR2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mT1&gt;mT2)<sp/>sr_switch<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>SR2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sr_switch<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SR1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0)<sp/></highlight><highlight class="comment">//<sp/>0-jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sr_switch==0)</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>0.41*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>7.36*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>0.34*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>6.61*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SumEt<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>preparedInput.SumEt<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;METoffset<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>METoffset<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;METresScale<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>METresScale<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=&gt;<sp/>METsigmaP<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.METsigmaP<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=&gt;<sp/>METsigmaL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.METsigmaL<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25&gt;0)<sp/></highlight><highlight class="comment">//<sp/>Inclusive<sp/>1-jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sr_switch==0)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>0.38*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>7.96*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>0.39*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>6.61*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt<sp/>=<sp/>5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Njet25&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//LFV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DRDRMERGE<sp/>end<sp/>addition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(METScanScheme==1)<sp/></highlight><highlight class="comment">//<sp/>default<sp/>for<sp/>Winter<sp/>2012<sp/>and<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LEP-HAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.type_visTau1+preparedInput.type_visTau2&gt;0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau1*preparedInput.type_visTau2==0)<sp/></highlight><highlight class="comment">//<sp/>lephad<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//0-jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0)</highlight><highlight class="comment">//0-jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011){</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.allowUseHT)<sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.detMetVec.Mod()&lt;20.0)<sp/></highlight><highlight class="comment">//<sp/>0-jet<sp/>low<sp/>MET<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>priority<sp/>to<sp/>external<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1<sp/>=<sp/>5.89;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2<sp/>=<sp/>15.47;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtGaussFr&lt;0.0)<sp/>preparedInput.MHtGaussFr<sp/>=<sp/>0.48;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>priority<sp/>to<sp/>external<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1<sp/>=<sp/>6.47;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2<sp/>=<sp/>16.82;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtGaussFr&lt;0.0)<sp/>preparedInput.MHtGaussFr<sp/>=<sp/>0.4767;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>if<sp/>disallow<sp/>use<sp/>of<sp/>HT,<sp/>then<sp/>fall<sp/>back<sp/>to<sp/>same<sp/>tuning<sp/>as<sp/>1<sp/>jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.56*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>3.73*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt<sp/>=<sp/>5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DRDR<sp/>lh<sp/>nj0<sp/>2011<sp/>sigma<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>sigma<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012){</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.detMetVec.Mod()&lt;20.0)<sp/></highlight><highlight class="comment">//<sp/>0-jet<sp/>low<sp/>MET<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------<sp/>tag-00-00-10<sp/>modifications,<sp/>for<sp/>HCP-2012<sp/>analysis<sp/>on<sp/>8<sp/>TeV<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(preparedInput.DelPhiTT)&gt;2.95<sp/>&amp;&amp;<sp/>preparedInput.allowUseHT)<sp/></highlight><highlight class="comment">//<sp/>use<sp/>mHt<sp/>only<sp/>if<sp/>dPhi(lep-tau)&gt;2.95</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>priority<sp/>to<sp/>external<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1<sp/>=<sp/>4.822;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2<sp/>=<sp/>10.31;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtGaussFr&lt;0.0)<sp/>preparedInput.MHtGaussFr<sp/>=<sp/>6.34E-5;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.32*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>5.38*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>0-jet<sp/>high<sp/>MET<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------<sp/>tag-00-00-10<sp/>modifications,<sp/>for<sp/>HCP-2012<sp/>analysis<sp/>on<sp/>8<sp/>TeV<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(preparedInput.DelPhiTT)&gt;2.8<sp/>&amp;&amp;<sp/>preparedInput.allowUseHT)<sp/></highlight><highlight class="comment">//<sp/>use<sp/>mHt<sp/>only<sp/>if<sp/>dPhi(lep-tau)&gt;2.8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>priority<sp/>to<sp/>external<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1<sp/>=<sp/>7.5;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2<sp/>=<sp/>13.51;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtGaussFr&lt;0.0)<sp/>preparedInput.MHtGaussFr<sp/>=<sp/>6.81E-4;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>preparedInput.MHtSigma2;<sp/></highlight><highlight class="comment">//<sp/>sigma<sp/>of<sp/>2nd<sp/>Gaussian<sp/>for<sp/>missing<sp/>Ht<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>preparedInput.MHtSigma2;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.87*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>4.16*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>high<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>MMC2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>placeholder<sp/>for<sp/>2015<sp/>tune;<sp/>for<sp/>now<sp/>2015<sp/>settings<sp/>are<sp/>the<sp/>same<sp/>as<sp/>2012,<sp/>to<sp/>be<sp/>changed<sp/>int<sp/>he<sp/>future;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015){</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.detMetVec.Mod()&lt;20.0)<sp/></highlight><highlight class="comment">//<sp/>0-jet<sp/>low<sp/>MET<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------<sp/>tag-00-00-10<sp/>modifications,<sp/>for<sp/>HCP-2012<sp/>analysis<sp/>on<sp/>8<sp/>TeV<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(preparedInput.DelPhiTT)&gt;2.95<sp/>&amp;&amp;<sp/>preparedInput.allowUseHT)<sp/></highlight><highlight class="comment">//<sp/>use<sp/>mHt<sp/>only<sp/>if<sp/>dPhi(lep-tau)&gt;2.95</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>priority<sp/>to<sp/>external<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1<sp/>=<sp/>4.822;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2<sp/>=<sp/>10.31;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtGaussFr&lt;0.0)<sp/>preparedInput.MHtGaussFr<sp/>=<sp/>6.34E-5;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.32*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>5.38*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>0-jet<sp/>high<sp/>MET<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------<sp/>tag-00-00-10<sp/>modifications,<sp/>for<sp/>HCP-2012<sp/>analysis<sp/>on<sp/>8<sp/>TeV<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(preparedInput.DelPhiTT)&gt;2.8<sp/>&amp;&amp;<sp/>preparedInput.allowUseHT)<sp/></highlight><highlight class="comment">//<sp/>use<sp/>mHt<sp/>only<sp/>if<sp/>dPhi(lep-tau)&gt;2.8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>priority<sp/>to<sp/>external<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1<sp/>=<sp/>7.5;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2<sp/>=<sp/>13.51;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtGaussFr&lt;0.0)<sp/>preparedInput.MHtGaussFr<sp/>=<sp/>6.81E-4;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>preparedInput.MHtSigma2;<sp/></highlight><highlight class="comment">//<sp/>sigma<sp/>of<sp/>2nd<sp/>Gaussian<sp/>for<sp/>missing<sp/>Ht<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>preparedInput.MHtSigma2;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.87*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>4.16*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>high<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>MMC2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>placeholder<sp/>for<sp/>2016MC15c<sp/>tune</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C){</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.detMetVec.Mod()&lt;20.0)<sp/></highlight><highlight class="comment">//<sp/>0-jet<sp/>low<sp/>MET<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(preparedInput.DelPhiTT)&gt;2.95<sp/>&amp;&amp;<sp/>preparedInput.allowUseHT)<sp/></highlight><highlight class="comment">//<sp/>use<sp/>mHt<sp/>only<sp/>if<sp/>dPhi(lep-tau)&gt;2.95</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>priority<sp/>to<sp/>external<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1<sp/>=<sp/>4.822;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2<sp/>=<sp/>10.31;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtGaussFr&lt;0.0)<sp/>preparedInput.MHtGaussFr<sp/>=<sp/>6.34E-5;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.32*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>5.38*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>0-jet<sp/>high<sp/>MET<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(preparedInput.DelPhiTT)&gt;2.8<sp/>&amp;&amp;<sp/>preparedInput.allowUseHT)<sp/></highlight><highlight class="comment">//<sp/>use<sp/>mHt<sp/>only<sp/>if<sp/>dPhi(lep-tau)&gt;2.8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>priority<sp/>to<sp/>external<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1<sp/>=<sp/>7.5;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2<sp/>=<sp/>13.51;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtGaussFr&lt;0.0)<sp/>preparedInput.MHtGaussFr<sp/>=<sp/>6.81E-4;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>preparedInput.MHtSigma2;<sp/></highlight><highlight class="comment">//<sp/>sigma<sp/>of<sp/>2nd<sp/>Gaussian<sp/>for<sp/>missing<sp/>Ht<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>preparedInput.MHtSigma2;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.87*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>4.16*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>high<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>MMC2016MC15C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2015<sp/>high-mass<sp/>tune;<sp/>avergare<sp/>MET<sp/>resolution<sp/>for<sp/>Mh=600,1000<sp/>mass<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS)</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>0.65*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>5.0*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>MMC2015HIGHMASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>0<sp/>jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//1-jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25&gt;0)<sp/></highlight><highlight class="comment">//<sp/>Inclusive<sp/>1-jet<sp/>and<sp/>VBF<sp/>lep-had<sp/>categories<sp/>for<sp/>Winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst=0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=0.;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011)</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=0.56*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=3.73*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt=5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=0.85*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012<sp/>=&gt;<sp/>updated<sp/>for<sp/>HCP<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=5.94*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012<sp/>=&gt;<sp/>updated<sp/>for<sp/>HCP<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt=5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>placeholder<sp/>for<sp/>2015<sp/>tune;<sp/>for<sp/>now<sp/>2015<sp/>settings<sp/>are<sp/>the<sp/>same<sp/>as<sp/>2012,<sp/>to<sp/>be<sp/>changed<sp/>int<sp/>he<sp/>future;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=0.85*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012<sp/>=&gt;<sp/>updated<sp/>for<sp/>HCP<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=5.94*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012<sp/>=&gt;<sp/>updated<sp/>for<sp/>HCP<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt=5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2015<sp/>high-mass<sp/>tune;<sp/>average<sp/>MET<sp/>resolution<sp/>for<sp/>Mh=400,600<sp/>mass<sp/>points<sp/>(they<sp/>look<sp/>consistent);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS)</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=0.86*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=3.0*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt=5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//2016<sp/>mc15c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C)</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>preparedInput.DelPhiTT;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dphi_scale<sp/>=<sp/>x<sp/>&gt;<sp/>0.3<sp/>?<sp/>0.9429<sp/>-<sp/>0.059*x<sp/>+<sp/>0.054*x*x<sp/>:<sp/>0.728;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/><sp/><sp/><sp/>=<sp/>1.875*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale1<sp/>=<sp/>8.914*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale2<sp/>=<sp/>-8.53*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>preparedInput.SumEt<sp/>&gt;<sp/>80.0<sp/>?<sp/>METoffset<sp/>+<sp/>METresScale1*TMath::Log(sqrt(preparedInput.SumEt)+METresScale2)<sp/>:<sp/>5.0;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>sigma<sp/>*<sp/>dphi_scale;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=sigma;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=sigma;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Njet25&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>lep-had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//HAD-HAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1&gt;0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2&gt;0)<sp/></highlight><highlight class="comment">//<sp/>had-had<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0<sp/>&amp;&amp;<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS)<sp/></highlight><highlight class="comment">//0-jet<sp/>high<sp/>mass<sp/>hadhad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2015<sp/>high-mass<sp/>tune;<sp/>average<sp/>of<sp/>all<sp/>mass<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>METresScale=-1.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>METoffset=-1.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst=0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=0.9*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=-1.8*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>fabs(METoffset);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=sigma;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=sigma;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0<sp/>&amp;&amp;<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C)</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst=0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>preparedInput.DelPhiTT;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dphi_scale<sp/>=<sp/>x<sp/>&gt;<sp/>2.5<sp/>?<sp/>11.0796<sp/>-<sp/>4.61236*x<sp/>+<sp/>0.423617*x*x<sp/>:<sp/>2.;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>-8.51013*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale1<sp/>=<sp/>8.54378*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale2<sp/>=<sp/>-3.97146*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=<sp/>preparedInput.SumEt&gt;80.0<sp/>?<sp/>METoffset+METresScale1*TMath::Log(sqrt(preparedInput.SumEt)+METresScale2)<sp/>:<sp/>5.;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>sigma*dphi_scale;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=sigma;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=sigma;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0<sp/>&amp;&amp;<sp/>preparedInput.allowUseHT)<sp/></highlight><highlight class="comment">//<sp/>0-jet<sp/>high<sp/>MET<sp/>had-had<sp/>category<sp/>for<sp/>Winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>uncomment<sp/>this<sp/>line<sp/>to<sp/>enable<sp/>HT<sp/>also<sp/>for<sp/>HH<sp/>(crucial)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>updated<sp/>for<sp/>final<sp/>cuts,<sp/>may<sp/>21<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma1&lt;0.0)<sp/>preparedInput.MHtSigma1=5.972;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.MHtSigma2&lt;0.0)<sp/>preparedInput.MHtSigma2=13.85;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(MHtGaussFr&lt;0.0)<sp/>MHtGaussFr=0.4767;<sp/>//<sp/>don&apos;t<sp/>directly<sp/>use<sp/>2nd<sp/>fraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//1-jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Inclusive<sp/>1-jet<sp/>and<sp/>VBF<sp/>categories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=-1.;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=-1.;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst=0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>value<sp/>in<sp/>trunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>METresScale=0.56*(1.0+METresSyst*sigmaSyst);<sp/>//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>METoffset=3.73*(1.0+METresSyst*sigmaSyst);<sp/>//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011){</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>0.56*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>3.73*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012)<sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>0.5*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>hh<sp/>2013</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>6.14*(1.0+METresSyst*sigmaSyst);<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>hh<sp/>2013</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015)<sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>placeholder<sp/>for<sp/>2015<sp/>tune;<sp/>same<sp/>as<sp/>2012<sp/>tune<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>0.5*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>6.14*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS)<sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2015<sp/>high-mass<sp/>tune;<sp/>average<sp/>of<sp/>all<sp/>mass<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>1.1*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>-5.0*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt=5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/><sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>fabs(METoffset);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C)<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>preparedInput.DelPhiTT;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dphi_scale<sp/>=<sp/>x<sp/>&gt;<sp/>0.6<sp/>?<sp/>1.42047<sp/>-<sp/>0.666644*x<sp/>+<sp/>0.199986*x*x<sp/>:<sp/>1.02;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>1.19769*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale1<sp/>=<sp/>5.61687*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale2<sp/>=<sp/>-4.2076*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;115.0<sp/>?<sp/>METoffset+METresScale1*TMath::Log(sqrt(preparedInput.SumEt)+METresScale2)<sp/>:<sp/>12.1;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>sigma*dphi_scale;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//for<sp/>hh<sp/>2016<sp/>mc15c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//<sp/>1<sp/>jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>had-had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LEP-LEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1==0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2==0)<sp/></highlight><highlight class="comment">//<sp/>setup<sp/>for<sp/>LEP-LEP<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>tune<sp/>for<sp/>7<sp/>TeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst=0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=0.56*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=3.73*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>events<sp/>with<sp/>jets<sp/>&amp;<sp/>analysis<sp/>cuts<sp/>for<sp/>winter<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>can&apos;t<sp/>be<sp/>perfect<sp/>in<sp/>presence<sp/>of<sp/>other<sp/>objects<sp/>(i.e.,<sp/>electrons,<sp/>jets,<sp/>taus),<sp/>so<sp/>assume<sp/>minSumEt=5.0<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=sigma;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=sigma;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012)<sp/></highlight><highlight class="comment">//<sp/>tuned<sp/>version<sp/>of<sp/>MET+STVF<sp/>resolution<sp/>for<sp/>lep-lep<sp/>events.<sp/>(tune<sp/>done<sp/>by<sp/>Tomas)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst=0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=-1.0;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=-1.0;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=5.0;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tune<sp/>is<sp/>based<sp/>on<sp/>cuts<sp/>for<sp/>Run-1<sp/>paper<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>tune<sp/>for<sp/>emebedding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=-0.4307*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=7.06*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale2=0.07693*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>quadratic<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>tune<sp/>for<sp/>Higgs125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=-0.5355*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=11.5*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>METresScale2=0.07196*(1.0+METresSyst*sigmaSyst);<sp/>//<sp/>quadratic<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)+METresScale2*preparedInput.SumEt<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25&gt;0)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>tune<sp/>for<sp/>embedding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=0.8149*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=5.343*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>tune<sp/>for<sp/>Higgs125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=0.599*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=8.223*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=sigma;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=sigma;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015)<sp/></highlight><highlight class="comment">//<sp/>placeholder<sp/>for<sp/>2015<sp/>tune;<sp/>for<sp/>now<sp/>it<sp/>is<sp/>the<sp/>same<sp/>as<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst=0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=-1.0;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=-1.0;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=5.0;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tune<sp/>is<sp/>based<sp/>on<sp/>cuts<sp/>for<sp/>Run-1<sp/>paper<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0)</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>tune<sp/>for<sp/>emebedding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=-0.4307*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=7.06*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale2=0.07693*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>quadratic<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>tune<sp/>for<sp/>Higgs125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=-0.5355*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=11.5*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>METresScale2=0.07196*(1.0+METresSyst*sigmaSyst);<sp/>//<sp/>quadratic<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)+METresScale2*preparedInput.SumEt<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25&gt;0)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>tune<sp/>for<sp/>embedding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=0.8149*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=5.343*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>tune<sp/>for<sp/>Higgs125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=0.599*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=8.223*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=sigma;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=sigma;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>MMC2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS)<sp/></highlight><highlight class="comment">//<sp/>placeholder<sp/>for<sp/>2015<sp/>high-mass<sp/>tune;<sp/>for<sp/>now<sp/>it<sp/>is<sp/>the<sp/>same<sp/>as<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst<sp/>=<sp/>0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>5.0;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tune<sp/>is<sp/>based<sp/>on<sp/>cuts<sp/>for<sp/>Run-1<sp/>paper<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>tune<sp/>for<sp/>emebedding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=-0.4307*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=7.06*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale2=0.07693*(1.0+METresSyst*sigmaSyst);<sp/></highlight><highlight class="comment">//<sp/>quadratic<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>tune<sp/>for<sp/>Higgs125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=-0.5355*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=11.5*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>METresScale2=0.07196*(1.0+METresSyst*sigmaSyst);<sp/>//<sp/>quadratic<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)+METresScale2*preparedInput.SumEt<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25&gt;0)</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>tune<sp/>for<sp/>embedding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=0.8149*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=5.343*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>tune<sp/>for<sp/>Higgs125</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale=0.599*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset=8.223*(1.0+METresSyst*sigmaSyst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>MMC2015HIGHMASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C)<sp/></highlight><highlight class="comment">//<sp/>2016<sp/>MC15c<sp/>leplep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.UseHT=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaSyst=0.10;<sp/></highlight><highlight class="comment">//<sp/>10%<sp/>systematics<sp/>for<sp/>now<sp/>(be<sp/>conservative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale=-1.0;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset=-1.0;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=5.0;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_sigma<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tune<sp/>is<sp/>based<sp/>on<sp/>cuts<sp/>for<sp/>Run-1<sp/>paper<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25==0)</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Madgraph<sp/>Ztautau<sp/>MET<sp/>param</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>4.22581*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>0.03818*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresScale2=<sp/>0.12623;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma=<sp/>preparedInput.SumEt&gt;0.0<sp/>?<sp/>METoffset+METresScale*sqrt(preparedInput.SumEt)+METresScale2*preparedInput.SumEt<sp/>:<sp/>min_sigma;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fUseDphiLL)<sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>2.60131;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1const<sp/>=<sp/>1.22427;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2quad<sp/>=<sp/>-1.71261;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DphiLL<sp/>=<sp/>fabs(TVector2::Phi_mpi_pi(preparedInput.vistau1.Phi()-preparedInput.vistau2.Phi()));</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>*=<sp/>(DphiLL<sp/>&lt;<sp/>p0)<sp/>?<sp/>p1const<sp/>:<sp/>p1const+</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2quad*p0*p0<sp/>-<sp/>2*p2quad*p0*DphiLL+p2quad*DphiLL*DphiLL;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigma<sp/>&lt;<sp/>min_sigma)<sp/>sigma<sp/>=<sp/>min_sigma;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.Njet25&gt;0)</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Madgraph<sp/>Ztautau<sp/>MET<sp/>param</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METoffset<sp/>=<sp/>5.42506*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METresScale<sp/>=<sp/>5.36760*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METoffset2<sp/>=<sp/>-4.86808*(1.0+METresSyst*sigmaSyst);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.SumEt<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>sqrt(preparedInput.SumEt);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>(x+METoffset2<sp/>&gt;<sp/>1)<sp/>?<sp/>METoffset+METresScale*log(x+METoffset2)<sp/>:<sp/>METoffset;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>=<sp/>METoffset;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fUseDphiLL)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>2.24786;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1const<sp/>=<sp/>0.908597;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2quad<sp/>=<sp/>0.544577;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DphiLL<sp/>=<sp/>fabs(TVector2::Phi_mpi_pi(preparedInput.vistau1.Phi()-preparedInput.vistau2.Phi()));</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>*=<sp/>(DphiLL<sp/>&lt;<sp/>p0)<sp/>?<sp/>p1const<sp/>:<sp/>p1const+</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2quad*p0*p0<sp/>-<sp/>2*p2quad*p0*DphiLL+p2quad*DphiLL*DphiLL;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigma<sp/>&lt;<sp/>min_sigma)<sp/>sigma<sp/>=<sp/>min_sigma;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=sigma;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=sigma;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//2016<sp/>mc15c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>lep-lep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//METScanScheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(METScanScheme==0)<sp/></highlight><highlight class="comment">//<sp/>old<sp/>scheme<sp/>with<sp/>JER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.dataType==0<sp/>||<sp/>preparedInput.dataType==1)<sp/>SetMetScanParamsUE(preparedInput.SumEt,preparedInput.METcovphi,preparedInput.dataType);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>SetMetScanParamsUE(preparedInput.SumEt,preparedInput.METcovphi,0);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>else<sp/>LFV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>HTOffset<sp/>if<sp/>relevant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>preparedInput.HtOffset=rawInput.HtOffset;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.UseHT<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>missing<sp/>Ht<sp/>for<sp/>Njet25=0<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dPhi(l-t)<sp/>dependence<sp/>of<sp/>misHt-trueMET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HtOffset=0.;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>proper<sp/>for<sp/>hh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.type_visTau1!=0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2!=0)<sp/>{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x=preparedInput.DelPhiTT;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HtOffset=87.5-27.0*x;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>the<sp/>condition<sp/>is<sp/>really<sp/>on<sp/>MET<sp/>non<sp/>on<sp/>HT<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011){</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.detMetVec.Mod()&lt;20.0)<sp/>HtOffset=preparedInput.DelPhiTT&gt;1.8<sp/>?<sp/>-161.9+235.5*preparedInput.DelPhiTT-101.6*pow(preparedInput.DelPhiTT,2)+13.57*pow(preparedInput.DelPhiTT,3)<sp/>:<sp/>12.0;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>HtOffset=115.5-78.1*preparedInput.DelPhiTT+12.83*pow(preparedInput.DelPhiTT,2);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012){</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.detMetVec.Mod()&lt;20.0)<sp/>HtOffset=132.1-79.26*preparedInput.DelPhiTT+11.77*pow(preparedInput.DelPhiTT,2);<sp/></highlight><highlight class="comment">//<sp/>updated<sp/>for<sp/>HCP-2012,<sp/>8<sp/>TeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>HtOffset=51.28-23.56*preparedInput.DelPhiTT+2.637*pow(preparedInput.DelPhiTT,2);<sp/></highlight><highlight class="comment">//<sp/>updated<sp/>for<sp/>HCP-2012,<sp/>8<sp/>TeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2015){</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.detMetVec.Mod()&lt;20.0)<sp/>HtOffset=132.1-79.26*preparedInput.DelPhiTT+11.77*pow(preparedInput.DelPhiTT,2);<sp/></highlight><highlight class="comment">//<sp/>updated<sp/>for<sp/>HCP-2012,<sp/>8<sp/>TeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>HtOffset=51.28-23.56*preparedInput.DelPhiTT+2.637*pow(preparedInput.DelPhiTT,2);<sp/></highlight><highlight class="comment">//<sp/>updated<sp/>for<sp/>HCP-2012,<sp/>8<sp/>TeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.HtOffset=HtOffset;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>use<sp/>HT,<sp/>replace<sp/>MET<sp/>with<sp/>HT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.UseHT)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaP=preparedInput.MHtSigma2;<sp/></highlight><highlight class="comment">//<sp/>sigma<sp/>of<sp/>2nd<sp/>Gaussian<sp/>for<sp/>missing<sp/>Ht<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.METsigmaL=preparedInput.MHtSigma2;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>tauSum=preparedInput.vistau1+preparedInput.vistau2;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preparedInput.MetVec.Set(-tauSum.Px(),-tauSum.Py());<sp/></highlight><highlight class="comment">//<sp/>WARNING<sp/>this<sp/>replace<sp/>metvec<sp/>by<sp/>-mht</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/>DoMetResolution(preparedInput);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="comment">//-------<sp/>clearing<sp/>output<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::ClearOutputStuff()<sp/>{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose<sp/>==<sp/>1){<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MissingMassCalculator::ClearOutputStuff()&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/>OutputInfo.FitStatus=0;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imeth=0;<sp/>imeth&lt;MMCFitMethod::MAX;<sp/>++imeth)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose<sp/>==<sp/>1){<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MissingMassCalculator::ClearOutputStuff():<sp/>clearing<sp/>for<sp/>method<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imeth<sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FitSignificance[imeth]<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FittedMass[imeth]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec1[imeth].SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec1[imeth].SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec2[imeth].SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec2[imeth].SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.totalvec[imeth].SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FittedMetVec[imeth].Set(0.0,0.0);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/>OutputInfo.RMS2MPV<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/>m_aPOI.prob.clear();</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/>m_aPOI.mtautau.clear();</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>m_aPOI.Phi1.clear();</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/>m_aPOI.Phi2.clear();</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>m_aPOI.MEtP.clear();</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>m_aPOI.MEtL.clear();</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>m_aPOI.MEtX.clear();</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>m_aPOI.MEtY.clear();</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/>m_aPOI.Mnu1.clear();</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/>m_aPOI.Mnu2.clear();</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/>m_aPOI.eTau1.clear();</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>m_aPOI.eTau2.clear();</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>m_aPOI.pCode.clear();</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/>m_aPOI.index.clear();</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight><highlight class="comment">//----<sp/>finalizes<sp/>MET<sp/>resolution<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OBSOLETE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::DoMetResolution(InputInfoStuff<sp/>&amp;fStuff)<sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fStuff.jet4vecs.size()&gt;0<sp/>&amp;&amp;<sp/>METScanScheme==0)</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>MissingMassCalculator::DoMetResolution<sp/>is<sp/>obsolete<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="comment">//----------------------------<sp/>Accessors<sp/>to<sp/>output<sp/>parameters<sp/>------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>fit<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetFitStatus()<sp/>{</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.FitStatus;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>fit<sp/>significance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetFitSignificance(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fitcode)<sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>signif<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitcode&lt;0<sp/>||<sp/>fitcode<sp/>&gt;=<sp/>MMCFitMethod::MAX)<sp/>{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MissingMassCalculator::GetFitSignificance<sp/>ERROR<sp/>!<sp/>fitcode=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitcode</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>be<sp/>between<sp/>0<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MAX-1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>signif<sp/>=<sp/>OutputInfo.FitSignificance[fitcode];</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>signif;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>RMS/MPV<sp/>according<sp/>to<sp/>histogram<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetRms2Mpv()<sp/>{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.RMS2MPV;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>fitted<sp/>Mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetFittedMass(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fitcode)<sp/>{</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>best<sp/>parameter<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>best<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>best<sp/>nu<sp/>from<sp/>hist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitcode&lt;0<sp/>||<sp/>fitcode<sp/>&gt;=<sp/>MMCFitMethod::MAX)<sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MissingMassCalculator::GetFittedMass<sp/>ERROR<sp/>!<sp/>fitcode=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitcode</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>be<sp/>between<sp/>0<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MAX-1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>mass<sp/>=<sp/>OutputInfo.FittedMass[fitcode];</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mass;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetNTrials()</highlight></codeline>
<codeline lineno="1941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.NTrials;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetNSuccesses()</highlight></codeline>
<codeline lineno="1947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.NSuccesses;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetNSolutions()</highlight></codeline>
<codeline lineno="1953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.NSolutions;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sum<sp/>of<sp/>weights<sp/>of<sp/>all<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetSumW()</highlight></codeline>
<codeline lineno="1959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.SumW;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="comment">//<sp/>average<sp/>RMS<sp/>of<sp/>solutions<sp/>in<sp/>one<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::GetAveSolRMS()</highlight></codeline>
<codeline lineno="1966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.AveSolRMS;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal">std::shared_ptr&lt;TH1F&gt;<sp/>MissingMassCalculator::GetMassHistogram()</highlight></codeline>
<codeline lineno="1972"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.hMfit_all;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal">std::shared_ptr&lt;TH1F&gt;<sp/>MissingMassCalculator::GetMassHistogramNoWeight()</highlight></codeline>
<codeline lineno="1978"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputInfo.hMfit_allNoWeight;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>neutrino<sp/>4-vec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal">TLorentzVector<sp/>MissingMassCalculator::GetNeutrino4vec(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fitcode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind)</highlight></codeline>
<codeline lineno="1984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vec(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitcode!=MMCFitMethod::MAXW<sp/>&amp;&amp;<sp/>fitcode!=MMCFitMethod::MLNU3P<sp/>)</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MissingMassCalculator::GetNeutrino4Vec<sp/>ERROR<sp/>!<sp/>fitcode=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitcode</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>be<sp/>either<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MAXW<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>or<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MLNU3P<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OutputInfo.FitStatus&gt;0)</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ind==0)<sp/>vec<sp/>=<sp/>OutputInfo.nuvec1[fitcode];</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ind==1)<sp/>vec<sp/>=<sp/>OutputInfo.nuvec2[fitcode];</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>neutrino<sp/>4-vec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal">TLorentzVector<sp/>MissingMassCalculator::GetTau4vec(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fitcode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind)</highlight></codeline>
<codeline lineno="2001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vec(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitcode!=MMCFitMethod::MAXW<sp/>&amp;&amp;<sp/>fitcode!=MMCFitMethod::MLNU3P<sp/>)</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MissingMassCalculator::GetTau4vec<sp/>ERROR<sp/>!<sp/>fitcode=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitcode</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>be<sp/>either<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MAXW<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>or<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MLNU3P<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OutputInfo.FitStatus&gt;0)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ind==0)<sp/>vec<sp/>=<sp/>OutputInfo.objvec1[fitcode];</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ind==1)<sp/>vec<sp/>=<sp/>OutputInfo.objvec2[fitcode];</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>4-vec<sp/>for<sp/>resonance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal">TLorentzVector<sp/>MissingMassCalculator::GetResonanceVec(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fitcode)<sp/>{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vec(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitcode!=MMCFitMethod::MAXW<sp/>&amp;&amp;<sp/>fitcode!=MMCFitMethod::MLNU3P<sp/>)</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MissingMassCalculator::GetResonanceVec<sp/>ERROR<sp/>!<sp/>fitcode=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitcode</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>be<sp/>either<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MAXW<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>or<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MLNU3P<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OutputInfo.FitStatus&gt;0)</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>=<sp/>OutputInfo.objvec1[fitcode]+OutputInfo.objvec2[fitcode];</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>2-vec<sp/>for<sp/>fitted<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal">TVector2<sp/>MissingMassCalculator::GetFittedMetVec(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fitcode)<sp/>{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>TVector2<sp/>vec(0.0,0.0);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitcode!=MMCFitMethod::MAXW<sp/>&amp;&amp;<sp/>fitcode!=MMCFitMethod::MLNU3P<sp/>)</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MissingMassCalculator::GetFittedMetVec<sp/>ERROR<sp/>!<sp/>fitcode=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitcode</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>be<sp/>either<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MAXW<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>or<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::MLNU3P<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OutputInfo.FitStatus&gt;0)</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec=OutputInfo.FittedMetVec[fitcode];</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight><highlight class="comment">//<sp/>finalizes<sp/>output<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::DoOutputInfo()</highlight></codeline>
<codeline lineno="2051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SearchMode==0)<sp/></highlight><highlight class="comment">//<sp/>di-tau<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(OutputInfo.FitStatus&gt;0)</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose<sp/>==<sp/>1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Retrieving<sp/>output<sp/>from<sp/>fDitauStuffFit&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXW<sp/>method<sp/>:<sp/>get<sp/>from<sp/>fDittauStuffFit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FitSignificance[MMCFitMethod::MAXW]<sp/>=<sp/>fDitauStuffFit.Sign_best;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FittedMass[MMCFitMethod::MAXW]<sp/>=<sp/>fDitauStuffFit.Mditau_best;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec1[MMCFitMethod::MAXW]<sp/>=<sp/>fDitauStuffFit.nutau1;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec1[MMCFitMethod::MAXW]<sp/>=<sp/>fDitauStuffFit.taufit1;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec2[MMCFitMethod::MAXW]<sp/>=<sp/>fDitauStuffFit.nutau2;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec2[MMCFitMethod::MAXW]<sp/>=<sp/>fDitauStuffFit.taufit2;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.totalvec[MMCFitMethod::MAXW]<sp/>=<sp/>OutputInfo.objvec1[MMCFitMethod::MAXW]+OutputInfo.objvec2[MMCFitMethod::MAXW];</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVector2<sp/>metmaxw(OutputInfo.nuvec1[MMCFitMethod::MAXW].Px()+OutputInfo.nuvec2[MMCFitMethod::MAXW].Px(),OutputInfo.nuvec1[MMCFitMethod::MAXW].Py()+OutputInfo.nuvec2[MMCFitMethod::MAXW].Py());</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FittedMetVec[MMCFitMethod::MAXW]<sp/>=<sp/>metmaxw;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MLM<sp/>method<sp/>:<sp/>can<sp/>only<sp/>get<sp/>MMC,<sp/>rest<sp/>is<sp/>dummy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale=MassScale(MMCFitMethod::MAXW,fDitauStuffHisto.Mditau_best,preparedInput.type_visTau1,preparedInput.type_visTau2);<sp/></highlight><highlight class="comment">//<sp/>only<sp/>for<sp/>histo<sp/>method<sp/>for<sp/>now.<sp/>In<sp/>practice<sp/>disabled<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FittedMass[MMCFitMethod::MLM]<sp/>=<sp/>scale*fDitauStuffHisto.Mditau_best;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>tlvdummy(0.,0.,0.,0.);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVector2<sp/>metdummy(0.,0.);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FitSignificance[MMCFitMethod::MLM]<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec1[MMCFitMethod::MLM]<sp/>=<sp/>tlvdummy;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec1[MMCFitMethod::MLM]<sp/>=<sp/>tlvdummy;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec2[MMCFitMethod::MLM]<sp/>=<sp/>tlvdummy;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec2[MMCFitMethod::MLM]<sp/>=<sp/>tlvdummy;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.totalvec[MMCFitMethod::MLM]<sp/>=<sp/>tlvdummy;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FittedMetVec[MMCFitMethod::MLM]<sp/>=<sp/>metdummy;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MLNU3P<sp/>method<sp/>:<sp/>get<sp/>from<sp/>fDittauStuffHisto<sp/>4<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec1[MMCFitMethod::MLNU3P]<sp/>=<sp/>fDitauStuffHisto.nutau1;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec1[MMCFitMethod::MLNU3P]<sp/>=<sp/>fDitauStuffHisto.taufit1;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec2[MMCFitMethod::MLNU3P]<sp/>=<sp/>fDitauStuffHisto.nutau2;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec2[MMCFitMethod::MLNU3P]<sp/>=<sp/>fDitauStuffHisto.taufit2;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.totalvec[MMCFitMethod::MLNU3P]<sp/>=<sp/>OutputInfo.objvec1[MMCFitMethod::MLNU3P]<sp/>+<sp/>OutputInfo.objvec2[MMCFitMethod::MLNU3P];</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FittedMass[MMCFitMethod::MLNU3P]<sp/>=<sp/>OutputInfo.totalvec[MMCFitMethod::MLNU3P].M();</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVector2<sp/>metmlnu3p(OutputInfo.nuvec1[MMCFitMethod::MLNU3P].Px()+OutputInfo.nuvec2[MMCFitMethod::MLNU3P].Px(),OutputInfo.nuvec1[MMCFitMethod::MLNU3P].Py()+OutputInfo.nuvec2[MMCFitMethod::MLNU3P].Py());</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.FittedMetVec[MMCFitMethod::MLNU3P]<sp/>=<sp/>metmlnu3p;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.RMS2MPV<sp/>=<sp/>fDitauStuffHisto.RMSoverMPV;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DR<sp/>add<sp/>a<sp/>margin,<sp/>given<sp/>that<sp/>due<sp/>to<sp/>binning<sp/>effect,<sp/>fitted<sp/>mass<sp/>can<sp/>be<sp/>slightly<sp/>below<sp/>the<sp/>visible<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(OutputInfo.FittedMass[MMCFitMethod::MLM]&lt;=(preparedInput.vistau1+preparedInput.vistau2).M()-10.){</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearOutputStuff();<sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>cases<sp/>when<sp/>FitStatus=1<sp/>but<sp/>mass<sp/>is<sp/>not<sp/>reconstructed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/>OutputInfo.hMfit_all<sp/>=<sp/>fMfit_all;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/>OutputInfo.hMfit_allNoWeight<sp/>=<sp/>fMfit_allNoWeight;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/>OutputInfo.NSolutions<sp/>=<sp/>fMfit_all-&gt;GetEntries();</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/>OutputInfo.SumW<sp/>=<sp/>fMfit_all-&gt;GetSumOfWeights();</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/>OutputInfo.UseHT<sp/>=<sp/>preparedInput.UseHT;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------------<sp/>Check<sp/>if<sp/>input<sp/>was<sp/>re-ordered<sp/>in<sp/>FinalizeInputStuff()<sp/>and<sp/>restore<sp/>the<sp/>original<sp/>order<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(InputReorder==1)</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>dummy_vec1(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>dummy_vec2(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;3;<sp/>i++)</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-ordering<sp/>neutrinos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy_vec1=OutputInfo.nuvec1[i];</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy_vec2=OutputInfo.nuvec2[i];</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec1[i]=dummy_vec2;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.nuvec2[i]=dummy_vec1;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-ordering<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy_vec1=OutputInfo.objvec1[i];</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy_vec2=OutputInfo.objvec2[i];</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec1[i]=dummy_vec2;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputInfo.objvec2[i]=dummy_vec1;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Printout<sp/>of<sp/>final<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::PrintInputInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputInfoStuff<sp/>&amp;<sp/>fStuff)<sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose!=1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(15);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>met_x=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.MetVec.Px()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>met_y=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.MetVec.Py()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>MET=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.MetVec.Mod()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>met_phi=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.MetVec.Phi()&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>detmet_x=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.detMetVec.Px()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>detmet_y=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.detMetVec.Py()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>detMET=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.detMetVec.Mod()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>detmet_phi=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.detMetVec.Phi()&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>sumEt=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.SumEt&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>METsigmaP=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.METsigmaP&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>METsigmaL=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.METsigmaL&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>METcovphi=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.METcovphi&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>TAUESCAN</highlight></codeline>
<codeline lineno="2143"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>sigmaEtau1=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.sigmaEtau1&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>sigmaEtau2=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>fStuff.sigmaEtau2<sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2145"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Njet25=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fStuff.Njet25<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>allowUseHT=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.allowUseHT<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>useHT=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.UseHT<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MHtSigma1=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fStuff.MHtSigma1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MHtSigma2=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>fStuff.MHtSigma2</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MHtGaussFr=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fStuff.MHtGaussFr</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>HtOffset=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fStuff.HtOffset<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>*<sp/>origVisTau1=0;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>origTauType1;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>*<sp/>origVisTau2=0;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>origTauType2;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/>origVisTau1=&amp;fStuff.vistau1;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/>origVisTau2=&amp;fStuff.vistau2;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/>origTauType1=fStuff.type_visTau1;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>origTauType2=fStuff.type_visTau2;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>1st<sp/>visible<sp/>tau:<sp/>type=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>origTauType1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Nprong=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>fStuff.Nprong_tau1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>P=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau1-&gt;P()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Pt=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau1-&gt;Pt()</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Eta=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau1-&gt;Eta()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Phi=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau1-&gt;Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>M=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau1-&gt;M()</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>2nd<sp/>visible<sp/>tau:<sp/>type=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>origTauType2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Nprong=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>fStuff.Nprong_tau2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>P=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau2-&gt;P()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Pt=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau2-&gt;Pt()</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Eta=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau2-&gt;Eta()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Phi=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau2-&gt;Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>M=&quot;</highlight><highlight class="normal">&lt;&lt;origVisTau2-&gt;M()</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fStuff.jet4vecs.size()&gt;0)</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;fStuff.jet4vecs.size();<sp/>i++)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Printing<sp/>jets:<sp/>jet<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>E=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.jet4vecs[i].E()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Pt=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;fStuff.jet4vecs[i].Pt()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Phi=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.jet4vecs[i].Phi()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Eta=&quot;</highlight><highlight class="normal">&lt;&lt;fStuff.jet4vecs[i].Eta()&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(6);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Printout<sp/>of<sp/>final<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::PrintOtherInput()<sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose!=1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(15);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;.........................Other<sp/>input.....................................&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>SearchMode=&quot;</highlight><highlight class="normal">&lt;&lt;SearchMode&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>--<sp/>0:<sp/>ditau,<sp/>1:<sp/>WW,<sp/>2:<sp/>W-&gt;taunu&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Beam<sp/>energy<sp/>=&quot;</highlight><highlight class="normal">&lt;&lt;beamEnergy&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>sqrt(S)<sp/>for<sp/>collisions<sp/>=&quot;</highlight><highlight class="normal">&lt;&lt;2.0*beamEnergy&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>CalibrationSet<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCCalibrationSet::name[m_MMCCalibrationSet]<sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>AlgorithmVersion<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>AlgorithmVersion<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>WalkStrategy=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>WALKSTRATEGY<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>seed=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>m_seed<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>usetauProbability=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fUseTauProbability<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>useTailCleanup=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fUseTailCleanup<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InputReorder!=0)</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tau1<sp/>and<sp/>tau2<sp/>were<sp/>internally<sp/>swapped<sp/>(visible<sp/>on<sp/>prepared<sp/>input<sp/>printout)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tau1<sp/>and<sp/>tau2<sp/>were<sp/>NOT<sp/>internally<sp/>swapped&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MEtLMin=&quot;</highlight><highlight class="normal">&lt;&lt;m_MEtLMin&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MEtLMax=&quot;</highlight><highlight class="normal">&lt;&lt;m_MEtLMax<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MEtPMin=&quot;</highlight><highlight class="normal">&lt;&lt;m_MEtPMin&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MEtPMax=&quot;</highlight><highlight class="normal">&lt;&lt;m_MEtPMax<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Phi1Min=&quot;</highlight><highlight class="normal">&lt;&lt;m_Phi1Min&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Phi1Max=&quot;</highlight><highlight class="normal">&lt;&lt;m_Phi1Max<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Phi2Min=&quot;</highlight><highlight class="normal">&lt;&lt;m_Phi2Min&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Phi2Max=&quot;</highlight><highlight class="normal">&lt;&lt;m_Phi2Max<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Mnu1Min=&quot;</highlight><highlight class="normal">&lt;&lt;m_Mnu1Min&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Mnu1Max=&quot;</highlight><highlight class="normal">&lt;&lt;m_Mnu1Max<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Mnu2Min=&quot;</highlight><highlight class="normal">&lt;&lt;m_Mnu2Min&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Mnu2Max=&quot;</highlight><highlight class="normal">&lt;&lt;m_Mnu2Max<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="2211"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eTau1Min=&quot;</highlight><highlight class="normal">&lt;&lt;m_eTau1Min&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eTau1Max=&quot;</highlight><highlight class="normal">&lt;&lt;m_eTau1Max<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>range<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_eTau1Range<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prop<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_eTau1Proposal<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eTau2Min=&quot;</highlight><highlight class="normal">&lt;&lt;m_eTau2Min&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eTau2Max=&quot;</highlight><highlight class="normal">&lt;&lt;m_eTau2Max<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>range<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_eTau2Range<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prop<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_eTau2Proposal<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2214"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Printout<sp/>of<sp/>final<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::PrintResults()<sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose!=1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>*origVisTau1=0;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>*origVisTau2=0;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(InputReorder==0)</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>origVisTau1=&amp;preparedInput.vistau1;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>origVisTau2=&amp;preparedInput.vistau2;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>input<sp/>order<sp/>was<sp/>flipped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>origVisTau1=&amp;preparedInput.vistau2;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>origVisTau2=&amp;preparedInput.vistau1;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/>PrintOtherInput()<sp/>;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(6);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;-------------<sp/>Printing<sp/>Final<sp/>Results<sp/>for<sp/>MissingMassCalculator<sp/>--------------&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;.................................................................................&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Fit<sp/>status=&quot;</highlight><highlight class="normal">&lt;&lt;OutputInfo.FitStatus&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imeth=0;<sp/>imeth&lt;MMCFitMethod::MAX;<sp/>++imeth)</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;___<sp/><sp/>Results<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MMCFitMethod::name[imeth]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Method<sp/>___&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>signif=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.FitSignificance[imeth]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>mass=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.FittedMass[imeth]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rms/mpv=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.RMS2MPV<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imeth==MMCFitMethod::MLM)</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>no<sp/>4-momentum<sp/>or<sp/>MET<sp/>from<sp/>this<sp/>method<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(OutputInfo.FitStatus&lt;=0)</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>fit<sp/>failed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tlvnu1<sp/>=<sp/>OutputInfo.nuvec1[imeth];</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tlvnu2<sp/>=<sp/>OutputInfo.nuvec2[imeth];</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tlvo1<sp/>=<sp/>OutputInfo.objvec1[imeth];</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tlvo2<sp/>=<sp/>OutputInfo.objvec2[imeth];</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector2<sp/>&amp;<sp/>tvmet<sp/>=<sp/>OutputInfo.FittedMetVec[imeth];</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Neutrino-1:<sp/>P=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.P()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.Pt()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.Eta()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.M()</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Px=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Py=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.Py()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pz=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.Pz()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Neutrino-2:<sp/>P=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.P()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.Pt()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.Eta()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.M()</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Px=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Py=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.Py()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pz=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.Pz()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Tau-1:<sp/>P=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo1.P()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo1.Pt()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo1.Eta()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo1.Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo1.M()</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Px=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo1.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Py=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo1.Py()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pz=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo1.Pz()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Tau-2:<sp/>P=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo2.P()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo2.Pt()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo2.Eta()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo2.Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo2.M()</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Px=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo2.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Py=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo2.Py()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pz=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvo2.Pz()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SearchMode==0)</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dR(nu1-visTau1)=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.DeltaR(*origVisTau1)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dR(nu2-visTau2)=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu2.DeltaR(*origVisTau2)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Fitted<sp/>MET<sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>tvmet.Mod()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tlvnu1.Phi()</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Px=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tvmet.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Py=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tvmet.Py()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Resonance:<sp/>P=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.totalvec[imeth].P()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.totalvec[imeth].Pt()</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.totalvec[imeth].Eta()</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.totalvec[imeth].Phi()</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.totalvec[imeth].M()</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Px=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.totalvec[imeth].Px()</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Py=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.totalvec[imeth].Py()</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pz=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>OutputInfo.totalvec[imeth].Pz()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::mT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vec,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector2<sp/>&amp;<sp/>met_vec)<sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mt=0.0;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dphi=fabs(TVector2::Phi_mpi_pi(vec.Phi()-met_vec.Phi()));</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cphi=1.0-cos(dphi);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cphi&gt;0.0)<sp/>mt=sqrt(2.0*vec.Pt()*met_vec.Mod()*cphi);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mt;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>P(nu1)<sp/>&amp;<sp/>P(nu2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::NuPsolution(TVector2<sp/>met_vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi1,</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;P1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;P2)<sp/>{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>solution_code=0;<sp/></highlight><highlight class="comment">//<sp/>0==<sp/>no<sp/>solution,<sp/>1==with<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>P1=0.0;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/>P2=0.0;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d7/db3/structD" kindref="compound">D</ref>=sin(theta1)*sin(theta2)*sin(phi2-phi1);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(D)&gt;0.0)<sp/></highlight><highlight class="comment">//<sp/>matrix<sp/>deteriminant<sp/>is<sp/>non-zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P1=(met_vec.Px()*sin(phi2)-met_vec.Py()*cos(phi2))*sin(theta2)/D;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P2=(met_vec.Py()*cos(phi1)-met_vec.Px()*sin(phi1))*sin(theta1)/D;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(P1&gt;0.0<sp/>&amp;&amp;<sp/>P2&gt;0.0)<sp/>solution_code=1;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>P1,<sp/>P2,<sp/>and<sp/>theta1<sp/>&amp;<sp/>theta2<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>compute<sp/>the<sp/>nu1<sp/>nu2<sp/>solution<sp/>in<sp/>the<sp/>most<sp/>efficient<sp/>way.<sp/>Wrt<sp/>to<sp/>NuPsolutionV2,<sp/>the<sp/>output<sp/>nu1<sp/>nu2<sp/>4-vector<sp/>have<sp/>non<sp/>zero<sp/>mass<sp/>(if<sp/>relevant).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>not<sp/>optimised<sp/>for<sp/>grid<sp/>running<sp/>so<sp/>much<sp/>less<sp/>caching<sp/>is<sp/>done<sp/>(which<sp/>makes<sp/>it<sp/>more<sp/>readable).<sp/>Only<sp/>quantities<sp/>fixed<sp/>within<sp/>an<sp/>event<sp/>are<sp/>cached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>relies<sp/>on<sp/>a<sp/>number<sp/>of<sp/>these<sp/>variables<sp/>to<sp/>be<sp/>initialised<sp/>before<sp/>the<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::NuPsolutionV3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mNu1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mNu2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>phi1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>phi2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>nsol1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>nsol2)<sp/>{</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pv1,<sp/>Pv2<sp/>:<sp/>visible<sp/>tau<sp/>decay<sp/>product<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pn1<sp/>Pn2<sp/>:<sp/>neutrino<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>phi1,<sp/>phi2<sp/>:<sp/>neutrino<sp/>azymutal<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PTmiss2=PTmissy<sp/>Cos[phi2]<sp/>-<sp/>PTmissx<sp/>Sin[phi2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PTmiss2cscdphi=PTmiss2/Sin[phi1-phi2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pv1proj=Pv1x<sp/>Cos[phi1]<sp/>+<sp/>Pv1y<sp/>Sin[phi1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>M2noma1=Mtau^2-Mv1^2-Mn1^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ETv1^2=Ev1^2-Pv1z^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//discriminant<sp/>:<sp/>16<sp/>Ev1^2<sp/>(M2noma1^2<sp/>+<sp/>4<sp/>M2noma1<sp/>PTmiss2cscdphi<sp/>Pv1proj<sp/>-<sp/><sp/>4<sp/>(ETv1^2<sp/>(Mn1^2<sp/>+<sp/>PTmiss2cscdphi^2)<sp/>-<sp/>PTmiss2cscdphi^2<sp/>Pv1proj^2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>solutions<sp/>for<sp/>epsilon<sp/>=<sp/>+/-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Pn1z=(1/(2<sp/>ETv1^2))(epsilon<sp/>Ev1<sp/>Sqrt[<sp/>M2noma1^2<sp/>+<sp/>4<sp/>M2noma1<sp/>PTmiss2cscdphi<sp/>Pv1proj<sp/>-<sp/>4<sp/>(ETv1^2<sp/>(Mn1^2<sp/>+<sp/>qPTmiss2cscdphi^2)<sp/>-<sp/>PTmiss2cscdphi^2<sp/>Pv1proj^2)]<sp/>+<sp/>M2noma1<sp/>Pv1z<sp/>+<sp/>2<sp/>PTmiss2cscdphi<sp/>Pv1proj<sp/>Pv1z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>conditions:<sp/><sp/>M2noma1<sp/>+<sp/>2<sp/>PTmiss2cscdphi<sp/>Pv1proj<sp/>+<sp/>2<sp/>Pn1z<sp/>Pv1z<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PTn1<sp/>-&gt;<sp/>PTmiss2<sp/>Csc[phi1<sp/>-<sp/>phi2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>initialisation<sp/>precompute<sp/>some<sp/>quantities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>solution_code=0;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>with<sp/>no<sp/>solution,<sp/>1<sp/>with<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/>nsol1=0;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/>nsol2=0;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Variables<sp/>used<sp/>to<sp/>test<sp/>PTn1<sp/>and<sp/>PTn2<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>pTmissx=m_MEtX;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>pTmissy=m_MEtY;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/>fastSinCos(phi2,m_sinPhi2,m_cosPhi2);</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pTmiss2=pTmissy*m_cosPhi2<sp/>-<sp/>pTmissx*m_sinPhi2;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dPhiSign=0;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/>dPhiSign=<sp/>fixPhiRange(phi1-phi2)&gt;0<sp/>?<sp/>+1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>PTn1<sp/>and<sp/>PTn2<sp/>&gt;<sp/>0.<sp/>Then<sp/>MET<sp/>vector<sp/>is<sp/>between<sp/>the<sp/>two<sp/>neutrino<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pTmiss2*dPhiSign<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_testptn1;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/>fastSinCos(phi1,m_sinPhi1,m_cosPhi1);</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pTmiss1=pTmissy*m_cosPhi1<sp/>-<sp/>pTmissx*m_sinPhi1;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pTmiss1*(-dPhiSign)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_testptn2;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Variables<sp/>used<sp/>to<sp/>calculate<sp/>discri1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2Vis1=m_tauVec1M*m_tauVec1M;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/>m_ET2v1=std::pow(m_tauVec1E,2)-std::pow(m_tauVec1Pz,2);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/>m_m2Nu1=mNu1*mNu1;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2noma1=m_mTau2-m_m2Nu1-m2Vis1;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m4noma1=m2noma1*m2noma1;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pv1proj=m_tauVec1Px<sp/>*m_cosPhi1<sp/>+<sp/>m_tauVec1Py<sp/>*m_sinPhi1;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2v1proj=std::pow(pv1proj,2);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sinDPhi2=m_cosPhi2*m_sinPhi1-m_sinPhi2*m_cosPhi1;<sp/></highlight><highlight class="comment">//<sp/>sin(Phi1-Phi2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pTmiss2CscDPhi=pTmiss2/sinDPhi2;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pTn1=pTmiss2CscDPhi;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pT2miss2CscDPhi=pTmiss2CscDPhi*pTmiss2CscDPhi;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_NUPSOLV3</highlight></codeline>
<codeline lineno="2401"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin2DPhi2=sinDPhi2*sinDPhi2;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2403"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>on<sp/>discri1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>discri1=<sp/>m4noma1<sp/>+<sp/>4*m2noma1*pTmiss2CscDPhi*pv1proj<sp/>-<sp/>4*(<sp/>m_ET2v1*(m_m2Nu1<sp/>+<sp/>pT2miss2CscDPhi)<sp/>-<sp/>(pT2miss2CscDPhi*p2v1proj)<sp/>);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(discri1&lt;0)<sp/></highlight><highlight class="comment">//<sp/>discriminant<sp/>negative<sp/>-&gt;<sp/>no<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_testdiscri1;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Variables<sp/>used<sp/>to<sp/>calculate<sp/>discri2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2Vis2=m_tauVec2M*m_tauVec2M;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/>m_ET2v2=std::pow(m_tauVec2E,2)-std::pow(m_tauVec2Pz,2);</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/>m_m2Nu2=mNu2*mNu2;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2noma2=m_mTau2-m_m2Nu2-m2Vis2;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m4noma2=m2noma2*m2noma2;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pv2proj=m_tauVec2Px<sp/>*m_cosPhi2<sp/>+<sp/>m_tauVec2Py<sp/>*m_sinPhi2;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2v2proj=std::pow(pv2proj,2);</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sinDPhi1=-sinDPhi2;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pTmiss1CscDPhi=pTmiss1/sinDPhi1;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pTn2=pTmiss1CscDPhi;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pT2miss1CscDPhi=pTmiss1CscDPhi*pTmiss1CscDPhi;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_NUPSOLV3</highlight></codeline>
<codeline lineno="2426"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin2DPhi1=sinDPhi1*sinDPhi1;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2428"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>discri2=<sp/>m4noma2<sp/>+<sp/>4*<sp/>m2noma2*<sp/>pTmiss1CscDPhi*<sp/>pv2proj<sp/>-<sp/>4*<sp/>(m_ET2v2<sp/>*<sp/>(m_m2Nu2<sp/>+<sp/>pT2miss1CscDPhi)<sp/>-<sp/>(pT2miss1CscDPhi<sp/>*<sp/>p2v2proj)<sp/>);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(discri2&lt;0)<sp/></highlight><highlight class="comment">//<sp/>discriminant<sp/>negative<sp/>-&gt;<sp/>no<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_testdiscri2;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>be<sp/>done<sp/>only<sp/>once<sp/>we<sp/>know<sp/>there<sp/>are<sp/>solutions<sp/>for<sp/>nu2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/>m_E2v1<sp/>=<sp/>m_tauVec1Pz<sp/>*<sp/>m_tauVec1Pz<sp/>+<sp/>m_ET2v1;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/>m_Ev1<sp/>=<sp/>sqrt(m_E2v1);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USEAPPROXSOLUTION</highlight></codeline>
<codeline lineno="2441"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqdiscri1=sqrt(discri1);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first1=(m2noma1*m_tauVec1Pz<sp/>+<sp/>2*pTmiss2CscDPhi*pv1proj*m_tauVec1Pz)<sp/>/<sp/>(2*m_ET2v1);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>second1=sqdiscri1*m_Ev1/(<sp/>2*m_ET2v1<sp/>);</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pn1Z=first1+second1;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m2noma1<sp/>+<sp/>2<sp/>*<sp/>pTmiss2CscDPhi<sp/>*<sp/>pv1proj<sp/>+<sp/>2<sp/>*<sp/>pn1Z<sp/>*<sp/>m_tauVec1Pz<sp/>&gt;0)<sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>for<sp/>solution<sp/>to<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nuvecsol1[nsol1].SetPxPyPzE(pTn1<sp/>*<sp/>m_cosPhi1,<sp/>pTn1<sp/>*<sp/>m_sinPhi1,<sp/>pn1Z,<sp/>sqrt(std::pow(pTn1,2)<sp/>+<sp/>std::pow(pn1Z,2)<sp/>+<sp/>m_m2Nu1));</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_NUPSOLV3</highlight></codeline>
<codeline lineno="2454"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/*----------<sp/>Solution<sp/>Neutrino<sp/>1<sp/>---------*/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;First<sp/>solution&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau1plus=(<sp/>nuvecsol1[nsol1]+m_tauVec1<sp/>).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mtau1+<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau1plus<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif=-m4noma1-4*m2noma1*pTmiss2CscDPhi*pv1proj+4*(m_E2v1*(m_m2Nu1+std::pow(pTmiss2CscDPhi,2))-std::pow(pTmiss2CscDPhi,2)*p2v1proj)-4*pn1Z*(m2noma1+2*pTmiss2CscDPhi*pv1proj)*m_tauVec1Pz+4*std::pow(pn1Z,2)*(std::pow(m_Ev1,2)-std::pow(m_tauVec1Pz,2));</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif2=4*m_E2v1*(m_m2Nu1+std::pow(pn1Z,2)+std::pow(pTmiss2,2)/sin2DPhi2)<sp/>-<sp/>std::pow(m_mTau2-m_m2Nu1-m2Vis1+2*pn1Z*m_tauVec1Pz+2*pTmiss2*pv1proj/sinDPhi2,2);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>earlier<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif3=m_m2Nu1+m2Vis1+2*m_Ev1*sqrt(m_m2Nu1+pn1Z*pn1Z+pTmiss2*pTmiss2/sin2DPhi2)<sp/>-<sp/>(m_mTau2+2*pn1Z*m_tauVec1Pz+2*pTmiss2*pv1proj/sinDPhi2);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>at<sp/>the<sp/>begining<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif3<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2taueq1c<sp/>=<sp/>-m4noma1<sp/>-<sp/>4*m2noma1*pTmiss2CscDPhi*pv1proj<sp/>+<sp/>4*(std::pow(m_Ev1,2)*(m_m2Nu1<sp/>+<sp/>std::pow(pTmiss2CscDPhi,2))<sp/>-<sp/>std::pow(pTmiss2CscDPhi,2)*p2v1proj)<sp/>-<sp/>4*pn1Z*(m2noma1<sp/>+<sp/>2*pTmiss2CscDPhi*pv1proj)*m_tauVec1Pz<sp/>+<sp/>4*std::pow(pn1Z,2)*(std::pow(m_Ev1,2)<sp/>-<sp/>std::pow(m_tauVec1Pz,2));</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>m2taueq1c<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2taueq1c<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Valeurs<sp/>intermediaires&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Discri<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>discri1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sqDiscri<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sqdiscri1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pv1x<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1Px<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pv1y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1Py<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pv1z<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1Pz<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mv1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sqrt(m2Vis1)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M2v1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2Vis1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTmissx<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTmissx<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTmissy<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTmissy<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_MNu1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mNu1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_M2Nu1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_m2Nu1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Ev1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Ev1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ETv1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sqrt(m_ET2v1)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pv1proj<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pv1proj<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M2noma1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2noma1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTn1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTn1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2490"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nsol1;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/>pn1Z=first1-second1;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m2noma1<sp/>+<sp/>2<sp/>*<sp/>pTmiss2CscDPhi<sp/>*<sp/>pv1proj<sp/>+<sp/>2<sp/>*<sp/>pn1Z<sp/>*<sp/>m_tauVec1Pz<sp/>&gt;0)<sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>for<sp/>solution<sp/>to<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nuvecsol1[nsol1].SetPxPyPzE(pTn1<sp/>*<sp/>m_cosPhi1,<sp/>pTn1<sp/>*<sp/>m_sinPhi1,<sp/>pn1Z,sqrt(<sp/>std::pow(pTn1,2)<sp/>+<sp/>std::pow(pn1Z,2)<sp/>+<sp/>m_m2Nu1<sp/>))<sp/>;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_NUPSOLV3</highlight></codeline>
<codeline lineno="2502"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau1moins=(<sp/>nuvecsol1[nsol1]+m_tauVec1<sp/>).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M2tau1-<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau1moins<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif=-m4noma1<sp/>-<sp/>4*m2noma1*pTn1*pv1proj<sp/>+<sp/>4*(m_Ev1*m_Ev1*(m_m2Nu1+std::pow(pTn1,2))-std::pow(pTn1,2)*p2v1proj)-4*pn1Z*(m2noma1+2*pTn1*pv1proj)*m_tauVec1Pz+4*pn1Z*pn1Z*(m_Ev1*m_Ev1-m_tauVec1Pz*m_tauVec1Pz);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif2=4*m_Ev1*m_Ev1*(m_m2Nu1+pn1Z*pn1Z+(pTmiss2*pTmiss2/sin2DPhi2))<sp/>-<sp/>std::pow(m_mTau2-m_m2Nu1-m2Vis1+2*pn1Z*m_tauVec1Pz+2*pTmiss2*pv1proj/sinDPhi2,2);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>earlier<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif3=m_m2Nu1+m2Vis1+2*m_Ev1*sqrt(m_m2Nu1+pn1Z*pn1Z+(pTmiss2*pTmiss2/sin2DPhi2))<sp/>-<sp/>(m_mTau2+2*pn1Z*m_tauVec1Pz+(2*pTmiss2*pv1proj/sinDPhi2));</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>at<sp/>the<sp/>begining<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif3<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2taueq1c<sp/>=<sp/>-m4noma1<sp/>-<sp/>4*m2noma1*pTmiss2CscDPhi*pv1proj<sp/>+<sp/>4*(std::pow(m_Ev1,2)*(m_m2Nu1<sp/>+<sp/>std::pow(pTmiss2CscDPhi,2))<sp/>-<sp/>std::pow(pTmiss2CscDPhi,2)*p2v1proj)<sp/>-<sp/>4*pn1Z*(m2noma1<sp/>+<sp/>2*pTmiss2CscDPhi*pv1proj)*m_tauVec1Pz<sp/>+<sp/>4*std::pow(pn1Z,2)*(std::pow(m_Ev1,2)<sp/>-<sp/>std::pow(m_tauVec1Pz,2));</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>m2taueq1c<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2taueq1c<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pn1Z<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pn1Z<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2517"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nsol1;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nsol1==0)</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>else<sp/>of<sp/>USEAPPROXSOLUTION</highlight></codeline>
<codeline lineno="2527"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>discri1/2a<sp/>&lt;&lt;&lt;&lt;<sp/>1,<sp/>we<sp/>can<sp/>admit<sp/>that<sp/>solution<sp/>is<sp/>Pn1Z=first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first1=(m2noma1*m_tauVec1Pz<sp/>+<sp/>2*pTmiss2CscDPhi*pv1proj*m_tauVec1Pz)<sp/>/<sp/>(2*m_ET2v1);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pn1Z=first1;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m2noma1<sp/>+<sp/>2<sp/>*<sp/>pTmiss2CscDPhi<sp/>*<sp/>pv1proj<sp/>+<sp/>2<sp/>*<sp/>pn1Z<sp/>*<sp/>m_tauVec1Pz<sp/>&gt;0)<sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>for<sp/>solution<sp/>to<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nuvecsol1[nsol1].SetPxPyPzE(pTn1<sp/>*<sp/>m_cosPhi1,<sp/>pTn1<sp/>*<sp/>m_sinPhi1,<sp/>pn1Z,<sp/>sqrt(std::pow(pTn1,2)<sp/>+<sp/>std::pow(pn1Z,2)<sp/>+<sp/>m_m2Nu1));</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nsol1;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsol1==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>endif<sp/>of<sp/>USEAPPROXSOLUTION</highlight></codeline>
<codeline lineno="2541"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/>m_E2v2<sp/>=<sp/>m_tauVec2Pz<sp/>*<sp/>m_tauVec2Pz<sp/>+<sp/>m_ET2v2;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>m_Ev2<sp/>=<sp/>sqrt(m_E2v2);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USEAPPROXSOLUTION</highlight></codeline>
<codeline lineno="2545"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqdiscri2=sqrt(discri2);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first2=(m2noma2*m_tauVec2Pz<sp/>+<sp/>2*pTmiss1CscDPhi*pv2proj*m_tauVec2Pz)<sp/>/<sp/>(2*m_ET2v2);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>second2=sqdiscri2*m_Ev2/(2*m_ET2v2);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pn2Z=first2+second2;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m2noma2<sp/>+<sp/>2<sp/>*<sp/>pTmiss1CscDPhi<sp/>*<sp/>pv2proj<sp/>+<sp/>2<sp/>*<sp/>pn2Z<sp/>*<sp/>m_tauVec2Pz<sp/>&gt;0)<sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>for<sp/>solution<sp/>to<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nuvecsol2[nsol2].SetPxPyPzE(pTn2<sp/>*<sp/>m_cosPhi2,<sp/>pTn2<sp/>*<sp/>m_sinPhi2,<sp/>pn2Z,<sp/>sqrt(<sp/>std::pow(pTn2,2)<sp/>+<sp/>std::pow(pn2Z,2)<sp/>+<sp/>m_m2Nu2<sp/>));</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_NUPSOLV3</highlight></codeline>
<codeline lineno="2557"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/*----------<sp/>Solution<sp/>Neutrino<sp/>2<sp/>---------*/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;First<sp/>Solution&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau2plus=(<sp/>nuvecsol2[nsol2]+tau_vec2<sp/>).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mtau2+<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau2plus<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_MNu2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mNu2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif=-m4noma2-4*m2noma2*pTn2*pv2proj+4*(m_Ev2*m_Ev2*(m_m2Nu2+std::pow(pTn2,2))-std::pow(pTn2,2)*p2v2proj)-4*pn2Z*(m2noma2+2*pTn2*pv2proj)*m_tauVec2Pz+4*pn2Z*pn2Z*(m_Ev2*m_Ev2-m_tauVec2Pz*m_tauVec2Pz);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif2=4*m_Ev2*m_Ev2*(m_m2Nu2+pn2Z*pn2Z+pTmiss1*pTmiss1/sin2DPhi1)<sp/>-<sp/>std::pow(m_mTau2-m_m2Nu2-m2Vis2+2*pn2Z*m_tauVec2Pz+2*pTmiss1*pv2proj/sinDPhi1,2);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>earlier<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif3=m_m2Nu2+m2Vis2+2*m_Ev2*sqrt(m_m2Nu2+pn2Z*pn2Z+pTmiss1*pTmiss1/sin2DPhi1)<sp/>-<sp/>(m_mTau2+2*pn2Z*m_tauVec2Pz+2*pTmiss1*pv2proj/sinDPhi1);</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>at<sp/>the<sp/>begining<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif3<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2taueq2c<sp/>=<sp/>-m4noma2<sp/>-<sp/>4*m2noma2*pTmiss1CscDPhi*pv2proj<sp/>+<sp/>4*(std::pow(m_Ev2,2)*(m_m2Nu2<sp/>+<sp/>std::pow(pTmiss1CscDPhi,2))<sp/>-<sp/>std::pow(pTmiss1CscDPhi,2)*p2v2proj)<sp/>-<sp/>4*pn2Z*(m2noma2<sp/>+<sp/>2*pTmiss1CscDPhi*pv2proj)*m_tauVec2Pz<sp/>+<sp/>4*std::pow(pn2Z,2)*(std::pow(m_Ev2,2)<sp/>-<sp/>std::pow(m_tauVec2Pz,2));</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>m2taueq2c<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2taueq2c<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2576"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nsol2;</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/>pn2Z=first2-second2;;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m2noma2<sp/>+<sp/>2*pTmiss1CscDPhi*pv2proj<sp/>+<sp/>2*pn2Z*m_tauVec2Pz<sp/>&gt;0)<sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>for<sp/>solution<sp/>to<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nuvecsol2[nsol2].SetPxPyPzE(pTn2<sp/>*<sp/>m_cosPhi2,<sp/>pTn2<sp/>*<sp/>m_sinPhi2,<sp/>pn2Z,sqrt(<sp/>std::pow(pTn2,2)<sp/>+<sp/>std::pow(pn2Z,2)<sp/>+<sp/>m_m2Nu2<sp/>));</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_NUPSOLV3</highlight></codeline>
<codeline lineno="2587"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Second<sp/>Solution&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau2moins=(<sp/>nuvecsol2[nsol2]+tau_vec2<sp/>).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;M2tau2-<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau2moins<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_MNu2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mNu2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif=-m4noma2-4*m2noma2*pTn2*pv2proj+4*(m_Ev2*m_Ev2*(m_m2Nu2+std::pow(pTn2,2))-std::pow(pTn2,2)*p2v2proj)-4*pn2Z*(m2noma2+2*pTn2*pv2proj)*m_tauVec2Pz+4*pn2Z*pn2Z*(m_Ev2*m_Ev2-m_tauVec2Pz*m_tauVec2Pz);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif2=4*m_Ev2*m_Ev2*(m_m2Nu2+pn2Z*pn2Z+pTmiss1*pTmiss1/sin2DPhi1)<sp/>-<sp/>std::pow(m_mTau2-m_m2Nu2-m2Vis2+2*pn2Z*m_tauVec2Pz+2*pTmiss1*pv2proj/sinDPhi1,2);</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>earlier<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verif3=m_m2Nu2+m2Vis2+2*m_Ev2*sqrt(m_m2Nu2+pn2Z*pn2Z+pTmiss1*pTmiss1/sin2DPhi1)<sp/>-<sp/>(m_mTau2+2*pn2Z*m_tauVec2Pz+2*pTmiss1*pv2proj/sinDPhi1);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>if<sp/>null<sp/>at<sp/>the<sp/>begining<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>verif3<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2taueq2c<sp/>=<sp/>-m4noma2<sp/>-<sp/>4*m2noma2*pTmiss1CscDPhi*pv2proj<sp/>+<sp/>4*(std::pow(m_Ev2,2)*(m_m2Nu2<sp/>+<sp/>std::pow(pTmiss1CscDPhi,2))<sp/>-<sp/>std::pow(pTmiss1CscDPhi,2)*p2v2proj)<sp/>-<sp/>4*pn2Z*(m2noma2<sp/>+<sp/>2*pTmiss1CscDPhi*pv2proj)*m_tauVec2Pz<sp/>+<sp/>4*std::pow(pn2Z,2)*(std::pow(m_Ev2,2)<sp/>-<sp/>std::pow(m_tauVec2Pz,2));</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>m2taueq2c<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2taueq2c<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2604"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nsol2;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nsol2==0)</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>else<sp/>of<sp/>ifndef<sp/>USEAPPROXSOLUTION</highlight></codeline>
<codeline lineno="2614"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>discri2<sp/>&lt;&lt;&lt;&lt;<sp/>1,<sp/>we<sp/>can<sp/>admit<sp/>that<sp/>solution<sp/>is<sp/>Pn2Z=first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first2=(m2noma2*m_tauVec2Pz<sp/>+<sp/>2*pTmiss1CscDPhi*pv2proj*m_tauVec2Pz)<sp/>/<sp/>(2*m_ET2v2);</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pn2Z=first2;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m2noma2<sp/>+<sp/>2<sp/>*<sp/>pTmiss1CscDPhi<sp/>*<sp/>pv2proj<sp/>+<sp/>2<sp/>*<sp/>pn2Z<sp/>*<sp/>m_tauVec2Pz<sp/>&gt;0)<sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>for<sp/>solution<sp/>to<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nuvecsol2[nsol2].SetPxPyPzE(pTn2<sp/>*<sp/>m_cosPhi2,<sp/>pTn2<sp/>*<sp/>m_sinPhi2,<sp/>pn2Z,<sp/>sqrt(<sp/>std::pow(pTn2,2)<sp/>+<sp/>std::pow(pn2Z,2)<sp/>+<sp/>m_m2Nu2<sp/>));</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nsol2;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nsol2==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>end<sp/>else<sp/>ifndef<sp/>USEAPPROXSOLUTION</highlight></codeline>
<codeline lineno="2627"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Verification<sp/>if<sp/>solution<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/>solution_code=1;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/>++m_iterNuPV3;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>check<sp/>solutions<sp/>from<sp/>time<sp/>to<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iterNuPV3<sp/>%<sp/>1000<sp/>==1)</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pnux<sp/>=<sp/>nuvecsol1[0].Px()<sp/>+<sp/>nuvecsol2[0].Px();</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pnuy<sp/>=<sp/>nuvecsol1[0].Py()<sp/>+<sp/>nuvecsol2[0].Py();</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau1plus=(<sp/>nuvecsol1[0]+m_tauVec1<sp/>).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau1moins=(<sp/>nuvecsol1[1]+m_tauVec1<sp/>).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau2plus=(<sp/>nuvecsol2[0]+m_tauVec2<sp/>).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau2moins=(<sp/>nuvecsol2[1]+m_tauVec2<sp/>).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_NUPSOLV3</highlight></codeline>
<codeline lineno="2644"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/*----------<sp/>Solution<sp/>Neutrino<sp/>1<sp/>---------*/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout.precision(16);</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTn1<sp/>*<sp/>cos(Phi)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTn1*m_cosPhi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTn1<sp/>*<sp/>sin(Phi)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTn1*m_sinPhi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cos(Phi1)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_cosPhi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sin(Phi1)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sinPhi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTmiss2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTmiss2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTmiss2CscDPhi<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTmiss2CscDPhi<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FIRST<sp/>SOLUTION&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pn1Z_1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>first1+second1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SECOND<sp/>SOLUTION&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pn1Z_2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>first1-second1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Approx<sp/>sol<sp/>-b/2a<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>first1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/*----------<sp/>Solution<sp/>Neutrino<sp/>2<sp/>---------*/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTn2<sp/>*<sp/>cos(Phi)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTn2*m_cosPhi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTn2<sp/>*<sp/>sin(Phi)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTn2*m_sinPhi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cos(Phi2)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_cosPhi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sin(Phi2)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sinPhi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Phi2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTmiss1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTmiss1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTmiss1CscDPhi<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTmiss1CscDPhi<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FIRST<sp/>SOLUTION&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pn2Z_1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>first2+second2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SECOND<sp/>SOLUTION&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Pn2Z_2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>first2-second2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Approx<sp/>sol<sp/>-b/2a<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>first2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TESTS<sp/>IF<sp/>SOL<sp/>OK&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pnux<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pnux<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pnuy<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pnuy<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTmissx<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTmissx<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PTmissy<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pTmissy<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pnux<sp/>-<sp/>Met.X<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pnux<sp/>-<sp/>met_vec.Px()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pnuy<sp/>-<sp/>Met.Y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pnuy<sp/>-<sp/>met_vec.Py()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mtau1+<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau1plus<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mtau1-<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau1moins<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mtau2+<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau2plus<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mtau2-<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau2moins<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>m_iterNuPV3<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2696"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(pnux<sp/>-<sp/>pTmissx)<sp/>&gt;<sp/>0.001<sp/>||<sp/>std::abs(pnuy<sp/>-<sp/>pTmissy)<sp/>&gt;<sp/>0.001)</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NuPsolutionV3<sp/>ERROR<sp/>Pnux-Met.X<sp/>or<sp/>Pnuy-Met.Y<sp/>&gt;<sp/>0.001<sp/>:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>pnux<sp/>-<sp/>pTmissx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pnuy<sp/>-<sp/>pTmissx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>solutions&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(mtau1plus<sp/>-<sp/>m_mTau)<sp/>&gt;<sp/>0.001<sp/>||<sp/>std::abs(mtau1moins<sp/>-<sp/>m_mTau)<sp/>&gt;<sp/>0.001<sp/>||<sp/>std::abs(mtau2plus<sp/>-<sp/>m_mTau)<sp/>&gt;<sp/>0.001<sp/>||<sp/>std::abs(mtau2moins<sp/>-<sp/>m_mTau)<sp/>&gt;<sp/>0.001)</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NuPsolutionV3<sp/>ERROR<sp/>tau<sp/>mass<sp/>not<sp/>recovered<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau1plus<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau1moins<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau2plus<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtau2moins<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::tauSigmaE(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tauVec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tauType<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="2716"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing<sp/>for<sp/>lepton<sp/>(note<sp/>that<sp/>one<sp/>could<sp/>easily<sp/>scan<sp/>electron<sp/>energy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tauType==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>trivial<sp/>function<sp/>to<sp/>get<sp/>started.<sp/>Need<sp/>proper<sp/>parameterisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>0.3*sqrt(tauVec.E());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TERSimpleSigma<sp/>returns<sp/>the<sp/>relative<sp/>sigma<sp/>on<sp/>pT.<sp/>While<sp/>we<sp/>need<sp/>the<sp/>absolute<sp/>error<sp/>on<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>pT<sp/>to<sp/>p=&gt;<sp/>sin(theta)<sp/>disappear<sp/>in<sp/>the<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>p<sp/>to<sp/>E<sp/>:<sp/>here<sp/>we<sp/>neglect<sp/>the<sp/>mass,<sp/>effect<sp/>should<sp/>be<sp/>very<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TERSimpleSigma(tauType,tauVec)*tauVec.E();</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2725"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy=0.*tauVec.E()*tauType;<sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1+dummy;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2728"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>solution<sp/>for<sp/>Lepton<sp/>Flavor<sp/>Violating<sp/>X-&gt;lep+tau<sp/>studies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::NuPsolutionLFV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector2<sp/>&amp;<sp/>met_vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tau,</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>m_nu,<sp/>std::vector&lt;TLorentzVector&gt;<sp/>&amp;nu_vec)<sp/>{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>solution_code=0;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>with<sp/>no<sp/>solution,<sp/>1<sp/>with<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/>nu_vec.clear();</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>nu(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>nu2(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/>nu.SetXYZM(met_vec.Px(),met_vec.Py(),0.0,m_nu);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/>nu2.SetXYZM(met_vec.Px(),met_vec.Py(),0.0,m_nu);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Mtau<sp/>=<sp/>1.777;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>double<sp/>msq<sp/>=<sp/>(Mtau*Mtau-tau.M()*tau.M())/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>msq<sp/>=<sp/>(Mtau*Mtau-tau.M()*tau.M()-m_nu*m_nu)/2;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>take<sp/>into<sp/>account<sp/>the<sp/>fact<sp/>that<sp/>2-nu<sp/>systema<sp/>has<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma<sp/>=<sp/>nu.Px()*nu.Px()+nu.Py()*nu.Py();</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta<sp/>=<sp/>tau.Px()*nu.Px()<sp/>+<sp/>tau.Py()*nu.Py()<sp/>+<sp/>msq;</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>tau.E()*tau.E()<sp/>-<sp/>tau.Pz()*tau.Pz();</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>-2*tau.Pz()*beta;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>tau.E()*tau.E()*gamma-beta*beta;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((b*b-4*a*c)<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>solution<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>solution_code=2;</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pvz1<sp/>=<sp/>(-b+sqrt(b*b-4*a*c))/(2*a);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pvz2<sp/>=<sp/>(-b-sqrt(b*b-4*a*c))/(2*a);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/>nu.SetXYZM(met_vec.Px(),met_vec.Py(),pvz1,m_nu);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/>nu2.SetXYZM(met_vec.Px(),met_vec.Py(),pvz2,m_nu);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/>nu_vec.push_back(nu);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/>nu_vec.push_back(nu2);</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution_code;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>parameters<sp/>for<sp/>dTheta3D<sp/>pdf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::dTheta3Dparam(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>parInd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>tau_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>P_tau,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*par)<sp/>{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//tau_type<sp/>0:<sp/>l,<sp/>1:1-prong,<sp/>3:3-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(P_tau&lt;0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parInd==0)<sp/>{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011){</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(par[0]+par[1]*P_tau)*0.00125;</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::UPGRADE</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::LFVMMC2012){</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(par[0]+par[1]*P_tau+par[2]*pow(P_tau,2)+par[3]*pow(P_tau,3)+par[4]*pow(P_tau,4))*0.00125;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>parInd==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011){</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>par[0]*(exp(-par[1]*P_tau)+par[2]/P_tau)+par[3];</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::UPGRADE</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::LFVMMC2012){</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>par[0]*(exp(-par[1]*P_tau)+par[2]/P_tau)+par[3]+par[4]*P_tau;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>par[0]*(exp(-par[1]*sqrt(P_tau))+par[2]/P_tau)+par[3]+par[4]*P_tau;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight><highlight class="comment">//SpeedUp<sp/>static<sp/>instantation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight><highlight class="comment">//<sp/>first<sp/>index<sp/>is<sp/>the<sp/>calibration<sp/>set<sp/>:<sp/>0:<sp/>MMC2011,<sp/>1:MMC2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>second<sp/>index<sp/>is<sp/>the<sp/>decay<sp/>0<sp/>:<sp/>lepton,<sp/>1<sp/>:<sp/>1<sp/>prong,<sp/>2<sp/>3<sp/>prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::fit_param[2][3][6][5];</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight><highlight class="comment">//<sp/>first<sp/>parameter:<sp/>0-<sp/>for<sp/>1-prong;<sp/>1-<sp/>for<sp/>3-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::ter_sigma_par[2][10][3];</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>dTheta3D<sp/>probability<sp/>based<sp/>on<sp/>ATLAS<sp/>parameterization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::dTheta3d_probabilityFast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>tau_type,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>dTheta3d,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>P_tau)<sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0E-10;</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau_code;<sp/><sp/></highlight><highlight class="comment">//<sp/>0:<sp/>l,<sp/>1:1-prong,<sp/>2:3-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type&lt;3)<sp/>{</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/>tau_code=tau_type;</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==3)<sp/>{</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/>tau_code=2;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;<sp/>WARNING<sp/>in<sp/>MissingMassCalculator::dTheta3d_probabilityFast()<sp/>&lt;&lt;&lt;&lt;&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;.....<sp/>wrong<sp/>tau_type=&quot;</highlight><highlight class="normal">&lt;&lt;tau_type&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;.....<sp/>returning<sp/>prob=&quot;</highlight><highlight class="normal">&lt;&lt;prob&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;____________________________________________________________&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>myDelThetaParam[6];</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;6;++i)</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2012)<sp/>myDelThetaParam[i]=dTheta3Dparam(i,tau_code,P_tau,fit_param[m_MMCCalibrationSet][tau_code][i]);</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_MMCCalibrationSet==MMCCalibrationSet::UPGRADE</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::LFVMMC2012</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS)</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myDelThetaParam[i]=dTheta3Dparam(i,tau_code,P_tau,fit_param[MMCCalibrationSet::MMC2012][tau_code][i]);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dTheta3dVal=dTheta3d;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tau_type==0)<sp/>prob=myDelThetaLepFunc(&amp;dTheta3dVal,<sp/><sp/>myDelThetaParam);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>prob=myDelThetaHadFunc(&amp;dTheta3dVal,<sp/><sp/>myDelThetaParam);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fUseVerbose==1<sp/>&amp;&amp;<sp/>(prob&gt;1.0<sp/>||<sp/>prob&lt;0.0))</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;&gt;&gt;&gt;&gt;<sp/>WARNING<sp/>in<sp/>MissingMassCalculator::dTheta3d_probabilityFast()<sp/>&lt;&lt;&lt;&lt;&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;.....<sp/>wrong<sp/>probability=&quot;</highlight><highlight class="normal">&lt;&lt;prob&lt;&lt;std::endl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;.....<sp/>debugging:<sp/>tau_type=&quot;</highlight><highlight class="normal">&lt;&lt;tau_type&lt;&lt;</highlight><highlight class="stringliteral">&quot;dTheta3d=&quot;</highlight><highlight class="normal">&lt;&lt;dTheta3d&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>P_tau=&quot;</highlight><highlight class="normal">&lt;&lt;P_tau&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;____________________________________________________________&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=1.0E-10;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::MetProbability(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>met1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>met2,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>MetSigma1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>MetSigma2)<sp/>{</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>metprob;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MetSigma1&gt;1.0<sp/>&amp;&amp;<sp/>MetSigma2&gt;1.0)<sp/></highlight><highlight class="comment">//<sp/>it<sp/>doesn&apos;t<sp/>make<sp/>sense<sp/>if<sp/>MET<sp/>resolution<sp/>sigma<sp/>is<sp/>&lt;1<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SpeedUp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metprob=exp(-0.5*(met1*met1/(MetSigma1*MetSigma1)+met2*met2/(MetSigma2*MetSigma2)))/(MetSigma1*MetSigma2*2*TMath::Pi());</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Warning!!!<sp/>MissingMassCalculator::MetProbability:<sp/>either<sp/>MetSigma1<sp/>or<sp/>MetSigma2<sp/>are<sp/>&lt;1<sp/>GeV---<sp/>too<sp/>low,<sp/>returning<sp/>prob=1&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metprob=1.;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metprob;</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::MHtProbability(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>d_mhtX,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>d_mhtY,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mht,</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>trueMetGuess,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mht_offset)<sp/>{</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>param<sp/>except<sp/>trueMetguess<sp/>unchanged<sp/>in<sp/>one<sp/>event.<sp/>So<sp/>can<sp/>cache<sp/>agaisnt<sp/>this<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//disable<sp/>cache<sp/>if<sp/>(trueMetGuess==trueMetGuesscache)<sp/>return<sp/>mhtprobcache;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mhtprob;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(MHtSigma1&gt;0.0<sp/>&amp;&amp;<sp/>MHtSigma2&gt;0.0<sp/>&amp;&amp;<sp/>MHtGaussFr&gt;0.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="2894"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>debugThisIteration<sp/>MHtProbability<sp/>inputs<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>d_mhtx:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d_mhtX</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>d_mhty:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d_mhtY</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>mht:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mht</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>truemetguess:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>trueMetGuess</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>offset:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mht_offset</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2904"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>RANDOMNONUNIF<sp/>MET<sp/>already<sp/>follow<sp/>the<sp/>double<sp/>gaussian<sp/>parameterisation.<sp/>So<sp/>weight<sp/>should<sp/>not<sp/>include<sp/>it<sp/>to<sp/>avoid<sp/>double<sp/>counting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>formula<sp/>to<sp/>be<sp/>checked<sp/>IMHO<sp/>the<sp/>two<sp/>gaussian<sp/>should<sp/>be<sp/>correlated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>WALKSTRATEGY==WalkStrategy::RANDOMNONUNIF<sp/>){</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/>mhtprob=1.;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/>mhtprob=exp(-0.5*pow(d_mhtX/preparedInput.MHtSigma1,2))+preparedInput.MHtGaussFr*exp(-0.5*pow(d_mhtX/preparedInput.MHtSigma2,2));</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/>mhtprob*=(exp(-0.5*pow(d_mhtY/preparedInput.MHtSigma1,2))+preparedInput.MHtGaussFr*exp(-0.5*pow(d_mhtY/preparedInput.MHtSigma2,2)));</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_arg=(mht-trueMetGuess-mht_offset)/preparedInput.MHtSigma1;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/>mhtprob*=exp(-0.25*pow(_arg,2));<sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>sqrt(2)*sigma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mhtprob;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::MHtProbabilityHH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>d_mhtX,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>d_mhtY,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mht,</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>trueMetGuess,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mht_offset)<sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>updated<sp/>for<sp/>final<sp/>cuts,<sp/>May<sp/>21<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>merged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/>prob=prob*(0.0256*TMath::Gaus(d_mhtX,0.0,preparedInput.MHtSigma1)+0.01754*TMath::Gaus(d_mhtX,0.0,preparedInput.MHtSigma2));</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/>prob=prob*(0.0256*TMath::Gaus(d_mhtY,0.0,preparedInput.MHtSigma1)+0.01754*TMath::Gaus(d_mhtY,0.0,preparedInput.MHtSigma2));</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_arg=(mht-trueMetGuess-mht_offset)/5.7;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>sigma<sp/>is<sp/>different<sp/>from<sp/>MHtSigma1;<sp/>actually<sp/>it<sp/>depends<sp/>on<sp/>dPhi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/>prob=prob*exp(-0.5*pow(_arg,2))/(5.7*sqrt(2.0*TMath::Pi()));<sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>sigma<sp/>from<sp/>above<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="2932"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mhtprobabilityhh<sp/>d_mhtx=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d_mhtX<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dMmhty=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>d_mhtY<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>mht=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>mht<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;truemetguess=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>trueMetGuess<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mht_offset=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mht_offset<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mhtprobabilityhh<sp/>mhtsigma1=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.MHtSigma1<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;mhtsigma2=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>preparedInput.MHtSigma2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mhtprobabilityhh<sp/>prob=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prob<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2938"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight><highlight class="comment">//--------------<sp/>simple<sp/>Gaussian<sp/>resolution,<sp/>assuming<sp/>perfect<sp/>TES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>tau_type=1<sp/>or<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vec--<sp/>4-vec<sp/>of<sp/>input<sp/>detector<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pt_scan<sp/>value<sp/>of<sp/>tau<sp/>Pt<sp/>from<sp/>TER<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::TERProbabilitySimple(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vec,</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>Pt_scan)<sp/>{</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>WARNING<sp/>should<sp/>not<sp/>be<sp/>used<sp/>now<sp/>that<sp/>TERSimpleSigma<sp/>returns<sp/>the<sp/>absolute<sp/>sigma<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0;</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sq2pi=sqrt(2*pi);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==0)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>WARNING<sp/>in<sp/>TERProbabilitySimple:<sp/>TER<sp/>probability<sp/>is<sp/>requested<sp/>for<sp/>a<sp/>lepton,<sp/>returning<sp/>prob=1.0&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ter_sigma=TERSimpleSigma(tau_type,vec);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x=Pt_scan/vec.Pt()-1.0;</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/>prob=0.001*exp(-0.5*std::pow(x/ter_sigma,2))/(ter_sigma*sq2pi);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>added<sp/>an<sp/>arbitrary<sp/>normalization<sp/>factor<sp/>0.001<sp/>just<sp/>to<sp/>make<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>differential<sp/>probability<sp/>smaller<sp/>than<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight><highlight class="comment">//--------------<sp/>Returns<sp/>sigma<sp/>for<sp/>simple<sp/>Gaussian<sp/>resolution,<sp/>assuming<sp/>perfect<sp/>TES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>tau_type=1<sp/>or<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vec--<sp/>4-vec<sp/>of<sp/>input<sp/>detector<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pt_scan<sp/>value<sp/>of<sp/>tau<sp/>Pt<sp/>from<sp/>TER<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::TERSimpleSigma(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta_bin=(int)(fabs(vec.Eta())/0.25);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eta_bin&gt;9)<sp/>eta_bin=9;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==0)</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>WARNING<sp/>in<sp/>TERSimpleSigma:<sp/>TER<sp/>probability<sp/>is<sp/>requested<sp/>for<sp/>a<sp/>lepton,<sp/>returning<sp/>sigma=0.00001&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.00001;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_ind=tau_type/3;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ter_sigma=ter_sigma_par[type_ind][eta_bin][0]/sqrt(vec.Pt())+</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/>ter_sigma_par[type_ind][eta_bin][1]+</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/>ter_sigma_par[type_ind][eta_bin][2]/vec.Pt();</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ter_sigma;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::mEtAndTauProbability()</highlight></codeline>
<codeline lineno="2987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>tau_type1<sp/>=<sp/>preparedInput.type_visTau1;</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>tau_type2<sp/>=<sp/>preparedInput.type_visTau2;</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>proba=1.;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>metprob;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>deltaMEt<sp/>is<sp/>the<sp/>difference<sp/>between<sp/>the<sp/>neutrino<sp/>sum<sp/>and<sp/>the<sp/>MEt<sp/>(or<sp/>-HT<sp/>if<sp/>useHT),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//corrected<sp/>possibly<sp/>from<sp/>tau<sp/>E<sp/>scanning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaMetX=m_metVec.X()-m_inputMEtX;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaMetY=m_metVec.Y()-m_inputMEtY;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>possibly<sp/>correct<sp/>for<sp/>subtract<sp/>tau<sp/>scanning<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="3001"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau1)<sp/>{</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaMetX+=m_tauVec1.X()-preparedInput.vistau1.X();</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaMetY+=m_tauVec1.Y()-preparedInput.vistau1.Y();</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau2)<sp/>{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaMetX+=m_tauVec2.X()-preparedInput.vistau2.X();</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaMetY+=m_tauVec2.Y()-preparedInput.vistau2.Y();</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3010"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>double<sp/>met_smearL=(deltaMetVec.X()*m_metCovPhiCos+deltaMetVec.Y()*m_metCovPhiSin;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>double<sp/>met_smearP=-deltaMetVec.X()*m_metCovPhiSin+deltaMetVec.Y()*m_metCovPhiCos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rotate<sp/>into<sp/>error<sp/>ellipse<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>met_smearL=deltaMetX*m_metCovPhiCos+deltaMetY*m_metCovPhiSin;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>met_smearP=-deltaMetX*m_metCovPhiSin+deltaMetY*m_metCovPhiCos;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.UseHT)</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tau_type1!=0<sp/>&amp;&amp;<sp/>tau_type2!=0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metprob=MHtProbabilityHH(met_smearL,met_smearP,m_inputMEtT,m_MEtT,m_HtOffset);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>had-had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metprob=MHtProbability(met_smearL,met_smearP,m_inputMEtT,m_MEtT,m_HtOffset);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>lep-had<sp/>Winter<sp/>2012<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/>metprob=MetProbability(met_smearL,met_smearP,preparedInput.METsigmaL,preparedInput.METsigmaP);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/>proba=metprob;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="3035"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sq2pi=sqrt(2*pi);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tau<sp/>proba.<sp/>To<sp/>be<sp/>optimised<sp/>for<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau1)<sp/>{</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau1prob=exp(-std::pow((m_tauVec1E-preparedInput.vistau1.E())/preparedInput.sigmaEtau1,2)/2.<sp/>)/sq2pi/preparedInput.sigmaEtau1;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>tau1prob=TERProbabilitySimple(tau_type1,preparedInput.vistau1,m_tauVec1.Pt());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>proba*=tau1prob;</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau2)<sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau2prob=exp(-std::pow((m_tauVec2E-preparedInput.vistau2.E())/preparedInput.sigmaEtau2,2)/2.<sp/>)/sq2pi/preparedInput.sigmaEtau2;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>tau2prob=TERProbabilitySimple(tau_type2,preparedInput.vistau2,m_tauVec2.Pt());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/>proba*=tau2prob;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3049"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proba;</highlight></codeline>
<codeline lineno="3051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight><highlight class="comment">//<sp/>standard<sp/>collinear<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>returns<sp/>code=0<sp/>if<sp/>collinear<sp/>approximation<sp/>can&apos;t<sp/>be<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>code=1<sp/>and<sp/>Mrec<sp/>if<sp/>collinear<sp/>approximation<sp/>was<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::StandardCollApprox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tau_vec1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tau_vec2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector2<sp/>&amp;<sp/>met_vec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;Mrec)<sp/>{</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code=0;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/>Mrec=0.0;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_nu1=0.0;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_nu2=0.0;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coll_code=NuPsolution(met_vec,tau_vec1.Theta(),tau_vec1.Phi(),tau_vec2.Theta(),tau_vec2.Phi(),P_nu1,P_nu2);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coll_code==1)</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>code=1;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>nu1(P_nu1*sin(tau_vec1.Theta())*cos(tau_vec1.Phi()),P_nu1*sin(tau_vec1.Theta())*sin(tau_vec1.Phi()),P_nu1*cos(tau_vec1.Theta()),P_nu1);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>nu2(P_nu2*sin(tau_vec2.Theta())*cos(tau_vec2.Phi()),P_nu2*sin(tau_vec2.Theta())*sin(tau_vec2.Phi()),P_nu2*cos(tau_vec2.Theta()),P_nu2);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Mrec=(nu1+nu2+tau_vec1+tau_vec2).<ref refid="d8/d55/structM" kindref="compound">M</ref>();</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="3072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sasha:<sp/>keep<sp/>this<sp/>for<sp/>now,<sp/>may<sp/>need<sp/>in<sp/>the<sp/>future</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3075"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>analytical<sp/>P(theta)-probability<sp/>for<sp/>given<sp/>tau-topology</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decayType==1<sp/>for<sp/>leptonic<sp/>decays<sp/>and<sp/>0<sp/>for<sp/>hadronic<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uses<sp/>product<sp/>of<sp/>probabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::AngularProbability(TLorentzVector<sp/>nu_vec,<sp/>TLorentzVector<sp/>vis_vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decayType)<sp/>{</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=0.0;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d55/structM" kindref="compound">M</ref>=1.777;</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angl=0.0;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="dc/dec/structP" kindref="compound">P</ref>=(vis_vec+nu_vec).P();</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V=P/sqrt(P*P+M*M);<sp/></highlight><highlight class="comment">//<sp/>tau<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dA=dRmax_tau/(2.0*Niter_fit1);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decayType==1)<sp/></highlight><highlight class="comment">//<sp/>leptonic<sp/>tau<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exact<sp/>formular<sp/>for<sp/>energy<sp/>probability<sp/>is<sp/>sqrt(1-V^2)/(2*V*p_0)*dE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_1=nu_vec.M();</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_2=vis_vec.M();</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_nu=(M*M+m_1*m_1-m_2*m_2)/(2.0*M);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E_nu&lt;=m_1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_nu=sqrt(pow(E_nu,2)-pow(m_1,2));</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob1=0.5*sqrt(1-V*V)/(P_nu*V);<sp/></highlight><highlight class="comment">//<sp/>energy<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>angl=Angle(vis_vec,vis_vec+nu_vec);<sp/></highlight><highlight class="comment">//<sp/>using<sp/>lepton<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det1=1.0-V*cos(angl+dA);</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det2=<sp/>(angl-dA)&gt;0.0<sp/>?<sp/>1.0-V*cos(angl-dA)<sp/>:<sp/>1.0-V;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob2=fabs(1.0/det1-1.0/det2)*(1.0-V*V)/(2.0*V);<sp/></highlight><highlight class="comment">//<sp/>using<sp/>massless<sp/>approximation<sp/>for<sp/>leptons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob1*prob2;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decayType==0)<sp/></highlight><highlight class="comment">//<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exact<sp/>formula<sp/>for<sp/>energy<sp/>probability<sp/>is<sp/>sqrt(1-V^2)/(2*V*p_0)*dE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>p_0<sp/>because<sp/>it&apos;s<sp/>a<sp/>contstant<sp/>for<sp/>a<sp/>given<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob1=0.5*sqrt(1-V*V)/V;<sp/></highlight><highlight class="comment">//<sp/>&quot;energy&quot;<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>angl=Angle(nu_vec,vis_vec+nu_vec);<sp/></highlight><highlight class="comment">//<sp/>using<sp/>neutrino<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det1=1.0-V*cos(angl+dA);</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det2=<sp/>(angl-dA)&gt;0.0<sp/>?<sp/>1.0-V*cos(angl-dA)<sp/>:<sp/>1.0-V;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob2=fabs(1.0/det1-1.0/det2)*(1.0-V*V)/(2.0*V);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob1*prob2;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="3115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight><highlight class="comment">//-----<sp/>checks<sp/>kinematics<sp/>of<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>1<sp/>if<sp/>kinematics<sp/>consistent<sp/>with<sp/>tau,<sp/>0<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::CheckSolutions(TLorentzVector<sp/>nu_vec,<sp/>TLorentzVector<sp/>vis_vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decayType)</highlight></codeline>
<codeline lineno="3120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>passcode=1;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M=1.777;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P=(vis_vec+nu_vec).P();</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V=P/sqrt(P*P+M*M);<sp/></highlight><highlight class="comment">//<sp/>tau<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decayType==0)<sp/></highlight><highlight class="comment">//<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=vis_vec.M();</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m&gt;M)<sp/>m=2.0*M-m;<sp/></highlight><highlight class="comment">//<sp/>artificial<sp/>hack:<sp/>visible<sp/>mass<sp/>can<sp/>be<sp/>larger<sp/>than<sp/>M<sp/>due<sp/>to<sp/>smearing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m&lt;=0.0)<sp/>m=0.0;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>not<sp/>happen,<sp/>but<sp/>if<sp/>it<sp/>does<sp/>things<sp/>are<sp/>already<sp/>screwed<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_nu=(M*M-m*m)/(2.0*M);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_vis=(M*M+m*m)/(2.0*M);</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_vis=sqrt(pow(E_vis,2)-m*m);</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Enu_lim[2];</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Enu_lim[0]=E_nu*sqrt((1.0-V)/(1.0+V));</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Enu_lim[1]=E_nu*sqrt((1.0+V)/(1.0-V));</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nu_vec.E()&lt;Enu_lim[0]<sp/>||<sp/>nu_vec.E()&gt;Enu_lim[1])</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>DEBUG:<sp/>MissingMassCalculator::CheckSolutions<sp/>---<sp/>neutrino<sp/>energy<sp/>outside<sp/>range<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Evis_lim[2];</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Evis_lim[0]=(E_vis-V*P_vis)/sqrt(1.0-V*V);</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Evis_lim[1]=(E_vis+V*P_vis)/sqrt(1.0-V*V);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vis_vec.E()&lt;Evis_lim[0]<sp/>||<sp/>vis_vec.E()&gt;Evis_lim[1])</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>DEBUG:<sp/>MissingMassCalculator::CheckSolutions<sp/>---<sp/>visTau<sp/>energy<sp/>outside<sp/>range<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decayType==1)<sp/></highlight><highlight class="comment">//<sp/>leptonic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nu_vec+vis_vec).M()&gt;M)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nu_vec+vis_vec).M()&lt;0.9*M)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1=nu_vec.M();</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2=vis_vec.M();</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m2&gt;M)<sp/>m2=2.0*M-m2;<sp/></highlight><highlight class="comment">//<sp/>artificial<sp/>hack:<sp/>visible<sp/>mass<sp/>can<sp/>be<sp/>larger<sp/>than<sp/>M<sp/>due<sp/>to<sp/>smearing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m2&lt;=0.0)<sp/>m2=0.0;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>not<sp/>happen,<sp/>but<sp/>if<sp/>it<sp/>does<sp/>things<sp/>are<sp/>already<sp/>screwed<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_nu=(M*M+m1*m1-m2*m2)/(2.0*M);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E_nu&lt;=m1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_nu=sqrt(pow(E_nu,2)-pow(m1,2));</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_vis=(M*M+m2*m2-m1*m1)/(2.0*M);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E_vis&lt;=m2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_vis=sqrt(pow(E_vis,2)-pow(m2,2));</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Enu_lim[2];</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Enu_lim[0]=(E_nu-V*P_nu)/sqrt(1.0-V*V);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Enu_lim[1]=(E_nu+V*P_nu)/sqrt(1.0-V*V);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nu_vec.E()&lt;Enu_lim[0]<sp/>||<sp/>nu_vec.E()&gt;Enu_lim[1])</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>DEBUG:<sp/>MissingMassCalculator::CheckSolutions<sp/>---<sp/>neutrino<sp/>energy<sp/>outside<sp/>range<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Evis_lim[2];</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Evis_lim[0]=(E_vis-V*P_vis)/sqrt(1.0-V*V);</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Evis_lim[1]=(E_vis+V*P_vis)/sqrt(1.0-V*V);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vis_vec.E()&lt;Evis_lim[0]<sp/>||<sp/>vis_vec.E()&gt;Evis_lim[1])</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>DEBUG:<sp/>MissingMassCalculator::CheckSolutions<sp/>---<sp/>visTau<sp/>energy<sp/>outside<sp/>range<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>passcode;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>Mnu<sp/>probability<sp/>according<sp/>pol6<sp/>parameterization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::MnuProbability(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mnu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>binsize)</highlight></codeline>
<codeline lineno="3187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm=4851900.0;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[7];</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/>p[0]=-288.6/norm;<sp/>p[1]=6.217E4/(2.0*norm);<sp/>p[2]=2.122E4/(3.0*norm);<sp/>p[3]=-9.067E4/(4.0*norm);</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/>p[4]=1.433E5/(5.0*norm);<sp/>p[5]=-1.229E5/(6.0*norm);<sp/>p[6]=3.434E4/(7.0*norm);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>int1=0.0;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>int2=0.0;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1=<sp/>mnu+0.5*binsize<sp/>&lt;<sp/>1.777-0.113<sp/>?<sp/>mnu+0.5*binsize<sp/>:<sp/>1.777-0.113;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2=<sp/>mnu-0.5*binsize<sp/>&gt;<sp/>0.0<sp/>?<sp/>mnu-0.5*binsize<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;7;<sp/>i++)</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int1=p[i]*pow(x1,i+1)+int1;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int2=p[i]*pow(x2,i+1)+int2;</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/>prob=int1-int2;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prob&lt;0.0)</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::MnuProbability:<sp/>negative<sp/>probability!!!<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prob&gt;1.0)</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::MnuProbability:<sp/>probability<sp/>&gt;<sp/>1!!!<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>Mnu<sp/>probability<sp/>according<sp/>pol6<sp/>parameterization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::MnuProbability(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mnu)</highlight></codeline>
<codeline lineno="3218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseMnuProbability==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm=4851900.0;</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[7];</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/>p[0]=-288.6;<sp/>p[1]=6.217E4;<sp/>p[2]=2.122E4;<sp/>p[3]=-9.067E4;</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/>p[4]=1.433E5;<sp/>p[5]=-1.229E5;<sp/>p[6]=3.434E4;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>int1=0.0;</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;7;<sp/>i++)</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int1+=p[i]*pow(mnu,i);</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/>prob=int1/norm;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prob&lt;0.0)</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::MnuProbability:<sp/>negative<sp/>probability!!!<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prob&gt;1.0)</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::MnuProbability:<sp/>probability<sp/>&gt;<sp/>1!!!<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="3242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::swapTLVPointers<sp/><sp/>(TLorentzVector<sp/>*<sp/>&amp;<sp/>p1,TLorentzVector<sp/>*<sp/>&amp;<sp/>p2){</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>*<sp/>ptmp;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/>ptmp=p1;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/>p1=p2;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/>p2=ptmp;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::Angle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vec1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vec2)<sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//SpeedUp<sp/>(both<sp/>are<sp/>equivalent<sp/>in<sp/>fact)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acos((vec1.Px()*vec2.Px()+vec1.Py()*vec2.Py()+vec1.Pz()*vec2.Pz())/(vec1.P()*vec2.P()));</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>vec1.Angle(vec2.Vect());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>probability<sp/>of<sp/>angle<sp/>between<sp/>two<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assuming<sp/>massless<sp/>tau&apos;s<sp/>for<sp/>now,<sp/>should<sp/>be<sp/>small<sp/>effect<sp/>for<sp/>M&gt;M_Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::ResonanceProbability(TLorentzVector<sp/>vec1,<sp/>TLorentzVector<sp/>vec2)<sp/>{</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>boson_P=(vec1+vec2).P();</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(boson_P==0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>boson_E=(vec1+vec2).E();</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>boson_V=0.0;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(boson_E&gt;0.0)<sp/>boson_V=boson_P/boson_E;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0E-10;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testMass=(vec1+vec2).M();</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1.777;<sp/></highlight><highlight class="comment">//<sp/>tau<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_tau=testMass/2.0;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_tau=sqrt(pow(E_tau,2)-m*m);</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Evis_lim[2];</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/>Evis_lim[0]=(E_tau-boson_V*P_tau)/sqrt(1.0-boson_V*boson_V);</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/>Evis_lim[1]=(E_tau+boson_V*P_tau)/sqrt(1.0-boson_V*boson_V);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec1.E()&lt;Evis_lim[0]<sp/>||<sp/>vec1.E()&gt;Evis_lim[1])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0E-20;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec2.E()&lt;Evis_lim[0]<sp/>||<sp/>vec2.E()&gt;Evis_lim[1])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0E-20;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob1=0.5*sqrt(1-boson_V*boson_V)/(P_tau*boson_V);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vec1.P()*vec2.P()&gt;0)</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta=acos((vec1.Px()*vec2.Px()+vec1.Py()*vec2.Py()+vec1.Pz()*vec2.Pz())/(vec1.P()*vec2.P()));</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(boson_V&gt;0.0<sp/>&amp;&amp;<sp/>boson_V&lt;1.0)</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(boson_V&lt;cos(theta/2))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0E-10;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num=(1.0-boson_V*boson_V)*cos(theta/2);</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom=4*boson_V*sin(theta/2)*sin(theta/2)*sqrt(boson_V*boson_V-cos(theta/2)*cos(theta/2));</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=num/denom;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(theta-TMath::Pi())&gt;0.0001)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0E-10;</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0E-10;</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/>prob=prob*prob1;</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prob&lt;1.0E-20)<sp/>prob=1.0E-20;</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>like<sp/>v9fast,<sp/>but<sp/>the<sp/>parameter<sp/>space<sp/>scanning<sp/>is<sp/>now<sp/>factorised<sp/>out,<sp/>to<sp/>allow<sp/>flexibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::DitauMassCalculatorV9walk(){</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsuccesses=0;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>OutputInfo.AveSolRMS=0;</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fit_code=0;<sp/></highlight><highlight class="comment">//<sp/>0==bad,<sp/>1==good</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/>ClearDitauStuff(fDitauStuffFit);</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/>ClearDitauStuff(fDitauStuffHisto);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/>OutputInfo.AveSolRMS=0.;</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/>fMfit_all-&gt;Reset();</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/>fMfit_allNoWeight-&gt;Reset();</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/>fPXfit1-&gt;Reset();</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/>fPYfit1-&gt;Reset();</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/>fPZfit1-&gt;Reset();</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/>fPXfit2-&gt;Reset();</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/>fPYfit2-&gt;Reset();</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/>fPZfit2-&gt;Reset();</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTITERATION</highlight></codeline>
<codeline lineno="3331"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>fPhi1-&gt;Reset();</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/>fPhi2-&gt;Reset();</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/>fMnu1-&gt;Reset();</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/>fMnu2-&gt;Reset();</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/>fMetx-&gt;Reset();</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/>fMety-&gt;Reset();</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3338"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTPROBA</highlight></codeline>
<codeline lineno="3339"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>fTheta3D-&gt;Reset();</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/>fTauProb-&gt;Reset();</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3342"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>prob_tmp=0.0;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//SpeedUp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/>TStopwatch<sp/>timer;</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSpeedStudy)<sp/>timer.Start();</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/>iter1=0;</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/>totalProbSum=0;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/>mtautauSum=0;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/>TVector2<sp/>deltamet_vec;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSpeedStudy)<sp/>timer.Start();</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//initialize<sp/>a<sp/>spacewalker,<sp/>which<sp/>walks<sp/>the<sp/>parameter<sp/>space<sp/>according<sp/>to<sp/>some<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/>SpaceWalkerInit();</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(SpaceWalkerWalk())<sp/>{</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="3362"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>debugThisIteration=(m_iter0==DEBUGTHISITERATION);<sp/></highlight><highlight class="comment">//<sp/>specify<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Now<sp/>debugging<sp/>interation<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_iter0<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3365"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paramOutsideRange=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nsol=0;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::GRID)<sp/>{</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!checkMEtInRange())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>simple<sp/>way<sp/>to<sp/>cut<sp/>corners<sp/>in<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>paramOutsideRange=!checkAllParamInRange();</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="3375"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>debugThisIteration<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>paramOutsideRange<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>paramOutsideRange<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3377"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMPITERATION</highlight></codeline>
<codeline lineno="3379"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>100<sp/>to<sp/>get<sp/>positive<sp/>values,<sp/>because<sp/>sort<sp/>is<sp/>confused<sp/>by<sp/>negative<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>int<sp/>dumpInt=100;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dumpInt=0;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DEBUGV9W<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_iter0</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Phi1+dumpInt</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Phi2+dumpInt</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m1<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_Mnu1+dumpInt</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m2<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_Mnu2+dumpInt</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eL<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_MEtL+dumpInt</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eP<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_MEtP+dumpInt</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="3390"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>t1<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_eTau1+dumpInt</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>t2<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_eTau2+dumpInt</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>t20<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_eTau20+dumpInt</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3394"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>i0<sp/>&quot;<sp/>&lt;&lt;<sp/>m_iter0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3397"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>if<sp/>no<sp/>tau<sp/>scanning,<sp/>or<sp/>symmetric<sp/>matrices,<sp/>rotatin<sp/>is<sp/>made<sp/>twice<sp/>which<sp/>is<sp/>inefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaMetx=m_MEtL*m_metCovPhiCos-m_MEtP*m_metCovPhiSin;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaMety=m_MEtL*m_metCovPhiSin+m_MEtP*m_metCovPhiCos;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>deltaMetVec.Set(met_smear_x,met_smear_y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/>m_metVec.Set(m_inputMEtX+deltaMetx,m_inputMEtY+deltaMety);</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>in<sp/>global<sp/>variable<sp/>for<sp/>speed<sp/>sake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtX=m_metVec.Px();</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtY=m_metVec.Py();</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtT=m_metVec.Mod();</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>met_smear<sp/>&quot;<sp/>&lt;&lt;<sp/>met_smear_x<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>met_smear_y<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTITERATION</highlight></codeline>
<codeline lineno="3413"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>fPhi1-&gt;Fill(m_Phi1,1.);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/>fPhi2-&gt;Fill(m_Phi2,1.);</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/>fMnu1-&gt;Fill(m_Mnu1,1.);</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/>fMnu2-&gt;Fill(m_Mnu2,1.);</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/>fMetx-&gt;Fill(deltaMetx,1.);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/>fMety-&gt;Fill(deltaMety,1.);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3420"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"></highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!paramOutsideRange)<sp/><sp/><sp/>probCalculatorV9fast(</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Phi1,<sp/>m_Phi2,</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1,<sp/>m_Mnu2);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"></highlight></codeline>
<codeline lineno="3429"><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DR<sp/>for<sp/>markov<sp/>chain<sp/>need<sp/>to<sp/>enter<sp/>handleSolution<sp/>also<sp/>when<sp/>zero<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/>handleSolutions();</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>careful<sp/>that<sp/>with<sp/>markov,<sp/>current<sp/>solution<sp/>is<sp/>from<sp/>now<sp/>on<sp/>stored<sp/>in<sp/>XYZOldSolVec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMPITERATION</highlight></codeline>
<codeline lineno="3437"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DEBUGMARKOV<sp/>nFullScan<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_markovNFullScan<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nRejectNoSol<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_markovNRejectNoSol</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nRejectMetro<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>m_markovNRejectMetropolis<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nAccept<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_markovNAccept</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nCountuplicate<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_markovCountDuplicate</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3444"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nsol&lt;=0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="3449"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>debugThisIteration<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3451"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>markov,<sp/>nsuccess<sp/>more<sp/>difficult<sp/>to<sp/>define.<sp/>Decide<sp/>this<sp/>is<sp/>the<sp/>number<sp/>of<sp/>independent<sp/>point<sp/>accepted<sp/>(hence<sp/>without<sp/>weight)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nsuccesses=m_markovNAccept;</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_iterNsuc=m_markovNAccept;</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nsuccesses;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_iterNsuc;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/>iter1+=m_nsol;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/>fit_code=1;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMPITERATION</highlight></codeline>
<codeline lineno="3470"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isol=0;isol&lt;m_nsol;++isol){</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DEBUGV9W<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_iter0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Phi1</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Phi2</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m1<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_Mnu1</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m2<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_Mnu2</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="3476"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>t1<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_eTau1</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>t2<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_eTau2</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3479"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ex<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>deltaMetx</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ey<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>deltaMety</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_mtautauFinalSolVec[isol]</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>pr<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>m_probFinalSolVec[isol]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3485"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"></highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/>OutputInfo.NTrials=m_iter0;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/>OutputInfo.NSuccesses=nsuccesses;</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsuccesses&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputInfo.AveSolRMS/=nsuccesses;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputInfo.AveSolRMS=-1.;</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Px1,<sp/>Py1,<sp/>Pz1;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Px2,<sp/>Py2,<sp/>Pz2;</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nsuccesses&gt;0)</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>smoothing<sp/>can<sp/>slightly<sp/>change<sp/>the<sp/>integral<sp/>of<sp/>the<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SMOOTH</highlight></codeline>
<codeline lineno="3511"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_all-&gt;Smooth();</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_allNoWeight-&gt;Smooth();</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPXfit1-&gt;Smooth();</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPYfit1-&gt;Smooth();</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPZfit1-&gt;Smooth();</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPXfit2-&gt;Smooth();</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPYfit2-&gt;Smooth();</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPZfit2-&gt;Smooth();</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3520"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>max<sp/>finding<sp/>method<sp/>defined<sp/>in<sp/>MissingMassCalculator.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>window<sp/>defined<sp/>in<sp/>terms<sp/>of<sp/>number<sp/>of<sp/>bin,<sp/>so<sp/>depend<sp/>on<sp/>binning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>histInfo(HistInfo::MAXHISTINFO);</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.Mditau_best=maxFromHist(fMfit_all,histInfo);</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob_hist=histInfo.at(HistInfo::PROB);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prob_hist!=0.0)<sp/>fDitauStuffHisto.Sign_best=-log10(std::abs(prob_hist));</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>mean<sp/>the<sp/>histogram<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>possible<sp/>but<sp/>very<sp/>rare<sp/>if<sp/>all<sp/>entries<sp/>outside<sp/>histogram<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>back<sp/>to<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.Sign_best=-999.;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.Mditau_best=fDitauStuffFit.Mditau_best;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;ERROR<sp/>should<sp/>not<sp/>happen.<sp/>null<sp/>prob<sp/>&quot;<sp/>&lt;&lt;<sp/>prob_hist<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fDitauStuffHisto.Mditau_best&gt;0.0)<sp/>fDitauStuffHisto.RMSoverMPV=fMfit_all-&gt;GetRMS()/fDitauStuffHisto.Mditau_best;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>histInfoOther(HistInfo::MAXHISTINFO);</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>getting<sp/>Nu1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Px1=maxFromHist(fPXfit1,histInfoOther);</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py1=maxFromHist(fPYfit1,histInfoOther);</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pz1=maxFromHist(fPZfit1,histInfoOther);</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>getting<sp/>Nu2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Px2=maxFromHist(fPXfit2,histInfoOther);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py2=maxFromHist(fPYfit2,histInfoOther);</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pz2=maxFromHist(fPZfit2,histInfoOther);</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>setting<sp/>4-vecs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>fulltau1,fulltau2;</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fulltau1.SetXYZM(Px1,Py1,Pz1,1.777);</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fulltau2.SetXYZM(Px2,Py2,Pz2,1.777);</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fulltau1.P()&lt;preparedInput.vistau1.P())<sp/>fulltau1=1.01*preparedInput.vistau1;<sp/></highlight><highlight class="comment">//<sp/>protection<sp/>against<sp/>cases<sp/>when<sp/>fitted<sp/>tau<sp/>momentum<sp/>is<sp/>smaller<sp/>than<sp/>visible<sp/>tau<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fulltau2.P()&lt;preparedInput.vistau2.P())<sp/>fulltau2=1.01*preparedInput.vistau2;<sp/></highlight><highlight class="comment">//<sp/>protection<sp/>against<sp/>cases<sp/>when<sp/>fitted<sp/>tau<sp/>momentum<sp/>is<sp/>smaller<sp/>than<sp/>visible<sp/>tau<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.taufit1=fulltau1;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.taufit2=fulltau2;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.vistau1=preparedInput.vistau1;<sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>should<sp/>also<sp/>be<sp/>fitted<sp/>if<sp/>tau<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.vistau2=preparedInput.vistau2;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.nutau1=fulltau1-preparedInput.vistau1;<sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>original<sp/>tau<sp/>vis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.nutau2=fulltau2-preparedInput.vistau2;<sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>neutrino<sp/>mass<sp/>not<sp/>necessarily<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTPROBA</highlight></codeline>
<codeline lineno="3570"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONEHIST</highlight></codeline>
<codeline lineno="3571"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3572"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTITERATION</highlight></codeline>
<codeline lineno="3573"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONEHIST</highlight></codeline>
<codeline lineno="3574"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3575"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTMASS</highlight></codeline>
<codeline lineno="3576"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONEHIST</highlight></codeline>
<codeline lineno="3577"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3578"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ONEHIST</highlight></codeline>
<codeline lineno="3580"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Leptau1=0;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Leptau2=0;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type1==0)<sp/>Leptau1=1;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type2==0)<sp/>Leptau2=1;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icase=4-Leptau1-2*Leptau2;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>algversion=3;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>sstream;</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/>sstream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_case&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>icase<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_alg&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>algversion<sp/>;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/>TString<sp/>aHistSuffix,aHistName<sp/>;</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/>sstream<sp/>&gt;&gt;<sp/>aHistSuffix<sp/>;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/>TH1F*<sp/>theHist=0;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3597"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTPROBA</highlight></codeline>
<codeline lineno="3601"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>the<sp/>stuff<sp/>below<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;probTheta3D&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fTheta3D-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;TauProb&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fTauProb-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3610"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTITERATION</highlight></codeline>
<codeline lineno="3612"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;phi1&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fPhi1-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;phi2&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fPhi2-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;mnu1&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMnu1-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;mnu2&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMnu2-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;metx&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMetx-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;mety&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMety-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3632"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTMASS</highlight></codeline>
<codeline lineno="3637"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMfit_all-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;mNoW&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMfit_allNoWeight-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3647"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>V9W<sp/>totalProbSum=&quot;<sp/>&lt;&lt;<sp/>totalProbSum<sp/>&lt;&lt;<sp/>&quot;<sp/>mtautauSum=&quot;<sp/>&lt;&lt;<sp/>mtautauSum<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3649"><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>for<sp/>v9walk,<sp/>points<sp/>outside<sp/>the<sp/>METx<sp/>MEty<sp/>disk<sp/>are<sp/>counted,<sp/>while<sp/>this<sp/>was<sp/>not<sp/>the<sp/>case<sp/>for<sp/>v9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSpeedStudy<sp/>||<sp/>fUseVerbose==1)<sp/>{</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Scanning<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::GRID)<sp/>{</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Grid<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::RANDOM)<sp/>{</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Random<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::RANDOMNONUNIF)<sp/>{</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Random<sp/>non<sp/>uniform<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Markov<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>V9W<sp/>niters=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_iter0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter1<sp/><sp/>;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nFullScan<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_markovNFullScan<sp/>;</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nRejectNoSol<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_markovNRejectNoSol;</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nRejectMetro<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_markovNRejectMetropolis;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nAccept<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_markovNAccept;</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>probsum<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>totalProbSum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>msum<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtautauSum<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSpeedStudy)<sp/>{</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/>timer.Stop()<sp/><sp/>;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Scanning<sp/>V9W<sp/>nonreproducible<sp/>CPU<sp/>time<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer.CpuTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s<sp/>real<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer.RealTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Stopping<sp/>criterion<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>m_NsucStop<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;m_iterNsuc<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>m_iterNsuc<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fit_code==0)</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;!!!----&gt;<sp/>Warning-3<sp/>in<sp/>MissingMassCalculator::DitauMassCalculatorV9Walk()<sp/>:<sp/>fit<sp/>status=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit_code<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.......<sp/>No<sp/>solution<sp/>is<sp/>found.<sp/>Printing<sp/>input<sp/>info<sp/>.......&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>vis<sp/>Tau-1:<sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau1.Pt()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau1.M()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau1.Eta()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau1.Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>type=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.type_visTau1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>vis<sp/>Tau-2:<sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau2.Pt()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau2.M()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau2.Eta()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau2.Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>type=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.type_visTau2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>MET=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.MetVec.Mod()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Met_X=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.MetVec.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Met_Y=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.MetVec.Py()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>----------------------------------------------------------<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fit_code;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::DitauMassCalculatorV9lfv()</highlight></codeline>
<codeline lineno="3713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//debugThisIteration=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/>debugThisIteration=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fit_code=0;<sp/></highlight><highlight class="comment">//<sp/>0==bad,<sp/>1==good</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/>ClearDitauStuff(fDitauStuffFit);</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/>ClearDitauStuff(fDitauStuffHisto);</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/>OutputInfo.NTrials<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/>OutputInfo.NSuccesses<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/>OutputInfo.AveSolRMS<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-------<sp/>Settings<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NiterMET<sp/>=<sp/>Niter_fit2;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>iterations<sp/>for<sp/>each<sp/>MET<sp/>scan<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NiterMnu<sp/>=<sp/>Niter_fit3;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>iterations<sp/>for<sp/>Mnu<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Mtau=1.777;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Mnu_binSize<sp/>=<sp/>MnuScanRange/NiterMnu;</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresX<sp/>=<sp/>preparedInput.METsigmaL;<sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>in<sp/>direction<sp/>parallel<sp/>to<sp/>leading<sp/>jet,<sp/>for<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresY<sp/>=<sp/>preparedInput.METsigmaP;<sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>in<sp/>direction<sp/>perpendicular<sp/>to<sp/>leading<sp/>jet,<sp/>for<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//--------<sp/>end<sp/>of<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Leptau1=0;<sp/></highlight><highlight class="comment">//<sp/>lepton-tau<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Leptau2=0;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1==0)<sp/>Leptau1=1;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau2==0)<sp/>Leptau2=1;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Leptau1+Leptau2)<sp/>==<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>both<sp/>tau&apos;s<sp/>are<sp/>leptonic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/>Nsigma_METscan<sp/>=<sp/>Nsigma_METscan_ll;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Leptau1+Leptau2<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>lep<sp/>had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/>Nsigma_METscan<sp/>=<sp/>Nsigma_METscan_lh;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>N_METsigma<sp/>=<sp/>Nsigma_METscan;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>sigmas<sp/>for<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresX_binSize<sp/>=<sp/>2*N_METsigma*METresX/NiterMET;</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresY_binSize<sp/>=<sp/>2*N_METsigma*METresY/NiterMET;</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>solution<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/>std::vector&lt;TLorentzVector&gt;<sp/>nu_vec;</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/>totalProbSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/>mtautauSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>metprob<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sign_tmp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tauprob<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalProb<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/>prob_tmp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>met_smear_x=0.0;</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>met_smear_y=0.0;</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>met_smearL=0.0;</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>met_smearP=0.0;</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle1=0.0;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fMfit_all)<sp/>{</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/>fMfit_all-&gt;Reset();</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fMfit_allNoWeight)<sp/>{</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/>fMfit_allNoWeight-&gt;Reset();</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fPXfit1)<sp/>{</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/>fPXfit1-&gt;Reset();</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fPYfit1)<sp/>{</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/>fPYfit1-&gt;Reset();</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fPZfit1)<sp/>{</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/>fPZfit1-&gt;Reset();</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//SpeedUp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/>TStopwatch<sp/>timer;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSpeedStudy)<sp/>timer.Start();</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/>iter1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/>iter2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/>iter3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/>iter4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>met_coscovphi<sp/>=<sp/>cos(preparedInput.METcovphi);</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>met_sincovphi<sp/>=<sp/>sin(preparedInput.METcovphi);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>iang1low<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>iang1high<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsuccesses<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>double<sp/>Mvis=(tau_vec1+tau_vec2).M();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>TLorentzVector<sp/>met4vec(0.0,0.0,0.0,0.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>met4vec.SetPxPyPzE(met_vec.X(),met_vec.Y(),0.0,met_vec.Mod());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>double<sp/>Meff=(tau_vec1+tau_vec2+met4vec).M();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>double<sp/>met_det=met_vec.Mod();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Leptau1+Leptau2)==2)<sp/></highlight><highlight class="comment">//<sp/>dilepton<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>in<sp/>dilepton<sp/>mode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input_metX=preparedInput.MetVec.X();</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input_metY=preparedInput.MetVec.Y();</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>tau_tmp(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>lep_tmp(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau_type_tmp;</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau_ind=0;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(LFVmode==1)<sp/></highlight><highlight class="comment">//<sp/>muon<sp/>case:<sp/>H-&gt;mu+tau(-&gt;ele)<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.vistau1.M()&gt;0.05<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&lt;0.05)<sp/></highlight><highlight class="comment">//<sp/>chosing<sp/>lepton<sp/>from<sp/>Higgs<sp/>decay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_tmp=preparedInput.vistau2;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lep_tmp=preparedInput.vistau1;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_type_tmp=preparedInput.type_visTau2;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_ind=2;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_tmp=preparedInput.vistau1;</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lep_tmp=preparedInput.vistau2;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_type_tmp=preparedInput.type_visTau1;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_ind=1;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(LFVmode==0)<sp/></highlight><highlight class="comment">//<sp/>electron<sp/>case:<sp/>H-&gt;ele+tau(-&gt;mu)<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.vistau1.M()&lt;0.05<sp/>&amp;&amp;<sp/>preparedInput.vistau2.M()&gt;0.05)<sp/></highlight><highlight class="comment">//<sp/>chosing<sp/>lepton<sp/>from<sp/>Higgs<sp/>decay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_tmp=preparedInput.vistau2;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lep_tmp=preparedInput.vistau1;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_type_tmp=preparedInput.type_visTau2;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_ind=2;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_tmp=preparedInput.vistau1;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lep_tmp=preparedInput.vistau2;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_type_tmp=preparedInput.type_visTau1;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_ind=1;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------<sp/>Settings<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Mlep=tau_tmp.M();</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>dMnu_max=MnuScanRange-Mlep;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>Mnu_binSize=dMnu_max/NiterMnu;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//--------<sp/>end<sp/>of<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>M=Mtau;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M_nu=0.0;</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MnuProb=1.0;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i3=0;<sp/>i3&lt;NiterMnu;<sp/>i3++)<sp/></highlight><highlight class="comment">//----<sp/>loop-3:<sp/>virtual<sp/>neutrino<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_nu=Mnu_binSize*i3;</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(M_nu&gt;=(Mtau-Mlep))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>M=sqrt(Mtau*Mtau-M_nu*M_nu);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MnuProb=MnuProbability(M_nu,Mnu_binSize);<sp/></highlight><highlight class="comment">//<sp/>Mnu<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i4=0;<sp/>i4&lt;NiterMET+1;<sp/>i4++)<sp/></highlight><highlight class="comment">//<sp/>MET_X<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smearL=METresX_binSize*i4-N_METsigma*METresX;</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i5=0;<sp/>i5&lt;NiterMET+1;<sp/>i5++)<sp/></highlight><highlight class="comment">//<sp/>MET_Y<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smearP=METresY_binSize*i5-N_METsigma*METresY;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pow(met_smearL/METresX,2)+pow(met_smearP/METresY,2)&gt;pow(N_METsigma,2))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>ellipse<sp/>instead<sp/>of<sp/>square</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smear_x=met_smearL*met_coscovphi-met_smearP*met_sincovphi;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smear_y=met_smearL*met_sincovphi+met_smearP*met_coscovphi;</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metvec_tmp.Set(input_metX+met_smear_x,input_metY+met_smear_y);</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution=NuPsolutionLFV(metvec_tmp,tau_tmp,M_nu,nu_vec);</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter0;</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(solution&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter1;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++isol;</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>fast<sp/>sin<sp/>cos,<sp/>result<sp/>to<sp/>not<sp/>match<sp/>exactly<sp/>nupsolutionv2,<sp/>so<sp/>skip<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SpeedUp<sp/>no<sp/>nested<sp/>loop<sp/>to<sp/>compute<sp/>individual<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngoodsol1=0;</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metprob=MetProbability(met_smearL,met_smearP,METresX,METresY);</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(metprob&lt;=0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j1=0;<sp/>j1&lt;nu_vec.size();<sp/>j1++)</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_tmp.E()+nu_vec[j1].E()&gt;=beamEnergy)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau1_tmpp=(tau_tmp+nu_vec[j1]).P();</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle1=Angle(nu_vec[j1],tau_tmp);</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(angle1&lt;dTheta3DLimit(tau_type_tmp,0,tau1_tmpp))<sp/>{++iang1low<sp/>;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}<sp/></highlight><highlight class="comment">//<sp/>lower<sp/>99%<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(angle1&gt;dTheta3DLimit(tau_type_tmp,1,tau1_tmpp))<sp/>{++iang1high<sp/>;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>99%<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tauvecprob1j=dTheta3d_probabilityFast(tau_type_tmp,angle1,tau1_tmpp);</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tauvecprob1j==0.)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tauprob=TauProbabilityLFV(tau_type_tmp,tau_tmp,nu_vec[j1]);</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalProb=tauvecprob1j*metprob*MnuProb*tauprob;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp+=tau_tmp;</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp+=lep_tmp;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp+=nu_vec[j1];</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtautau=tautau_tmp.M();</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"></highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalProbSum+=totalProb;</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtautauSum+=mtautau;</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMPITERATION</highlight></codeline>
<codeline lineno="3926"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>100<sp/>to<sp/>get<sp/>positive<sp/>values,<sp/>because<sp/>sort<sp/>is<sp/>confused<sp/>by<sp/>negative<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DEBUGV9<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eL<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>met_smearL+100</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eP<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>met_smearP+100</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tob<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>totalProb</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tb1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tauvecprob1j</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>meb<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>metprob</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;&lt;<sp/>&quot;<sp/>met<sp/>&quot;<sp/>&lt;&lt;<sp/>met_det</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>i0<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter0</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3937"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit_code=1;<sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>one<sp/>solution<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_all-&gt;Fill(mtautau,totalProb);</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_allNoWeight-&gt;Fill(mtautau,1.);</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------<sp/>using<sp/>P*fit<sp/>to<sp/>fill<sp/>Px,y,z_tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPXfit1-&gt;Fill((tau_tmp+nu_vec[j1]).Px(),totalProb);</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPYfit1-&gt;Fill((tau_tmp+nu_vec[j1]).Py(),totalProb);</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPZfit1-&gt;Fill((tau_tmp+nu_vec[j1]).Pz(),totalProb);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalProb&gt;prob_tmp)<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>solution<sp/>with<sp/>highest<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_tmp=-log10(totalProb);</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob_tmp=totalProb;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.Mditau_best=mtautau;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.Sign_best=sign_tmp;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_ind==1)<sp/>fDitauStuffFit.nutau1=nu_vec[j1];</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_ind==2)<sp/>fDitauStuffFit.nutau2=nu_vec[j1];</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ngoodsol1;</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngoodsol1==0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter2+=1;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nsuccesses;</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter3+=1;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Leptau1+Leptau2)==1)<sp/></highlight><highlight class="comment">//<sp/>lepton+tau<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>in<sp/>lepton+tau<sp/>mode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/>}</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------<sp/>Settings<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----<sp/>Stuff<sp/>below<sp/>are<sp/>for<sp/>Winter<sp/>2012<sp/>lep-had<sp/>analysis<sp/>only;<sp/>it<sp/>has<sp/>to<sp/>be<sp/>replaced<sp/>by<sp/>a<sp/>more<sp/>common<sp/>scheme<sp/>once<sp/>other<sp/>channels<sp/>are<sp/>optimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TVector2<sp/>mht_vec((tau_vec1+tau_vec2).Px(),(tau_vec1+tau_vec2).Py());<sp/>//<sp/>missing<sp/>Ht<sp/>vector<sp/>for<sp/>Njet25=0<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>mht=mht_vec.Mod();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input_metX=preparedInput.MetVec.X();</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input_metY=preparedInput.MetVec.Y();</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"></highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>mht_offset=0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(InputInfo.UseHT)<sp/><sp/>//<sp/>use<sp/>missing<sp/>Ht<sp/>(for<sp/>0-jet<sp/>events<sp/>only<sp/>for<sp/>now)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_metX=-mht_vec.X();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_metY=-mht_vec.Y();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>dPhi(l-t)<sp/>dependence<sp/>of<sp/>misHt-trueMET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2011){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(met_det&lt;20.0)<sp/>mht_offset=InputInfo.DelPhiTT&gt;1.8<sp/>?<sp/>-161.9+235.5*InputInfo.DelPhiTT-101.6*pow(InputInfo.DelPhiTT,2)+13.57*pow(InputInfo.DelPhiTT,3)<sp/>:<sp/>12.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>mht_offset=115.5-78.1*InputInfo.DelPhiTT+12.83*pow(InputInfo.DelPhiTT,2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(met_det&lt;20.0)<sp/>mht_offset=132.1-79.26*InputInfo.DelPhiTT+11.77*pow(InputInfo.DelPhiTT,2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>mht_offset=51.28-23.56*InputInfo.DelPhiTT+2.637*pow(InputInfo.DelPhiTT,2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>//<sp/>use<sp/>MET<sp/>(for<sp/>0-jet<sp/>and<sp/>1-jet<sp/>events)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_metX=met_vec.X();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_metY=met_vec.Y();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4001"><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"></highlight></codeline>
<codeline lineno="4003"><highlight class="normal"></highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>tau_tmp(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>lep_tmp(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau_type_tmp;</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Leptau1==1)</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_tmp=preparedInput.vistau2;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lep_tmp=preparedInput.vistau1;</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_type_tmp=preparedInput.type_visTau2;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Leptau2==1)</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_tmp=preparedInput.vistau1;</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lep_tmp=preparedInput.vistau2;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_type_tmp=preparedInput.type_visTau1;</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i4=0;<sp/>i4&lt;NiterMET+1;<sp/>i4++)<sp/></highlight><highlight class="comment">//<sp/>MET_X<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smearL=METresX_binSize*i4-N_METsigma*METresX;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i5=0;<sp/>i5&lt;NiterMET+1;<sp/>i5++)<sp/></highlight><highlight class="comment">//<sp/>MET_Y<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smearP=METresY_binSize*i5-N_METsigma*METresY;</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pow(met_smearL/METresX,2)+pow(met_smearP/METresY,2)&gt;pow(N_METsigma,2))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>ellipse<sp/>instead<sp/>of<sp/>square</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smear_x=met_smearL*met_coscovphi-met_smearP*met_sincovphi;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smear_y=met_smearL*met_sincovphi+met_smearP*met_coscovphi;</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metvec_tmp.Set(input_metX+met_smear_x,input_metY+met_smear_y);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution=NuPsolutionLFV(metvec_tmp,tau_tmp,0.0,nu_vec);</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter0;</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(solution&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter1;</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++isol;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>fast<sp/>sin<sp/>cos,<sp/>result<sp/>to<sp/>not<sp/>match<sp/>exactly<sp/>nupsolutionv2,<sp/>so<sp/>skip<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SpeedUp<sp/>no<sp/>nested<sp/>loop<sp/>to<sp/>compute<sp/>individual<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngoodsol1=0;</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metprob=MetProbability(met_smearL,met_smearP,METresX,METresY);</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(metprob&lt;=0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j1=0;<sp/>j1&lt;nu_vec.size();<sp/>j1++)</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_tmp.E()+nu_vec[j1].E()&gt;=beamEnergy)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau1_tmpp=(tau_tmp+nu_vec[j1]).P();</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle1=Angle(nu_vec[j1],tau_tmp);</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(angle1&lt;dTheta3DLimit(tau_type_tmp,0,tau1_tmpp))<sp/>{++iang1low<sp/>;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}<sp/></highlight><highlight class="comment">//<sp/>lower<sp/>99%<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(angle1&gt;dTheta3DLimit(tau_type_tmp,1,tau1_tmpp))<sp/>{++iang1high<sp/>;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>99%<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tauvecprob1j=dTheta3d_probabilityFast(tau_type_tmp,angle1,tau1_tmpp);</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tauvecprob1j==0.)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tauprob=TauProbabilityLFV(tau_type_tmp,tau_tmp,nu_vec[j1]);</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalProb=tauvecprob1j*metprob*tauprob;</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp.SetPxPyPzE(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp+=tau_tmp;</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp+=lep_tmp;</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp+=nu_vec[j1];</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtautau=tautau_tmp.M();</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalProbSum+=totalProb;</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtautauSum+=mtautau;</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMPITERATION</highlight></codeline>
<codeline lineno="4069"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>100<sp/>to<sp/>get<sp/>positive<sp/>values,<sp/>because<sp/>sort<sp/>is<sp/>confused<sp/>by<sp/>negative<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DEBUGV9<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eL<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>met_smearL+100</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eP<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>met_smearP+100</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tob<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>totalProb</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tb1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tauvecprob1j</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>meb<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>metprob</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;&lt;<sp/>&quot;<sp/>met<sp/>&quot;<sp/>&lt;&lt;<sp/>met_det</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>i0<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter0</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4080"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit_code=1;<sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>one<sp/>solution<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_all-&gt;Fill(mtautau,totalProb);</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_allNoWeight-&gt;Fill(mtautau,1.);</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fPXfit1-&gt;Fill((tau_tmp+nu_vec[j1]).Px(),totalProb);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fPYfit1-&gt;Fill((tau_tmp+nu_vec[j1]).Py(),totalProb);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fPZfit1-&gt;Fill((tau_tmp+nu_vec[j1]).Pz(),totalProb);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalProb&gt;prob_tmp)<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>solution<sp/>with<sp/>highest<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_tmp<sp/>=<sp/>-log10(totalProb);</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob_tmp<sp/>=<sp/>totalProb;</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.Mditau_best<sp/>=<sp/>mtautau;</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.Sign_best<sp/>=<sp/>sign_tmp;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Leptau1<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.vistau1<sp/>=<sp/>lep_tmp;</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.vistau2<sp/>=<sp/>tau_tmp;</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.nutau2<sp/>=<sp/>nu_vec[j1];</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Leptau2<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.vistau2<sp/>=<sp/>lep_tmp;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.vistau1<sp/>=<sp/>tau_tmp;</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.nutau1<sp/>=<sp/>nu_vec[j1];</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.taufit1<sp/>=<sp/>fDitauStuffFit.vistau1<sp/>+<sp/>fDitauStuffFit.nutau1;</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.taufit2<sp/>=<sp/>fDitauStuffFit.vistau2<sp/>+<sp/>fDitauStuffFit.nutau2;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"></highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ngoodsol1;</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngoodsol1==0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter2+=1;</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nsuccesses;</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter3+=1;</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>in<sp/>an<sp/>unknown<sp/>mode?!?!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"></highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/>OutputInfo.NTrials=iter0;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/>OutputInfo.NSuccesses=iter3;</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"></highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>V9<sp/>totalProbSum=&quot;<sp/>&lt;&lt;<sp/>totalProbSum<sp/>&lt;&lt;<sp/>&quot;<sp/>mtautauSum=&quot;<sp/>&lt;&lt;<sp/>mtautauSum<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSpeedStudy<sp/>||<sp/>fUseVerbose==1)<sp/>{</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SpeedUp<sp/>niters=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter1</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter2<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter3</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;skip:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iang1low<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iang1high<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fSpeedStudy){</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/>timer.Stop()<sp/><sp/>;</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SpeedUp<sp/>nonreproducible<sp/>CPU<sp/>time<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer.CpuTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s<sp/>real<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timer.RealTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"></highlight></codeline>
<codeline lineno="4139"><highlight class="normal"></highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fMfit_all-&gt;GetEntries()&gt;0<sp/>&amp;&amp;<sp/>iter3&gt;0)</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SMOOTH</highlight></codeline>
<codeline lineno="4143"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_all-&gt;Smooth();</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_allNoWeight-&gt;Smooth();</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPXfit1-&gt;Smooth();</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPYfit1-&gt;Smooth();</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPZfit1-&gt;Smooth();</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4149"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>max<sp/>finding<sp/>method<sp/>defined<sp/>in<sp/>MissingMassCalculator.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>window<sp/>defined<sp/>in<sp/>terms<sp/>of<sp/>number<sp/>of<sp/>bin,<sp/>so<sp/>depend<sp/>on<sp/>binning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>histInfo(HistInfo::MAXHISTINFO);</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.Mditau_best<sp/>=<sp/>maxFromHist(fMfit_all,<sp/>histInfo);</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob_hist<sp/>=<sp/>histInfo.at(HistInfo::PROB);</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prob_hist!=0.0)<sp/>fDitauStuffHisto.Sign_best=-log10(std::abs(prob_hist));</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>mean<sp/>the<sp/>histogram<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>possible<sp/>but<sp/>very<sp/>rare<sp/>if<sp/>all<sp/>entries<sp/>outside<sp/>histogram<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>back<sp/>to<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.Sign_best=-999.;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.Mditau_best=fDitauStuffFit.Mditau_best;</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;ERROR<sp/>should<sp/>not<sp/>happen.<sp/>null<sp/>prob<sp/>&quot;<sp/>&lt;&lt;<sp/>prob_hist<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"></highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fDitauStuffHisto.Mditau_best&gt;0.0)<sp/>fDitauStuffHisto.RMSoverMPV<sp/>=<sp/>fMfit_all-&gt;GetRMS()/fDitauStuffHisto.Mditau_best;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>histInfoOther(HistInfo::MAXHISTINFO);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>getting<sp/>Nu1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Px1=maxFromHist(fPXfit1,histInfoOther);</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Py1=maxFromHist(fPYfit1,histInfoOther);</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Pz1=maxFromHist(fPZfit1,histInfoOther);</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>setting<sp/>4-vecs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>nu1_tmp(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>nu2_tmp(0.0,0.0,0.0,0.0);</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Leptau1==1)</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu1_tmp<sp/>=<sp/>preparedInput.vistau1;</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu2_tmp.SetXYZM(Px1,Py1,Pz1,1.777);</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Leptau2==1)</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu2_tmp<sp/>=<sp/>preparedInput.vistau2;</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu1_tmp.SetXYZM(Px1,Py1,Pz1,1.777);</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.taufit1<sp/>=<sp/>nu1_tmp;</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.taufit2<sp/>=<sp/>nu2_tmp;</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.nutau1<sp/>=<sp/>nu1_tmp-preparedInput.vistau1;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffHisto.nutau2<sp/>=<sp/>nu2_tmp-preparedInput.vistau2;</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"></highlight></codeline>
<codeline lineno="4193"><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal"></highlight></codeline>
<codeline lineno="4195"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTPROBA</highlight></codeline>
<codeline lineno="4196"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONEHIST</highlight></codeline>
<codeline lineno="4197"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4198"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTITERATION</highlight></codeline>
<codeline lineno="4199"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONEHIST</highlight></codeline>
<codeline lineno="4200"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4201"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTMASS</highlight></codeline>
<codeline lineno="4202"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONEHIST</highlight></codeline>
<codeline lineno="4203"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4204"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ONEHIST</highlight></codeline>
<codeline lineno="4206"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icase=4-Leptau1-2*Leptau2;</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>algversion=1;</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>sstream;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/>sstream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_case&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>icase<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_alg&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>algversion<sp/>;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/>TString<sp/>aHistSuffix,aHistName<sp/>;</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>sstream<sp/>&gt;&gt;<sp/>aHistSuffix<sp/>;</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/>TH1F*<sp/>theHist=0;</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4216"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTPROBA</highlight></codeline>
<codeline lineno="4220"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>the<sp/>stuff<sp/>below<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"></highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;probTheta3D&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fTheta3D-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;TauProb&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fTauProb-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4229"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTITERATION</highlight></codeline>
<codeline lineno="4231"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;phi1&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fPhi1-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;phi2&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fPhi2-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;mnu1&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMnu1-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;mnu2&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMnu2-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;metx&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMetx-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;mety&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMety-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4251"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HISTMASS</highlight></codeline>
<codeline lineno="4256"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMfit_all-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/>aHistName=</highlight><highlight class="stringliteral">&quot;mNoW&quot;</highlight><highlight class="normal">+aHistSuffix;</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/>theHist=(TH1F*)<sp/>fMfit_allNoWeight-&gt;Clone(aHistName);</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/>theHist-&gt;Write();</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4266"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fit_code==0)</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;!!!----&gt;<sp/>Warning-3<sp/>in<sp/>MissingMassCalculator::DitauMassCalculatorV9lfv()<sp/>:<sp/>fit<sp/>status=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit_code<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.......<sp/>No<sp/>solution<sp/>is<sp/>found.<sp/>Printing<sp/>input<sp/>info<sp/>.......&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>vis<sp/>Tau-1:<sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau1.Pt()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau1.M()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau1.Eta()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau1.Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>type=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.type_visTau1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>vis<sp/>Tau-2:<sp/>Pt=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau2.Pt()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>M=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau2.M()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau2.Eta()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.vistau2.Phi()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>type=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.type_visTau2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>MET=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.MetVec.Mod()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Met_X=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.MetVec.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Met_Y=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>preparedInput.MetVec.Py()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>----------------------------------------------------------<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fit_code;</highlight></codeline>
<codeline lineno="4283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>to<sp/>fit<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal">Double_t<sp/>MissingMassCalculator::maxFitting(Double_t<sp/>*x,<sp/>Double_t<sp/>*par)</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"></highlight><highlight class="comment">//Double_t<sp/>maxFitting(Double_t<sp/>*x,<sp/>Double_t<sp/>*par)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parabola<sp/>with<sp/>parameters<sp/>max,<sp/>mean<sp/>and<sp/>invwidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mM=x[0];</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMax=par[0];</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMean=par[1];</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mInvWidth2=par[2];<sp/></highlight><highlight class="comment">//<sp/>if<sp/>param<sp/>positif<sp/>distance<sp/>between<sp/>intersection<sp/>of<sp/>the<sp/>parabola<sp/>with<sp/>x<sp/>axis:<sp/>1/Sqrt(mInvWidth2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fitval=mMax*(1-4*mInvWidth2*std::pow(mM-mMean,2));</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fitval;</highlight></codeline>
<codeline lineno="4296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>maximum<sp/>from<sp/>the<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>input<sp/>prob<sp/>not<sp/>default<sp/>,<sp/>compute<sp/>also<sp/>some<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MaxHistStrategy<sp/>:<sp/>different<sp/>method<sp/>to<sp/>find<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>should<sp/>get<sp/>the<sp/>array<sp/>on<sp/>work<sp/>on<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>also<sp/>find<sp/>the<sp/>effective<sp/>range<sp/>of<sp/>the<sp/>hist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"></highlight></codeline>
<codeline lineno="4311"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::maxFromHist(TH1F*<sp/>theHist,<sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>histInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MaxHistStrategy::e<sp/>maxHistStrategy,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>winHalfWidth,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight></codeline>
<codeline lineno="4312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//namespace<sp/>HistInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>enum<sp/>e<sp/>{<sp/>PROB=0,INTEGRAL,CHI2,DISCRI,TANTHETA,TANTHETAW,FITLENGTH,RMS,RMSVSDISCRI,MAXHISTINFO<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>maxFromHist<sp/>called<sp/>&quot;<sp/>&lt;&lt;<sp/>maxHistStrategy<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxPos=0.;</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=0.;</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"></highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;double&gt;::iterator<sp/>itr=histInfo.begin();<sp/>itr<sp/>!=<sp/>histInfo.end();++itr<sp/>){</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/>*itr=-1;</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"></highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/>histInfo[HistInfo::INTEGRAL]=theHist-&gt;Integral();</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>maxHistStrategy==MaxHistStrategy::MAXBIN<sp/>||<sp/>((<sp/>maxHistStrategy==MaxHistStrategy::MAXBINWINDOW<sp/>||<sp/>maxHistStrategy==MaxHistStrategy::SLIDINGWINDOW)<sp/>&amp;&amp;<sp/>winHalfWidth==0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"></highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>max<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>original<sp/>version,<sp/>simple<sp/>bin<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bin=theHist-&gt;GetMaximumBin();</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/>maxPos=theHist-&gt;GetBinCenter(max_bin);</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME<sp/>GetEntries<sp/>is<sp/>unweighted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/>prob=theHist-&gt;GetBinContent(max_bin)/double(theHist-&gt;GetEntries());</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prob&gt;1.)<sp/>prob=1.;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::PROB]=prob;</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxPos;</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hNbins=theHist-&gt;GetNbinsX();</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"></highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxHistStrategy==MaxHistStrategy::MAXBINWINDOW){</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>average<sp/>around<sp/>maximum<sp/>bin<sp/>(nearly<sp/>useless<sp/>in<sp/>fact)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>be<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bin=theHist-&gt;GetMaximumBin();</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinMin=max_bin-winHalfWidth;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iBinMin&lt;0)<sp/>iBinMin=0;</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinMax=max_bin+winHalfWidth;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iBinMax&gt;hNbins)<sp/>iBinMax=hNbins-1;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumw=0;</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumx=0;</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBin=iBinMin<sp/>;<sp/>iBin&lt;=iBinMax<sp/>;<sp/>++iBin){</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight=theHist-&gt;GetBinContent(iBin);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumw+=weight;</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumx+=weight*theHist-&gt;GetBinCenter(iBin);</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/>maxPos=sumx/sumw;</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME<sp/>GetEntries<sp/>is<sp/>unweighted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/>prob=sumw/theHist-&gt;GetEntries();</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prob&gt;1.)<sp/>prob=1.;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxPos;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>compute<sp/>sliding<sp/>window<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>maxHistStrategy!=MaxHistStrategy::SLIDINGWINDOW<sp/>&amp;&amp;<sp/>maxHistStrategy!=MaxHistStrategy::FIT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>undefined<sp/>maxHistStrategy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxHistStrategy<sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-10.;</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>iteration<sp/>to<sp/>find<sp/>the<sp/>first<sp/>and<sp/>last<sp/>non<sp/>zero<sp/>bin,<sp/>and<sp/>the<sp/>histogram<sp/>integral<sp/>(not<sp/>same<sp/>as<sp/>Entries<sp/>because<sp/>of<sp/>weights)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastNonZeroBin=-1;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstNonZeroBin=-1;</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalSumw=0.;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstNullPart=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBin=0<sp/>;<sp/>iBin&lt;hNbins<sp/>;<sp/>++iBin){</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight=theHist-&gt;GetBinContent(iBin);</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalSumw+=weight;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastNonZeroBin=iBin;</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstNullPart){</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstNullPart=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstNonZeroBin=iBin;</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"></highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//enlarge<sp/>first<sp/>and<sp/>last<sp/>non<sp/>zero<sp/>bin<sp/>with<sp/>window<sp/>width<sp/>to<sp/>avoid<sp/>side<sp/>effect<sp/>(maximum<sp/>close<sp/>to<sp/>the<sp/>edge)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/>firstNonZeroBin=std::max(0,firstNonZeroBin-winHalfWidth-1);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/>lastNonZeroBin=std::min(hNbins-1,lastNonZeroBin+winHalfWidth+1);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"></highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>first<sp/>non<sp/>zero<sp/>bin<sp/>&quot;<sp/>&lt;&lt;<sp/>firstNonZeroBin<sp/>&lt;&lt;<sp/>&quot;<sp/>last<sp/>&quot;<sp/>&lt;&lt;<sp/>lastNonZeroBin<sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal"></highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>null<sp/>histogram<sp/>quit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstNullPart)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxPos;</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>size<sp/>of<sp/>the<sp/>sliding<sp/>window<sp/>in<sp/>the<sp/>fit<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4406"><highlight class="normal"></highlight></codeline>
<codeline lineno="4407"><highlight class="normal"></highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sliding<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nwidth=2*winHalfWidth+1;</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>winsum=0.;</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibin=0<sp/>;<sp/>ibin&lt;nwidth<sp/>;<sp/>++ibin){</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/>winsum+=theHist-&gt;GetBinContent(ibin);</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>winmax=winsum;</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bin=0.;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinL=firstNonZeroBin;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinR=iBinL+2*winHalfWidth;</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>goingUp=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/>++iBinL;</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/>++iBinR;</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltawin=theHist-&gt;GetBinContent(iBinR)-theHist-&gt;GetBinContent(iBinL-1);</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>ibinL<sp/>&quot;<sp/>&lt;&lt;<sp/>iBinL<sp/>&lt;&lt;<sp/>&quot;<sp/>iBinR<sp/>&quot;<sp/>&lt;&lt;<sp/>iBinR<sp/>&lt;&lt;<sp/>&quot;<sp/>deltawin=&quot;<sp/>&lt;&lt;<sp/>deltawin<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>winsum<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>winmax<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"></highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltawin&lt;0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goingUp)<sp/>{</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>were<sp/>climbing<sp/>and<sp/>now<sp/>loose<sp/>more<sp/>on<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>win<sp/>on<sp/>the<sp/>right.<sp/>This<sp/>was<sp/>a<sp/>local<sp/>maxima</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winsum&gt;winmax)<sp/>{</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global<sp/>maximum<sp/>one<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winmax=winsum;</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_bin=(iBinR+iBinL)/2-1;</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>best<sp/>local<sp/>max<sp/>&quot;<sp/>&lt;&lt;<sp/>max_bin<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>winmax<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>another<sp/>local<sp/>max<sp/>&quot;<sp/>&lt;&lt;<sp/>(iBinR+iBinL)/2-1<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>winsum<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goingUp=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>going<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>care<sp/>about<sp/>minima,<sp/>simply<sp/>indicate<sp/>we<sp/>are<sp/>going<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goingUp=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/>winsum+=deltawin;</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iBinR&lt;lastNonZeroBin);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//now<sp/>compute<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinMin=max_bin-winHalfWidth;</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iBinMin&lt;0)<sp/>iBinMin=0;</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinMax=max_bin+winHalfWidth;</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iBinMax&gt;=hNbins)<sp/>iBinMax=hNbins-1;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumw=0;</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumx=0;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBin=iBinMin<sp/>;<sp/>iBin&lt;=iBinMax<sp/>;<sp/>++iBin){</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight=theHist-&gt;GetBinContent(iBin);</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/>sumw+=weight;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/>sumx+=weight*theHist-&gt;GetBinCenter(iBin);</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxPosWin=-1.;</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sumw&gt;0.)<sp/>{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/>maxPosWin=sumx/sumw;</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>now<sp/>sum<sp/>&quot;<sp/>&lt;&lt;<sp/>sumw<sp/>&lt;&lt;<sp/>&quot;<sp/>max_bin<sp/>&quot;<sp/>&lt;&lt;<sp/>max_bin<sp/>&lt;&lt;<sp/>&quot;<sp/>rough<sp/>max&quot;<sp/>&lt;&lt;<sp/>theHist-&gt;GetMaximumBin()<sp/>&lt;&lt;<sp/>&quot;<sp/>best<sp/>max<sp/>&quot;<sp/>&lt;&lt;<sp/>maxPos<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//prob<sp/>if<sp/>the<sp/>fraction<sp/>of<sp/>events<sp/>in<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/>prob=sumw/totalSumw;</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"></highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Definitions<sp/>of<sp/>some<sp/>useful<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"></highlight></codeline>
<codeline lineno="4486"><highlight class="normal"></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_rms=theHist-&gt;GetRMS(1);</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/>histInfo[HistInfo::RMS]=h_rms;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"></highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num=0;</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numerator=0;</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator=0;</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nullBin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=iBinMin;i&lt;iBinMax;++i)</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>binError=theHist-&gt;GetBinError(i);</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(binError&lt;1e-10)</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nullBin<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>binErrorSquare=std::pow(binError,2);</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>theHist-&gt;GetBinContent(i)/(binErrorSquare);</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numerator=numerator+num;</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>denominator=denominator+(1/(binErrorSquare));</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numerator&lt;1e-10<sp/>||<sp/>denominator&lt;1e-10<sp/>||<sp/>nullBin==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histInfo[HistInfo::MEANBIN]=-1;</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histInfo[HistInfo::MEANBIN]=sqrt(1/denominator)/(numerator/denominator);</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight></codeline>
<codeline lineno="4516"><highlight class="normal"></highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>here<sp/>if<sp/>only<sp/>looking<sp/>for<sp/>sliding<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxHistStrategy==MaxHistStrategy::SLIDINGWINDOW<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxPosWin;</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/>maxPos=maxPosWin;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>FIT<sp/><sp/><sp/>maxHistStrategy==MaxHistStrategy::FIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"></highlight></codeline>
<codeline lineno="4525"><highlight class="normal"></highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>mass<sp/>fit<sp/>in<sp/>range<sp/>defined<sp/>by<sp/>sliding<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>will<sp/>be<sp/>around<sp/>maxPos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>binWidth=theHist-&gt;GetBinCenter(2)-theHist-&gt;GetBinCenter(1);</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fitWidth=(winHalfWidth+0.5)*binWidth;</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fit<sp/>range<sp/>2<sp/>larger<sp/>than<sp/>original<sp/>window<sp/>range,<sp/>3<sp/>if<sp/>less<sp/>than<sp/>20%<sp/>of<sp/>the<sp/>histogram<sp/>in<sp/>slinding<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"></highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prob&gt;0.2)<sp/>{</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/>fitWidth*=2.;</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/>fitWidth*=3.;</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>prob=&quot;<sp/>&lt;&lt;<sp/>prob<sp/>&lt;&lt;<sp/>&quot;<sp/>fitwidth=&quot;<sp/>&lt;&lt;<sp/>fitWidth<sp/>&lt;&lt;<sp/>&quot;<sp/>binwidth=&quot;<sp/>&lt;&lt;<sp/>binWidth<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"></highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fit<sp/>option<sp/>:<sp/>Q<sp/>==<sp/>Quiet,<sp/>no<sp/>printout<sp/>S<sp/>result<sp/>of<sp/>the<sp/>fit<sp/>returned<sp/>in<sp/>TFitResultPtr<sp/>N<sp/>do<sp/>not<sp/>draw<sp/>the<sp/>resulting<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal"></highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>debug<sp/>plot<sp/>the<sp/>fitted<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/>TString<sp/>fitOption=<sp/>debug<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;QS&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;QNS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(debug)<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;MaxFromHist<sp/>:<sp/>debug<sp/>option<sp/>:<sp/>draw<sp/>fit<sp/>&quot;<sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"></highlight></codeline>
<codeline lineno="4547"><highlight class="normal"></highlight></codeline>
<codeline lineno="4548"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAXFITTINGBYHAND</highlight></codeline>
<codeline lineno="4549"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>root<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>initial<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/>m_fFitting-&gt;SetParameters(sumw/winHalfWidth,maxPos,0.0025);</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>TFitResultPtr<sp/>fitRes=theHist-&gt;Fit(&quot;pol2&quot;,fitOption,&quot;&quot;,maxPos-fitWidth,maxPos+fitWidth);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/>TFitResultPtr<sp/>fitRes=theHist-&gt;Fit(m_fFitting,fitOption,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,maxPos-fitWidth,maxPos+fitWidth);</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"></highlight></codeline>
<codeline lineno="4555"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="4556"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fitRes=0;</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>experimental,<sp/>do<sp/>the<sp/>fit<sp/>by<sp/>hand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>works<sp/>but<sp/>time<sp/>saving<sp/>not<sp/>useful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>very<sp/>first<sp/>root<sp/>fit<sp/>takes<sp/>0.05<sp/>s<sp/>but<sp/>not<sp/>the<sp/>next<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>min<sp/>bin<sp/>and<sp/>max<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>also<sp/>do<sp/>the<sp/>plot<sp/>(to<sp/>be<sp/>done<sp/>only<sp/>if<sp/>we<sp/>really<sp/>want<sp/>to<sp/>do<sp/>the<sp/>fit<sp/>by<sp/>hand)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4562"><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinFitMin=theHist-&gt;FindFixBin(maxPos-fitWidth);</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinFitMax=theHist-&gt;FindFixBin(maxPos+fitWidth);</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iBinFitMin&lt;=0)<sp/>iBinFitMin=1;</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iBinFitMax&gt;=hNbins)<sp/>iBinFitMax=hNbins-1;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBinFitWidth=iBinFitMax-iBinFitMin+1;</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iBinFitWidth&gt;20)<sp/>{</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MaxFromHist<sp/>ERROR<sp/>iBinFitMax-iBinFitMin<sp/>too<sp/>large<sp/>!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iBinFitMin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iBinFitMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iBinFitWidth<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/>iBinFitWidth=20;</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mv[20],hv[20],invsigm2v[20];</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;iBinFitWidth;++i)<sp/>{</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/>mv[i]=theHist-&gt;GetBinCenter(i+iBinFitMin);</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/>hv[i]=theHist-&gt;GetBinContent(i+iBinFitMin);</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>binError=theHist-&gt;GetBinError(i+iBinFitMin);</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binError&gt;=1e-20)<sp/>{</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invsigm2v[i]=1./std::pow(binError,2);</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invsigm2v[i]=0.;</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//vector<sp/>of<sp/>initial<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>polynomial<sp/>a0+a1*m+a2*m*m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>vector<sp/>of<sp/>first<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>der1[3];</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/>der1[0]=0.;</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/>der1[1]=0.;</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/>der1[2]=0.;</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"></highlight></codeline>
<codeline lineno="4596"><highlight class="normal"></highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;iBinFitWidth;++i)<sp/>{</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>double<sp/>delta=a0+mv[i]*(a1+a2*mv[i])-hv[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta=-hv[i];</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>der10=2*delta*invsigm2v[i];</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/>der1[0]+=der10;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/>der1[1]+=der10*mv[i];</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/>der1[2]+=der10*std::pow(mv[i],2);</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>vector<sp/>of<sp/>second<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>der2[3][3];</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;3;++i){</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;3;++j){</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>der2[i][j]=0.;</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"></highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;iBinFitWidth;++i)<sp/>{</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sca=2*invsigm2v[i];</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/>der2[0][0]+=sca;</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/>der2[0][1]+=sca*mv[i];</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/>der2[0][2]+=sca*std::pow(mv[i],2);</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/>der2[1][1]+=sca*std::pow(mv[i],2);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/>der2[1][2]+=sca*std::pow(mv[i],3);</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/>der2[2][2]+=sca*std::pow(mv[i],4);</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/>der2[1][0]=der2[0][1];</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/>der2[2][0]=der2[0][2];</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/>der2[2][1]=der2[1][2];</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>root<sp/>vector<sp/>and<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/>TVectorD<sp/>tder1(3,&amp;der1[0]);</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/>TMatrixD<sp/>tder2(3,3,&amp;der2[0][0]);</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>solve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/>tder2.InvertFast();</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/>TVectorD<sp/>asolve(3);</highlight><highlight class="comment">//<sp/>=<sp/>tder2inv<sp/>*<sp/>tder1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/>asolve<sp/>=<sp/>tder2<sp/>*<sp/>tder1;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/>asolve*=-1.;</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/>//<sp/>else<sp/>ifndef<sp/>MAXFITTINGBYHAND</highlight></codeline>
<codeline lineno="4636"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4637"><highlight class="normal"></highlight></codeline>
<codeline lineno="4638"><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxPosFit=-1.;</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"></highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(fitRes)==0)<sp/>{</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAXFITTINGBYHAND</highlight></codeline>
<codeline lineno="4644"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//root<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::CHI2]=fitRes-&gt;Chi2();</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMax=fitRes-&gt;Parameter(0);</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMean=fitRes-&gt;Parameter(1);</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mInvWidth2=fitRes-&gt;Parameter(2);</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMaxError=fitRes-&gt;ParError(0);</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/>m_PrintmMaxError=mMaxError;</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMeanError=fitRes-&gt;ParError(1);</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/>m_PrintmMeanError=mMeanError;</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mInvWidth2Error=fitRes-&gt;ParError(2);</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/>m_PrintmInvWidth2Error=mInvWidth2Error;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/>mMeanError=0.;<sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/>mInvWidth2Error=0.;<sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c=mMax*(1-4*mMean*mMean*mInvWidth2);</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b=8*mMax*mMean*mInvWidth2;</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a=-4*mMax*mInvWidth2;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>built<sp/>in<sp/>polynomial<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>double<sp/>c=fitRes-&gt;Parameter(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>double<sp/>b=fitRes-&gt;Parameter(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>double<sp/>a=fitRes-&gt;Parameter(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="4666"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fit<sp/>by<sp/>hand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>done<sp/>:<sp/>proper<sp/>plot<sp/>if<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::CHI2]=0.;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMax=0.;</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMean=0.;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mInvWidth2=0.;</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMaxError=0.;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/>m_PrintmMaxError=mMaxError;</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMeanError=0.;</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/>m_PrintmMeanError=mMeanError;</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mInvWidth2Error=0.;</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/>m_PrintmInvWidth2Error=mInvWidth2Error;</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/>mMeanError=0.;</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/>mInvWidth2Error=0.;</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a=asolve[2];</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b=asolve[1];</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c=asolve[0];</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>else<sp/>ifndef<sp/>MAXFITTINGBYHAND</highlight></codeline>
<codeline lineno="4685"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;a=&quot;<sp/>&lt;&lt;<sp/>a<sp/>&lt;&lt;<sp/>&quot;<sp/>b=&quot;<sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>&quot;<sp/>c=&quot;<sp/>&lt;&lt;<sp/>c<sp/>&lt;&lt;<sp/>&quot;<sp/>m=&quot;<sp/>&lt;&lt;<sp/>-b/2/a<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_discri=b*b<sp/>-<sp/>4*a*c;</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::DISCRI]=h_discri;</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqrth_discri=sqrt(h_discri);</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_fitLength=sqrth_discri/a;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::FITLENGTH]=h_fitLength;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::TANTHETA]=2*a/sqrth_discri;</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::TANTHETAW]=2*a*sumw/sqrth_discri;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::RMSVSDISCRI]=h_rms/h_fitLength;</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>maximum<sp/>position<sp/>(only<sp/>if<sp/>inverted<sp/>parabola)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a&lt;0)<sp/>maxPosFit=-b/(2*a);</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"></highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>fit<sp/>result<sp/>only<sp/>if<sp/>within<sp/>80%<sp/>of<sp/>fit<sp/>window,<sp/>and<sp/>fit<sp/>succeeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxPosFit&gt;=0.<sp/>and<sp/>std::abs(maxPosFit-maxPosWin)&lt;0.8*fitWidth){</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::PROB]=prob;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxPosFit;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>keep<sp/>the<sp/>weighted<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negate<sp/>prob<sp/>just<sp/>to<sp/>flag<sp/>such<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/>prob=-prob;</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/>histInfo[HistInfo::PROB]=prob;</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxPosWin;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"></highlight></codeline>
<codeline lineno="4714"><highlight class="normal"></highlight></codeline>
<codeline lineno="4715"><highlight class="normal"></highlight></codeline>
<codeline lineno="4716"><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"></highlight></codeline>
<codeline lineno="4718"><highlight class="normal"></highlight></codeline>
<codeline lineno="4719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compute<sp/>probability<sp/>for<sp/>any<sp/>input<sp/>value,can<sp/>be<sp/>called<sp/>from<sp/>a<sp/>pure<sp/>parameter<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"></highlight><highlight class="comment">//deltametvec<sp/>is<sp/>along<sp/>phijet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4721"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>number<sp/>of<sp/>solution<sp/>if<sp/>positive,<sp/>return<sp/>code<sp/>if<sp/>negative,<sp/>vector<sp/>of<sp/>probability<sp/>and<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::probCalculatorV9fast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>phi1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>phi2,</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>M_nu1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>M_nu2){</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"></highlight></codeline>
<codeline lineno="4726"><highlight class="normal"></highlight></codeline>
<codeline lineno="4727"><highlight class="normal"></highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>bool<sp/>debug=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4729"><highlight class="normal"></highlight></codeline>
<codeline lineno="4730"><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsol1;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsol2;</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"></highlight></codeline>
<codeline lineno="4734"><highlight class="normal"></highlight></codeline>
<codeline lineno="4735"><highlight class="normal"></highlight></codeline>
<codeline lineno="4736"><highlight class="normal"></highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-------<sp/>Settings<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>M_nu1<sp/>&gt;<sp/>m_mTau-m_tauVec1M)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>M_nu2<sp/>&gt;<sp/>m_mTau-m_tauVec2M)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"></highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//--------<sp/>end<sp/>of<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"></highlight></codeline>
<codeline lineno="4747"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="4748"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"></highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;probCalculatorV9Fast<sp/>:<sp/>phi1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>phi2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi2</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tauvec<sp/>1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1.Py()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1.Pz()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1.E()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1.M()</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tauvec<sp/>2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec2.Px()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec2.Py()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec2.Pz()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec2.E()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec2.M()</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>met<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_metVec.X()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_metVec.Y()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;Mnu1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>M_nu1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Mnu2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>M_nu2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4756"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>solution=NuPsolutionV3(M_nu1,M_nu2,phi1,phi2,nsol1,nsol2);</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="4760"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;probCalculatorV9Fast<sp/>:<sp/>solution<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>solution<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4764"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(solution!=1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-4;</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>refineSolutions<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_nu1,M_nu2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>met_smearL,met_smearP,metvec_tmp.Mod(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsol1,<sp/>nsol2,m_Mvis,m_Meff);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/>refineSolutions<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_nu1,M_nu2,</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsol1,<sp/>nsol2,m_Mvis,m_Meff);</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"></highlight></codeline>
<codeline lineno="4772"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="4773"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>:<sp/>solution<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_nsol<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nsol1:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsol1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nsol2:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsol2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4777"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nsol&lt;=0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"></highlight></codeline>
<codeline lineno="4780"><highlight class="normal"></highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4782"><highlight class="normal"></highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nsol;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>backward<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"></highlight></codeline>
<codeline lineno="4786"><highlight class="normal"></highlight></codeline>
<codeline lineno="4787"><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nuvecsol1<sp/>and<sp/>nuvecsol2<sp/>passed<sp/>by<sp/>MMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4789"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::refineSolutions<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>M_nu1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>M_nu2,</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsol1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsol2,</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>Mvis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>Meff)</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>tau_type1<sp/>=<sp/>preparedInput.type_visTau1;</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>tau_type2<sp/>=<sp/>preparedInput.type_visTau2;</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/>m_nsol=0;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(m_probFinalSolVec.size())&lt;nsolfinalmax)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>ERROR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>probFinalSolVec.size()<sp/>should<sp/>be<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsolfinalmax<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(m_mtautauFinalSolVec.size())&lt;nsolfinalmax)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>ERROR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>mtautauSolVec.size()<sp/>should<sp/>be<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsolfinalmax<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(m_nu1FinalSolVec.size())&lt;nsolfinalmax)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>ERROR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nu1FinalSolVec.size()<sp/>should<sp/>be<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsolfinalmax<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(m_nu2FinalSolVec.size())&lt;nsolfinalmax)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>ERROR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nu1FinalSolVec.size()<sp/>should<sp/>be<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsolfinalmax<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsol1&gt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(nsolmax))<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>ERROR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nsol1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsol1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&gt;<sp/>nsolmax<sp/>!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsolmax<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsol2&gt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(nsolmax))<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>ERROR<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nsol1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsol2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&gt;<sp/>nsolmax<sp/>!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsolmax<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"></highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>in<sp/>refine<sp/>solutions<sp/>nsol1=&quot;<sp/>&lt;&lt;<sp/>nsol1<sp/>&lt;&lt;<sp/>&quot;<sp/>nsol2=&quot;<sp/>&lt;&lt;<sp/>nsol2<sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4807"><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>iter2+=(nsol1*nsol2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngoodsol1=0;</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j1=0;<sp/>j1&lt;nsol1;<sp/>j1++)</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tauvecprob1j<sp/><sp/>=<sp/>tauvecprob1[j1];</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecprob1j=0.;</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SpeedUp<sp/>reference<sp/>to<sp/>avoid<sp/>picking<sp/>again<sp/>in<sp/>again<sp/>in<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>nuvec1_tmpj=nuvecsol1[j1];</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"></highlight></codeline>
<codeline lineno="4817"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USEALLSOLUTION</highlight></codeline>
<codeline lineno="4818"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>first<sp/>or<sp/>second<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>time<sp/>to<sp/>call<sp/>rndm,<sp/>switch<sp/>more<sp/>or<sp/>less<sp/>randomely,<sp/>according<sp/>to<sp/>an<sp/>oscillating<sp/>switch<sp/>perturbed<sp/>by<sp/>m_phi1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nsol1&gt;1)<sp/><sp/>{</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j1==0)<sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>decide<sp/>at<sp/>the<sp/>first<sp/>solution<sp/>which<sp/>one<sp/>we<sp/>will<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pickInt=std::abs(10000*m_Phi1);</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pickDigit=pickInt-10*(pickInt/10);</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pickDigit&lt;5)<sp/>m_switch1=!m_switch1;</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_switch1=!m_switch1;</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"></highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_switch1)<sp/>{</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR1<sp/>skip<sp/>solution<sp/>&quot;<sp/>&lt;&lt;<sp/>j1<sp/>&lt;&lt;<sp/>&quot;<sp/>out<sp/>of<sp/>&quot;<sp/>&lt;&lt;<sp/>nsol1<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4834"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>tauvecsol1j=tauvecsol1[j1];</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"></highlight></codeline>
<codeline lineno="4836"><highlight class="normal"></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"></highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nuvec1_tmpj.SetXYZM(nuvec1_tmpj.Px(),</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuvec1_tmpj.Py(),</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuvec1_tmpj.Pz(),</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_nu1);</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"></highlight></codeline>
<codeline lineno="4844"><highlight class="normal"></highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecsol1j.SetPxPyPzE(0.,0.,0.,0.);</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecsol1j+=nuvec1_tmpj;</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecsol1j+=m_tauVec1;</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"></highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tauvecsol1j.E()&gt;=beamEnergy)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau1_tmpp=tauvecsol1j.P();</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle1=Angle(nuvec1_tmpj,m_tauVec1);</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USETAUVISFORPROB</highlight></codeline>
<codeline lineno="4855"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecprob1j=dTheta3d_probabilityFast(tau_type1,angle1,m_tauVec1P);</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="4857"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecprob1j=dTheta3d_probabilityFast(tau_type1,angle1,tau1_tmpp);</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4859"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ngoodsol1;</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="4864"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>:<sp/>ngoodsol1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ngoodsol1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4868"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngoodsol1==0)<sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;leaving<sp/>refineSolution<sp/>ngoodsol1==0&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngoodsol2=0;</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j2=0;<sp/>j2&lt;nsol2;<sp/>j2++)</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tauvecprob2j<sp/>=<sp/>tauvecprob2[j2];</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecprob2j=0.;</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"></highlight></codeline>
<codeline lineno="4881"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USEALLSOLUTION</highlight></codeline>
<codeline lineno="4882"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>first<sp/>or<sp/>second<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>time<sp/>to<sp/>call<sp/>rndm,<sp/>switch<sp/>more<sp/>or<sp/>less<sp/>randomely,<sp/>according<sp/>to<sp/>an<sp/>oscillating<sp/>switch<sp/>perturbed<sp/>by<sp/>m_phi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nsol2&gt;1)<sp/><sp/>{</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j2==0)<sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>decide<sp/>at<sp/>the<sp/>first<sp/>solution<sp/>which<sp/>one<sp/>we<sp/>will<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pickInt=std::abs(10000*m_Phi2);</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pickDigit=pickInt-10*int(pickInt/10);</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pickDigit&lt;5)<sp/>m_switch2=!m_switch2;</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_switch2=!m_switch2;</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_switch2)<sp/>{</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR2<sp/>skip<sp/>solution<sp/>&quot;<sp/>&lt;&lt;<sp/>j2<sp/>&lt;&lt;<sp/>&quot;<sp/>out<sp/>of<sp/>&quot;<sp/>&lt;&lt;<sp/>nsol2<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4898"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>nuvec2_tmpj=nuvecsol2[j2];</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>tauvecsol2j=tauvecsol2[j2];</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"></highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nuvec2_tmpj.SetXYZM(nuvec2_tmpj.Px(),</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuvec2_tmpj.Py(),</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuvec2_tmpj.Pz(),</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M_nu2);</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"></highlight></codeline>
<codeline lineno="4906"><highlight class="normal"></highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecsol2j.SetPxPyPzE(0.,0.,0.,0.);</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecsol2j+=nuvec2_tmpj;</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecsol2j+=m_tauVec2;</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tauvecsol2j.E()&gt;=beamEnergy)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau2_tmpp=tauvecsol2j.P();</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle2=Angle(nuvec2_tmpj,m_tauVec2);</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USETAUVISFORPROB</highlight></codeline>
<codeline lineno="4914"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecprob2j=dTheta3d_probabilityFast(tau_type2,angle2,m_tauVec2P);</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="4916"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tauvecprob2j=dTheta3d_probabilityFast(tau_type2,angle2,tau2_tmpp);</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4918"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ngoodsol2;</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"></highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"></highlight></codeline>
<codeline lineno="4922"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="4923"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>:<sp/>ngoodsol1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ngoodsol1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ngoodsol2:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ngoodsol2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4927"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngoodsol2==0)<sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;leaving<sp/>refineSolution<sp/>ngoodsol2==0&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"></highlight></codeline>
<codeline lineno="4933"><highlight class="normal"></highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mettauprob=-1.;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"></highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>reloop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j1=0;<sp/>j1&lt;nsol1;++j1)</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tauvecprob1j<sp/>=<sp/>tauvecprob1[j1];</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quit<sp/>already<sp/>if<sp/>this<sp/>sol<sp/>was<sp/>no<sp/>good</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tauvecprob1j==0.)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>nuvec1_tmpj=nuvecsol1[j1];</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>tauvecsol1j=tauvecsol1[j1];</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"></highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j2=0;<sp/>j2&lt;nsol2;++j2)</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tauvecprob2j<sp/>=<sp/>tauvecprob2[j2];</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quit<sp/>already<sp/>if<sp/>this<sp/>sol<sp/>was<sp/>no<sp/>good</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tauvecprob2j==0.)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>nuvec2_tmpj=nuvecsol2[j2];</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>tauvecsol2j=tauvecsol2[j2];</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"></highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cannot<sp/>happen<sp/>if(totalProb&lt;=0.0)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4954"><highlight class="normal"></highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>++iter4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp.SetPxPyPzE(0.,0.,0.,0.);</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp+=tauvecsol1j;</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tautau_tmp+=tauvecsol2j;</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtautau=tautau_tmp.M();</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"></highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(TailCleanUp(tau_type1,m_tauVec1,nuvec1_tmpj,</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_type2,m_tauVec2,nuvec2_tmpj,</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtautau,Mvis,Meff,preparedInput.DelPhiTT)==0)<sp/>{</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="4966"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>:<sp/>exit<sp/>tailcleanup&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4970"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"></highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>met<sp/>probability<sp/>only<sp/>if<sp/>not<sp/>done<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mettauprob==-1.)<sp/>{</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>WALKSTRATEGY==WalkStrategy::RANDOMNONUNIF<sp/>){</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mettauprob=1.<sp/>;</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mettauprob=mEtAndTauProbability();</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"></highlight></codeline>
<codeline lineno="4984"><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"></highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>for<sp/>h<sp/>h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ditauProb=1.0;</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mnuProb=1.0;</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.UseHT<sp/>||<sp/>(tau_type1!=0<sp/>&amp;&amp;<sp/>tau_type2!=0<sp/>))</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ditauProb=TauProbability(tau_type1,m_tauVec1,nuvec1_tmpj,tau_type2,m_tauVec2,nuvec2_tmpj,m_DetMEt);<sp/></highlight><highlight class="comment">//<sp/>customized<sp/>prob<sp/>for<sp/>Njet25=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ditauProb=TauProbability(tau_type1,m_tauVec1,nuvec1_tmpj,tau_type2,m_tauVec2,nuvec2_tmpj);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"></highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseMnuProbability==1)</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type1==0<sp/>&amp;&amp;<sp/>tau_type2==0)<sp/>mnuProb=MnuProbability(nuvec1_tmpj.M())*MnuProbability(nuvec2_tmpj.M());<sp/></highlight><highlight class="comment">//<sp/>lep-lep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type1==0<sp/>&amp;&amp;<sp/>tau_type2!=0)<sp/>mnuProb=MnuProbability(nuvec1_tmpj.M());<sp/></highlight><highlight class="comment">//<sp/>lep-had:<sp/>tau1==lepton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type1!=0<sp/>&amp;&amp;<sp/>tau_type2==0)<sp/>mnuProb=MnuProbability(nuvec2_tmpj.M());<sp/></highlight><highlight class="comment">//<sp/>lep-had:<sp/>tau2==lepton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"></highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>totalProb=m_walkWeight*tauvecprob1j*tauvecprob2j*mettauprob*ditauProb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalProb=m_walkWeight*tauvecprob1j*tauvecprob2j*mettauprob*ditauProb*mnuProb;</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMPITERATION</highlight></codeline>
<codeline lineno="5011"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>100<sp/>to<sp/>get<sp/>positive<sp/>values,<sp/>because<sp/>sort<sp/>is<sp/>confused<sp/>by<sp/>negative<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>int<sp/>dumpInt=100;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dumpInt=0;</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DEBUGV9W1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_iter0</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Phi1+dumpInt</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Phi2+dumpInt</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m1<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_Mnu1+dumpInt</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m2<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_Mnu2+dumpInt</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eL<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_MEtL+dumpInt</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eP<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_MEtP+dumpInt</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tob<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>totalProb</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tb1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tauvecprob1j</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tb2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tauvecprob2j</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>metb<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mettauprob</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dtb<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ditauProb</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>i0<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_iter0</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5029"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="5030"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//debugThisIteration=(totalProb&gt;1e3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5031"><highlight class="normal"></highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"></highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>refineSolutions<sp/>from<sp/>TauProbability<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tau_type1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tau_type1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tauVec1.E&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1.E()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tauVec1.M&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec1.M()</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tau_type2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tau_type2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tauVec2.E&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec2.E()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tauVec2.M&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tauVec2.M()</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nu_vec1.E&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nuvec1_tmpj.E()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nu_vec1.M&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nuvec1_tmpj.M()</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nu_vec2.E&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nuvec2_tmpj.E()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nu_vec2.M&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nuvec2_tmpj.M()</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ditauprob<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ditauProb<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Phi1</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>p2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_Phi2</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m1<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_Mnu1</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m2<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_Mnu2</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eL<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>&lt;&lt;<sp/>m_MEtL</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eP<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_MEtP</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"></highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>:<sp/>totalProb<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>totalProb<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tauprob1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tauvecprob1j<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tauprob2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tauvecprob2j<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>mettauprob<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mettauprob<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ditauProb<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ditauProb<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5052"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalProb&lt;=0)<sp/><sp/>{</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>WARNING<sp/>null<sp/>proba<sp/>solution,<sp/>rejected<sp/>&quot;<sp/>&lt;&lt;<sp/>totalProb<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>count<sp/>solution<sp/>with<sp/>non<sp/>zero<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalProbSum+=totalProb;</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtautauSum+=mtautau;</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"></highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nsol&gt;=</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(nsolfinalmax))<sp/>{</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;refineSolutions<sp/>ERROR<sp/>nsol<sp/>getting<sp/>larger<sp/>than<sp/>nsolfinalmax!!!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_nsol<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>j1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>j2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nsol1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsol1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nsol2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsol2<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--m_nsol;<sp/></highlight><highlight class="comment">//overwrite<sp/>last<sp/>solution.<sp/>However<sp/>this<sp/>should<sp/>really<sp/>never<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"></highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>good<sp/>solution<sp/>found,<sp/>copy<sp/>in<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_mtautauFinalSolVec[m_nsol]=mtautau;</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_probFinalSolVec[m_nsol]=totalProb;</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"></highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>nu1Final<sp/>=<sp/>m_nu1FinalSolVec[m_nsol];</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>&amp;<sp/>nu2Final<sp/>=<sp/>m_nu2FinalSolVec[m_nsol];</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>iv=0;iv&lt;4;++iv){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"></highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu1Final.SetPxPyPzE(nuvec1_tmpj.Px(),nuvec1_tmpj.Py(),nuvec1_tmpj.Pz(),nuvec1_tmpj.E());</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu2Final.SetPxPyPzE(nuvec2_tmpj.Px(),nuvec2_tmpj.Py(),nuvec2_tmpj.Pz(),nuvec2_tmpj.E());</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"></highlight></codeline>
<codeline lineno="5078"><highlight class="normal"></highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_nsol;</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//else<sp/>totalProb&lt;=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"></highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>j2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>j1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>leaving<sp/>refine<sp/>solutions<sp/>with<sp/>sol:&quot;<sp/>&lt;&lt;<sp/>m_nsol<sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nsol;</highlight></codeline>
<codeline lineno="5086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"></highlight></codeline>
<codeline lineno="5088"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MissingMassCalculator::TailCleanUp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vis1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu1,</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vis2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu2,</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>mmc_mass,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>vis_mass,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>eff_mass,</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>dphiTT)<sp/>{</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"></highlight></codeline>
<codeline lineno="5093"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="5094"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tailcleanup<sp/>:<sp/>enter&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5098"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5099"><highlight class="normal"></highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pass_code=1;</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseTailCleanup==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pass_code;</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"></highlight></codeline>
<codeline lineno="5103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGTHISITERATION</highlight></codeline>
<codeline lineno="5104"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugThisIteration)<sp/>{</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tailcleanup<sp/>:<sp/>will<sp/>be<sp/>done&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5108"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>Clean-up<sp/>cuts<sp/>are<sp/>specifically<sp/>for<sp/>rel16<sp/>analyses.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>will<sp/>change<sp/>in<sp/>rel17<sp/>analyses<sp/>and<sp/>after<sp/>the<sp/>MMC<sp/>is<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==0<sp/>&amp;&amp;<sp/>type2==0)<sp/></highlight><highlight class="comment">//<sp/>lepton-lepton<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MrecoMvis=mmc_mass/vis_mass;</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MrecoMvis&gt;2.6)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MrecoMeff=mmc_mass/eff_mass;</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MrecoMeff&gt;1.9)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1p1=nu1.E()/vis1.P();</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2p2=nu2.E()/vis2.P();</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((e1p1+e2p2)&gt;4.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e2p2&gt;4.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e1p1&gt;3.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"></highlight></codeline>
<codeline lineno="5125"><highlight class="normal"></highlight></codeline>
<codeline lineno="5126"><highlight class="normal"></highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//--------<sp/>these<sp/>are<sp/>new<sp/>cuts<sp/>for<sp/>lep-had<sp/>analysis<sp/>for<sp/>Moriond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((type1==0<sp/>||<sp/>type2==0)<sp/>&amp;&amp;<sp/>(type1+type2&gt;0))<sp/></highlight><highlight class="comment">//<sp/>lepton-hadron<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"></highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MMCCalibrationSet==MMCCalibrationSet::MMC2012</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2015HIGHMASS</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::MMC2016MC15C</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_MMCCalibrationSet==MMCCalibrationSet::UPGRADE)</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pass_code;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>TailCleanup<sp/>for<sp/>8<sp/>&amp;<sp/>13<sp/>TeV<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5137"><highlight class="normal"></highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------<sp/>leave<sp/>code<sp/>uncommented<sp/>to<sp/>avoid<sp/>Compilation<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.UseHT)</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MrecoMvis=mmc_mass/vis_mass;</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MrecoMeff=mmc_mass/eff_mass;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x=dphiTT&gt;1.5<sp/>?<sp/>dphiTT<sp/>:<sp/>1.5;</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((MrecoMeff+MrecoMvis)&gt;5.908-1.881*x+0.2995*x*x)</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(type1&gt;0<sp/>&amp;&amp;<sp/>type2&gt;0)<sp/>//<sp/>hadron-hadron<sp/>channel<sp/>:<sp/>no<sp/>tail<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>MrecoMvis=mmc_mass/vis_mass;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(MrecoMvis&gt;1.7)<sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e1p1=nu1.E()/vis1.P();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>e2p2=nu2.E()/vis2.P();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if((e1p1+e2p2)&gt;1.5)<sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(e2p2&gt;1.2)<sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5158"><highlight class="normal"></highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pass_code;</highlight></codeline>
<codeline lineno="5160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"></highlight></codeline>
<codeline lineno="5162"><highlight class="normal"></highlight><highlight class="comment">//-------------------<sp/>simple<sp/>TauProbability<sp/>for<sp/>LFV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5163"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::TauProbabilityLFV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vis1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu1)</highlight></codeline>
<codeline lineno="5164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0;</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseTauProbability==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>apply<sp/>TauProbability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob1=1.0;</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau=1.777;</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R1=nu1.E()/vis1.E();</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---<sp/>dealing<sp/>with<sp/>1st<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1=nu1.M();</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2=vis1.M();</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E1=0.5*(mtau*mtau+m1*m1-m2*m2)/mtau;</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E2=mtau-E1;</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E1&lt;=m1<sp/>||<sp/>E1&gt;=mtau)</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::TauProbability:<sp/>bad<sp/>E1,<sp/>returning<sp/>0<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E2&lt;=m2<sp/>||<sp/>E2&gt;=mtau)</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::TauProbability:<sp/>bad<sp/>E2,<sp/>returning<sp/>0<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/>tlv_tmp.SetPxPyPzE(0.,0.,0.,0.);</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/>tlv_tmp+=nu1;</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/>tlv_tmp+=vis1;</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>double<sp/>p=(nu1+vis1).P();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p=tlv_tmp.P();</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V=p/sqrt(p*p+mtau*mtau);</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p0;</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==0)<sp/>p0=sqrt(E2*E2-m2*m2);<sp/></highlight><highlight class="comment">//<sp/>leptonic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>p0=E1;<sp/></highlight><highlight class="comment">//<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/>prob1=0.5*mtau/(p0*V*pow(R1+1.0,2));</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>too<sp/>large<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/>prob=std::min(prob1,1.);</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="5198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"></highlight></codeline>
<codeline lineno="5200"><highlight class="normal"></highlight></codeline>
<codeline lineno="5201"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::TauProbability(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vis1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu1,</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vis2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu2)</highlight></codeline>
<codeline lineno="5203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0;</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseTauProbability==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>apply<sp/>TauProbability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob1=1.0;</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob2=1.0;</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtau=1.777;</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R1=nu1.E()/vis1.E();</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R2=nu2.E()/vis2.E();</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---<sp/>dealing<sp/>with<sp/>1st<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1=nu1.M();</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2=vis1.M();</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E1=0.5*(mtau*mtau+m1*m1-m2*m2)/mtau;</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E2=mtau-E1;</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E1&lt;=m1<sp/>||<sp/>E1&gt;=mtau)</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::TauProbability:<sp/>bad<sp/>E1,<sp/>returning<sp/>0<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E2&lt;=m2<sp/>||<sp/>E2&gt;=mtau)</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::TauProbability:<sp/>bad<sp/>E2,<sp/>returning<sp/>0<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/>tlv_tmp.SetPxPyPzE(0.,0.,0.,0.);</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/>tlv_tmp+=nu1;</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/>tlv_tmp+=vis1;</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>double<sp/>p=(nu1+vis1).P();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p=tlv_tmp.P();</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V=p/sqrt(p*p+mtau*mtau);</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p0;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==0)<sp/>p0=sqrt(E2*E2-m2*m2);<sp/></highlight><highlight class="comment">//<sp/>leptonic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>p0=E1;<sp/></highlight><highlight class="comment">//<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/>prob1=0.5*mtau/(p0*V*pow(R1+1.0,2));</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>too<sp/>large<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/>prob1=std::min(prob1,1.);</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"></highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//---<sp/>dealing<sp/>with<sp/>2nd<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/>m1=nu2.M();</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/>m2=vis2.M();</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/>E1=0.5*(mtau*mtau+m1*m1-m2*m2)/mtau;</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/>E2=mtau-E1;</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E1&lt;=m1<sp/>||<sp/>E1&gt;=mtau)</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::TauProbability:<sp/>bad<sp/>E1,<sp/>returning<sp/>0<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(E2&lt;=m2<sp/>||<sp/>E2&gt;=mtau)</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseVerbose==1)<sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Warning<sp/>in<sp/>MissingMassCalculator::TauProbability:<sp/>bad<sp/>E2,<sp/>returning<sp/>0<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/>tlv_tmp.SetPxPyPzE(0.,0.,0.,0.);</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/>tlv_tmp+=nu2;</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/>tlv_tmp+=vis2;</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>p=(nu2+vis2).P();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/>p=tlv_tmp.P();</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"></highlight></codeline>
<codeline lineno="5261"><highlight class="normal"></highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/>V=p/sqrt(p*p+mtau*mtau);</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==0)<sp/>p0=sqrt(E2*E2-m2*m2);<sp/></highlight><highlight class="comment">//<sp/>leptonic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>p0=E1;<sp/></highlight><highlight class="comment">//<sp/>hadronic<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/>prob2=0.5*mtau/(p0*V*pow(R2+1.0,2));</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>too<sp/>large<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/>prob2=std::min(prob2,1.);</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/>prob=prob1*prob2;</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="5270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"></highlight></codeline>
<codeline lineno="5272"><highlight class="normal"></highlight></codeline>
<codeline lineno="5273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------<sp/>Updated<sp/>version<sp/>of<sp/>TauProbability<sp/>for<sp/>lep-had<sp/>events<sp/>with<sp/>Njet25=0,<sp/>takes<sp/>into<sp/>account<sp/>Winter-2012<sp/>analysis<sp/>cuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5274"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::TauProbability(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vis1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu1,</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>vis2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>detmet)<sp/>{</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=1.0;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"></highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/><sp/>TAUESCAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>prob;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fUseTauProbability==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>apply<sp/>TauProbability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5282"><highlight class="normal"></highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.UseHT)</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detmet&lt;20.0)<sp/></highlight><highlight class="comment">//<sp/>low<sp/>MET<sp/>Njet=0<sp/>category</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R1=nu1.P()/vis1.P();</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R2=nu2.P()/vis2.P();</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p1[4]={0.417,0.64,0.52,0.678};</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p2[4]={0.23,0.17,0.315,0.319};</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p3[4]={0.18,0.33,0.41,0.299};</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p4[4]={0.033,0.109,0.129,0.096};</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p5[4]={0.145,0.107,0.259,0.304};</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind=3;</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indT=3;</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_1pr[4]={-0.15,-0.13,-0.25,-0.114};</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_1pr[4]={0.40,0.54,0.62,0.57};</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_3pr[4]={-1.08,-1.57,-0.46,-0.39};</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_3pr[4]={0.53,0.85,0.61,0.53};</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ptau=0.0;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Plep=0.0;</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==1<sp/>||<sp/>type1==3)</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptau=(nu1+vis1).P();</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plep=(nu2+vis2).P();</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==1<sp/>||<sp/>type2==3)</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptau=(nu2+vis2).P();</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plep=(nu1+vis1).P();</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Plep&lt;50.0<sp/>&amp;&amp;<sp/>Plep&gt;=45.0)<sp/>ind=2;</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Plep&lt;45.0<sp/>&amp;&amp;<sp/>Plep&gt;=40.0)<sp/>ind=1;</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Plep&lt;40.0)<sp/>ind=0;</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Ptau&lt;50.0<sp/>&amp;&amp;<sp/>Ptau&gt;=45.0)<sp/>indT=2;</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Ptau&lt;45.0<sp/>&amp;&amp;<sp/>Ptau&gt;=40.0)<sp/>indT=1;</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Ptau&lt;40.0)<sp/>indT=0;</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==0)<sp/>prob=prob*(lep_p5[ind]*TMath::Gaus(R1,lep_p1[ind],lep_p2[ind])+TMath::Landau(R1,lep_p3[ind],lep_p4[ind]))/(1+lep_p5[ind]);</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==0)<sp/>prob=prob*(lep_p5[ind]*TMath::Gaus(R2,lep_p1[ind],lep_p2[ind])+TMath::Landau(R2,lep_p3[ind],lep_p4[ind]))/(1+lep_p5[ind]);</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/><sp/>TAUESCAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>prob;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5324"><highlight class="normal"></highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==1)<sp/>prob=prob*TMath::Gaus(R1,m_1pr[indT],s_1pr[indT]);</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==1)<sp/>prob=prob*TMath::Gaus(R2,m_1pr[indT],s_1pr[indT]);</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==3)<sp/>prob=prob*TMath::Gaus(R1,m_3pr[indT],s_3pr[indT]);</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==3)<sp/>prob=prob*TMath::Gaus(R2,m_3pr[indT],s_3pr[indT]);</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"></highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>high<sp/>MET<sp/>Njet=0<sp/>category</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R1=nu1.P()/vis1.P();</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R2=nu2.P()/vis2.P();</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p1[4]={0.441,0.64,0.79,0.8692};</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p2[4]={0.218,0.28,0.29,0.3304};</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p3[4]={0.256,0.33,0.395,0.4105};</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p4[4]={0.048,0.072,0.148,0.1335};</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lep_p5[4]={0.25,0.68,0.10,0.2872};</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind=3;</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_1prong=-3.706;</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_3prong=-5.845;</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ptau=0.0;</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Plep=0.0;</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==1<sp/>||<sp/>type1==3)</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptau=(nu1+vis1).P();</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plep=(nu2+vis2).P();</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==1<sp/>||<sp/>type2==3)</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptau=(nu2+vis2).P();</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Plep=(nu1+vis1).P();</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Plep&lt;50.0<sp/>&amp;&amp;<sp/>Plep&gt;=45.0)<sp/>ind=2;</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Plep&lt;45.0<sp/>&amp;&amp;<sp/>Plep&gt;=40.0)<sp/>ind=1;</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Plep&lt;40.0)<sp/>ind=0;</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale1prong=Ptau&gt;45.0<sp/>?<sp/>1.0<sp/>:<sp/>-1.019/((Ptau*0.0074-0.059)*p_1prong);</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale3prong=Ptau&gt;40.0<sp/>?<sp/>1.0<sp/>:<sp/>-1.24/((Ptau*0.0062-0.033)*p_3prong);</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==0)<sp/>prob=prob*(lep_p5[ind]*TMath::Gaus(R1,lep_p1[ind],lep_p2[ind])+TMath::Landau(R1,lep_p3[ind],lep_p4[ind]))/(1+lep_p5[ind]);</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==0)<sp/>prob=prob*(lep_p5[ind]*TMath::Gaus(R2,lep_p1[ind],lep_p2[ind])+TMath::Landau(R2,lep_p3[ind],lep_p4[ind]))/(1+lep_p5[ind]);</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"></highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/><sp/>TAUESCAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>prob;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5366"><highlight class="normal"></highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==1)<sp/>prob=prob*exp(p_1prong*R1*scale1prong)*fabs(p_1prong*scale1prong)*0.02;<sp/></highlight><highlight class="comment">//<sp/>introduced<sp/>normalization<sp/>to<sp/>account<sp/>for<sp/>sharpening<sp/>of<sp/>probability<sp/>at<sp/>low<sp/>E(tau)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==1)<sp/>prob=prob*exp(p_1prong*R2*scale1prong)*fabs(p_1prong*scale1prong)*0.02;</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==3)<sp/>prob=prob*exp(p_3prong*R1*scale3prong)*fabs(p_3prong*scale3prong)*0.02;</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==3)<sp/>prob=prob*exp(p_3prong*R2*scale3prong)*fabs(p_3prong*scale3prong)*0.02;</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//-----------------<sp/>had-had<sp/>channel<sp/>---------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1&gt;0<sp/>&amp;&amp;<sp/>type2&gt;0)</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"></highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/><sp/>TAUESCAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>prob;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5380"><highlight class="normal"></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.UseHT)<sp/></highlight><highlight class="comment">//<sp/>Events<sp/>with<sp/>no<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"></highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/df7/structR" kindref="compound">R</ref>[2]={nu1.P()/vis1.P(),nu2.P()/vis2.P()};</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E[2]={(nu1+vis1).E(),(nu2+vis2).E()};</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau_type[2]={type1,type2};</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order1=<sp/>vis1.Pt()&gt;vis2.Pt()<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order2=<sp/>vis1.Pt()&gt;vis2.Pt()<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"></highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par_1p[2][6];<sp/></highlight><highlight class="comment">//<sp/>P(tau)-scaling;<sp/>lead,<sp/>sub-lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par_3p[2][6];<sp/></highlight><highlight class="comment">//<sp/>P(tau)-scaling;<sp/>lead,<sp/>sub-lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5392"><highlight class="normal"></highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_1p[0][0]=0.1273;<sp/>par_1p[0][1]=-0.2479;<sp/>par_1p[0][2]=1.0;<sp/>par_1p[0][3]=-43.16;<sp/>par_1p[0][4]=0.0;<sp/>par_1p[0][5]=0.0;</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_1p[1][0]=0.3736;<sp/>par_1p[1][1]=-1.441;<sp/>par_1p[1][2]=1.0;<sp/>par_1p[1][3]=-29.82;<sp/>par_1p[1][4]=0.0;<sp/>par_1p[1][5]=0.0;</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_3p[0][0]=0.1167;<sp/>par_3p[0][1]=-0.1388;<sp/>par_3p[0][2]=1.0;<sp/>par_3p[0][3]=-44.77;<sp/>par_3p[0][4]=0.0;<sp/>par_3p[0][5]=0.0;</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_3p[1][0]=0.3056;<sp/>par_3p[1][1]=-2.18;<sp/>par_3p[1][2]=1.0;<sp/>par_3p[1][3]=-19.09;<sp/>par_3p[1][4]=0.0;<sp/>par_3p[1][5]=0.0;</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>for<sp/>sub-leading<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C1p=0.062;</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C3p=0.052;</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>G1p=1.055;</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>G3p=1.093;</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Probability<sp/>for<sp/>leading<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>no<sp/>jets<sp/>&quot;<sp/>&lt;&lt;<sp/>prob<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5404"><highlight class="normal"></highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type[order1]==1)<sp/></highlight><highlight class="comment">//<sp/>1-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>x=std::min(300.,std::max(E[order1],45.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>50<sp/>to<sp/>be<sp/>safe.<sp/>TO<sp/>be<sp/>finalised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>x=std::min(300.,std::max(E[order1],50.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x=std::min(E[order1],300.0);</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope=par_1p[0][0]+par_1p[0][1]/(par_1p[0][2]*x+par_1p[0][3])+par_1p[0][4]*x<sp/>&gt;<sp/>0.01<sp/>?</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_1p[0][0]+par_1p[0][1]/(par_1p[0][2]*x+par_1p[0][3])+par_1p[0][4]*x<sp/>:<sp/>0.01;</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob*exp(-R[order1]/slope)*0.04/fabs(slope);</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type[order1]==3)<sp/></highlight><highlight class="comment">//<sp/>3-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>x=std::min(300.,std::max(E[order1],45.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>x=std::min(300.,std::max(E[order1],50.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x=std::min(E[order1],300.0);</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope=par_3p[0][0]+par_3p[0][1]/(par_3p[0][2]*x+par_3p[0][3])+par_3p[0][4]*x<sp/>&gt;<sp/>0.01<sp/>?</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_3p[0][0]+par_3p[0][1]/(par_3p[0][2]*x+par_3p[0][3])+par_3p[0][4]*x<sp/>:<sp/>0.01;</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob*exp(-R[order1]/slope)*0.04/fabs(slope);</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Probability<sp/>for<sp/>sub-leading<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type[order2]==1)<sp/></highlight><highlight class="comment">//<sp/>1-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par[4]={0.1147,-0.09675,-35.0,3.711E-11};</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x=std::min(300.,std::max(E[order2],30.0));</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>x=std::min(300.,std::max(E[order2],50.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=G1p*(par_1p[1][0]+par_1p[1][1]/(par_1p[1][2]*x+par_1p[1][3])+par_1p[1][4]*x+par_1p[1][5]*x*x)<sp/>&gt;<sp/>0.01<sp/>?</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G1p*(par_1p[1][0]+par_1p[1][1]/(par_1p[1][2]*x+par_1p[1][3])+par_1p[1][4]*x+par_1p[1][5]*x*x)<sp/>:<sp/>0.01;</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x&lt;36.0)<sp/>x=36.0;</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean=par[0]+par[1]/(x+par[2])+par[3]*pow(x,4);</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob*C1p*TMath::Gaus(R[order2],mean,sigma);</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type[order2]==3)<sp/></highlight><highlight class="comment">//<sp/>3-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x=std::min(300.,std::max(E[order2],20.0));</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>x=std::min(300.,std::max(E[order2],50.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=G3p*(par_3p[1][0]+par_3p[1][1]/(par_3p[1][2]*x+par_3p[1][3])+par_3p[1][4]*x+par_3p[1][5]*x*x)<sp/>&gt;<sp/>0.01<sp/>?</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G3p*(par_3p[1][0]+par_3p[1][1]/(par_3p[1][2]*x+par_3p[1][3])+par_3p[1][4]*x+par_3p[1][5]*x*x)<sp/>:<sp/>0.01;</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par[4]={0.2302,-2.012,-36.08,-0.000373};</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x&lt;37.0)<sp/>x=37.0;</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean=par[0]+par[1]/(x+par[2])+par[3]*x;</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob*C3p*TMath::Gaus(R[order2],mean,sigma);</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!preparedInput.UseHT)<sp/></highlight><highlight class="comment">//<sp/>Events<sp/>with<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R1=nu1.P()/vis1.P();</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R2=nu2.P()/vis2.P();</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E1=(nu1+vis1).E();</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E2=(nu2+vis2).E();</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order1=<sp/>vis1.Pt()&gt;vis2.Pt()<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order2=<sp/>vis1.Pt()&gt;vis2.Pt()<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope_1p[2]={-3.185,-2.052};<sp/></highlight><highlight class="comment">//<sp/>lead,<sp/>sub-lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope_3p[2]={-3.876,-2.853};<sp/></highlight><highlight class="comment">//<sp/>lead,<sp/>sub-lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par_1p[2][3];<sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>below<sp/>100<sp/>GeV;<sp/>lead,<sp/>sub-lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par_3p[2][3];<sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>below<sp/>100<sp/>GeV;<sp/>lead,<sp/>sub-lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_1p[0][0]=-0.3745;<sp/>par_1p[0][1]=0.01417;<sp/>par_1p[0][2]=-7.285E-5;<sp/></highlight><highlight class="comment">//<sp/>[0][i]<sp/>is<sp/>always<sp/>adjusted<sp/>to<sp/>match<sp/>slope<sp/>at<sp/>100<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_1p[1][0]=-0.3683;<sp/>par_1p[1][1]=0.01807;<sp/>par_1p[1][2]=-9.514E-5;</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_3p[0][0]=-0.3055;<sp/>par_3p[0][1]=0.01149;<sp/>par_3p[0][2]=-5.855E-5;</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_3p[1][0]=-0.3410;<sp/>par_3p[1][1]=0.01638;<sp/>par_3p[1][2]=-9.465E-5;</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale1;</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale2;</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==1)<sp/></highlight><highlight class="comment">//<sp/>1-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale1=E1&gt;100.0<sp/>?<sp/>1.0<sp/>:<sp/>1.0/fabs((par_1p[order1][0]+par_1p[order1][1]*E1+par_1p[order1][2]*E1*E1)*slope_1p[order1]);</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale1&lt;1.0)<sp/>scale1=1.0;</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale1&gt;100.0)<sp/>scale1=100.0;</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob*fabs(slope_1p[order1])*scale1*exp(slope_1p[order1]*scale1*R1)*0.04;</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==3)<sp/></highlight><highlight class="comment">//<sp/>3-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale1=E1&gt;100.0<sp/>?<sp/>1.0<sp/>:<sp/>1.0/fabs((par_3p[order1][0]+par_3p[order1][1]*E1+par_3p[order1][2]*E1*E1)*slope_3p[order1]);</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale1&lt;1.0)<sp/>scale1=1.0;</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale1&gt;100.0)<sp/>scale1=100.0;</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob*fabs(slope_3p[order1])*scale1*exp(slope_3p[order1]*scale1*R1)*0.04;</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==1)<sp/></highlight><highlight class="comment">//<sp/>1-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale2=E2&gt;100.0<sp/>?<sp/>1.0<sp/>:<sp/>1.0/fabs((par_1p[order2][0]+par_1p[order2][1]*E2+par_1p[order2][2]*E2*E2)*slope_1p[order2]);</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale2&lt;1.0)<sp/>scale2=1.0;</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale2&gt;100.0)<sp/>scale2=100.0;</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob*fabs(slope_1p[order2])*scale2*exp(slope_1p[order2]*scale2*R2)*0.04;</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type2==3)<sp/></highlight><highlight class="comment">//<sp/>3-prong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale2=E2&gt;100.0<sp/>?<sp/>1.0<sp/>:<sp/>1.0/fabs((par_3p[order2][0]+par_3p[order2][1]*E2+par_3p[order2][2]*E2*E2)*slope_3p[order2]);</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale2&lt;1.0)<sp/>scale2=1.0;</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale2&gt;100.0)<sp/>scale2=100.0;</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob=prob*fabs(slope_3p[order2])*scale2*exp(slope_3p[order2]*scale2*R2)*0.04;</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"></highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"></highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>prob=std::min(prob,1.);<sp/>//<sp/>Sasha<sp/>commented<sp/>out<sp/>this<sp/>line,<sp/>it<sp/>was<sp/>introduced<sp/>by<sp/>David.<sp/>Have<sp/>to<sp/>ask<sp/>about<sp/>its<sp/>purpose.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"></highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="5501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"></highlight></codeline>
<codeline lineno="5503"><highlight class="normal"></highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight><highlight class="comment">//--------<sp/>New<sp/>function<sp/>for<sp/>ditauprob<sp/>like<sp/>Weizman/Freiburg<sp/>guys<sp/>--------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"></highlight></codeline>
<codeline lineno="5506"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::TauProbabilityMatrix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tau1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu1,</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>type2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>tau2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nu2)<sp/>{</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"></highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob=0;</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prob1,prob2;</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"></highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5513"><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mNu1<sp/>=<sp/>nu1.M();</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mNu2<sp/>=<sp/>nu2.M();</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eNu1<sp/>=<sp/>nu1.E();</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eNu2<sp/>=<sp/>nu1.E();</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pNu1<sp/>=<sp/>nu1.P();</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pNu2<sp/>=<sp/>nu2.P();</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"></highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mTau1<sp/>=<sp/>tau1.M();</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mTau2<sp/>=<sp/>tau2.M();</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eTau1<sp/>=<sp/>tau1.E();</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eTau2<sp/>=<sp/>tau2.E();</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pTau1<sp/>=<sp/>tau1.P();</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pTau2<sp/>=<sp/>tau2.P();</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"></highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fcut=0.15;</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct1,ct2;</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"></highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>Angle(tau1,nu1);</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>Angle(tau2,nu2);</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"></highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ca1,ca2,sa1,sa2;</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"></highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/>fastSinCos(a1,sa1,ca1);</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/>fastSinCos(a2,sa2,ca2);</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"></highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculation<sp/>of<sp/>costhetastar<sp/>ct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>costThetaStar=(ca*etau*pn<sp/>-<sp/>en*ptau)/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Sqrt(Power(ca,2)*Power(etau,2)*Power(pn,2)<sp/>+<sp/>Power(mtau,2)*Power(pn,2)<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Power(ca,2)*Power(mtau,2)*Power(pn,2)<sp/>-<sp/>2*ca*en*etau*pn*ptau<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Power(en,2)*Power(ptau,2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5544"><highlight class="normal"></highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/>ct1<sp/>=<sp/>(ca1*eTau1*pNu1<sp/>-<sp/>eNu1*pTau1)/(sqrt(ca1*ca1*eTau1*eTau1*pNu1*pNu1<sp/>+<sp/>mTau1*mTau1*pNu1*pNu1<sp/>-<sp/>ca1*ca1*mTau1*mTau1*pNu1*pNu1<sp/>-<sp/>2*ca1*eNu1*eTau1*pNu1*pTau1<sp/>+<sp/>eNu1*eNu1*pTau1*pTau1));</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"></highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/>ct2<sp/>=<sp/>(ca2*eTau2*pNu2<sp/>-<sp/>eNu2*pTau2)/(sqrt(ca2*ca2*eTau2*eTau2*pNu2*pNu2<sp/>+<sp/>mTau2*mTau2*pNu2*pNu2<sp/>-<sp/>ca2*ca2*mTau2*mTau2*pNu2*pNu2<sp/>-<sp/>2*ca2*eNu2*eTau2*pNu2*pTau2<sp/>+<sp/>eNu2*eNu2*pTau2*pTau2));</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"></highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculation<sp/>of<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>weight=std::abs(x*(1<sp/>-<sp/>x^2)*(1<sp/>+<sp/>x^2<sp/>-<sp/>2*x^4)*(1<sp/>-<sp/>fcut*(1<sp/>-<sp/>x^2))*(4<sp/>-<sp/>5*ct));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5551"><highlight class="normal"></highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>mNu1/mTau1;</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>mNu2/mTau2;</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"></highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==0<sp/>&amp;&amp;<sp/>type2==0)</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prob1<sp/>=<sp/>std::abs(x1<sp/>*<sp/>(1-std::pow(x1,2))<sp/>*<sp/>(1+std::pow(x1,2)-2*std::pow(x1,4))<sp/>*<sp/>(1-fcut*(1-std::pow(x1,2))*(4-5*ct1)));</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prob2<sp/>=<sp/>std::abs(x2<sp/>*<sp/>(1-std::pow(x2,2))<sp/>*<sp/>(1+std::pow(x2,2)-2*std::pow(x2,4))<sp/>*<sp/>(1-fcut*(1-std::pow(x2,2))*(4-5*ct2)));</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"></highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1&gt;0<sp/>&amp;&amp;<sp/>type2==0)</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prob1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prob2<sp/>=<sp/>std::abs(x2<sp/>*<sp/>(1-std::pow(x2,2))<sp/>*<sp/>(1+std::pow(x2,2)-2*std::pow(x2,4))<sp/>*<sp/>(1-fcut*(1-std::pow(x2,2))*(4-5*ct2)));</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"></highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type1==0<sp/>&amp;&amp;<sp/>type2&gt;0)</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prob1<sp/>=<sp/>std::abs(x1<sp/>*<sp/>(1-std::pow(x1,2))<sp/>*<sp/>(1+std::pow(x1,2)-2*std::pow(x1,4))<sp/>*<sp/>(1-fcut*(1-std::pow(x1,2))*(4-5*ct1)));</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prob2<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"></highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/>prob=prob1*prob2;</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"></highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prob;</highlight></codeline>
<codeline lineno="5576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"></highlight></codeline>
<codeline lineno="5578"><highlight class="normal"></highlight></codeline>
<codeline lineno="5579"><highlight class="normal"></highlight><highlight class="comment">//--------<sp/>This<sp/>function<sp/>applies<sp/>correction<sp/>to<sp/>compensate<sp/>for<sp/>the<sp/>off-set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5580"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::MassScale(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>method,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>tau_type1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>tau_type2)<sp/>{</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Fscale=1.0;</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calibration<sp/>for<sp/>rel16<sp/>lep-had<sp/>analysis<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fApplyMassScale==1)</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tau_type1+tau_type2)&gt;0<sp/>&amp;&amp;<sp/>(tau_type1==0<sp/>||<sp/>tau_type2==0))</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(method!=1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(tau_type1==1<sp/>||<sp/>tau_type2==1)<sp/>//<sp/>1-prong<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0=3.014;<sp/>p1=-71.86;<sp/>p2=1.018;<sp/>p3=0.8912;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(mass&gt;91.2)<sp/>Fscale=p0/(p1+p2*mass)+p3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>Fscale=p0/(p1+p2*91.2)+p3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(tau_type1==3<sp/>||<sp/>tau_type2==3)<sp/>//<sp/>3-prong<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0=0.4576;<sp/>p1=-84.22;<sp/>p2=0.9783;<sp/>p3=0.9136;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(mass&gt;91.2)<sp/>Fscale=p0/(p1+p2*mass)+p3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>Fscale=p0/(p1+p2*91.2)+p3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(Fscale&gt;1.0)<sp/>Fscale=1.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(Fscale&lt;0.89)<sp/>Fscale=0.89;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5603"><highlight class="normal"></highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4,<sp/>p5,<sp/>p6,<sp/>p7;</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type1==1<sp/>||<sp/>tau_type2==1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>1-prong<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type1==3<sp/>||<sp/>tau_type2==3)<sp/></highlight><highlight class="comment">//<sp/>3-prong<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0=3.014;<sp/>p1=-71.86;<sp/>p2=1.018;<sp/>p3=0.8912;</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4=0.4576;<sp/>p5=-84.22;<sp/>p6=0.9783;<sp/>p7=0.9136;</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale1=p0/(p1+p2*mass)+p3;</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale3=p4/(p5+p6*mass)+p7;</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mass&gt;91.2)<sp/>Fscale=scale3/scale1;</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale1=p0/(p1+p2*91.2)+p3;</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale3=p4/(p5+p6*91.2)+p7;</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fscale=scale3/scale1;</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Fscale&gt;1.0)<sp/>Fscale=1.0;</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Fscale&lt;0.95)<sp/>Fscale=0.95;</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0/Fscale;</highlight></codeline>
<codeline lineno="5625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"></highlight></codeline>
<codeline lineno="5627"><highlight class="normal"></highlight></codeline>
<codeline lineno="5628"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>if<sp/>MarkovChain<sp/>the<sp/>input<sp/>solutions<sp/>can<sp/>be<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5629"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::handleSolutions()</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"></highlight></codeline>
<codeline lineno="5631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"></highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reject=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalProbSumSol=0.;</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalProbSumSolOld=0.;</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstPointWithSol=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"></highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isol=0;isol&lt;m_nsol;++isol){</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/>totalProbSumSol<sp/><sp/>+=<sp/>m_probFinalSolVec[isol];</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>uMC=-1.;</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notSureToKeep=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>:<sp/>if<sp/>no<sp/>solution,<sp/>the<sp/>point<sp/>is<sp/>treated<sp/>as<sp/>having<sp/>a<sp/>zero<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullParamSpaceScan)<sp/>{</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reject=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>accept<sp/>anyway<sp/>in<sp/>this<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>notSureToKeep=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>need<sp/>to<sp/>test<sp/>on<sp/>prob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nsol&lt;=0)<sp/>{</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>initial<sp/>full<sp/>scaning<sp/>and<sp/>no<sp/>sol<sp/>:<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_markovNFullScan+=1;</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>were<sp/>in<sp/>in<sp/>full<sp/>scan<sp/>mode<sp/>and<sp/>we<sp/>have<sp/>a<sp/>solution,<sp/>switch<sp/>it<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullParamSpaceScan=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPointWithSol=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>as<sp/>this<sp/>is<sp/>the<sp/>first<sp/>point<sp/>without<sp/>a<sp/>solution<sp/>there<sp/>is<sp/>no<sp/>old<sp/>sol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_iter0=0;<sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>counter<sp/>so<sp/>that<sp/>separately<sp/>the<sp/>full<sp/>scan<sp/>pphase<sp/>and<sp/>the<sp/>markov<sp/>phase<sp/>use<sp/>m_NiterRandomLocal<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hack<sp/>for<sp/>hh<sp/>:<sp/>allow<sp/>10<sp/>times<sp/>less<sp/>iteration<sp/>for<sp/>markov<sp/>than<sp/>for<sp/>the<sp/>fullscan<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.type_visTau1!=0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2!=0){</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_NiterRandomLocal/=10;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"></highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"></highlight></codeline>
<codeline lineno="5667"><highlight class="normal"></highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notSureToKeep)</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>Metropolis<sp/>algorithm<sp/>to<sp/>decide<sp/>to<sp/>keep<sp/>this<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>probability<sp/>of<sp/>the<sp/>previous<sp/>point<sp/>and<sp/>the<sp/>current<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isol=0;isol&lt;m_nsolOld;++isol){</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalProbSumSolOld<sp/><sp/>+=m_probFinalSolOldVec[isol];</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"></highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accept<sp/>anyway<sp/>if<sp/>null<sp/>old<sp/>probability<sp/>(should<sp/>only<sp/>happen<sp/>for<sp/>the<sp/>very<sp/>first<sp/>point<sp/>with<sp/>a<sp/>solution)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!firstPointWithSol<sp/><sp/>&amp;&amp;<sp/>totalProbSumSolOld&lt;=0.<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ERROR<sp/>null<sp/>old<sp/>probability<sp/>!!!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>totalProbSumSolOld<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nsolOld<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_nsolOld<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reject=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalProbSumSol<sp/>&gt;<sp/>totalProbSumSolOld)<sp/>{</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>going<sp/>up,<sp/>accept<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reject=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if<sp/>(totalProbSumSol<sp/>&lt;<sp/>1E-16)<sp/>{<sp/>//<sp/>if<sp/>null<sp/>target<sp/>probability,<sp/>reject<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalProbSumSol<sp/>&lt;<sp/>totalProbSumSolOld*1E-6)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>ratio<sp/>of<sp/>probability<sp/>&lt;1e6,<sp/>point<sp/>will<sp/>be<sp/>accepted<sp/>only<sp/><sp/>every<sp/>1E6<sp/>iteration,<sp/>so<sp/>can<sp/>reject<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reject=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>going<sp/>down,<sp/>reject<sp/>with<sp/>a<sp/>probability<sp/>1-totalProbSum/totalProbSumOld)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uMC=randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reject=<sp/>(uMC<sp/>&gt;<sp/>totalProbSumSol/totalProbSumSolOld);</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>if<sp/>reject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5693"><highlight class="normal"></highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>proceed<sp/>with<sp/>the<sp/>handling<sp/>of<sp/>the<sp/>solutions<sp/>wether<sp/>the<sp/>old<sp/>or<sp/>the<sp/>new<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5695"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMPITERATION</highlight></codeline>
<codeline lineno="5696"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DEBUGV9W<sp/>MARKOV<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_iter0</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>full<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fullParamSpaceScan</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>op<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>totalProbSumSolOld</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>np<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>totalProbSumSol</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rej<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reject</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>first<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>firstPointWithSol</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ndupl<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/><sp/><sp/><sp/><sp/>m_markovCountDuplicate</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>u<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>uMC</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nos<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_nsolOld</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ns<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_nsol</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_MEtP0<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_MEtP0</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m_MEtP<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_MEtP</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5710"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5712"><highlight class="normal"></highlight></codeline>
<codeline lineno="5713"><highlight class="normal"></highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>optionally<sp/>fill<sp/>the<sp/>vectors<sp/>with<sp/>the<sp/>complete<sp/>list<sp/>of<sp/>points<sp/>(for<sp/>all<sp/>walkstrategy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5715"><highlight class="normal"></highlight></codeline>
<codeline lineno="5716"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FILLPOINTSOUTPUT</highlight></codeline>
<codeline lineno="5717"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>only<sp/>include<sp/>the<sp/>point<sp/>with<sp/>solutions<sp/>(recommended)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aProb=-999;</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amtautau=-999.;</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"></highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pCode=0;</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!checkAllParamInRange())<sp/><sp/>pCode=-10;</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"></highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>vector<sp/>of<sp/>points<sp/>(for<sp/>mtautau<sp/>take<sp/>only<sp/>first<sp/>sol)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nsol&gt;0)<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/>aProb=totalProbSumSol;</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/><sp/><sp/>amtautau=m_mtautauFinalSolVec.at(0);</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/><sp/>pCode=10;</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>reject)<sp/>pCode+=1;</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"></highlight></codeline>
<codeline lineno="5732"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FILLPOINTSOUTPUTONLYSOL</highlight></codeline>
<codeline lineno="5733"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nsol&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5735"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.prob.push_back(aProb);</highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.mtautau.push_back(amtautau);</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.Phi1.push_back(m_Phi1);</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.Phi2.push_back(m_Phi2);</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.MEtP.push_back(m_MEtP);</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.MEtL.push_back(m_MEtL);</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.MEtX.push_back(m_MEtX);</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.MEtY.push_back(m_MEtY);</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.Mnu1.push_back(m_Mnu1);</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.Mnu2.push_back(m_Mnu2);</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.eTau1.push_back(m_eTau1);</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.eTau2.push_back(m_eTau2);</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.pCode.push_back(pCode);</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aPOI.index.push_back(m_apoiIndex);</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_apoiIndex;</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FILLPOINTSOUTPUTONLYSOL</highlight></codeline>
<codeline lineno="5752"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5754"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5755"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5756"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5757"><highlight class="normal"></highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN){</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reject)<sp/>{</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>point<sp/>reset<sp/>to<sp/>the<sp/>previous<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>:<sp/>only<sp/>place<sp/>where<sp/>m_MEtP<sp/>etc...<sp/>are<sp/>modified<sp/>outside<sp/>spacewalkerXYZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtP=m_MEtP0;</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtL=m_MEtL0;</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Phi1=m_Phi10;</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Phi2=m_Phi20;</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1=m_eTau10;</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2=m_eTau20;</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu1)<sp/>m_Mnu1=m_Mnu10;</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu2)<sp/>m_Mnu2=m_Mnu20;</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5772"><highlight class="normal"></highlight></codeline>
<codeline lineno="5773"><highlight class="normal"></highlight></codeline>
<codeline lineno="5774"><highlight class="normal"></highlight></codeline>
<codeline lineno="5775"><highlight class="normal"></highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>case<sp/>:<sp/>fill<sp/>the<sp/>histogram<sp/>with<sp/>solution,<sp/>using<sp/>current<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fillSolution=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oldToBeUsed=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"></highlight></codeline>
<codeline lineno="5780"><highlight class="normal"></highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>handle<sp/>the<sp/>reject<sp/>or<sp/>accept<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>tricky<sp/>thing<sp/>is<sp/>that<sp/>for<sp/>markov,<sp/>we<sp/>accept<sp/>the<sp/>old<sp/>point<sp/>as<sp/>soon<sp/>as<sp/>a<sp/>new<sp/>accepted<sp/>point<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>weight<sp/>equal<sp/>to<sp/>one<sp/>plus<sp/>the<sp/>number<sp/>of<sp/>rejected<sp/>point<sp/>inbetween</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal"></highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reject)<sp/>{</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fillSolution=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>fill<sp/>solution,<sp/>just<sp/>count<sp/>number<sp/>of<sp/>replication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_markovCountDuplicate+=1;</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nsol&lt;=0)</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_markovNRejectNoSol+=1;</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_markovNRejectMetropolis+=1;</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"></highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>accept,<sp/>will<sp/>fill<sp/>solution<sp/>(except<sp/>for<sp/>very<sp/>first<sp/>point)<sp/><sp/>but<sp/>taking<sp/>the<sp/>values<sp/>from<sp/>the<sp/>previous<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fullParamSpaceScan)<sp/>{</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_markovNAccept+=1;</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!firstPointWithSol)<sp/>{</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillSolution=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldToBeUsed=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillSolution=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>reject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5810"><highlight class="normal"></highlight></codeline>
<codeline lineno="5811"><highlight class="normal"></highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5813"><highlight class="normal"></highlight></codeline>
<codeline lineno="5814"><highlight class="normal"></highlight></codeline>
<codeline lineno="5815"><highlight class="normal"></highlight></codeline>
<codeline lineno="5816"><highlight class="normal"></highlight></codeline>
<codeline lineno="5817"><highlight class="normal"></highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>do<sp/>not<sp/>fill<sp/>solution<sp/>exit<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>first<sp/>point<sp/>with<sp/>solution<sp/>we<sp/>need<sp/>to<sp/>copy<sp/>the<sp/>new<sp/>sol<sp/>into<sp/>the<sp/>old<sp/>one<sp/>before<sp/>leaving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fillSolution)<sp/>{</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN<sp/>&amp;&amp;<sp/>firstPointWithSol<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>point<sp/>is<sp/>the<sp/>future<sp/>previous<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nsolOld=m_nsol;</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isol=0;isol&lt;m_nsol;++isol){</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_probFinalSolOldVec[isol]=m_probFinalSolVec[isol];</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_mtautauFinalSolOldVec[isol]=m_mtautauFinalSolVec[isol];</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nu1FinalSolOldVec[isol]=m_nu1FinalSolVec[isol];</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nu2FinalSolOldVec[isol]=m_nu2FinalSolVec[isol];</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"></highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"></highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"></highlight></codeline>
<codeline lineno="5836"><highlight class="normal"></highlight></codeline>
<codeline lineno="5837"><highlight class="normal"></highlight></codeline>
<codeline lineno="5838"><highlight class="normal"></highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>RMS<sp/>of<sp/>the<sp/>different<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>solSum=0.;</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>solSum2=0.;</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"></highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isol=0;isol&lt;m_nsol;++isol){</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter5;</highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalProb;</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtautau;</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>*<sp/>pnuvec1_tmpj;</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>*<sp/>pnuvec2_tmpj;</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"></highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldToBeUsed)</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalProb<sp/><sp/>=m_probFinalSolOldVec[isol];</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtautau<sp/>=<sp/>m_mtautauFinalSolOldVec[isol];</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnuvec1_tmpj<sp/>=<sp/>&amp;<sp/>m_nu1FinalSolOldVec[isol];</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnuvec2_tmpj<sp/>=<sp/>&amp;<sp/>m_nu2FinalSolOldVec[isol];</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalProb<sp/><sp/>=m_probFinalSolVec[isol];</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtautau<sp/>=<sp/>m_mtautauFinalSolVec[isol];</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnuvec1_tmpj<sp/>=<sp/>&amp;<sp/>m_nu1FinalSolVec[isol];</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pnuvec2_tmpj<sp/>=<sp/>&amp;<sp/>m_nu2FinalSolVec[isol];</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nuvec1_tmpj<sp/>=<sp/>*pnuvec1_tmpj;</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector<sp/>&amp;<sp/>nuvec2_tmpj<sp/>=<sp/>*pnuvec2_tmpj;</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"></highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/>solSum+=mtautau;</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/>solSum2+=mtautau*mtautau;</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"></highlight></codeline>
<codeline lineno="5869"><highlight class="normal"></highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(iter5&lt;=0)<sp/>std::cout<sp/>&lt;&lt;<sp/>iter1<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>mtautau<sp/>&lt;&lt;<sp/>&quot;<sp/>totalprob<sp/>&quot;<sp/>&lt;&lt;<sp/>totalProb<sp/>&lt;&lt;<sp/>&quot;<sp/>tauvecsolE<sp/>&quot;<sp/>&lt;&lt;<sp/>tauvecsol1[0].E()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>tauvecsol2[0].E()&lt;&lt;<sp/>&quot;<sp/>tauvecsolM<sp/>&quot;<sp/>&lt;&lt;<sp/>tauvecsol1[0].M()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>tauvecsol2[0].M()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>fMfit_all<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>fMfit_allNoWeight<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5871"><highlight class="normal"></highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight;</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MarkovChain<sp/>:<sp/>accepted<sp/>events<sp/>already<sp/>distributed<sp/>according<sp/>to<sp/>probability<sp/>distribution,<sp/>so<sp/>weight<sp/>is<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acutally<sp/>to<sp/>have<sp/>a<sp/>proper<sp/>estimate<sp/>of<sp/>per<sp/>bin<sp/>error,<sp/>instead<sp/>of<sp/>putting<sp/>several<sp/>time<sp/>the<sp/>same<sp/>point<sp/>when<sp/>metropolis<sp/>alg<sp/>reject<sp/>one<sp/>(or<sp/>no<sp/>solution),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rather<sp/>put<sp/>it<sp/>with<sp/>the<sp/>multiplicity<sp/>weight.<sp/>Should<sp/>only<sp/>change<sp/>the<sp/>error<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>might<sp/>change<sp/>if<sp/>weighted<sp/>markov<sp/>chain<sp/>are<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>also<sp/>an<sp/>issue<sp/>with<sp/>the<sp/>4<sp/>very<sp/>close<sp/>nearly<sp/>identical<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight=m_markovCountDuplicate+1;<sp/></highlight><highlight class="comment">//<sp/>incremented<sp/>only<sp/>when<sp/>a<sp/>point<sp/>is<sp/>rejected,<sp/>hence<sp/>need<sp/>to<sp/>add<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>other<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight=totalProb;</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"></highlight></codeline>
<codeline lineno="5885"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BURNIN</highlight></codeline>
<codeline lineno="5886"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fillHistos=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>the<sp/>first<sp/>half<sp/>number<sp/>of<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(m_iter0&lt;m_NiterRandomLocal/2)<sp/>fillHistos=false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>first<sp/>thousand<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iter0&lt;1000)<sp/>fillHistos=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"></highlight></codeline>
<codeline lineno="5892"><highlight class="normal"></highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillHistos)</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5896"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_all-&gt;Fill(mtautau,weight);</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DRDR<sp/>mtautau<sp/>&quot;<sp/>&lt;&lt;<sp/>mtautau<sp/>&lt;&lt;<sp/>&quot;<sp/>weight<sp/>&quot;<sp/>&lt;&lt;<sp/>weight<sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMfit_allNoWeight-&gt;Fill(mtautau,1.);</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"></highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>fPXfit1-&gt;Fill(nuvec1_tmpj.Px(),weight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>fPYfit1-&gt;Fill(nuvec1_tmpj.Py(),weight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>fPZfit1-&gt;Fill(nuvec1_tmpj.Pz(),weight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>fPXfit2-&gt;Fill(nuvec2_tmpj.Px(),weight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>fPYfit2-&gt;Fill(nuvec2_tmpj.Py(),weight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>fPZfit2-&gt;Fill(nuvec2_tmpj.Pz(),weight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5906"><highlight class="normal"></highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------<sp/>using<sp/>P*fit<sp/>to<sp/>fill<sp/>Px,y,z_tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>original<sp/>vistau<sp/>are<sp/>used<sp/>there<sp/>deliberately,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>they<sp/>will<sp/>be<sp/>subtracted<sp/>after<sp/>histogram<sp/>fitting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DR,<sp/>kudos<sp/>Antony<sp/>Lesage<sp/>:<sp/>do<sp/>not<sp/>create<sp/>temporary<sp/>TLV<sp/>within<sp/>each<sp/>Fill,<sp/>saves<sp/>10%<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPXfit1-&gt;Fill(preparedInput.vistau1.Px()+nuvec1_tmpj.Px(),totalProb);</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPYfit1-&gt;Fill(preparedInput.vistau1.Py()+nuvec1_tmpj.Py(),totalProb);</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPZfit1-&gt;Fill(preparedInput.vistau1.Pz()+nuvec1_tmpj.Pz(),totalProb);</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPXfit2-&gt;Fill(preparedInput.vistau2.Px()+nuvec2_tmpj.Px(),totalProb);</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPYfit2-&gt;Fill(preparedInput.vistau2.Py()+nuvec2_tmpj.Py(),totalProb);</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fPZfit2-&gt;Fill(preparedInput.vistau2.Pz()+nuvec2_tmpj.Pz(),totalProb);</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"></highlight></codeline>
<codeline lineno="5918"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BURNIN</highlight></codeline>
<codeline lineno="5919"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5921"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalProb&gt;prob_tmp)<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>solution<sp/>with<sp/>highest<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5924"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DUMPITERATION</highlight></codeline>
<codeline lineno="5925"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>mtautau<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mtautau<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>totalProb<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>totalProb<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prob_tmp<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prob_tmp</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nu1:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nuvec1_tmpj.Px()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nuvec1_tmpj.Py()</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nu2:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nuvec2_tmpj.Px()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nuvec2_tmpj.Py()</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>oldToBeUsed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>oldToBeUsed</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl<sp/>;</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5931"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob_tmp=totalProb;</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.Mditau_best=mtautau;</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.Sign_best=-log10(totalProb);;</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.nutau1=nuvec1_tmpj;</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.nutau2=nuvec2_tmpj;</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.vistau1=m_tauVec1;</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.vistau2=m_tauVec2;</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.taufit1=m_tauVec1+nuvec1_tmpj;</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDitauStuffFit.taufit2=m_tauVec2+nuvec2_tmpj;</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"></highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>on<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5943"><highlight class="normal"></highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/>m_markovCountDuplicate=0;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>can<sp/>reset<sp/>the<sp/>duplicate<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5945"><highlight class="normal"></highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN<sp/>&amp;&amp;<sp/>oldToBeUsed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"></highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>point<sp/>is<sp/>the<sp/>future<sp/>previous<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TLV<sp/>copy<sp/>not<sp/>super<sp/>efficient<sp/>but<sp/>not<sp/>dramatic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nsolOld=m_nsol;</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isol=0;isol&lt;m_nsol;++isol){</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_probFinalSolOldVec[isol]=m_probFinalSolVec[isol];</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_mtautauFinalSolOldVec[isol]=m_mtautauFinalSolVec[isol];</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nu1FinalSolOldVec[isol]=m_nu1FinalSolVec[isol];</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nu2FinalSolOldVec[isol]=m_nu2FinalSolVec[isol];</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"></highlight></codeline>
<codeline lineno="5958"><highlight class="normal"></highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"></highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>rms<sp/>of<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>solRMS=sqrt(solSum2/m_nsol-std::pow(solSum/m_nsol,2));</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/>OutputInfo.AveSolRMS+=solRMS;</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"></highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"></highlight></codeline>
<codeline lineno="5968"><highlight class="normal"></highlight></codeline>
<codeline lineno="5969"><highlight class="normal"></highlight></codeline>
<codeline lineno="5970"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::SpaceWalkerInit()<sp/>{</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>could<sp/>use<sp/>function<sp/>pointer<sp/>to<sp/>switch<sp/>between<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/>m_nsolOld=0;</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"></highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresX=preparedInput.METsigmaL;<sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>in<sp/>direction<sp/>parallel<sp/>to<sp/>MET<sp/>resolution<sp/>major<sp/>axis,<sp/>for<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>METresY=preparedInput.METsigmaP;<sp/></highlight><highlight class="comment">//<sp/>MET<sp/>resolution<sp/>in<sp/>direction<sp/>perpendicular<sp/>to<sp/>to<sp/>MET<sp/>resolution<sp/>major<sp/>axis,<sp/>for<sp/>MET<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5976"><highlight class="normal"></highlight></codeline>
<codeline lineno="5977"><highlight class="normal"></highlight></codeline>
<codeline lineno="5978"><highlight class="normal"></highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>precompute<sp/>some<sp/>quantities<sp/>and<sp/>store<sp/>in<sp/>m_<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/>precomputeCache();</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Leptau1=0;<sp/></highlight><highlight class="comment">//<sp/>lepton-tau<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Leptau2=0;</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau1==0)<sp/>Leptau1=1;</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preparedInput.type_visTau2==0)<sp/>Leptau2=1;</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"></highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Leptau1+Leptau2)==2)<sp/></highlight><highlight class="comment">//<sp/>both<sp/>tau&apos;s<sp/>are<sp/>leptonic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan=Nsigma_METscan_ll;</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Leptau1+Leptau2==1)<sp/></highlight><highlight class="comment">//<sp/>lep<sp/>had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan=Nsigma_METscan_lh;</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>hh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Nsigma_METscan=Nsigma_METscan_hh;</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"></highlight></codeline>
<codeline lineno="6000"><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/>Nsigma_METscan2=std::pow(Nsigma_METscan,2);</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"></highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaPhi1=MaxDelPhi(preparedInput.type_visTau1,m_tauVec1P);</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaPhi2=MaxDelPhi(preparedInput.type_visTau2,m_tauVec2P);</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"></highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/>m_walkWeight=1.;</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"></highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dummy<sp/>initial<sp/>value<sp/>to<sp/>avoid<sp/>printout<sp/>with<sp/>random<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/>m_Phi10=0.;</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/>m_Phi20=0.;</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/>m_MEtL0=0.;</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/>m_MEtP0=0.;</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/>m_Mnu10=0.;</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/>m_Mnu20=0.;</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"></highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::GRID){</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="6018"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>GRID<sp/>scanning<sp/>with<sp/>tau<sp/>energy<sp/>scan<sp/>not<sp/>implemented!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6021"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mTau=1.777;</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"></highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Niter=Niter_fit1;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>points<sp/>for<sp/>each<sp/>dR<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NiterMET=Niter_fit2;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>iterations<sp/>for<sp/>each<sp/>MET<sp/>scan<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NiterMnu=Niter_fit3;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>iterations<sp/>for<sp/>Mnu<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6027"><highlight class="normal"></highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1Step=deltaPhi1/Niter;</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1Min=m_tauVec1Phi-deltaPhi1+m_Phi1Step;</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1Max=m_tauVec1Phi+deltaPhi1-m_Phi1Step/2.;</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"></highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2Step=deltaPhi2/Niter;</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2Min=m_tauVec2Phi-deltaPhi2+m_Phi2Step;</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2Max=m_tauVec2Phi+deltaPhi2-m_Phi2Step/2.;</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"></highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu1Min=0.;</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu1Max=0.;</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Leptau1==1)<sp/>{</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Max=m_mTau-m_tauVec1M;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Max=MnuScanRange-m_tauVec1M;</highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Step=m_Mnu1Max/NiterMnu;</highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>max<sp/>to<sp/>avoid<sp/>rounding<sp/>error<sp/>(there<sp/>is<sp/>no<sp/>bin<sp/>value<sp/>close<sp/>to<sp/>max)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Max-=m_Mnu1Step/100.;</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanMnu1=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hadronic,<sp/>no<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Step=m_mTau;</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Max=m_Mnu1Step/2.;</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanMnu1=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"></highlight></codeline>
<codeline lineno="6053"><highlight class="normal"></highlight></codeline>
<codeline lineno="6054"><highlight class="normal"></highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu2Min=0.;</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu2Max=0.;</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Leptau2==1)<sp/>{</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_Mnu2Max=m_mTau-m_tauVec2M;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2Max=MnuScanRange-m_tauVec2M;</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2Step=m_Mnu2Max/NiterMnu;</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>max<sp/>to<sp/>avoid<sp/>rounding<sp/>error<sp/>(there<sp/>is<sp/>no<sp/>bin<sp/>value<sp/>close<sp/>to<sp/>max)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2Max-=m_Mnu2Step/100.;</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanMnu2=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hadronic,<sp/>no<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2Step=m_mTau;</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2Max=m_Mnu2Step/2.;</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanMnu2=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"></highlight></codeline>
<codeline lineno="6072"><highlight class="normal"></highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtLMin=-Nsigma_METscan*METresX;</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtLMax=+Nsigma_METscan*METresX;</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtLStep=(m_MEtLMax-m_MEtLMin)/NiterMET;</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//margin<sp/>for<sp/>rounding<sp/>error.<sp/>Here<sp/>last<sp/>point<sp/>should<sp/>be<sp/>close<sp/>to<sp/>MEtLMax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtLMax+=m_MEtLStep/10.;</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"></highlight></codeline>
<codeline lineno="6079"><highlight class="normal"></highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtPMin=-Nsigma_METscan*METresY;</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtPMax=+Nsigma_METscan*METresY;</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtPStep=(m_MEtPMax-m_MEtPMin)/NiterMET;</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//margin<sp/>for<sp/>rounding<sp/>error.<sp/>Here<sp/>last<sp/>point<sp/>should<sp/>be<sp/>close<sp/>to<sp/>MEtLMax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtPMax+=m_MEtPStep/10.;</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"></highlight></codeline>
<codeline lineno="6086"><highlight class="normal"></highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kind<sp/>of<sp/>a<sp/>hack,<sp/>have<sp/>to<sp/>initialize<sp/>to<sp/>one<sp/>step<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/><sp/><sp/>m_iter0=-1;</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/>m_iterNuPV3=0;</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/>m_testptn1=0;</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/>m_testptn2=0;</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/>m_testdiscri1=0;</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/>m_testdiscri2=0;</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/>m_iterNsuc=0;</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"></highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1=m_Phi1Min;</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2=m_Phi2Min;</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtL=m_MEtLMin;</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtP=m_MEtPMin;</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu1=m_Mnu1Min;</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu2=m_Mnu2Min;</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//decrement<sp/>innermost<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu2-=m_Mnu2Step;</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"></highlight></codeline>
<codeline lineno="6106"><highlight class="normal"></highlight></codeline>
<codeline lineno="6107"><highlight class="normal"></highlight></codeline>
<codeline lineno="6108"><highlight class="normal"></highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"></highlight></codeline>
<codeline lineno="6111"><highlight class="normal"></highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::RANDOM<sp/>||<sp/>WALKSTRATEGY==WalkStrategy::MARKOVCHAIN<sp/>||<sp/>WALKSTRATEGY==WalkStrategy::RANDOMNONUNIF<sp/>){</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mTau=1.777;</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"></highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//seeds<sp/>the<sp/>random<sp/>generator<sp/>in<sp/>a<sp/>reproducible<sp/>way<sp/>from<sp/>the<sp/>phi<sp/>of<sp/>both<sp/>tau;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aux=std::abs(m_tauVec1Phi+</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(m_tauVec2Phi)/100./TMath::Pi())*100;</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/><sp/><sp/>m_seed=(aux-floor(aux))*1E6*(1+RndmSeedAltering)+13;</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"></highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/><sp/><sp/>randomGen-&gt;SetSeed(m_seed);</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>DRDR<sp/>:<sp/>seed<sp/>before<sp/>warmup<sp/>aux<sp/>&quot;<sp/>&lt;&lt;<sp/>aux<sp/>&lt;&lt;<sp/>&quot;<sp/>seed<sp/>&quot;<sp/>&lt;&lt;<sp/>m_seed<sp/>&lt;&lt;<sp/>&quot;<sp/>altering<sp/>&quot;<sp/>&lt;&lt;<sp/><sp/>RndmSeedAltering<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warm<sp/>up<sp/>the<sp/>random<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xgen=0;</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>igen=0;igen&lt;1000;++igen){</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xgen+=randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>DRDR<sp/>:<sp/>seed<sp/>after<sp/>warmup<sp/>&quot;<sp/>&lt;&lt;<sp/>randomGen-&gt;GetSeed()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6127"><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>Niter=Niter_fit1;<sp/>//<sp/>number<sp/>of<sp/>points<sp/>for<sp/>each<sp/>dR<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>NiterMET=Niter_fit2;<sp/>//<sp/>number<sp/>of<sp/>iterations<sp/>for<sp/>each<sp/>MET<sp/>scan<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>NiterMnu=Niter_fit3;<sp/>//<sp/>number<sp/>of<sp/>iterations<sp/>for<sp/>Mnu<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6131"><highlight class="normal"></highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>approximately<sp/>compute<sp/>the<sp/>number<sp/>of<sp/>points<sp/>from<sp/>the<sp/>grid<sp/>scanning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>divide<sp/>by<sp/>abritry<sp/>number<sp/>to<sp/>recover<sp/>timing<sp/>with<sp/>still<sp/>better<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>m_NiterRandom=(NiterMET+1)*(NiterMET+1)*4*Niter*Niter/10;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6135"><highlight class="normal"></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1Min=m_tauVec1Phi-deltaPhi1;</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1Max=m_tauVec1Phi+deltaPhi1;</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1Range=m_Phi1Max-m_Phi1Min;</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"></highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2Min=m_tauVec2Phi-deltaPhi2;</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2Max=m_tauVec2Phi+deltaPhi2;</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2Range=m_Phi2Max-m_Phi2Min;</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"></highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu1Min=0.;</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/><sp/><sp/>m_scanMnu1=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu1=m_Mnu1Min;</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"></highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::RANDOM<sp/>||<sp/>WALKSTRATEGY==WalkStrategy::RANDOMNONUNIF<sp/>){</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>random<sp/>iteration<sp/>is<sp/>NiterRandom<sp/>for<sp/>lh.<sp/>Multiply<sp/>or<sp/>divide<sp/>by<sp/>10<sp/>for<sp/>ll<sp/>and<sp/>hh<sp/>respectively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_NiterRandomLocal=NiterRandom/10;</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN<sp/>){</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>markov<sp/>chain<sp/>use<sp/>factor<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_NiterRandomLocal=NiterRandom/2;</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"></highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NiterRandom<sp/>set<sp/>by<sp/>user<sp/>(default<sp/>is<sp/>-1).<sp/>If<sp/>negative,<sp/>defines<sp/>the<sp/>default<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>more<sp/>automatic<sp/>scaling<sp/>for<sp/>ll<sp/>hl<sp/>hh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NiterRandom&lt;=0)<sp/>{</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN){</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_NiterRandomLocal=100000;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>iterations<sp/>for<sp/>Markov<sp/>for<sp/>lh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.type_visTau1==0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2==0)<sp/>m_NiterRandomLocal*=2;<sp/></highlight><highlight class="comment">//<sp/>multiplied<sp/>for<sp/>ll<sp/>,<sp/>unchecked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.type_visTau1!=0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2!=0)<sp/>m_NiterRandomLocal/=2;<sp/></highlight><highlight class="comment">//<sp/>divided<sp/>for<sp/>hh<sp/>,checked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_NiterRandomLocal=2000000;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>random<sp/>iterations<sp/>for<sp/>lh.<sp/>Multiplied<sp/>by<sp/>10<sp/>for<sp/>ll,<sp/>divided<sp/>by<sp/>10<sp/>for<sp/>hh<sp/>(to<sp/>be<sp/>optimised)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.type_visTau1==0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2==0)<sp/>m_NiterRandomLocal*=10;<sp/></highlight><highlight class="comment">//<sp/>multiplied<sp/>for<sp/>ll<sp/>,<sp/>unchecked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.type_visTau1!=0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2!=0)<sp/>m_NiterRandomLocal/=10;<sp/></highlight><highlight class="comment">//<sp/>divided<sp/>for<sp/>hh<sp/>,<sp/>checked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_NiterRandomLocal=NiterRandom;</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"></highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hack<sp/>for<sp/>hh<sp/>:<sp/>allow<sp/>10<sp/>times<sp/>more<sp/>iteration<sp/>for<sp/>the<sp/>fullscan<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN<sp/>&amp;&amp;<sp/>preparedInput.type_visTau1!=0<sp/>&amp;&amp;<sp/>preparedInput.type_visTau2!=0){</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_NiterRandomLocal*=10;</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"></highlight></codeline>
<codeline lineno="6178"><highlight class="normal"></highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Leptau1==1)<sp/>{</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Max=m_mTau-m_tauVec1M;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Max=MnuScanRange-m_tauVec1M;</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1Range=m_Mnu1Max-m_Mnu1Min;</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanMnu1=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu2Min=0.;</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/><sp/><sp/>m_scanMnu2=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu2=m_Mnu2Min;</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Leptau2==1)<sp/>{</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2Max=m_mTau-m_tauVec2M;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2Max=MnuScanRange-m_tauVec2M;</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2Range=m_Mnu2Max-m_Mnu2Min;</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanMnu2=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"></highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::RANDOM<sp/>||<sp/><sp/>WALKSTRATEGY==WalkStrategy::MARKOVCHAIN){</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtLMin=-Nsigma_METscan*METresX;</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtLMax=+Nsigma_METscan*METresX;</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtLRange=m_MEtLMax-m_MEtLMin;</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"></highlight></codeline>
<codeline lineno="6201"><highlight class="normal"></highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtPMin=-Nsigma_METscan*METresY;</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtPMax=+Nsigma_METscan*METresY;</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtPRange=m_MEtPMax-m_MEtPMin;</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>gaussian<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>do<sp/>as<sp/>well<sp/>for<sp/>tau<sp/>E<sp/>scanning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtLRange=METresX;</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtPRange=METresY;</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"></highlight></codeline>
<codeline lineno="6212"><highlight class="normal"></highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.sigmaEtau1&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sigmaEtau1<sp/>is<sp/>back<sp/>to<sp/>be<sp/>the<sp/>absolute<sp/>energy<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Min=-Nsigma_METscan*preparedInput.sigmaEtau1+preparedInput.vistau1.E();</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Max=+Nsigma_METscan*preparedInput.sigmaEtau1+preparedInput.vistau1.E();</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Min=(1.0-Nsigma_METscan*preparedInput.sigmaEtau1)*preparedInput.vistau1.E();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Max=(1.0+Nsigma_METscan*preparedInput.sigmaEtau1)*preparedInput.vistau1.E();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6219"><highlight class="normal"></highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minEtau<sp/>is<sp/>not<sp/>fully<sp/>optimal<sp/>and<sp/>should<sp/>be<sp/>studied<sp/>more.<sp/>current<sp/>value<sp/>is<sp/>motivated<sp/>by<sp/>end-point<sp/>in<sp/>truth<sp/>Pt(vis_tau)<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>pT<sp/>translated<sp/>in<sp/>minimum<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(m_eTau1Min&lt;minEtau)<sp/>m_eTau1Min=minEtau;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Min=std::max(m_eTau1Min,sqrt(pow(1.777,2)+pow(15.0/preparedInput.vistau1.Pt()*preparedInput.vistau1.P(),2)));<sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>E(tau)<sp/>which<sp/>is<sp/>allowed<sp/>in<sp/>TER<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6224"><highlight class="normal"></highlight></codeline>
<codeline lineno="6225"><highlight class="normal"></highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Range=m_eTau1Max-m_eTau1Min;</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanEtau1=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Min=-1;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Max=-1;</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanEtau1=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"></highlight></codeline>
<codeline lineno="6234"><highlight class="normal"></highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preparedInput.sigmaEtau2&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sigmaEtau2<sp/>is<sp/>back<sp/>to<sp/>be<sp/>the<sp/>absolute<sp/>energy<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Min=-Nsigma_METscan*preparedInput.sigmaEtau2+preparedInput.vistau2.E();</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Max=+Nsigma_METscan*preparedInput.sigmaEtau2+preparedInput.vistau2.E();</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Min=(1.0-Nsigma_METscan*preparedInput.sigmaEtau2)*preparedInput.vistau2.E();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Max=(1.0+Nsigma_METscan*preparedInput.sigmaEtau2)*preparedInput.vistau2.E();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6241"><highlight class="normal"></highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>pT<sp/>translated<sp/>in<sp/>minimum<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(m_eTau2Min&lt;minEtau)<sp/>m_eTau2Min=minEtau;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Min=std::max(m_eTau2Min,sqrt(pow(1.777,2)+pow(15.0/preparedInput.vistau2.Pt()*preparedInput.vistau2.P(),2)));<sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>E(tau)<sp/>which<sp/>is<sp/>allowed<sp/>in<sp/>TER<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Range=m_eTau2Max-m_eTau2Min;</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanEtau2=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Min=-1;</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Max=-1;</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scanEtau2=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"></highlight></codeline>
<codeline lineno="6253"><highlight class="normal"></highlight></codeline>
<codeline lineno="6254"><highlight class="normal"></highlight></codeline>
<codeline lineno="6255"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USEALLSOLUTION</highlight></codeline>
<codeline lineno="6256"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>m_switch1=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/>m_switch2=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6259"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>m_NsucStop=NsucStop;</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rmsStop=RMSStop;</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"></highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/><sp/><sp/>m_iter0=-1;</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/><sp/><sp/>m_iterNuPV3=0;</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/><sp/><sp/>m_testptn1=0;</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/><sp/><sp/>m_testptn2=0;</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/><sp/><sp/>m_testdiscri1=0;</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/><sp/><sp/>m_testdiscri2=0;</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/><sp/><sp/>m_iterNsuc=0;</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_meanbinStop&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_meanbinToBeEvaluated=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_meanbinToBeEvaluated=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"></highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"></highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_markovCountDuplicate=0;</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_markovNRejectNoSol=0;</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_markovNRejectMetropolis=0;</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_markovNAccept=0;</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_markovNFullScan=0;</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>full<sp/>parameter<sp/>space<sp/>scannning<sp/>for<sp/>the<sp/>first<sp/>steps,<sp/>until<sp/>a<sp/>solution<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fullParamSpaceScan=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>step.<sp/>Needs<sp/>to<sp/>be<sp/>tune.<sp/>Start<sp/>with<sp/>simple<sp/>heuristic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ProposalTryMEt&lt;0)</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtProposal=m_MEtPRange/30.;</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtProposal=m_MEtPRange*m_ProposalTryMEt;</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ProposalTryPhi&lt;0)</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_PhiProposal=0.04;</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_PhiProposal=m_ProposalTryPhi;</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>if<sp/>m_Mnu1Range<sp/>!ne<sp/>m_Mnu2Range<sp/>same<sp/>proposal<sp/>will<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu1)</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ProposalTryMnu&lt;0)</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MnuProposal=m_Mnu1Range/10.;</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MnuProposal=m_Mnu1Range*m_ProposalTryMnu;</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu2)</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ProposalTryMnu&lt;0)</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MnuProposal=m_Mnu2Range/10.;</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MnuProposal=m_Mnu2Range*m_ProposalTryMnu;</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"></highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau1)</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ProposalTryEtau&lt;0)</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Proposal=m_eTau1Range*0.05;</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1Proposal=m_eTau1Range*m_ProposalTryEtau;</highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau2)</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ProposalTryEtau&lt;0)</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Proposal=m_eTau2Range*0.05;</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2Proposal=m_eTau2Range*m_ProposalTryEtau;</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"></highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"></highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"></highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SpaceWalker::SpaceWalker<sp/>ERROR<sp/>unknown<sp/>strategy<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>WALKSTRATEGY<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"></highlight></codeline>
<codeline lineno="6357"><highlight class="normal"></highlight></codeline>
<codeline lineno="6358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"></highlight></codeline>
<codeline lineno="6360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>iterator.<sp/>walk<sp/>has<sp/>internal<sp/>counters,<sp/>should<sp/>only<sp/>be<sp/>used<sp/>in<sp/>a<sp/>while<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>far<sp/>only<sp/>implement<sp/>grid<sp/>strategy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>act<sp/>on<sp/>MMC<sp/>data<sp/>member<sp/>to<sp/>be<sp/>fast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6363"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingMassCalculator::SpaceWalkerWalk(){</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"></highlight></codeline>
<codeline lineno="6365"><highlight class="normal"><sp/><sp/>m_MEtX=-999.;</highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/>m_MEtY=-999.;</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"></highlight></codeline>
<codeline lineno="6368"><highlight class="normal"></highlight></codeline>
<codeline lineno="6369"><highlight class="normal"></highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/>const<sp/>int<sp/>iterMax=<sp/>200000000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"></highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/>//<sp/>avoid<sp/>infinite<sp/>loop<sp/>just<sp/>to<sp/>be<sp/>sure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/>if<sp/>(m_iter0==iterMax){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;SpaceWalkerWalk<sp/>ERROR<sp/>max<sp/>number<sp/>of<sp/>iterations<sp/>&quot;<sp/>&lt;&lt;<sp/>iterMax<sp/>&lt;&lt;<sp/>&quot;<sp/>reached.<sp/>Stop.<sp/>&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6377"><highlight class="normal"></highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::GRID)<sp/>{</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_iter0;</highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu2+=m_Mnu2Step;</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Mnu2&lt;m_Mnu2Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu2=m_Mnu2Min;</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"></highlight></codeline>
<codeline lineno="6384"><highlight class="normal"></highlight></codeline>
<codeline lineno="6385"><highlight class="normal"></highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu1+=m_Mnu1Step;</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Mnu1&lt;m_Mnu1Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Mnu1=m_Mnu1Min;</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"></highlight></codeline>
<codeline lineno="6390"><highlight class="normal"></highlight></codeline>
<codeline lineno="6391"><highlight class="normal"></highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtP+=m_MEtPStep;</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MEtP&lt;m_MEtPMax)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtP=m_MEtPMin;</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"></highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtL+=m_MEtLStep;</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_MEtL&lt;m_MEtLMax)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtL=m_MEtLMin;</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"></highlight></codeline>
<codeline lineno="6400"><highlight class="normal"></highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2+=m_Phi2Step;</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Phi2&lt;m_Phi2Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2=m_Phi2Min;</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"></highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1+=m_Phi1Step;</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Phi1&lt;m_Phi1Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1=m_Phi1Min;</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"></highlight></codeline>
<codeline lineno="6409"><highlight class="normal"></highlight></codeline>
<codeline lineno="6410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"></highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::RANDOM<sp/>||<sp/>WALKSTRATEGY==WalkStrategy::RANDOMNONUNIF)<sp/>{</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_iter0;</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"></highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Critere<sp/>d&apos;arret</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_meanbinToBeEvaluated<sp/>&amp;&amp;<sp/>m_iterNsuc==500<sp/>)</highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>markov<sp/>chain<sp/>m_iterNsuc<sp/>is<sp/>the<sp/>number<sp/>of<sp/>*accepted*<sp/>points,<sp/>so<sp/>there<sp/>can<sp/>be<sp/>several<sp/>iterations<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>increment<sp/>of<sp/>m_iterNsuc.<sp/>Hence<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>meanbin<sp/>is<sp/>evaluated<sp/>only<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_meanbinToBeEvaluated=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"></highlight></codeline>
<codeline lineno="6422"><highlight class="normal"></highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Meanbin<sp/>stopping<sp/>criterion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>histInfo(HistInfo::MAXHISTINFO);</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLIDINGWINDOW<sp/>strategy<sp/>to<sp/>avoid<sp/>doing<sp/>the<sp/>parabola<sp/>fit<sp/>now<sp/>given<sp/>it<sp/>will<sp/>not<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxFromHist(fMfit_all,histInfo,MaxHistStrategy::SLIDINGWINDOW);</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>meanbin=histInfo.at(HistInfo::MEANBIN);</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Meanbin<sp/>after<sp/>500<sp/>successes<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>meanbin<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(meanbin&lt;0)</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_NsucStop=-1;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>meaningful<sp/>meanbin<sp/>switch<sp/>back<sp/>to<sp/>niter<sp/>criterion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stopdouble<sp/>=<sp/>500*std::pow((meanbin/m_meanbinStop),2);</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stopint<sp/>=<sp/>stopdouble;</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_NsucStop<sp/>=<sp/>stopint;</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RMS<sp/>stopping<sp/>criterion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>rms=fMfit_all-&gt;GetRMS(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>m_NsucStop=rms*m_rmsStop;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_NsucStop&lt;500)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"></highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>outside<sp/>m_meanbinStop<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iterNsuc==m_NsucStop)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Critere<sp/>d&apos;arret<sp/>pour<sp/>nombre<sp/>de<sp/>succes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iter0==m_NiterRandomLocal)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Critere<sp/>d&apos;arret<sp/>pour<sp/>nombre<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6448"><highlight class="normal"></highlight></codeline>
<codeline lineno="6449"><highlight class="normal"></highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::RANDOM){</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cut<sp/>the<sp/>corners<sp/>in<sp/>MissingET<sp/>(not<sp/>optimised<sp/>at<sp/>all)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>needed<sp/>if<sp/>distribution<sp/>is<sp/>already<sp/>gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtP=m_MEtPMin+m_MEtPRange*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtL=m_MEtLMin+m_MEtLRange*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!checkMEtInRange());</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>WalkStrategy::RANDOMNONUNIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!preparedInput.UseHT){<sp/></highlight><highlight class="comment">//<sp/>&quot;!&quot;<sp/>was<sp/>missing.<sp/>Significant<sp/>bug,<sp/>only<sp/>for<sp/>RANDOMNONUNIF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>gauss<sp/>distribution<sp/>metprange<sp/>is<sp/>the<sp/>sigma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtP=randomGen-&gt;Gaus(0.,m_MEtPRange);</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtL=randomGen-&gt;Gaus(0.,m_MEtLRange);</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(randomGen-&gt;Rndm()&gt;preparedInput.MHtGaussFr/(1+preparedInput.MHtGaussFr)){</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtP=randomGen-&gt;Gaus(0.,preparedInput.MHtSigma1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtP=randomGen-&gt;Gaus(0.,preparedInput.MHtSigma2);</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(randomGen-&gt;Rndm()&gt;preparedInput.MHtGaussFr/(1+preparedInput.MHtGaussFr)){</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtL=randomGen-&gt;Gaus(0.,preparedInput.MHtSigma1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtL=randomGen-&gt;Gaus(0.,preparedInput.MHtSigma2);</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6481"><highlight class="normal"></highlight></codeline>
<codeline lineno="6482"><highlight class="normal"></highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"></highlight></codeline>
<codeline lineno="6485"><highlight class="normal"></highlight></codeline>
<codeline lineno="6486"><highlight class="normal"></highlight></codeline>
<codeline lineno="6487"><highlight class="normal"></highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu1){</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1=m_Mnu1Min+m_Mnu1Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"></highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu2){</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2=m_Mnu2Min+m_Mnu2Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"></highlight></codeline>
<codeline lineno="6496"><highlight class="normal"></highlight></codeline>
<codeline lineno="6497"><highlight class="normal"></highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1=m_Phi1Min+m_Phi1Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2=m_Phi2Min+m_Phi2Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"></highlight></codeline>
<codeline lineno="6501"><highlight class="normal"></highlight></codeline>
<codeline lineno="6502"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="6503"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau1){</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1=m_eTau1Min+m_eTau1Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"></highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau2){</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2=m_eTau2Min+m_eTau2Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6511"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/><sp/><sp/>updateTauKine();<sp/></highlight><highlight class="comment">//<sp/>update<sp/>tau<sp/>kinematics<sp/>if<sp/>tau<sp/>energy<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6513"><highlight class="normal"></highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"></highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WALKSTRATEGY==WalkStrategy::MARKOVCHAIN)<sp/>{</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_iter0;</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"></highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_meanbinToBeEvaluated<sp/>&amp;&amp;<sp/>m_iterNsuc==500<sp/>)</highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>m_meanbinToBeEvaluated<sp/>&amp;&amp;<sp/>m_iterNsuc==500<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>markov<sp/>chain<sp/>m_iterNsuc<sp/>is<sp/>the<sp/>number<sp/>of<sp/>*accepted*<sp/>points,<sp/>so<sp/>there<sp/>can<sp/>be<sp/>several<sp/>iterations<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>increment<sp/>of<sp/>m_iterNsuc.<sp/>Hence<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>meanbin<sp/>is<sp/>evaluated<sp/>only<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_meanbinToBeEvaluated=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"></highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Meanbin<sp/>stopping<sp/>criterion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>histInfo(HistInfo::MAXHISTINFO);</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLIDINGWINDOW<sp/>strategy<sp/>to<sp/>avoid<sp/>doing<sp/>the<sp/>parabola<sp/>fit<sp/>now<sp/>given<sp/>it<sp/>will<sp/>not<sp/>be<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxFromHist(fMfit_all,histInfo,MaxHistStrategy::SLIDINGWINDOW);</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>meanbin=histInfo.at(HistInfo::MEANBIN);</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Meanbin<sp/>after<sp/>500<sp/>successes<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>meanbin<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(meanbin&lt;0)</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_NsucStop=-1;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>meaningful<sp/>meanbin<sp/>switch<sp/>back<sp/>to<sp/>niter<sp/>criterion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stopdouble<sp/>=<sp/>500*std::pow((meanbin/m_meanbinStop),2);</highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stopint<sp/>=<sp/>stopdouble;</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_NsucStop<sp/>=<sp/>stopint;</highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_NsucStop&lt;500)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"></highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>outside<sp/>m_meanbinStop<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iterNsuc==m_NsucStop)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Critere<sp/>d&apos;arret<sp/>pour<sp/>nombre<sp/>de<sp/>succes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6548"><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_iter0==m_NiterRandomLocal)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>now<sp/>simple<sp/>stopping<sp/>criterion<sp/>on<sp/>number<sp/>of<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6550"><highlight class="normal"></highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullParamSpaceScan)<sp/><sp/>{</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>long<sp/>as<sp/>no<sp/>solution<sp/>found<sp/>need<sp/>to<sp/>randomise<sp/>on<sp/>the<sp/>full<sp/>parameter<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6553"><highlight class="normal"></highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cut<sp/>the<sp/>corners<sp/>in<sp/>MissingET<sp/>(not<sp/>optimised<sp/>at<sp/>all)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>needed<sp/>if<sp/>distribution<sp/>is<sp/>already<sp/>gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtP=m_MEtPMin+m_MEtPRange*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MEtL=m_MEtLMin+m_MEtLRange*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!checkMEtInRange());</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"></highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu1){</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1=m_Mnu1Min+m_Mnu1Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"></highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu2){</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2=m_Mnu2Min+m_Mnu2Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"></highlight></codeline>
<codeline lineno="6569"><highlight class="normal"></highlight></codeline>
<codeline lineno="6570"><highlight class="normal"></highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Phi1=m_Phi1Min+m_Phi1Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Phi2=m_Phi2Min+m_Phi2Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"></highlight></codeline>
<codeline lineno="6574"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="6575"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau1){</highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1=m_eTau1Min+m_eTau1Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6578"><highlight class="normal"></highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau2){</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2=m_eTau2Min+m_eTau2Range*randomGen-&gt;Rndm();</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6583"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6584"><highlight class="normal"></highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateTauKine();<sp/></highlight><highlight class="comment">//<sp/>update<sp/>tau<sp/>kinematics<sp/>if<sp/>tau<sp/>energy<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6586"><highlight class="normal"></highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"></highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>the<sp/>real<sp/>markov<sp/>chain<sp/>takes<sp/>place<sp/>:<sp/>&quot;propose&quot;<sp/>the<sp/>new<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>if<sp/>one<sp/>parameter<sp/>goes<sp/>outside<sp/>range,<sp/>this<sp/>should<sp/>not<sp/>be<sp/>fixed<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>later<sp/>in<sp/>handleSolution,<sp/>otherwise<sp/>would<sp/>cause<sp/>a<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6593"><highlight class="normal"></highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_MEtP0<sp/>etc...<sp/>also<sp/>store<sp/>the<sp/>position<sp/>of<sp/>the<sp/>previous<sp/>Markov<sp/>Chain<sp/>step,<sp/>which<sp/>is<sp/>needed<sp/>by<sp/>the<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtP0=m_MEtP;</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtL0=m_MEtL;</highlight></codeline>
<codeline lineno="6597"><highlight class="normal"></highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtP=randomGen-&gt;Gaus(m_MEtP0,m_MEtProposal);</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"></highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/>m_MEtL=randomGen-&gt;Gaus(m_MEtL0,m_MEtProposal);</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"></highlight></codeline>
<codeline lineno="6602"><highlight class="normal"></highlight></codeline>
<codeline lineno="6603"><highlight class="normal"></highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu1){</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu10=m_Mnu1;</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu1=randomGen-&gt;Gaus(m_Mnu10,m_MnuProposal);</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"></highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu2){</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu20=m_Mnu2;</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Mnu2=randomGen-&gt;Gaus(m_Mnu20,m_MnuProposal);</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"></highlight></codeline>
<codeline lineno="6614"><highlight class="normal"></highlight></codeline>
<codeline lineno="6615"><highlight class="normal"></highlight></codeline>
<codeline lineno="6616"><highlight class="normal"></highlight></codeline>
<codeline lineno="6617"><highlight class="normal"></highlight></codeline>
<codeline lineno="6618"><highlight class="normal"></highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi10=m_Phi1;</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi1=randomGen-&gt;Gaus(m_Phi10,m_PhiProposal);</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"></highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi20=m_Phi2;</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"></highlight></codeline>
<codeline lineno="6624"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Phi2=randomGen-&gt;Gaus(m_Phi20,m_PhiProposal);</highlight></codeline>
<codeline lineno="6625"><highlight class="normal"></highlight></codeline>
<codeline lineno="6626"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="6627"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau1){</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau10=m_eTau1;</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau1=randomGen-&gt;Gaus(m_eTau10,m_eTau1Proposal);</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"></highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau2){</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau20=m_eTau2;</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_eTau2=randomGen-&gt;Gaus(m_eTau20,m_eTau2Proposal);</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6637"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/>updateTauKine();<sp/></highlight><highlight class="comment">//<sp/>update<sp/>tau<sp/>kinematics<sp/>if<sp/>tau<sp/>energy<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6639"><highlight class="normal"></highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"></highlight></codeline>
<codeline lineno="6642"><highlight class="normal"></highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"></highlight></codeline>
<codeline lineno="6645"><highlight class="normal"></highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"></highlight></codeline>
<codeline lineno="6648"><highlight class="normal"></highlight></codeline>
<codeline lineno="6649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"></highlight></codeline>
<codeline lineno="6651"><highlight class="normal"></highlight><highlight class="comment">//update<sp/>tau<sp/>kinematics<sp/>if<sp/>tau<sp/>energy<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6652"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::updateTauKine()<sp/>{</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>need<sp/>protection<sp/>if<sp/>to<sp/>small<sp/>tau<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6654"><highlight class="normal"></highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau1){</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>momentum<sp/>keeping<sp/>the<sp/>same<sp/>mass<sp/>and<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newPscale<sp/>=sqrt(std::pow(m_eTau1,2)-preparedInput.vistau1.M2())/preparedInput.vistau1.P();</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec1Px=preparedInput.vistau1.Px()*newPscale;</highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec1Py=preparedInput.vistau1.Py()*newPscale;</highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec1Pz=preparedInput.vistau1.Pz()*newPscale;</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec1E=m_eTau1;</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec1.SetPxPyPzE(m_tauVec1Px,m_tauVec1Py,m_tauVec1Pz,m_tauVec1E);</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec1P=m_tauVec1.P();</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tauvec<sp/>phi<sp/>and<sp/>M<sp/>do<sp/>not<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6665"><highlight class="normal"></highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6667"><highlight class="normal"></highlight></codeline>
<codeline lineno="6668"><highlight class="normal"></highlight></codeline>
<codeline lineno="6669"><highlight class="normal"></highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau2){</highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>momentum<sp/>keeping<sp/>the<sp/>same<sp/>mass<sp/>and<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>newPscale<sp/>=sqrt(std::pow(m_eTau2,2)-std::pow(m_tauVec2M,2))/m_tauVec2P;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newPscale<sp/>=sqrt(std::pow(m_eTau2,2)-preparedInput.vistau2.M2())/preparedInput.vistau2.P();</highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec2Px=preparedInput.vistau2.Px()*newPscale;</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec2Py=preparedInput.vistau2.Py()*newPscale;</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec2Pz=preparedInput.vistau2.Pz()*newPscale;</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec2E=m_eTau2;</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec2.SetPxPyPzE(m_tauVec2Px,m_tauVec2Py,m_tauVec2Pz,m_tauVec2E);</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tauVec2P=m_tauVec2.P();</highlight></codeline>
<codeline lineno="6681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tauvec<sp/>phi<sp/>and<sp/>M<sp/>do<sp/>not<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6682"><highlight class="normal"></highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"></highlight></codeline>
<codeline lineno="6685"><highlight class="normal"></highlight></codeline>
<codeline lineno="6686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"></highlight></codeline>
<codeline lineno="6688"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compute<sp/>cached<sp/>values<sp/>(this<sp/>value<sp/>do<sp/>not<sp/>change<sp/>within<sp/>one<sp/>call<sp/>of<sp/>MMC,<sp/>except<sp/>for<sp/>tau<sp/>e<sp/>scanning)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>cache<sp/>was<sp/>already<sp/>uptodatexs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6690"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingMassCalculator::precomputeCache()<sp/>{</highlight></codeline>
<codeline lineno="6691"><highlight class="normal"></highlight></codeline>
<codeline lineno="6692"><highlight class="normal"></highlight></codeline>
<codeline lineno="6693"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>tau<sp/>4<sp/>vect.<sp/>If<sp/>tau<sp/>E<sp/>scanning,<sp/>these<sp/>vectors<sp/>will<sp/>be<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6694"><highlight class="normal"><sp/><sp/>m_tauVec1=<sp/>preparedInput.vistau1;</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/>m_tauVec2=<sp/>preparedInput.vistau2;</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"></highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TVector2<sp/>&amp;<sp/>metVec<sp/>=<sp/>preparedInput.MetVec;</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"></highlight></codeline>
<codeline lineno="6699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>same=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec1.Phi(),m_tauVec1Phi)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec2.Phi(),m_tauVec2Phi)<sp/>&amp;&amp;<sp/>same<sp/>;</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec1.M(),m_tauVec1M)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec2.M(),m_tauVec2M)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6704"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec1.E(),m_tauVec1E)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec2.E(),m_tauVec2E)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec1.Px(),m_tauVec1Px)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec1.Py(),m_tauVec1Py)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec1.Pz(),m_tauVec1Pz)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec2.Px(),m_tauVec2Px)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec2.Py(),m_tauVec2Py)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec2.Pz(),m_tauVec2Pz)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec1.P(),m_tauVec1P)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6713"><highlight class="normal"><sp/><sp/>same=updateDouble(m_tauVec2.P(),m_tauVec2P)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6714"><highlight class="normal"></highlight></codeline>
<codeline lineno="6715"><highlight class="normal"></highlight></codeline>
<codeline lineno="6716"><highlight class="normal"></highlight></codeline>
<codeline lineno="6717"><highlight class="normal"></highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/>same=updateDouble(1.777,m_mTau)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/>same=updateDouble(std::pow(m_mTau,2),m_mTau2)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/>same=updateDouble(cos(preparedInput.METcovphi),m_metCovPhiCos)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/>same=updateDouble(sin(preparedInput.METcovphi),m_metCovPhiSin)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/>same=updateDouble((m_tauVec1+m_tauVec2).M(),m_Mvis)<sp/>&amp;&amp;<sp/>same<sp/>;</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"></highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>detMet4vec;</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/>detMet4vec.SetPxPyPzE(preparedInput.detMetVec.X(),preparedInput.detMetVec.Y(),0.0,preparedInput.detMetVec.Mod());</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/>same=updateDouble((m_tauVec1+m_tauVec2+detMet4vec).M(),m_Meff)<sp/>&amp;&amp;<sp/>same<sp/>;</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/>same=updateDouble(preparedInput.detMetVec.Mod(),m_DetMEt)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"></highlight></codeline>
<codeline lineno="6729"><highlight class="normal"></highlight></codeline>
<codeline lineno="6730"><highlight class="normal"></highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/>same<sp/>=<sp/>updateDouble<sp/>(preparedInput.HtOffset,m_HtOffset)<sp/>&amp;&amp;<sp/>same<sp/>;</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>if<sp/>useHT<sp/>met_vec<sp/>is<sp/>actually<sp/>-HT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/>same<sp/>=<sp/>updateDouble(metVec.X(),m_inputMEtX)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/>same<sp/>=<sp/>updateDouble(metVec.Y(),m_inputMEtY)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/>same<sp/>=<sp/>updateDouble(metVec.Mod(),m_inputMEtT)<sp/>&amp;&amp;<sp/>same;</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"></highlight></codeline>
<codeline lineno="6737"><highlight class="normal"></highlight></codeline>
<codeline lineno="6738"><highlight class="normal"></highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>same;</highlight></codeline>
<codeline lineno="6740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"></highlight></codeline>
<codeline lineno="6742"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>cache<sp/>was<sp/>uptodate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6743"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingMassCalculator::updateDouble<sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>out)</highlight></codeline>
<codeline lineno="6744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out==in)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/>out=in;</highlight></codeline>
<codeline lineno="6747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"></highlight></codeline>
<codeline lineno="6750"><highlight class="normal"></highlight></codeline>
<codeline lineno="6751"><highlight class="normal"></highlight></codeline>
<codeline lineno="6752"><highlight class="normal"></highlight></codeline>
<codeline lineno="6753"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>all<sp/>parameters<sp/>are<sp/>within<sp/>their<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6754"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingMassCalculator::checkAllParamInRange<sp/><sp/>()</highlight></codeline>
<codeline lineno="6755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"></highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu1)<sp/>{</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Mnu1&lt;m_Mnu1Min)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Mnu1&gt;m_Mnu1Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"></highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanMnu2)<sp/>{</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Mnu2&lt;m_Mnu2Min)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Mnu2&gt;m_Mnu2Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"></highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>note<sp/>that<sp/>since<sp/>there<sp/>is<sp/>a<sp/>coupling<sp/>between<sp/>Met<sp/>and<sp/>tau,<sp/>should<sp/>rigorously<sp/>test<sp/>both<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>however<sp/>since<sp/>the<sp/>3<sp/>sigma<sp/>range<sp/>is<sp/>just<sp/>a<sp/>hack,<sp/>it<sp/>is<sp/>probably<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6769"><highlight class="normal"></highlight></codeline>
<codeline lineno="6770"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TAUESCAN</highlight></codeline>
<codeline lineno="6771"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau1)<sp/>{</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_eTau1&lt;m_eTau1Min)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_eTau1&gt;m_eTau1Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6775"><highlight class="normal"></highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanEtau2)<sp/>{</highlight></codeline>
<codeline lineno="6777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_eTau2&lt;m_eTau2Min)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_eTau2&gt;m_eTau2Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6781"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Phi1&lt;m_Phi1Min)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Phi1&gt;m_Phi1Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"></highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Phi2&lt;m_Phi2Min)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Phi2&gt;m_Phi2Max)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"></highlight></codeline>
<codeline lineno="6788"><highlight class="normal"></highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!checkMEtInRange())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6790"><highlight class="normal"></highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"></highlight></codeline>
<codeline lineno="6793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"></highlight></codeline>
<codeline lineno="6795"><highlight class="normal"></highlight></codeline>
<codeline lineno="6796"><highlight class="normal"></highlight></codeline>
<codeline lineno="6797"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>Met<sp/>is<sp/>within<sp/>disk<sp/>instead<sp/>of<sp/>withing<sp/>square<sp/>(cut<sp/>the<sp/>corners)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6798"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingMassCalculator::checkMEtInRange<sp/><sp/>()</highlight></codeline>
<codeline lineno="6799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>MEt<sp/>is<sp/>in<sp/>allowed<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>is<sp/>3sigma<sp/>disk<sp/>(&quot;cutting<sp/>the<sp/>corners&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;m_metL:&quot;<sp/>&lt;&lt;<sp/>m_MEtL<sp/>&lt;&lt;<sp/>&quot;m_metp:&quot;<sp/>&lt;&lt;<sp/>m_MEtP<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6803"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>METNOTCUTCORNER</highlight></codeline>
<codeline lineno="6804"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::pow(m_MEtL/preparedInput.METsigmaL,2)+std::pow(m_MEtP/preparedInput.METsigmaP,2)<sp/>&gt;<sp/>Nsigma_METscan2)<sp/>{</highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="6811"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>square<sp/>cut.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>small<sp/>margin<sp/>added<sp/>otherwise<sp/>some<sp/>good<sp/>points<sp/>might<sp/>fail<sp/>in<sp/>grid<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(m_MEtL)-1E-10&gt;<sp/>Nsigma_METscan*preparedInput.METsigmaL)<sp/>{</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(m_MEtP)-1E-10&gt;<sp/>Nsigma_METscan*preparedInput.METsigmaP)<sp/>{</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6821"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"></highlight></codeline>
<codeline lineno="6824"><highlight class="normal"></highlight></codeline>
<codeline lineno="6825"><highlight class="normal"></highlight></codeline>
<codeline lineno="6826"><highlight class="normal"></highlight></codeline>
<codeline lineno="6827"><highlight class="normal"></highlight><highlight class="comment">//put<sp/>back<sp/>phi<sp/>within<sp/>-pi,<sp/>+pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6828"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>MissingMassCalculator::fixPhiRange<sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>phi)</highlight></codeline>
<codeline lineno="6829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phiOut=phi;</highlight></codeline>
<codeline lineno="6831"><highlight class="normal"></highlight></codeline>
<codeline lineno="6832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phiOut&gt;0){</highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(phiOut&gt;pi)<sp/>{</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>phiOut-=twopi;</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"></highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(phiOut&lt;-pi)<sp/>{</highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>phiOut+=twopi;</highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>phiOut;</highlight></codeline>
<codeline lineno="6844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6845"><highlight class="normal"></highlight></codeline>
<codeline lineno="6846"><highlight class="normal"></highlight></codeline>
<codeline lineno="6847"><highlight class="normal"></highlight></codeline>
<codeline lineno="6848"><highlight class="normal"></highlight></codeline>
<codeline lineno="6849"><highlight class="normal"></highlight></codeline>
<codeline lineno="6850"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fast<sp/>approximate<sp/>calculation<sp/>of<sp/>sin<sp/>and<sp/>cos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6851"><highlight class="normal"></highlight><highlight class="comment">//<sp/>approximation<sp/>good<sp/>to<sp/>1<sp/>per<sp/>mill.<sp/>s²+c²=1<sp/>strictly<sp/>exact<sp/>though</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6852"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>like<sp/>using<sp/>slightly<sp/>different<sp/>values<sp/>of<sp/>phi1<sp/>and<sp/>phi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6853"><highlight class="normal"></highlight></codeline>
<codeline lineno="6854"><highlight class="normal"></highlight></codeline>
<codeline lineno="6855"><highlight class="normal"></highlight></codeline>
<codeline lineno="6856"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>piOverTwo=pi/2.;</highlight></codeline>
<codeline lineno="6857"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fastB=4/pi;</highlight></codeline>
<codeline lineno="6858"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fastC=-4/(pi*pi);</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fastP=9./40.;</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fastQ=31./40.;</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"></highlight></codeline>
<codeline lineno="6862"><highlight class="normal"></highlight></codeline>
<codeline lineno="6863"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingMassCalculator::fastSinCos<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>phiInput,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>sinPhi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>cosPhi)</highlight></codeline>
<codeline lineno="6864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>normal<sp/>sin<sp/>cos<sp/>if<sp/>switch<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6866"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NOFASTSINCOS</highlight></codeline>
<codeline lineno="6867"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>sinPhi=sin(phiInput);</highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/>cosPhi=cos(phiInput);</highlight></codeline>
<codeline lineno="6869"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="6870"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6871"><highlight class="normal"></highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>=<sp/>fixPhiRange(phiInput);</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"></highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>http://devmaster.net/forums/topic/4648-fast-and-accurate-sinecosine/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>accurate<sp/>to<sp/>1<sp/>per<sp/>mille</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6876"><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>double<sp/>y=fastB*phi+fastC*phi*std::abs(phi);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sinPhi=fastP*(y*std::abs(y)-y)+y;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y=phi*(fastB+fastC*std::abs(phi));</highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/>sinPhi=y*(fastP*std::abs(y)+fastQ);</highlight></codeline>
<codeline lineno="6882"><highlight class="normal"></highlight></codeline>
<codeline lineno="6883"><highlight class="normal"></highlight></codeline>
<codeline lineno="6884"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//note<sp/>that<sp/>one<sp/>could<sp/>use<sp/>cos(phi)=sin(phi+pi/2),<sp/>however<sp/>then<sp/>one<sp/>would<sp/>not<sp/>have<sp/>c²+s²=1<sp/>(would<sp/>get<sp/>it<sp/>only<sp/>within<sp/>1<sp/>per<sp/>mille)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>choice<sp/>here<sp/>is<sp/>to<sp/>keep<sp/>c^2+s^2=1<sp/>so<sp/>everything<sp/>is<sp/>as<sp/>one<sp/>would<sp/>compute<sp/>c<sp/>and<sp/>s<sp/>from<sp/>a<sp/>slightly<sp/>(1<sp/>per<sp/>mille)<sp/>different<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6886"><highlight class="normal"><sp/><sp/>cosPhi=sqrt(1-std::pow(sinPhi,2));</highlight></codeline>
<codeline lineno="6887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(phi)&gt;piOverTwo)<sp/>cosPhi=-cosPhi;</highlight></codeline>
<codeline lineno="6888"><highlight class="normal"></highlight></codeline>
<codeline lineno="6889"><highlight class="normal"></highlight></codeline>
<codeline lineno="6890"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6891"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6893"><highlight class="normal"></highlight></codeline>
<codeline lineno="6894"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::MaxDelPhi(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau_type,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Pvis)</highlight></codeline>
<codeline lineno="6895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>PhiProposal<sp/>has<sp/>to<sp/>be<sp/>fixed<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6897"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USEMAXDELPHI</highlight></codeline>
<codeline lineno="6898"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dRmax_tau+0*Pvis*tau_type;<sp/></highlight><highlight class="comment">//<sp/>hack<sp/>to<sp/>avoid<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6899"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="6900"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxDphi=0.2;</highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==0)<sp/>maxDphi=exp(-3.1-0.0059*Pvis)+0.08;</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==1)<sp/>maxDphi=0.21+0.00031*Pvis;</highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==3)<sp/>maxDphi=0.2+0.00011*Pvis;</highlight></codeline>
<codeline lineno="6904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxDphi;</highlight></codeline>
<codeline lineno="6905"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6906"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="6907"><highlight class="normal"></highlight></codeline>
<codeline lineno="6908"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----<sp/>returns<sp/>dTheta3D<sp/>lower<sp/>and<sp/>upper<sp/>boundaries:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6909"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limit_code=0:<sp/>99%<sp/>lower<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limit_code=1;<sp/>99%<sp/>upper<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limit_code=2;<sp/>95%<sp/>upper<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6912"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingMassCalculator::dTheta3DLimit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>tau_type,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>limit_code,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>P_tau)<sp/>{</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"></highlight></codeline>
<codeline lineno="6914"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WITHDTHETA3DLIM</highlight></codeline>
<codeline lineno="6915"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>the<sp/>test<sp/>ineffective<sp/>if<sp/>desired</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_code==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_code==1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10.;</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_code==2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10.;</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6920"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>limit=1.0;</highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==0)<sp/>limit=0.0;</highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par[3]={0.0,0.0,0.0};</highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>leptonic<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==0)</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==0)<sp/></highlight><highlight class="comment">//<sp/>lower<sp/>99%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=0.3342;</highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-0.3376;</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=-0.001377;</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==1)<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>99%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=3.243;</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-12.87;</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=0.009656;</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==2)<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>95%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=2.927;</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-7.911;</highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=0.007783;</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>1-prong<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==1)</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==0)<sp/></highlight><highlight class="comment">//<sp/>lower<sp/>99%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=0.2673;</highlight></codeline>
<codeline lineno="6952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-14.8;</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=-0.0004859;</highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==1)<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>99%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=9.341;</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-15.88;</highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=0.0333;</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==2)<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>95%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=6.535;</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-8.649;</highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=0.00277;</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>3-prong<sp/>tau&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tau_type==3)</highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==0)<sp/></highlight><highlight class="comment">//<sp/>lower<sp/>99%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=0.2308;</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-15.24;</highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=-0.0009458;</highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==1)<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>99%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=14.58;</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-6.043;</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=-0.00928;</highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==2)<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>95%<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[0]=8.233;</highlight></codeline>
<codeline lineno="6986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[1]=-0.3018;</highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par[2]=-0.009399;</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"></highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(P_tau+par[1])&gt;0.0)<sp/>limit=par[0]/(P_tau+par[1])+par[2];</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit_code==0){</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit&lt;0.0){</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>limit=0.0;</highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>limit&gt;0.03<sp/>){</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>limit=0.03;</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit&lt;0.0<sp/>||<sp/>limit&gt;0.5*TMath::Pi())<sp/>{</highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>limit=0.5*TMath::Pi();</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit&lt;0.05<sp/>&amp;&amp;<sp/>limit&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>limit=0.05;<sp/></highlight><highlight class="comment">//<sp/>parameterization<sp/>only<sp/>runs<sp/>up<sp/>to<sp/>P~220<sp/>GeV<sp/>in<sp/>this<sp/>regime<sp/>will<sp/>set<sp/>an<sp/>upper<sp/>bound<sp/>of<sp/>0.05</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7007"><highlight class="normal"></highlight></codeline>
<codeline lineno="7008"><highlight class="normal"></highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>limit;</highlight></codeline>
<codeline lineno="7010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/DiTauMassTools/Root/MissingMassCalculator.cxx"/>
  </compounddef>
</doxygen>
