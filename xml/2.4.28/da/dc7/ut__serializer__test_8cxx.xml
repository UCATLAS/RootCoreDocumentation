<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/dc7/ut__serializer__test_8cxx" kind="file">
    <compoundname>ut_serializer_test.cxx</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="d3/d1a/testutils_8h" local="yes">testutils.h</includes>
    <includes refid="de/d76/TrigNavStructure_2TrigNavStructure_2StringSerializer_8h" local="yes">TrigNavStructure/StringSerializer.h</includes>
    <incdepgraph>
      <node id="328680">
        <label>iomanip</label>
      </node>
      <node id="328675">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_serializer_test.cxx</label>
        <link refid="ut_serializer_test.cxx"/>
        <childnode refid="328676" relation="include">
        </childnode>
        <childnode refid="328677" relation="include">
        </childnode>
        <childnode refid="328678" relation="include">
        </childnode>
        <childnode refid="328681" relation="include">
        </childnode>
      </node>
      <node id="328682">
        <label>stdint.h</label>
      </node>
      <node id="328676">
        <label>string</label>
      </node>
      <node id="328681">
        <label>TrigNavStructure/StringSerializer.h</label>
        <link refid="de/d76/TrigNavStructure_2TrigNavStructure_2StringSerializer_8h_source"/>
        <childnode refid="328677" relation="include">
        </childnode>
        <childnode refid="328676" relation="include">
        </childnode>
        <childnode refid="328682" relation="include">
        </childnode>
      </node>
      <node id="328677">
        <label>vector</label>
      </node>
      <node id="328679">
        <label>iostream</label>
      </node>
      <node id="328678">
        <label>testutils.h</label>
        <link refid="d3/d1a/testutils_8h_source"/>
        <childnode refid="328679" relation="include">
        </childnode>
        <childnode refid="328680" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/dc7/ut__serializer__test_8cxx_1adb0544b40d27df2a6745f0f7d63db72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool contentMany</definition>
        <argsstring>()</argsstring>
        <name>contentMany</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_serializer_test.cxx" line="7" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_serializer_test.cxx" bodystart="7" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="da/dc7/ut__serializer__test_8cxx_1a540a82193af2b930905fa73fa78a8559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool contentOne</definition>
        <argsstring>()</argsstring>
        <name>contentOne</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_serializer_test.cxx" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_serializer_test.cxx" bodystart="22" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="da/dc7/ut__serializer__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_serializer_test.cxx" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_serializer_test.cxx" bodystart="38" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/StringSerializer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contentMany()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><sp/>in{</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;whoever&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;listens&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>data;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>HLT::StringSerializer::serialize(in,<sp/>data);<sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><sp/>out;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>HLT::StringSerializer::deserialize(data.begin(),<sp/>data.end(),<sp/>out);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sz<sp/>!=<sp/>data.size()<sp/>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;sizes<sp/>reporting<sp/>by<sp/>deserialzie<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>in<sp/>!=<sp/>out<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Content<sp/>after<sp/>deserialziation<sp/>is<sp/>different&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contentOne()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>std::string<sp/>in(</highlight><highlight class="stringliteral">&quot;Another<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>data;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>HLT::StringSerializer::serialize(in,<sp/>data);<sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>std::string<sp/><sp/>out;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>HLT::StringSerializer::deserialize(data.begin(),<sp/>data.end(),<sp/>out);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sz<sp/>!=<sp/>data.size()<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;sizes<sp/>reporting<sp/>by<sp/>deserialzie<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>in<sp/>!=<sp/>out<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Content<sp/>after<sp/>deserialziation<sp/>is<sp/>different&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>contentMany()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;contentMany<sp/>check<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>contentOne()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;contentOne<sp/>check<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_serializer_test.cxx"/>
  </compounddef>
</doxygen>
