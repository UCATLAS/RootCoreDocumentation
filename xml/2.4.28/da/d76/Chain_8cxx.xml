<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d76/Chain_8cxx" kind="file">
    <compoundname>Chain.cxx</compoundname>
    <includes refid="d7/d7c/HLTSignature_8h" local="yes">TrigConfHLTData/HLTSignature.h</includes>
    <includes refid="de/da4/Chain_8h" local="yes">TrigSteeringEvent/Chain.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="329981">
        <label>TrigConfHLTData/HLTLevel.h</label>
        <link refid="dc/d46/HLTLevel_8h_source"/>
        <childnode refid="329968" relation="include">
        </childnode>
      </node>
      <node id="329973">
        <label>iomanip</label>
      </node>
      <node id="329971">
        <label>stdint.h</label>
      </node>
      <node id="329964">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Chain.cxx</label>
        <link refid="Chain.cxx"/>
        <childnode refid="329965" relation="include">
        </childnode>
        <childnode refid="329970" relation="include">
        </childnode>
        <childnode refid="329986" relation="include">
        </childnode>
        <childnode refid="329972" relation="include">
        </childnode>
      </node>
      <node id="329985">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="329983">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="329968">
        <label>string</label>
      </node>
      <node id="329978">
        <label>map</label>
      </node>
      <node id="329976">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="329966" relation="include">
        </childnode>
        <childnode refid="329968" relation="include">
        </childnode>
      </node>
      <node id="329967">
        <label>fstream</label>
      </node>
      <node id="329977">
        <label>TrigConfHLTData/HLTPrescale.h</label>
        <link refid="df/da4/HLTPrescale_8h_source"/>
        <childnode refid="329966" relation="include">
        </childnode>
        <childnode refid="329968" relation="include">
        </childnode>
        <childnode refid="329978" relation="include">
        </childnode>
        <childnode refid="329969" relation="include">
        </childnode>
        <childnode refid="329979" relation="include">
        </childnode>
        <childnode refid="329976" relation="include">
        </childnode>
        <childnode refid="329980" relation="include">
        </childnode>
      </node>
      <node id="329980">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="329969">
        <label>vector</label>
      </node>
      <node id="329979">
        <label>utility</label>
      </node>
      <node id="329986">
        <label>sstream</label>
      </node>
      <node id="329966">
        <label>iosfwd</label>
      </node>
      <node id="329972">
        <label>iostream</label>
      </node>
      <node id="329970">
        <label>TrigSteeringEvent/Chain.h</label>
        <link refid="de/da4/Chain_8h_source"/>
        <childnode refid="329969" relation="include">
        </childnode>
        <childnode refid="329971" relation="include">
        </childnode>
        <childnode refid="329972" relation="include">
        </childnode>
        <childnode refid="329973" relation="include">
        </childnode>
        <childnode refid="329974" relation="include">
        </childnode>
        <childnode refid="329975" relation="include">
        </childnode>
        <childnode refid="329983" relation="include">
        </childnode>
        <childnode refid="329984" relation="include">
        </childnode>
        <childnode refid="329985" relation="include">
        </childnode>
        <childnode refid="329966" relation="include">
        </childnode>
      </node>
      <node id="329984">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="329974">
        <label>TrigSteeringEvent/Enums.h</label>
        <link refid="d5/d69/TrigSteeringEvent_2TrigSteeringEvent_2Enums_8h_source"/>
        <childnode refid="329969" relation="include">
        </childnode>
        <childnode refid="329968" relation="include">
        </childnode>
        <childnode refid="329971" relation="include">
        </childnode>
      </node>
      <node id="329965">
        <label>TrigConfHLTData/HLTSignature.h</label>
        <link refid="d7/d7c/HLTSignature_8h_source"/>
        <childnode refid="329966" relation="include">
        </childnode>
        <childnode refid="329967" relation="include">
        </childnode>
        <childnode refid="329968" relation="include">
        </childnode>
        <childnode refid="329969" relation="include">
        </childnode>
      </node>
      <node id="329982">
        <label>set</label>
      </node>
      <node id="329975">
        <label>TrigConfHLTData/HLTChain.h</label>
        <link refid="d4/d72/HLTChain_8h_source"/>
        <childnode refid="329976" relation="include">
        </childnode>
        <childnode refid="329977" relation="include">
        </childnode>
        <childnode refid="329981" relation="include">
        </childnode>
        <childnode refid="329968" relation="include">
        </childnode>
        <childnode refid="329966" relation="include">
        </childnode>
        <childnode refid="329967" relation="include">
        </childnode>
        <childnode refid="329969" relation="include">
        </childnode>
        <childnode refid="329978" relation="include">
        </childnode>
        <childnode refid="329982" relation="include">
        </childnode>
        <childnode refid="329980" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/d76/Chain_8cxx_1a62ef7e95738bc5df5d356c9589ab98cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(configChain) m_chain_counter</argsstring>
        <name>if</name>
        <param>
          <type>configChain</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Chain.cxx" line="35"/>
      </memberdef>
      <memberdef kind="function" id="da/d76/Chain_8cxx_1a4a20559544fdf4dcb457e258dc976cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Chain.cxx" line="37"/>
      </memberdef>
      <memberdef kind="function" id="da/d76/Chain_8cxx_1a2416e42b2b366eb310fb5434ba869101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>setStatus</definition>
        <argsstring>(HLT::ConfigOnlyChain)</argsstring>
        <name>setStatus</name>
        <param>
          <type>HLT::ConfigOnlyChain</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Chain.cxx" line="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@Project:<sp/>HLT<sp/>Steering</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@Package:<sp/>TrigSteering</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>@Class<sp/><sp/>:<sp/>Chain</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>chain<sp/>of<sp/>signatures</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>@author<sp/>Till<sp/>Eifert<sp/><sp/><sp/><sp/><sp/>&lt;Till.Eifert@cern.ch&gt;<sp/><sp/><sp/><sp/><sp/>-<sp/>U.<sp/>of<sp/>Geneva,<sp/>Switzerland</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@author<sp/>Nicolas<sp/>Berger<sp/><sp/>&lt;Nicolas.Berger@cern.ch&gt;<sp/><sp/>-<sp/>CERN</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>File<sp/>and<sp/>Version<sp/>Information:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>Chain.cxx,v<sp/>1.59<sp/>2009-02-16<sp/>15:47:05<sp/>tbold<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTSignature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/Chain.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">HLT;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">Chain::Chain(<sp/>uint32_t<sp/>serialData<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>:<sp/>m_configChain(0)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>deserialize(serialData);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>setStatus(HLT::ChainInvalid);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">Chain::Chain(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/df4/classTrigConf_1_1HLTChain" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTChain</ref>*<sp/>configChain)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>:<sp/>m_configChain(configChain)<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>,<sp/>m_chain_counter{0}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configChain)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_chain_counter<sp/>=<sp/>m_configChain-&gt;chain_counter();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>setStatus(HLT::ConfigOnlyChain);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Chain::chainPassed()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(chainPassedRaw()<sp/>&amp;&amp;<sp/>(!<ref refid="dd/d69/classHLT_1_1Chain_1a608f970eae2722295e59e4ab2b7b1094" kindref="member" tooltip="is chain prescaled ?">isPrescaled</ref>())<sp/>&amp;&amp;<sp/>(!<ref refid="dd/d69/classHLT_1_1Chain_1a7325feca53db88e84812d51f2f3ae240" kindref="member" tooltip="is chain resurrected ?">isResurrected</ref>()))<sp/>||<sp/><ref refid="dd/d69/classHLT_1_1Chain_1af55bd3883d21a041953b82fe7e747dc1" kindref="member" tooltip="is chain passed through ?">isPassedThrough</ref>();<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">HLT::ErrorCode</ref><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a8ce0aa40a14e3ab038601de76be33421" kindref="member" tooltip="serialize this Chain into the given vector of uint&amp;#39;s">Chain::serialize</ref>(<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>output<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="49"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Chain<sp/>serialized<sp/>structure:<sp/>1<sp/>word<sp/>per<sp/>Chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit:<sp/>active<sp/>?<sp/><sp/>(before<sp/>prescale<sp/>and<sp/>passThrough)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit:<sp/>prescaled<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit:<sp/>passedThrough<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>7<sp/>bit:<sp/>last<sp/>active<sp/>step<sp/>=&gt;<sp/>[0,127]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bit:<sp/>chainCounter<sp/><sp/><sp/><sp/>=&gt;<sp/>[0,65535]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>6<sp/>bit:<sp/>ErrorCode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>[0,63]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>serialize<sp/>data:<sp/>first<sp/>3<sp/>bits<sp/>for<sp/>Active,<sp/>Prescaled,<sp/>passThrough<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>uint32_t<sp/>chainWord<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chainPassedRaw())<sp/><sp/>chainWord<sp/>|=<sp/>0x1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d69/classHLT_1_1Chain_1a608f970eae2722295e59e4ab2b7b1094" kindref="member" tooltip="is chain prescaled ?">isPrescaled</ref>())<sp/><sp/><sp/><sp/><sp/>chainWord<sp/>|=<sp/>0x2;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d69/classHLT_1_1Chain_1af55bd3883d21a041953b82fe7e747dc1" kindref="member" tooltip="is chain passed through ?">isPassedThrough</ref>())<sp/>chainWord<sp/>|=<sp/>0x4;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>next,<sp/>6<sp/>bits<sp/>for<sp/>the<sp/>last<sp/>active<sp/>step<sp/>(64<sp/>steps)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>chainWord<sp/>|=<sp/>((<ref refid="dd/d69/classHLT_1_1Chain_1a4d6ce99f42bb375eb0a4248e9629cff4" kindref="member" tooltip="Current step of this chain.">m_currentStep</ref><sp/>&amp;<sp/>0x0000003f)<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="dd/d69/classHLT_1_1Chain_1a7325feca53db88e84812d51f2f3ae240" kindref="member" tooltip="is chain resurrected ?">isResurrected</ref>())<sp/>chainWord<sp/>|=<sp/>0x200;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>next,<sp/>16<sp/>bits<sp/>for<sp/>the<sp/>chain<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>chainWord<sp/>|=<sp/>((<ref refid="dd/d69/classHLT_1_1Chain_1a2372b9186552e884733b2b912264e141" kindref="member" tooltip="return the unique identifier of this Chain (uint)">getChainCounter</ref>()<sp/>&amp;<sp/>0x0000ffff)<sp/>&lt;&lt;<sp/>(3+6+1));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>next,<sp/>6<sp/>bits<sp/>for<sp/>the<sp/>errorCode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>chainWord<sp/>|=<sp/>((<ref refid="dd/d69/classHLT_1_1Chain_1a474b4e3806e3a35011384d91b78ed369" kindref="member" tooltip="most severe error code of execution">m_errorCode</ref><sp/>&amp;<sp/>0x0000003f)<sp/>&lt;&lt;<sp/>(3+6+1+16));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>output.push_back(chainWord);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HLT::OK;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">HLT::ErrorCode</ref><sp/><ref refid="dd/d69/classHLT_1_1Chain_1ad85112066fc830a102c853912e34fef7" kindref="member" tooltip="set bool decisions directly">Chain::setDecisions</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passedraw,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passedthrough,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prescaled,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resurrected)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>m_status<sp/>=<sp/>ChainOK;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>m_passedRaw<sp/>=<sp/>passedraw;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1aecafd9ba6b525bd025224e7289cfea88" kindref="member" tooltip="Flagged as &amp;quot;passedThrough&amp;quot; for this event ?">m_passThrough</ref><sp/><sp/><sp/><sp/>=<sp/>passedthrough;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a0400db27c36d988e85ee4f2dac1c404c" kindref="member" tooltip="Flagged as &amp;quot;prescaled&amp;quot; for this event ?">m_prescaled</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>prescaled;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a50122b8bdf61d9fc1a85ab0ec78a952e" kindref="member" tooltip="flag to mar that chain was originally prescalled but is reexecuted">m_resurrected</ref><sp/><sp/><sp/><sp/>=<sp/>resurrected;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>deduce<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_currentStep<sp/><sp/><sp/><sp/>=<sp/>0;<sp/>//<sp/>can&apos;t<sp/>deduce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_chain_counter<sp/><sp/>=<sp/>(<sp/>chainWord<sp/>&gt;&gt;<sp/>(3+7))<sp/>&amp;<sp/>0x0000ffff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_errorCode<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>static_cast&lt;HLT::ErrorCode&gt;((<sp/>chainWord<sp/>&gt;&gt;<sp/>(3+7+16))<sp/>&amp;<sp/>0x0000003f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HLT::OK;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">HLT::ErrorCode</ref><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a66f2bd1f5c86daa95365732ccf0c843c" kindref="member" tooltip="deserialize this Chain from given vector of uint&amp;#39;s">Chain::deserialize</ref>(uint32_t<sp/>chainWord)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>m_status<sp/>=<sp/>ChainOK;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>m_passedRaw<sp/>=<sp/>chainWord<sp/>&amp;<sp/>(0x1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1aecafd9ba6b525bd025224e7289cfea88" kindref="member" tooltip="Flagged as &amp;quot;passedThrough&amp;quot; for this event ?">m_passThrough</ref><sp/><sp/><sp/><sp/>=<sp/>chainWord<sp/>&amp;<sp/>(0x4);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a0400db27c36d988e85ee4f2dac1c404c" kindref="member" tooltip="Flagged as &amp;quot;prescaled&amp;quot; for this event ?">m_prescaled</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>chainWord<sp/>&amp;<sp/>(0x2);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a50122b8bdf61d9fc1a85ab0ec78a952e" kindref="member" tooltip="flag to mar that chain was originally prescalled but is reexecuted">m_resurrected</ref><sp/><sp/><sp/><sp/>=<sp/>chainWord<sp/>&amp;<sp/>(0x200);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a4d6ce99f42bb375eb0a4248e9629cff4" kindref="member" tooltip="Current step of this chain.">m_currentStep</ref><sp/><sp/><sp/><sp/>=<sp/>(<sp/>chainWord<sp/>&gt;&gt;<sp/>3)<sp/><sp/><sp/>&amp;<sp/>0x0000003f;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1ae0b397b0854691ec4520380ed0d99a22" kindref="member" tooltip="chain counter from configuration (copied here for speed)">m_chain_counter</ref><sp/><sp/>=<sp/>(<sp/>chainWord<sp/>&gt;&gt;<sp/>(3+7))<sp/>&amp;<sp/>0x0000ffff;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a474b4e3806e3a35011384d91b78ed369" kindref="member" tooltip="most severe error code of execution">m_errorCode</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">HLT::ErrorCode</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((<sp/>chainWord<sp/>&gt;&gt;<sp/>(3+7+16))<sp/>&amp;<sp/>0x0000003f);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/>//<sp/>Put<sp/>m_currentStep<sp/>signatures<sp/>in<sp/>the<sp/>vector</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/>for<sp/>(unsigned<sp/>int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;unsigned<sp/>int&gt;(m_currentStep);<sp/>i++)<sp/>m_signatures.push_back(0);</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/>//<sp/>if<sp/>chain<sp/>didn&apos;t<sp/>pass,<sp/>add<sp/>one<sp/>more<sp/>signature...</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/>if<sp/>(!(chainWord<sp/>&amp;<sp/>(0x1)))<sp/><sp/>m_signatures.push_back(0);</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HLT::OK;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a6373615a609c6a7511da2d797d898c73" kindref="member" tooltip="unpack chain counter from the serialized word">HLT::Chain::inquireChainCounter</ref>(uint32_t<sp/>chainWord)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>chainWord<sp/>&gt;&gt;<sp/>(3+7))<sp/>&amp;<sp/>0x0000ffff;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a6eacb0f4b8d4839b020c8e50c4f65570" kindref="member" tooltip="restes the bits to the basic state">HLT::Chain::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a474b4e3806e3a35011384d91b78ed369" kindref="member" tooltip="most severe error code of execution">m_errorCode</ref><sp/><sp/><sp/>=<sp/>HLT::OK;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>m_passedRaw<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1aecafd9ba6b525bd025224e7289cfea88" kindref="member" tooltip="Flagged as &amp;quot;passedThrough&amp;quot; for this event ?">m_passThrough</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a0400db27c36d988e85ee4f2dac1c404c" kindref="member" tooltip="Flagged as &amp;quot;prescaled&amp;quot; for this event ?">m_prescaled</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a50122b8bdf61d9fc1a85ab0ec78a952e" kindref="member" tooltip="flag to mar that chain was originally prescalled but is reexecuted">m_resurrected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="dd/d69/classHLT_1_1Chain_1a4d6ce99f42bb375eb0a4248e9629cff4" kindref="member" tooltip="Current step of this chain.">m_currentStep</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">std::ostream&amp;<sp/><ref refid="dc/d8d/namespaceHLT_1a23224656633f3dd49e9af5b1a6c33c9e" kindref="member" tooltip="Overload of &amp;lt;&amp;lt; operator for both, MsgStream and std::ostream.">HLT::operator &lt;&lt; </ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d69/classHLT_1_1Chain" kindref="compound">Chain</ref>&amp;<sp/>c)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>c.<ref refid="dd/d69/classHLT_1_1Chain_1a8951cd3508c0b5e06e4f29c87cec07f7" kindref="member" tooltip="templated print stream method so that one can simply write std::cout &amp;lt;&amp;lt; myChain...">print</ref>(os);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">MsgStream&amp;<sp/><ref refid="dc/d8d/namespaceHLT_1a23224656633f3dd49e9af5b1a6c33c9e" kindref="member" tooltip="Overload of &amp;lt;&amp;lt; operator for both, MsgStream and std::ostream.">HLT::operator &lt;&lt; </ref>(MsgStream&amp;<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d69/classHLT_1_1Chain" kindref="compound">Chain</ref>&amp;<sp/>c)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>c.<ref refid="dd/d69/classHLT_1_1Chain_1a8951cd3508c0b5e06e4f29c87cec07f7" kindref="member" tooltip="templated print stream method so that one can simply write std::cout &amp;lt;&amp;lt; myChain...">print</ref>(msg);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Chain.cxx"/>
  </compounddef>
</doxygen>
