<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d28/CutBookkeeperContainer__v1_8cxx" kind="file">
    <compoundname>CutBookkeeperContainer_v1.cxx</compoundname>
    <includes refid="d1/df6/CutBookkeeperContainer__v1_8h" local="yes">xAODCutFlow/versions/CutBookkeeperContainer_v1.h</includes>
    <incdepgraph>
      <node id="362974">
        <label>list</label>
      </node>
      <node id="362983">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="362968" relation="include">
        </childnode>
        <childnode refid="362975" relation="include">
        </childnode>
        <childnode refid="362959" relation="include">
        </childnode>
        <childnode refid="362964" relation="include">
        </childnode>
        <childnode refid="362900" relation="include">
        </childnode>
      </node>
      <node id="362968">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="362938">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="362990">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="362991" relation="include">
        </childnode>
        <childnode refid="362969" relation="include">
        </childnode>
        <childnode refid="362908" relation="include">
        </childnode>
        <childnode refid="362992" relation="include">
        </childnode>
      </node>
      <node id="362955">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="362899" relation="include">
        </childnode>
        <childnode refid="362901" relation="include">
        </childnode>
        <childnode refid="362908" relation="include">
        </childnode>
        <childnode refid="362909" relation="include">
        </childnode>
      </node>
      <node id="362957">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="362917" relation="include">
        </childnode>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362958" relation="include">
        </childnode>
        <childnode refid="362918" relation="include">
        </childnode>
      </node>
      <node id="362956">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="362907">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="362909">
        <label>functional</label>
      </node>
      <node id="362965">
        <label>boost/version.hpp</label>
      </node>
      <node id="362905">
        <label>limits</label>
      </node>
      <node id="362958">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="362936">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="362902">
        <label>iterator</label>
      </node>
      <node id="362919">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="362906" relation="include">
        </childnode>
        <childnode refid="362920" relation="include">
        </childnode>
      </node>
      <node id="362989">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="362995">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="362996" relation="include">
        </childnode>
        <childnode refid="362963" relation="include">
        </childnode>
        <childnode refid="362905" relation="include">
        </childnode>
        <childnode refid="362909" relation="include">
        </childnode>
        <childnode refid="362997" relation="include">
        </childnode>
      </node>
      <node id="362895">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="362896" relation="include">
        </childnode>
        <childnode refid="362910" relation="include">
        </childnode>
        <childnode refid="362911" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
        <childnode refid="362906" relation="include">
        </childnode>
      </node>
      <node id="362921">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362903" relation="include">
        </childnode>
      </node>
      <node id="362924">
        <label>stdint.h</label>
      </node>
      <node id="362975">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="362905" relation="include">
        </childnode>
        <childnode refid="362976" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
        <childnode refid="362903" relation="include">
        </childnode>
        <childnode refid="362897" relation="include">
        </childnode>
      </node>
      <node id="362943">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
      </node>
      <node id="362914">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="362927">
        <label>RVersion.h</label>
      </node>
      <node id="362898">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="362899" relation="include">
        </childnode>
        <childnode refid="362908" relation="include">
        </childnode>
        <childnode refid="362909" relation="include">
        </childnode>
      </node>
      <node id="362998">
        <label>xAODCutFlow/versions/CutBookkeeper_v1.h</label>
        <link refid="d8/da6/CutBookkeeper__v1_8h_source"/>
        <childnode refid="362906" relation="include">
        </childnode>
        <childnode refid="362999" relation="include">
        </childnode>
        <childnode refid="362924" relation="include">
        </childnode>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362959" relation="include">
        </childnode>
      </node>
      <node id="362904">
        <label>cmath</label>
      </node>
      <node id="362962">
        <label>cassert</label>
      </node>
      <node id="362966">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="362985">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="362911">
        <label>stdexcept</label>
      </node>
      <node id="362939">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="362972">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="362980">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="362906">
        <label>string</label>
      </node>
      <node id="362916">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="362896" relation="include">
        </childnode>
        <childnode refid="362917" relation="include">
        </childnode>
        <childnode refid="362919" relation="include">
        </childnode>
        <childnode refid="362921" relation="include">
        </childnode>
        <childnode refid="362923" relation="include">
        </childnode>
        <childnode refid="362929" relation="include">
        </childnode>
        <childnode refid="362930" relation="include">
        </childnode>
        <childnode refid="362931" relation="include">
        </childnode>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362901" relation="include">
        </childnode>
        <childnode refid="362903" relation="include">
        </childnode>
        <childnode refid="362932" relation="include">
        </childnode>
        <childnode refid="362933" relation="include">
        </childnode>
        <childnode refid="362934" relation="include">
        </childnode>
        <childnode refid="362940" relation="include">
        </childnode>
      </node>
      <node id="362942">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
      </node>
      <node id="362932">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="362977">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="362913" relation="include">
        </childnode>
        <childnode refid="362975" relation="include">
        </childnode>
        <childnode refid="362978" relation="include">
        </childnode>
        <childnode refid="362980" relation="include">
        </childnode>
        <childnode refid="362965" relation="include">
        </childnode>
        <childnode refid="362902" relation="include">
        </childnode>
        <childnode refid="362903" relation="include">
        </childnode>
      </node>
      <node id="362991">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="362992">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="362993" relation="include">
        </childnode>
      </node>
      <node id="362993">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="362928">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="362952">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="362893">
        <label>xAODCutFlow/versions/CutBookkeeperContainer_v1.h</label>
        <link refid="d1/df6/CutBookkeeperContainer__v1_8h_source"/>
        <childnode refid="362894" relation="include">
        </childnode>
        <childnode refid="362998" relation="include">
        </childnode>
        <childnode refid="363000" relation="include">
        </childnode>
      </node>
      <node id="362982">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="362977" relation="include">
        </childnode>
        <childnode refid="362902" relation="include">
        </childnode>
        <childnode refid="362900" relation="include">
        </childnode>
        <childnode refid="362983" relation="include">
        </childnode>
      </node>
      <node id="362933">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="362949">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="362978">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="362913" relation="include">
        </childnode>
        <childnode refid="362926" relation="include">
        </childnode>
        <childnode refid="362908" relation="include">
        </childnode>
        <childnode refid="362979" relation="include">
        </childnode>
      </node>
      <node id="362960">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="362926">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="362927" relation="include">
        </childnode>
        <childnode refid="362928" relation="include">
        </childnode>
      </node>
      <node id="362930">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="362937">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="362976">
        <label>limits.h</label>
      </node>
      <node id="362970">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="362971" relation="include">
        </childnode>
      </node>
      <node id="362947">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="362919" relation="include">
        </childnode>
        <childnode refid="362905" relation="include">
        </childnode>
        <childnode refid="362924" relation="include">
        </childnode>
        <childnode refid="362948" relation="include">
        </childnode>
      </node>
      <node id="362896">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362898" relation="include">
        </childnode>
      </node>
      <node id="362899">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="362900" relation="include">
        </childnode>
        <childnode refid="362901" relation="include">
        </childnode>
        <childnode refid="362902" relation="include">
        </childnode>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362903" relation="include">
        </childnode>
        <childnode refid="362904" relation="include">
        </childnode>
        <childnode refid="362905" relation="include">
        </childnode>
        <childnode refid="362906" relation="include">
        </childnode>
        <childnode refid="362907" relation="include">
        </childnode>
      </node>
      <node id="362963">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="362962" relation="include">
        </childnode>
      </node>
      <node id="362979">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="362975" relation="include">
        </childnode>
        <childnode refid="362963" relation="include">
        </childnode>
      </node>
      <node id="362912">
        <label>typeinfo</label>
      </node>
      <node id="362961">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="362932" relation="include">
        </childnode>
        <childnode refid="362962" relation="include">
        </childnode>
      </node>
      <node id="362894">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="362895" relation="include">
        </childnode>
        <childnode refid="362913" relation="include">
        </childnode>
        <childnode refid="362914" relation="include">
        </childnode>
        <childnode refid="362915" relation="include">
        </childnode>
        <childnode refid="362968" relation="include">
        </childnode>
        <childnode refid="362969" relation="include">
        </childnode>
        <childnode refid="362975" relation="include">
        </childnode>
        <childnode refid="362977" relation="include">
        </childnode>
        <childnode refid="362981" relation="include">
        </childnode>
        <childnode refid="362982" relation="include">
        </childnode>
        <childnode refid="362978" relation="include">
        </childnode>
        <childnode refid="362984" relation="include">
        </childnode>
        <childnode refid="362926" relation="include">
        </childnode>
        <childnode refid="362985" relation="include">
        </childnode>
        <childnode refid="362986" relation="include">
        </childnode>
        <childnode refid="362980" relation="include">
        </childnode>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
        <childnode refid="362909" relation="include">
        </childnode>
        <childnode refid="362987" relation="include">
        </childnode>
        <childnode refid="362900" relation="include">
        </childnode>
        <childnode refid="362911" relation="include">
        </childnode>
        <childnode refid="362902" relation="include">
        </childnode>
        <childnode refid="362958" relation="include">
        </childnode>
        <childnode refid="362988" relation="include">
        </childnode>
        <childnode refid="362990" relation="include">
        </childnode>
        <childnode refid="362994" relation="include">
        </childnode>
        <childnode refid="362995" relation="include">
        </childnode>
      </node>
      <node id="362948">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="362929">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="362925">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="362924" relation="include">
        </childnode>
      </node>
      <node id="362920">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="362951">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="362969">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="362970" relation="include">
        </childnode>
        <childnode refid="362915" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362907" relation="include">
        </childnode>
        <childnode refid="362972" relation="include">
        </childnode>
        <childnode refid="362950" relation="include">
        </childnode>
        <childnode refid="362973" relation="include">
        </childnode>
      </node>
      <node id="362918">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="362988">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="362989" relation="include">
        </childnode>
      </node>
      <node id="362941">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="362896" relation="include">
        </childnode>
        <childnode refid="362942" relation="include">
        </childnode>
        <childnode refid="362943" relation="include">
        </childnode>
        <childnode refid="362944" relation="include">
        </childnode>
        <childnode refid="362953" relation="include">
        </childnode>
        <childnode refid="362934" relation="include">
        </childnode>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362955" relation="include">
        </childnode>
        <childnode refid="362956" relation="include">
        </childnode>
      </node>
      <node id="362922">
        <label>vector</label>
      </node>
      <node id="362996">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="362900" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
      </node>
      <node id="362997">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="362901">
        <label>utility</label>
      </node>
      <node id="362994">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="362931">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="362967">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="362935">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="362945">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="362934">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="362935" relation="include">
        </childnode>
        <childnode refid="362936" relation="include">
        </childnode>
        <childnode refid="362937" relation="include">
        </childnode>
        <childnode refid="362938" relation="include">
        </childnode>
        <childnode refid="362939" relation="include">
        </childnode>
      </node>
      <node id="362999">
        <label>iosfwd</label>
      </node>
      <node id="362892">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCutFlow/Root/CutBookkeeperContainer_v1.cxx</label>
        <link refid="CutBookkeeperContainer_v1.cxx"/>
        <childnode refid="362893" relation="include">
        </childnode>
      </node>
      <node id="362903">
        <label>cstdlib</label>
      </node>
      <node id="362987">
        <label>iostream</label>
      </node>
      <node id="362910">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="362917">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="362896" relation="include">
        </childnode>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362918" relation="include">
        </childnode>
      </node>
      <node id="362897">
        <label>cstddef</label>
      </node>
      <node id="362940">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="362941" relation="include">
        </childnode>
        <childnode refid="362957" relation="include">
        </childnode>
        <childnode refid="362917" relation="include">
        </childnode>
        <childnode refid="362932" relation="include">
        </childnode>
        <childnode refid="362933" relation="include">
        </childnode>
      </node>
      <node id="363000">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="362958" relation="include">
        </childnode>
      </node>
      <node id="362973">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="362913" relation="include">
        </childnode>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362974" relation="include">
        </childnode>
        <childnode refid="362962" relation="include">
        </childnode>
        <childnode refid="362903" relation="include">
        </childnode>
        <childnode refid="362958" relation="include">
        </childnode>
      </node>
      <node id="362944">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="362942" relation="include">
        </childnode>
        <childnode refid="362945" relation="include">
        </childnode>
        <childnode refid="362921" relation="include">
        </childnode>
        <childnode refid="362946" relation="include">
        </childnode>
        <childnode refid="362931" relation="include">
        </childnode>
        <childnode refid="362912" relation="include">
        </childnode>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362900" relation="include">
        </childnode>
        <childnode refid="362924" relation="include">
        </childnode>
        <childnode refid="362950" relation="include">
        </childnode>
        <childnode refid="362951" relation="include">
        </childnode>
        <childnode refid="362952" relation="include">
        </childnode>
      </node>
      <node id="362950">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="362915">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="362916" relation="include">
        </childnode>
        <childnode refid="362913" relation="include">
        </childnode>
        <childnode refid="362914" relation="include">
        </childnode>
        <childnode refid="362959" relation="include">
        </childnode>
        <childnode refid="362941" relation="include">
        </childnode>
        <childnode refid="362895" relation="include">
        </childnode>
        <childnode refid="362963" relation="include">
        </childnode>
        <childnode refid="362957" relation="include">
        </childnode>
        <childnode refid="362964" relation="include">
        </childnode>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362967" relation="include">
        </childnode>
      </node>
      <node id="362954">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="362946">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="362945" relation="include">
        </childnode>
        <childnode refid="362947" relation="include">
        </childnode>
        <childnode refid="362931" relation="include">
        </childnode>
        <childnode refid="362922" relation="include">
        </childnode>
        <childnode refid="362949" relation="include">
        </childnode>
      </node>
      <node id="362900">
        <label>algorithm</label>
      </node>
      <node id="362984">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="362959">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="362960" relation="include">
        </childnode>
        <childnode refid="362917" relation="include">
        </childnode>
        <childnode refid="362957" relation="include">
        </childnode>
        <childnode refid="362923" relation="include">
        </childnode>
        <childnode refid="362941" relation="include">
        </childnode>
        <childnode refid="362916" relation="include">
        </childnode>
        <childnode refid="362921" relation="include">
        </childnode>
        <childnode refid="362895" relation="include">
        </childnode>
        <childnode refid="362932" relation="include">
        </childnode>
        <childnode refid="362897" relation="include">
        </childnode>
        <childnode refid="362961" relation="include">
        </childnode>
      </node>
      <node id="362923">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="362924" relation="include">
        </childnode>
        <childnode refid="362906" relation="include">
        </childnode>
        <childnode refid="362925" relation="include">
        </childnode>
        <childnode refid="362926" relation="include">
        </childnode>
      </node>
      <node id="362981">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="362977" relation="include">
        </childnode>
        <childnode refid="362963" relation="include">
        </childnode>
        <childnode refid="362902" relation="include">
        </childnode>
      </node>
      <node id="362913">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="362971">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="362986">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="362908">
        <label>memory</label>
      </node>
      <node id="362953">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="362943" relation="include">
        </childnode>
        <childnode refid="362944" relation="include">
        </childnode>
        <childnode refid="362954" relation="include">
        </childnode>
      </node>
      <node id="362964">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="362960" relation="include">
        </childnode>
        <childnode refid="362957" relation="include">
        </childnode>
        <childnode refid="362917" relation="include">
        </childnode>
        <childnode refid="362950" relation="include">
        </childnode>
        <childnode refid="362965" relation="include">
        </childnode>
        <childnode refid="362966" relation="include">
        </childnode>
        <childnode refid="362906" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/>Implementation<sp/>file<sp/>for<sp/>class<sp/>CutBookkeeperContainer_v1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Karsten<sp/>Koeneke,<sp/>May<sp/>2014<sp/>&lt;karsten.koeneke@cern.ch&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCutFlow/versions/CutBookkeeperContainer_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CutBookkeeperContainer_v1::CutBookkeeperContainer_v1()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>:<sp/>DataVector&lt;CutBookkeeper_v1&gt;<sp/>(SG::OWN_ELEMENTS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="d3/da6/classxAOD_1_1CutBookkeeperContainer__v1_1a4338b30400ac19004ac5e947a0617b14" kindref="member" tooltip="Default Constructor.">CutBookkeeperContainer_v1::CutBookkeeperContainer_v1</ref>(<sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>ownPolicy,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref><sp/>trackIndices<sp/>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector</ref>&lt;xAOD::CutBookkeeper_v1&gt;(ownPolicy,trackIndices)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="d3/da6/classxAOD_1_1CutBookkeeperContainer__v1_1a4338b30400ac19004ac5e947a0617b14" kindref="member" tooltip="Default Constructor.">CutBookkeeperContainer_v1::CutBookkeeperContainer_v1</ref>(<sp/><ref refid="d0/d4d/classDataVector_1a720d2b9643ffc12ed1725cec9ecc691e" kindref="member">CutBookkeeperContainer_v1::iterator</ref><sp/>first,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d4d/classDataVector_1a720d2b9643ffc12ed1725cec9ecc691e" kindref="member">CutBookkeeperContainer_v1::iterator</ref><sp/>last,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>ownPolicy,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref><sp/>trackIndices<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector</ref>&lt;xAOD::CutBookkeeper_v1&gt;(first,last,ownPolicy,trackIndices)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="d3/da6/classxAOD_1_1CutBookkeeperContainer__v1_1a1ce0b75f11188e616613cc20d7753427" kindref="member" tooltip="Destructor.">CutBookkeeperContainer_v1::~CutBookkeeperContainer_v1</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CutBookkeeperContainer_v1::CutBookkeeperContainer_v1(<sp/>const<sp/>CutBookkeeperContainer_v1&amp;<sp/>rhs<sp/>)<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>DataVector&lt;CutBookkeeper_v1&gt;<sp/>(rhs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CutBookkeeperContainer_v1&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CutBookkeeperContainer_v1::operator=(<sp/>const<sp/>CutBookkeeperContainer_v1&amp;<sp/>rhs<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(<sp/>this<sp/>!=<sp/>&amp;rhs<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>DataVector&lt;CutBookkeeper_v1&gt;::operator=(rhs);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>*this;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CutBookkeeperContainer_v1::CutBookkeeperContainer_v1(<sp/>const<sp/>SG::OwnershipPolicy<sp/>own<sp/>)<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>DataVector&lt;CutBookkeeper_v1&gt;(own)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>the<sp/>content<sp/>of<sp/>another<sp/>xAOD::CutBookkeeperContainer<sp/>into<sp/>this<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classxAOD_1_1CutBookkeeperContainer__v1_1a50d2d801155daff4a4f7edf9e5b22551" kindref="member" tooltip="Merge the content of another xAOD::CutBookkeeperContainer into this one.">CutBookkeeperContainer_v1::merge</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CutBookkeeperContainer_v1*<sp/>otherCont<sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>vector<sp/>of<sp/>indices<sp/>of<sp/>all<sp/>the<sp/>newly<sp/>transferred<sp/>CutBookkeepers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::size_t<sp/>&gt;<sp/>newEBKIndices;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>otherCont.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>element<sp/>already<sp/>in<sp/>this<sp/>container,<sp/>update<sp/>event<sp/>counts,<sp/>otherwise<sp/>create<sp/>new<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::size_t<sp/>i=0;<sp/>i&lt;otherCont-&gt;size();<sp/>++i<sp/>){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>otherEBK<sp/>=<sp/>otherCont-&gt;at(i);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>this<sp/>container<sp/>and<sp/>see<sp/>if<sp/>we<sp/>find<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundEBKToUpdate(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::size_t<sp/>j=0;<sp/>j&lt;this-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member">size</ref>();<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>ebkToUpdate<sp/>=<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a3f598b345c9b1eb8793fd9cc6c16abe3" kindref="member" tooltip="Access an element, as an rvalue.">at</ref>(j);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>they<sp/>are<sp/>identical,<sp/>if<sp/>so,<sp/>update;<sp/>else<sp/>add<sp/>otherEBK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>otherEBK-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a421ca4ab4fb9c401e1ba5c64f0de0f6f" kindref="member" tooltip="Test for the equality of this CutBookkeeper with another one.">isEqualTo</ref>(ebkToUpdate)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToUpdate-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a1c5fbd99ddac6c407590e672cdb39ded" kindref="member" tooltip="Set the whole payload object (which contains all counters) in one go.">setPayload</ref>(<sp/>ebkToUpdate-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a14ef1e6f91677ab877dbd2ff6c06d0e2" kindref="member">payload</ref>()<sp/>+<sp/>otherEBK-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a14ef1e6f91677ab877dbd2ff6c06d0e2" kindref="member">payload</ref>()<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundEBKToUpdate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>End:<sp/>Inner<sp/>loop<sp/>over<sp/>contToUpdate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!foundEBKToUpdate)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>newEBK<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" kindref="member" tooltip="Test to see if this object is currently using a private store.">usingPrivateStore</ref>()<sp/>)<sp/>{<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" kindref="member" tooltip="Release and free any private store associated with this object.">releasePrivateStore</ref>();<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(otherEBK);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>ebIdx<sp/>=<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" kindref="member" tooltip="Return the index of this element within its container.">index</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEBKIndices.push_back(ebIdx);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>End:<sp/>Outer<sp/>loop<sp/>over<sp/>contToUpdate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>still<sp/>need<sp/>to<sp/>fix<sp/>the<sp/>cross-referencing<sp/>of<sp/>the<sp/>newly<sp/>added<sp/>CutBookkkeepers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::size_t<sp/>i=0;<sp/>i&lt;newEBKIndices.size();<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>otherIndex<sp/>=<sp/>newEBKIndices.at(i);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>ebkToModify<sp/>=<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a3f598b345c9b1eb8793fd9cc6c16abe3" kindref="member" tooltip="Access an element, as an rvalue.">at</ref>(otherIndex);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parent<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a68325b51c50938147a2bad6d662a7615" kindref="member" tooltip="Check if there is a parent CutBookkeeper of this CutBookkeeper.">hasParent</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>oldParent<sp/>=<sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a8a5e1733f846ecaccfb1ac729949349e" kindref="member" tooltip="Get the parent CutBookkeeper.">parent</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">xAOD::CutBookkeeperContainer_v1::iterator</ref><sp/>matchIter<sp/>=<sp/><sp/>std::find(<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>(),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>(),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldParent<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>found<sp/>it,<sp/>we<sp/>can<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>matchIter<sp/>!=<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a71527652265d7e8c6084316730b95e3e" kindref="member" tooltip="Set the parent CutBookkeeper of this CutBookkeeper.">setParent</ref>(<sp/>*matchIter<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>didn&apos;t<sp/>find<sp/>it,<sp/>we<sp/>need<sp/>to<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>newEBK<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" kindref="member" tooltip="Test to see if this object is currently using a private store.">usingPrivateStore</ref>()<sp/>)<sp/>{<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" kindref="member" tooltip="Release and free any private store associated with this object.">releasePrivateStore</ref>();<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(oldParent);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a71527652265d7e8c6084316730b95e3e" kindref="member" tooltip="Set the parent CutBookkeeper of this CutBookkeeper.">setParent</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Done<sp/>fixing<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Children<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::size_t<sp/>oldIdx=0;<sp/>oldIdx&lt;ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a499b65bd9e6cfbe1c54b44f08a0b9d67" kindref="member" tooltip="Get the number of children CutBookkeepers of this CutBookkeeper.">nChildren</ref>();<sp/>++oldIdx<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>oldEBK<sp/>=<sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a357bd0187523298feab82a95e310231c" kindref="member" tooltip="Get the child at position i.">child</ref>(oldIdx);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">xAOD::CutBookkeeperContainer_v1::iterator</ref><sp/>matchIter<sp/>=<sp/><sp/>std::find(<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>(),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>(),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldEBK<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>found<sp/>it,<sp/>we<sp/>can<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>matchIter<sp/>!=<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a4312c8e51bca21c819d8aeb5aba11732" kindref="member" tooltip="Add one child to this CutBookkeeper.">addChild</ref>(<sp/>*matchIter<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>didn&apos;t<sp/>find<sp/>it,<sp/>we<sp/>need<sp/>to<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>newEBK<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" kindref="member" tooltip="Test to see if this object is currently using a private store.">usingPrivateStore</ref>()<sp/>)<sp/>{<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" kindref="member" tooltip="Release and free any private store associated with this object.">releasePrivateStore</ref>();<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(oldEBK);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a4312c8e51bca21c819d8aeb5aba11732" kindref="member" tooltip="Add one child to this CutBookkeeper.">addChild</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Done<sp/>fixing<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>others<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::size_t<sp/>oldIdx=0;<sp/>oldIdx&lt;ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1aadf9c6e47a268725bb7b794163c21c52" kindref="member" tooltip="Check if this CutBookkeeper has used others.">nUsedOthers</ref>();<sp/>++oldIdx<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>oldEBK<sp/>=<sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a729438b9030c755b979cf423af3a11ef" kindref="member" tooltip="Get the usedOther at position i.">usedOther</ref>(oldIdx);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">xAOD::CutBookkeeperContainer_v1::iterator</ref><sp/>matchIter<sp/>=<sp/><sp/>std::find(<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>(),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>(),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldEBK<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>found<sp/>it,<sp/>we<sp/>can<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>matchIter<sp/>!=<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1aaec91c584a09a435cd5cd0a90d6102e1" kindref="member" tooltip="Add one other CutBookkeeper that is used by this one.">addUsedOther</ref>(<sp/>*matchIter<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>didn&apos;t<sp/>find<sp/>it,<sp/>we<sp/>need<sp/>to<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>newEBK<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" kindref="member" tooltip="Test to see if this object is currently using a private store.">usingPrivateStore</ref>()<sp/>)<sp/>{<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" kindref="member" tooltip="Release and free any private store associated with this object.">releasePrivateStore</ref>();<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(oldEBK);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1aaec91c584a09a435cd5cd0a90d6102e1" kindref="member" tooltip="Add one other CutBookkeeper that is used by this one.">addUsedOther</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Done<sp/>fixing<sp/>used<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Siblings<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::size_t<sp/>oldIdx=0;<sp/>oldIdx&lt;ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1aa48b7cbcd126b6cc96d00916f883e5ee" kindref="member" tooltip="Check if this CutBookkeeper has siblings.">nSiblings</ref>();<sp/>++oldIdx<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>oldEBK<sp/>=<sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1abf282636ac3bf54fad81c09374237994" kindref="member" tooltip="Get the sibling number i.">sibling</ref>(oldIdx);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">xAOD::CutBookkeeperContainer_v1::iterator</ref><sp/>matchIter<sp/>=<sp/><sp/>std::find(<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>(),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>(),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldEBK<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>found<sp/>it,<sp/>we<sp/>can<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>matchIter<sp/>!=<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a190d6b4fa42b2ad84b22a66b9093c634" kindref="member" tooltip="Add one sibling CutBookkeeper to this one.">addSibling</ref>(<sp/>*matchIter<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>didn&apos;t<sp/>find<sp/>it,<sp/>we<sp/>need<sp/>to<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>newEBK<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" kindref="member" tooltip="Test to see if this object is currently using a private store.">usingPrivateStore</ref>()<sp/>)<sp/>{<sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" kindref="member" tooltip="Release and free any private store associated with this object.">releasePrivateStore</ref>();<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEBK-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(oldEBK);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebkToModify-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a190d6b4fa42b2ad84b22a66b9093c634" kindref="member" tooltip="Add one sibling CutBookkeeper to this one.">addSibling</ref>(<sp/>newEBK<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Done<sp/>fixing<sp/>siblings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Done<sp/>fixing<sp/>all<sp/>cross<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>minimum<sp/>cycle<sp/>number<sp/>of<sp/>any<sp/>xAOD::CutBookkeepers<sp/>in<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classxAOD_1_1CutBookkeeperContainer__v1_1ac7046de83a07d51b1b87d1e0773cc5d6" kindref="member" tooltip="Get the minimum cycle number of any xAOD::CutBookkeepers in the container.">CutBookkeeperContainer_v1::minCycle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="181"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>iterate<sp/>over<sp/>all<sp/>CutBookkeepers<sp/>and<sp/>search<sp/>for<sp/>the<sp/>lowest<sp/>cycle<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classxAOD_1_1CutBookkeeperContainer__v1_1ac7046de83a07d51b1b87d1e0773cc5d6" kindref="member" tooltip="Get the minimum cycle number of any xAOD::CutBookkeepers in the container.">minCycle</ref>=9999999;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::size_t<sp/>i=0;<sp/>i&lt;this-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member">size</ref>();<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>old<sp/>EBK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>cbk<sp/>=<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a3f598b345c9b1eb8793fd9cc6c16abe3" kindref="member" tooltip="Access an element, as an rvalue.">at</ref>(i);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inCycle<sp/>=<sp/>cbk-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a078d96e79e9e383e34ef551fa6199575" kindref="member" tooltip="Get the skimming cycle that this CutBookkeeper was running in.">cycle</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inCycle<sp/>&lt;<sp/>minCycle)<sp/>minCycle<sp/>=<sp/>inCycle;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minCycle==9999999){<sp/>minCycle<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minCycle;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>maximum<sp/>cycle<sp/>number<sp/>of<sp/>any<sp/>xAOD::CutBookkeepers<sp/>in<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classxAOD_1_1CutBookkeeperContainer__v1_1aaa6244a6b7e4c8ebc445757201c2ff30" kindref="member" tooltip="Get the maximum cycle number of any xAOD::CutBookkeepers in the container.">CutBookkeeperContainer_v1::maxCycle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="197"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>iterate<sp/>over<sp/>all<sp/>CutBookkeepers<sp/>and<sp/>search<sp/>for<sp/>the<sp/>highest<sp/>cycle<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classxAOD_1_1CutBookkeeperContainer__v1_1aaa6244a6b7e4c8ebc445757201c2ff30" kindref="member" tooltip="Get the maximum cycle number of any xAOD::CutBookkeepers in the container.">maxCycle</ref>=0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::size_t<sp/>i=0;<sp/>i&lt;this-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member">size</ref>();<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>old<sp/>EBK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1" kindref="compound">xAOD::CutBookkeeper_v1</ref>*<sp/>cbk<sp/>=<sp/>this-&gt;<ref refid="d0/d4d/classDataVector_1a3f598b345c9b1eb8793fd9cc6c16abe3" kindref="member" tooltip="Access an element, as an rvalue.">at</ref>(i);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inCycle<sp/>=<sp/>cbk-&gt;<ref refid="d5/db4/classxAOD_1_1CutBookkeeper__v1_1a078d96e79e9e383e34ef551fa6199575" kindref="member" tooltip="Get the skimming cycle that this CutBookkeeper was running in.">cycle</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inCycle<sp/>&gt;<sp/>maxCycle)<sp/>maxCycle<sp/>=<sp/>inCycle;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxCycle;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCutFlow/Root/CutBookkeeperContainer_v1.cxx"/>
  </compounddef>
</doxygen>
