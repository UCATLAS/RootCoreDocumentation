<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/de5/ut__xaodcore__safedeepcopy__test_8cxx" kind="file">
    <compoundname>ut_xaodcore_safedeepcopy_test.cxx</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes refid="d1/d6f/AuxElement_8h" local="yes">AthContainers/AuxElement.h</includes>
    <includes refid="d7/dd6/DataVector_8h" local="yes">AthContainers/DataVector.h</includes>
    <includes refid="d0/d70/AuxContainerBase_8h" local="yes">xAODCore/AuxContainerBase.h</includes>
    <includes refid="db/d67/SafeDeepCopy_8h" local="yes">xAODCore/tools/SafeDeepCopy.h</includes>
    <includes refid="d3/d6e/PrintHelpers_8h" local="yes">xAODCore/tools/PrintHelpers.h</includes>
    <incdepgraph>
      <node id="359813">
        <label>list</label>
      </node>
      <node id="359822">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="359807" relation="include">
        </childnode>
        <childnode refid="359814" relation="include">
        </childnode>
        <childnode refid="359734" relation="include">
        </childnode>
        <childnode refid="359803" relation="include">
        </childnode>
        <childnode refid="359741" relation="include">
        </childnode>
      </node>
      <node id="359807">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="359783">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="359828">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="359829" relation="include">
        </childnode>
        <childnode refid="359808" relation="include">
        </childnode>
        <childnode refid="359749" relation="include">
        </childnode>
        <childnode refid="359830" relation="include">
        </childnode>
      </node>
      <node id="359785">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="359740" relation="include">
        </childnode>
        <childnode refid="359742" relation="include">
        </childnode>
        <childnode refid="359749" relation="include">
        </childnode>
        <childnode refid="359750" relation="include">
        </childnode>
      </node>
      <node id="359786">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="359752">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="359736" relation="include">
        </childnode>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359753" relation="include">
        </childnode>
        <childnode refid="359751" relation="include">
        </childnode>
      </node>
      <node id="359731">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx</label>
        <link refid="ut_xaodcore_safedeepcopy_test.cxx"/>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359733" relation="include">
        </childnode>
        <childnode refid="359734" relation="include">
        </childnode>
        <childnode refid="359798" relation="include">
        </childnode>
        <childnode refid="359836" relation="include">
        </childnode>
        <childnode refid="359843" relation="include">
        </childnode>
        <childnode refid="359844" relation="include">
        </childnode>
      </node>
      <node id="359843">
        <label>xAODCore/tools/SafeDeepCopy.h</label>
        <link refid="db/d67/SafeDeepCopy_8h_source"/>
      </node>
      <node id="359748">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="359750">
        <label>functional</label>
      </node>
      <node id="359804">
        <label>boost/version.hpp</label>
      </node>
      <node id="359746">
        <label>limits</label>
      </node>
      <node id="359753">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="359781">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="359743">
        <label>iterator</label>
      </node>
      <node id="359836">
        <label>xAODCore/AuxContainerBase.h</label>
        <link refid="d0/d70/AuxContainerBase_8h_source"/>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359747" relation="include">
        </childnode>
        <childnode refid="359752" relation="include">
        </childnode>
        <childnode refid="359837" relation="include">
        </childnode>
        <childnode refid="359839" relation="include">
        </childnode>
        <childnode refid="359779" relation="include">
        </childnode>
        <childnode refid="359767" relation="include">
        </childnode>
        <childnode refid="359788" relation="include">
        </childnode>
        <childnode refid="359840" relation="include">
        </childnode>
        <childnode refid="359841" relation="include">
        </childnode>
        <childnode refid="359842" relation="include">
        </childnode>
      </node>
      <node id="359769">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="359747" relation="include">
        </childnode>
        <childnode refid="359770" relation="include">
        </childnode>
      </node>
      <node id="359839">
        <label>AthContainersInterfaces/IAuxStoreHolder.h</label>
        <link refid="d7/dab/IAuxStoreHolder_8h_source"/>
      </node>
      <node id="359827">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="359833">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="359834" relation="include">
        </childnode>
        <childnode refid="359802" relation="include">
        </childnode>
        <childnode refid="359746" relation="include">
        </childnode>
        <childnode refid="359750" relation="include">
        </childnode>
        <childnode refid="359835" relation="include">
        </childnode>
      </node>
      <node id="359793">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="359737" relation="include">
        </childnode>
        <childnode refid="359794" relation="include">
        </childnode>
        <childnode refid="359795" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
        <childnode refid="359747" relation="include">
        </childnode>
      </node>
      <node id="359766">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359744" relation="include">
        </childnode>
      </node>
      <node id="359755">
        <label>stdint.h</label>
      </node>
      <node id="359814">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="359746" relation="include">
        </childnode>
        <childnode refid="359815" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
        <childnode refid="359744" relation="include">
        </childnode>
        <childnode refid="359738" relation="include">
        </childnode>
      </node>
      <node id="359800">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="359763">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
      </node>
      <node id="359837">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="359737" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
        <childnode refid="359838" relation="include">
        </childnode>
        <childnode refid="359751" relation="include">
        </childnode>
      </node>
      <node id="359758">
        <label>RVersion.h</label>
      </node>
      <node id="359739">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="359740" relation="include">
        </childnode>
        <childnode refid="359749" relation="include">
        </childnode>
        <childnode refid="359750" relation="include">
        </childnode>
      </node>
      <node id="359745">
        <label>cmath</label>
      </node>
      <node id="359797">
        <label>cassert</label>
      </node>
      <node id="359805">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="359824">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="359795">
        <label>stdexcept</label>
      </node>
      <node id="359784">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="359811">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="359819">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="359747">
        <label>string</label>
      </node>
      <node id="359787">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="359737" relation="include">
        </childnode>
        <childnode refid="359736" relation="include">
        </childnode>
        <childnode refid="359769" relation="include">
        </childnode>
        <childnode refid="359766" relation="include">
        </childnode>
        <childnode refid="359754" relation="include">
        </childnode>
        <childnode refid="359788" relation="include">
        </childnode>
        <childnode refid="359789" relation="include">
        </childnode>
        <childnode refid="359772" relation="include">
        </childnode>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359742" relation="include">
        </childnode>
        <childnode refid="359744" relation="include">
        </childnode>
        <childnode refid="359790" relation="include">
        </childnode>
        <childnode refid="359791" relation="include">
        </childnode>
        <childnode refid="359779" relation="include">
        </childnode>
        <childnode refid="359792" relation="include">
        </childnode>
      </node>
      <node id="359761">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
      </node>
      <node id="359790">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="359816">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="359799" relation="include">
        </childnode>
        <childnode refid="359814" relation="include">
        </childnode>
        <childnode refid="359817" relation="include">
        </childnode>
        <childnode refid="359819" relation="include">
        </childnode>
        <childnode refid="359804" relation="include">
        </childnode>
        <childnode refid="359743" relation="include">
        </childnode>
        <childnode refid="359744" relation="include">
        </childnode>
      </node>
      <node id="359829">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="359830">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="359831" relation="include">
        </childnode>
      </node>
      <node id="359831">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="359759">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="359776">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="359821">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="359816" relation="include">
        </childnode>
        <childnode refid="359743" relation="include">
        </childnode>
        <childnode refid="359741" relation="include">
        </childnode>
        <childnode refid="359822" relation="include">
        </childnode>
      </node>
      <node id="359791">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="359773">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="359817">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="359799" relation="include">
        </childnode>
        <childnode refid="359757" relation="include">
        </childnode>
        <childnode refid="359749" relation="include">
        </childnode>
        <childnode refid="359818" relation="include">
        </childnode>
      </node>
      <node id="359735">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="359757">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="359758" relation="include">
        </childnode>
        <childnode refid="359759" relation="include">
        </childnode>
      </node>
      <node id="359789">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="359782">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="359815">
        <label>limits.h</label>
      </node>
      <node id="359809">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="359810" relation="include">
        </childnode>
      </node>
      <node id="359768">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="359769" relation="include">
        </childnode>
        <childnode refid="359746" relation="include">
        </childnode>
        <childnode refid="359755" relation="include">
        </childnode>
        <childnode refid="359771" relation="include">
        </childnode>
      </node>
      <node id="359737">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359739" relation="include">
        </childnode>
      </node>
      <node id="359740">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="359741" relation="include">
        </childnode>
        <childnode refid="359742" relation="include">
        </childnode>
        <childnode refid="359743" relation="include">
        </childnode>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359744" relation="include">
        </childnode>
        <childnode refid="359745" relation="include">
        </childnode>
        <childnode refid="359746" relation="include">
        </childnode>
        <childnode refid="359747" relation="include">
        </childnode>
        <childnode refid="359748" relation="include">
        </childnode>
      </node>
      <node id="359802">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="359797" relation="include">
        </childnode>
      </node>
      <node id="359818">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="359814" relation="include">
        </childnode>
        <childnode refid="359802" relation="include">
        </childnode>
      </node>
      <node id="359762">
        <label>typeinfo</label>
      </node>
      <node id="359796">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="359790" relation="include">
        </childnode>
        <childnode refid="359797" relation="include">
        </childnode>
      </node>
      <node id="359798">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="359793" relation="include">
        </childnode>
        <childnode refid="359799" relation="include">
        </childnode>
        <childnode refid="359800" relation="include">
        </childnode>
        <childnode refid="359801" relation="include">
        </childnode>
        <childnode refid="359807" relation="include">
        </childnode>
        <childnode refid="359808" relation="include">
        </childnode>
        <childnode refid="359814" relation="include">
        </childnode>
        <childnode refid="359816" relation="include">
        </childnode>
        <childnode refid="359820" relation="include">
        </childnode>
        <childnode refid="359821" relation="include">
        </childnode>
        <childnode refid="359817" relation="include">
        </childnode>
        <childnode refid="359823" relation="include">
        </childnode>
        <childnode refid="359757" relation="include">
        </childnode>
        <childnode refid="359824" relation="include">
        </childnode>
        <childnode refid="359825" relation="include">
        </childnode>
        <childnode refid="359819" relation="include">
        </childnode>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
        <childnode refid="359750" relation="include">
        </childnode>
        <childnode refid="359733" relation="include">
        </childnode>
        <childnode refid="359741" relation="include">
        </childnode>
        <childnode refid="359795" relation="include">
        </childnode>
        <childnode refid="359743" relation="include">
        </childnode>
        <childnode refid="359753" relation="include">
        </childnode>
        <childnode refid="359826" relation="include">
        </childnode>
        <childnode refid="359828" relation="include">
        </childnode>
        <childnode refid="359832" relation="include">
        </childnode>
        <childnode refid="359833" relation="include">
        </childnode>
      </node>
      <node id="359771">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="359788">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="359756">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="359755" relation="include">
        </childnode>
      </node>
      <node id="359770">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="359775">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="359808">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="359809" relation="include">
        </childnode>
        <childnode refid="359801" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359748" relation="include">
        </childnode>
        <childnode refid="359811" relation="include">
        </childnode>
        <childnode refid="359774" relation="include">
        </childnode>
        <childnode refid="359812" relation="include">
        </childnode>
      </node>
      <node id="359751">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="359826">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="359827" relation="include">
        </childnode>
      </node>
      <node id="359760">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="359737" relation="include">
        </childnode>
        <childnode refid="359761" relation="include">
        </childnode>
        <childnode refid="359763" relation="include">
        </childnode>
        <childnode refid="359764" relation="include">
        </childnode>
        <childnode refid="359777" relation="include">
        </childnode>
        <childnode refid="359779" relation="include">
        </childnode>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359785" relation="include">
        </childnode>
        <childnode refid="359786" relation="include">
        </childnode>
      </node>
      <node id="359732">
        <label>vector</label>
      </node>
      <node id="359834">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="359741" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
      </node>
      <node id="359835">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="359742">
        <label>utility</label>
      </node>
      <node id="359832">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="359772">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="359806">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="359780">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="359765">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="359779">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="359780" relation="include">
        </childnode>
        <childnode refid="359781" relation="include">
        </childnode>
        <childnode refid="359782" relation="include">
        </childnode>
        <childnode refid="359783" relation="include">
        </childnode>
        <childnode refid="359784" relation="include">
        </childnode>
      </node>
      <node id="359845">
        <label>iosfwd</label>
      </node>
      <node id="359744">
        <label>cstdlib</label>
      </node>
      <node id="359840">
        <label>xAODCore/AuxSelection.h</label>
        <link refid="d3/dd4/AuxSelection_8h_source"/>
        <childnode refid="359838" relation="include">
        </childnode>
        <childnode refid="359747" relation="include">
        </childnode>
        <childnode refid="359737" relation="include">
        </childnode>
      </node>
      <node id="359794">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="359733">
        <label>iostream</label>
      </node>
      <node id="359736">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="359737" relation="include">
        </childnode>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359751" relation="include">
        </childnode>
      </node>
      <node id="359738">
        <label>cstddef</label>
      </node>
      <node id="359792">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="359760" relation="include">
        </childnode>
        <childnode refid="359752" relation="include">
        </childnode>
        <childnode refid="359736" relation="include">
        </childnode>
        <childnode refid="359790" relation="include">
        </childnode>
        <childnode refid="359791" relation="include">
        </childnode>
      </node>
      <node id="359842">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="359753" relation="include">
        </childnode>
      </node>
      <node id="359812">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="359799" relation="include">
        </childnode>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359813" relation="include">
        </childnode>
        <childnode refid="359797" relation="include">
        </childnode>
        <childnode refid="359744" relation="include">
        </childnode>
        <childnode refid="359753" relation="include">
        </childnode>
      </node>
      <node id="359764">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="359761" relation="include">
        </childnode>
        <childnode refid="359765" relation="include">
        </childnode>
        <childnode refid="359766" relation="include">
        </childnode>
        <childnode refid="359767" relation="include">
        </childnode>
        <childnode refid="359772" relation="include">
        </childnode>
        <childnode refid="359762" relation="include">
        </childnode>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359741" relation="include">
        </childnode>
        <childnode refid="359755" relation="include">
        </childnode>
        <childnode refid="359774" relation="include">
        </childnode>
        <childnode refid="359775" relation="include">
        </childnode>
        <childnode refid="359776" relation="include">
        </childnode>
      </node>
      <node id="359774">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="359801">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="359787" relation="include">
        </childnode>
        <childnode refid="359799" relation="include">
        </childnode>
        <childnode refid="359800" relation="include">
        </childnode>
        <childnode refid="359734" relation="include">
        </childnode>
        <childnode refid="359760" relation="include">
        </childnode>
        <childnode refid="359793" relation="include">
        </childnode>
        <childnode refid="359802" relation="include">
        </childnode>
        <childnode refid="359752" relation="include">
        </childnode>
        <childnode refid="359803" relation="include">
        </childnode>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359806" relation="include">
        </childnode>
      </node>
      <node id="359838">
        <label>set</label>
      </node>
      <node id="359841">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="359751" relation="include">
        </childnode>
      </node>
      <node id="359778">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="359767">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="359765" relation="include">
        </childnode>
        <childnode refid="359768" relation="include">
        </childnode>
        <childnode refid="359772" relation="include">
        </childnode>
        <childnode refid="359732" relation="include">
        </childnode>
        <childnode refid="359773" relation="include">
        </childnode>
      </node>
      <node id="359741">
        <label>algorithm</label>
      </node>
      <node id="359844">
        <label>xAODCore/tools/PrintHelpers.h</label>
        <link refid="d3/d6e/PrintHelpers_8h_source"/>
        <childnode refid="359845" relation="include">
        </childnode>
      </node>
      <node id="359823">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="359734">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="359735" relation="include">
        </childnode>
        <childnode refid="359736" relation="include">
        </childnode>
        <childnode refid="359752" relation="include">
        </childnode>
        <childnode refid="359754" relation="include">
        </childnode>
        <childnode refid="359760" relation="include">
        </childnode>
        <childnode refid="359787" relation="include">
        </childnode>
        <childnode refid="359766" relation="include">
        </childnode>
        <childnode refid="359793" relation="include">
        </childnode>
        <childnode refid="359790" relation="include">
        </childnode>
        <childnode refid="359738" relation="include">
        </childnode>
        <childnode refid="359796" relation="include">
        </childnode>
      </node>
      <node id="359754">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="359755" relation="include">
        </childnode>
        <childnode refid="359747" relation="include">
        </childnode>
        <childnode refid="359756" relation="include">
        </childnode>
        <childnode refid="359757" relation="include">
        </childnode>
      </node>
      <node id="359820">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="359816" relation="include">
        </childnode>
        <childnode refid="359802" relation="include">
        </childnode>
        <childnode refid="359743" relation="include">
        </childnode>
      </node>
      <node id="359799">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="359810">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="359825">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="359749">
        <label>memory</label>
      </node>
      <node id="359777">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="359763" relation="include">
        </childnode>
        <childnode refid="359764" relation="include">
        </childnode>
        <childnode refid="359778" relation="include">
        </childnode>
      </node>
      <node id="359803">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="359735" relation="include">
        </childnode>
        <childnode refid="359752" relation="include">
        </childnode>
        <childnode refid="359736" relation="include">
        </childnode>
        <childnode refid="359774" relation="include">
        </childnode>
        <childnode refid="359804" relation="include">
        </childnode>
        <childnode refid="359805" relation="include">
        </childnode>
        <childnode refid="359747" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="de/d34/classBreakableAuxContainer" prot="public">BreakableAuxContainer</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/de5/ut__xaodcore__safedeepcopy__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="51" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>ut_xaodcore_safedeepcopy_test.cxx<sp/>682039<sp/>2015-07-10<sp/>09:15:16Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Core<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d6f/AuxElement_8h" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">AthContainers/AuxElement.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/dd6/DataVector_8h" kindref="compound" tooltip="An STL vector of pointers that by default owns its pointed-to elements.">AthContainers/DataVector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxContainerBase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/tools/SafeDeepCopy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/tools/PrintHelpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="de/d34/classBreakableAuxContainer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d34/classBreakableAuxContainer" kindref="compound" tooltip="Auxiliary container used during the tests.">BreakableAuxContainer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>xAOD::<ref refid="de/d65/classxAOD_1_1AuxContainerBase_1a607470123bbcc9ff49e9b6d1d908713c" kindref="member" tooltip="Default constructor.">AuxContainerBase</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><ref refid="de/d34/classBreakableAuxContainer_1a7e6b930ea67b2b020a00eb8de6e49a66" kindref="member" tooltip="Default constructor.">BreakableAuxContainer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AUX_VARIABLE(<sp/>testVar1<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AUX_VARIABLE(<sp/>testVar2<sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AUX_VARIABLE(<sp/>testVar3<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>breakTestVar1()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>testVar1.clear();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>breakTestVar2()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>testVar2.clear();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>breakTestVar3()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>testVar3.clear();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>testVar1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>testVar2;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>short<sp/>&gt;<sp/>testVar3;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>BreakableAuxContainer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>healthy<sp/>and<sp/>a<sp/>&quot;broken&quot;<sp/>container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><ref refid="de/d34/classBreakableAuxContainer" kindref="compound" tooltip="Auxiliary container used during the tests.">BreakableAuxContainer</ref><sp/>healthyAux,<sp/>brokenAux;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector&lt; SG::AuxElement &gt;</ref><sp/>healthyCont,<sp/>brokenCont;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>healthyCont.setStore(<sp/>&amp;healthyAux<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>brokenCont.setStore(<sp/>&amp;brokenAux<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>them<sp/>with<sp/>the<sp/>same<sp/>data:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i,<sp/>j<sp/>+=<sp/>1.5,<sp/>k<sp/>+=<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>healthyCont.<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>()<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>healthyCont.<ref refid="d0/d4d/classDataVector_1aee6b47538e67f772011367fccbf0e83f" kindref="member" tooltip="Access the last element in the collection as an rvalue.">back</ref>()-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" kindref="member" tooltip="Fetch an aux data variable, as a non-const reference.">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;testVar1&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>healthyCont.<ref refid="d0/d4d/classDataVector_1aee6b47538e67f772011367fccbf0e83f" kindref="member" tooltip="Access the last element in the collection as an rvalue.">back</ref>()-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" kindref="member" tooltip="Fetch an aux data variable, as a non-const reference.">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;testVar2&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>healthyCont.<ref refid="d0/d4d/classDataVector_1aee6b47538e67f772011367fccbf0e83f" kindref="member" tooltip="Access the last element in the collection as an rvalue.">back</ref>()-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" kindref="member" tooltip="Fetch an aux data variable, as a non-const reference.">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;testVar3&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>brokenCont.<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>()<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>brokenCont.<ref refid="d0/d4d/classDataVector_1aee6b47538e67f772011367fccbf0e83f" kindref="member" tooltip="Access the last element in the collection as an rvalue.">back</ref>()-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" kindref="member" tooltip="Fetch an aux data variable, as a non-const reference.">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;testVar1&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>brokenCont.<ref refid="d0/d4d/classDataVector_1aee6b47538e67f772011367fccbf0e83f" kindref="member" tooltip="Access the last element in the collection as an rvalue.">back</ref>()-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" kindref="member" tooltip="Fetch an aux data variable, as a non-const reference.">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;testVar2&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>brokenCont.<ref refid="d0/d4d/classDataVector_1aee6b47538e67f772011367fccbf0e83f" kindref="member" tooltip="Access the last element in the collection as an rvalue.">back</ref>()-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" kindref="member" tooltip="Fetch an aux data variable, as a non-const reference.">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;testVar3&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>their<sp/>contents:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Content<sp/>of<sp/>healthyCont:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>el<sp/>:<sp/>healthyCont<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*el<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Content<sp/>of<sp/>brokenCont<sp/>(before<sp/>breaking):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>el<sp/>:<sp/>brokenCont<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*el<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>now<sp/>break<sp/>one<sp/>variable<sp/>in<sp/>the<sp/>container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>brokenAux.breakTestVar2();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>brokenCont.setStore(<sp/>&amp;brokenAux<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Needed<sp/>to<sp/>clear<sp/>internal<sp/>caches...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>container<sp/>that<sp/>will<sp/>hold<sp/>the<sp/>deep<sp/>copies:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><ref refid="de/d65/classxAOD_1_1AuxContainerBase" kindref="compound">xAOD::AuxContainerBase</ref><sp/>copyAux;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector&lt; SG::AuxElement &gt;</ref><sp/>copyCont;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>copyCont.setStore(<sp/>&amp;copyAux<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>make<sp/>a<sp/>deep<sp/>copy<sp/>of<sp/>the<sp/>healthy<sp/>container.<sp/>This<sp/>should<sp/>work<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>usual<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>orig<sp/>:<sp/>healthyCont<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>copy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copyCont.<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<sp/>copy<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*copy<sp/>=<sp/>*orig;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>content<sp/>of<sp/>the<sp/>copy:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Content<sp/>of<sp/>copyCont<sp/>after<sp/>healthy<sp/>deep<sp/>copy:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>el<sp/>:<sp/>copyCont<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*el<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>safe<sp/>copy<sp/>function<sp/>to<sp/>do<sp/>the<sp/>same<sp/>copy:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>copyCont.clear();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>orig<sp/>:<sp/>healthyCont<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>copy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copyCont.push_back(<sp/>copy<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1a5e5d57f05b20e679d5f71758be8e2d76" kindref="member">xAOD::safeDeepCopy</ref>(<sp/>*orig,<sp/>*copy<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>content<sp/>of<sp/>the<sp/>copy:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Content<sp/>of<sp/>copyCont<sp/>after<sp/>healthy<sp/>safe<sp/>deep<sp/>copy:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>el<sp/>:<sp/>copyCont<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*el<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>safe<sp/>deep<sp/>copy<sp/>of<sp/>the<sp/>broken<sp/>container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>copyCont.clear();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>orig<sp/>:<sp/>brokenCont<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>copy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copyCont.push_back(<sp/>copy<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1a5e5d57f05b20e679d5f71758be8e2d76" kindref="member">xAOD::safeDeepCopy</ref>(<sp/>*orig,<sp/>*copy<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>content<sp/>of<sp/>the<sp/>copy:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Content<sp/>of<sp/>copyCont<sp/>after<sp/>broken<sp/>safe<sp/>deep<sp/>copy:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>el<sp/>:<sp/>copyCont<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*el<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally,<sp/>just<sp/>as<sp/>a<sp/>double-check,<sp/>make<sp/>sure<sp/>that<sp/>normal<sp/>deep<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would&apos;ve<sp/>broken<sp/>for<sp/>the<sp/>doctored<sp/>container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>brokenAsExpected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>copy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copyCont.push_back(<sp/>copy<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*copy<sp/>=<sp/>*(<sp/>brokenCont[<sp/>0<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref>&amp;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>brokenAsExpected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>brokenAsExpected<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>assignment<sp/>operator<sp/>is<sp/>no<sp/>longer<sp/>broken&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>user<sp/>what<sp/>happened:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>tests<sp/>succeeded!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>gracefully:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx"/>
  </compounddef>
</doxygen>
