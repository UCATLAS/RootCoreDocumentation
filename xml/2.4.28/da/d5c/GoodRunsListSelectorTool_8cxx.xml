<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d5c/GoodRunsListSelectorTool_8cxx" kind="file">
    <compoundname>GoodRunsListSelectorTool.cxx</compoundname>
    <includes refid="d8/df7/GoodRunsListSelectorTool_8h" local="yes">GoodRunsLists/GoodRunsListSelectorTool.h</includes>
    <includes refid="d7/dd9/TGRLCollection_8h" local="yes">GoodRunsLists/TGRLCollection.h</includes>
    <includes refid="d7/d46/TGoodRunsListReader_8h" local="yes">GoodRunsLists/TGoodRunsListReader.h</includes>
    <includes refid="db/db8/TMsgLogger_8h" local="yes">GoodRunsLists/TMsgLogger.h</includes>
    <includes refid="d0/d5f/StrUtil_8h" local="yes">GoodRunsLists/StrUtil.h</includes>
    <includes refid="d3/d32/PathResolver_8h" local="yes">PathResolver/PathResolver.h</includes>
    <includes local="yes">DetectorStatus/IDetStatusSvc.h</includes>
    <includes local="yes">GaudiKernel/MsgStream.h</includes>
    <includes refid="d9/d60/EventInfo_8h" local="yes">EventInfo/EventInfo.h</includes>
    <includes local="yes">EventInfo/EventID.h</includes>
    <includes local="yes">StoreGate/StoreGate.h</includes>
    <includes local="yes">TFormula.h</includes>
    <includes local="yes">TSystem.h</includes>
    <includes local="no">sys/stat.h</includes>
    <incdepgraph>
      <node id="135385">
        <label>sys/stat.h</label>
      </node>
      <node id="135247">
        <label>list</label>
      </node>
      <node id="135362">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="135348" relation="include">
        </childnode>
        <childnode refid="135354" relation="include">
        </childnode>
        <childnode refid="135277" relation="include">
        </childnode>
        <childnode refid="135344" relation="include">
        </childnode>
        <childnode refid="135284" relation="include">
        </childnode>
      </node>
      <node id="135348">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="135324">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="135369">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="135370" relation="include">
        </childnode>
        <childnode refid="135349" relation="include">
        </childnode>
        <childnode refid="135291" relation="include">
        </childnode>
        <childnode refid="135371" relation="include">
        </childnode>
      </node>
      <node id="135326">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="135283" relation="include">
        </childnode>
        <childnode refid="135285" relation="include">
        </childnode>
        <childnode refid="135291" relation="include">
        </childnode>
        <childnode refid="135292" relation="include">
        </childnode>
      </node>
      <node id="135266">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135262" relation="include">
        </childnode>
        <childnode refid="135267" relation="include">
        </childnode>
        <childnode refid="135238" relation="include">
        </childnode>
      </node>
      <node id="135272">
        <label>EventInfo/EventInfo.h</label>
        <link refid="d9/d60/EventInfo_8h_source"/>
        <childnode refid="135273" relation="include">
        </childnode>
        <childnode refid="135381" relation="include">
        </childnode>
      </node>
      <node id="135327">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="135294">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="135279" relation="include">
        </childnode>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135295" relation="include">
        </childnode>
        <childnode refid="135293" relation="include">
        </childnode>
      </node>
      <node id="135290">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="135292">
        <label>functional</label>
      </node>
      <node id="135345">
        <label>boost/version.hpp</label>
      </node>
      <node id="135289">
        <label>limits</label>
      </node>
      <node id="135295">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="135322">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="135238">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="135286">
        <label>iterator</label>
      </node>
      <node id="135310">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135311" relation="include">
        </childnode>
      </node>
      <node id="135243">
        <label>AthenaKernel/IAthenaEvtLoopPreSelectTool.h</label>
      </node>
      <node id="135368">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="135374">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="135375" relation="include">
        </childnode>
        <childnode refid="135343" relation="include">
        </childnode>
        <childnode refid="135289" relation="include">
        </childnode>
        <childnode refid="135292" relation="include">
        </childnode>
        <childnode refid="135376" relation="include">
        </childnode>
      </node>
      <node id="135334">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="135280" relation="include">
        </childnode>
        <childnode refid="135335" relation="include">
        </childnode>
        <childnode refid="135336" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
      </node>
      <node id="135307">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135287" relation="include">
        </childnode>
      </node>
      <node id="135236">
        <label>GoodRunsLists/GoodRunsListSelectorTool.h</label>
        <link refid="d8/df7/GoodRunsListSelectorTool_8h"/>
        <childnode refid="135237" relation="include">
        </childnode>
        <childnode refid="135242" relation="include">
        </childnode>
        <childnode refid="135243" relation="include">
        </childnode>
        <childnode refid="135244" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135241" relation="include">
        </childnode>
      </node>
      <node id="135274">
        <label>stdint.h</label>
      </node>
      <node id="135256">
        <label>TList.h</label>
      </node>
      <node id="135354">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="135289" relation="include">
        </childnode>
        <childnode refid="135355" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
        <childnode refid="135287" relation="include">
        </childnode>
        <childnode refid="135281" relation="include">
        </childnode>
      </node>
      <node id="135341">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="135304">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
      </node>
      <node id="135299">
        <label>RVersion.h</label>
      </node>
      <node id="135254">
        <label>GoodRunsLists/TGoodRunsListReader.h</label>
        <link refid="d7/d46/TGoodRunsListReader_8h_source"/>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135255" relation="include">
        </childnode>
        <childnode refid="135256" relation="include">
        </childnode>
        <childnode refid="135252" relation="include">
        </childnode>
        <childnode refid="135246" relation="include">
        </childnode>
        <childnode refid="135257" relation="include">
        </childnode>
        <childnode refid="135248" relation="include">
        </childnode>
      </node>
      <node id="135282">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="135283" relation="include">
        </childnode>
        <childnode refid="135291" relation="include">
        </childnode>
        <childnode refid="135292" relation="include">
        </childnode>
      </node>
      <node id="135270">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="135244">
        <label>GoodRunsLists/RegularFormula.h</label>
        <link refid="dc/d4a/RegularFormula_8h_source"/>
        <childnode refid="135245" relation="include">
        </childnode>
        <childnode refid="135246" relation="include">
        </childnode>
        <childnode refid="135247" relation="include">
        </childnode>
      </node>
      <node id="135288">
        <label>cmath</label>
      </node>
      <node id="135338">
        <label>cassert</label>
      </node>
      <node id="135346">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="135364">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="135336">
        <label>stdexcept</label>
      </node>
      <node id="135264">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135262" relation="include">
        </childnode>
        <childnode refid="135265" relation="include">
        </childnode>
      </node>
      <node id="135325">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="135352">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="135359">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="135262">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="135240">
        <label>string</label>
      </node>
      <node id="135328">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="135280" relation="include">
        </childnode>
        <childnode refid="135279" relation="include">
        </childnode>
        <childnode refid="135310" relation="include">
        </childnode>
        <childnode refid="135307" relation="include">
        </childnode>
        <childnode refid="135296" relation="include">
        </childnode>
        <childnode refid="135329" relation="include">
        </childnode>
        <childnode refid="135330" relation="include">
        </childnode>
        <childnode refid="135313" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135285" relation="include">
        </childnode>
        <childnode refid="135287" relation="include">
        </childnode>
        <childnode refid="135331" relation="include">
        </childnode>
        <childnode refid="135332" relation="include">
        </childnode>
        <childnode refid="135320" relation="include">
        </childnode>
        <childnode refid="135333" relation="include">
        </childnode>
      </node>
      <node id="135302">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
      </node>
      <node id="135331">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="135356">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="135340" relation="include">
        </childnode>
        <childnode refid="135354" relation="include">
        </childnode>
        <childnode refid="135357" relation="include">
        </childnode>
        <childnode refid="135359" relation="include">
        </childnode>
        <childnode refid="135345" relation="include">
        </childnode>
        <childnode refid="135286" relation="include">
        </childnode>
        <childnode refid="135287" relation="include">
        </childnode>
      </node>
      <node id="135370">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="135241">
        <label>map</label>
      </node>
      <node id="135371">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="135372" relation="include">
        </childnode>
      </node>
      <node id="135372">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="135300">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="135317">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="135249">
        <label>GoodRunsLists/TGoodRunsList.h</label>
        <link refid="d0/db2/TGoodRunsList_8h_source"/>
        <childnode refid="135250" relation="include">
        </childnode>
        <childnode refid="135253" relation="include">
        </childnode>
        <childnode refid="135246" relation="include">
        </childnode>
        <childnode refid="135241" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
      </node>
      <node id="135361">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="135356" relation="include">
        </childnode>
        <childnode refid="135286" relation="include">
        </childnode>
        <childnode refid="135284" relation="include">
        </childnode>
        <childnode refid="135362" relation="include">
        </childnode>
      </node>
      <node id="135382">
        <label>EventInfo/EventID.h</label>
      </node>
      <node id="135332">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="135314">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="135237">
        <label>GoodRunsLists/IGoodRunsListSelectorTool.h</label>
        <link refid="d5/d98/IGoodRunsListSelectorTool_8h_source"/>
        <childnode refid="135238" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135241" relation="include">
        </childnode>
      </node>
      <node id="135357">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="135340" relation="include">
        </childnode>
        <childnode refid="135298" relation="include">
        </childnode>
        <childnode refid="135291" relation="include">
        </childnode>
        <childnode refid="135358" relation="include">
        </childnode>
      </node>
      <node id="135278">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="135265">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="135298">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="135299" relation="include">
        </childnode>
        <childnode refid="135300" relation="include">
        </childnode>
      </node>
      <node id="135330">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="135323">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="135355">
        <label>limits.h</label>
      </node>
      <node id="135257">
        <label>GoodRunsLists/TMsgLogger.h</label>
        <link refid="db/db8/TMsgLogger_8h_source"/>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135258" relation="include">
        </childnode>
        <childnode refid="135241" relation="include">
        </childnode>
        <childnode refid="135252" relation="include">
        </childnode>
        <childnode refid="135246" relation="include">
        </childnode>
      </node>
      <node id="135350">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="135351" relation="include">
        </childnode>
      </node>
      <node id="135242">
        <label>AthenaBaseComps/AthAlgTool.h</label>
      </node>
      <node id="135309">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="135310" relation="include">
        </childnode>
        <childnode refid="135289" relation="include">
        </childnode>
        <childnode refid="135274" relation="include">
        </childnode>
        <childnode refid="135312" relation="include">
        </childnode>
      </node>
      <node id="135280">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135282" relation="include">
        </childnode>
      </node>
      <node id="135378">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="135274" relation="include">
        </childnode>
      </node>
      <node id="135250">
        <label>GoodRunsLists/TGoodRun.h</label>
        <link refid="df/d5b/TGoodRun_8h_source"/>
        <childnode refid="135251" relation="include">
        </childnode>
        <childnode refid="135252" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
      </node>
      <node id="135283">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="135284" relation="include">
        </childnode>
        <childnode refid="135285" relation="include">
        </childnode>
        <childnode refid="135286" relation="include">
        </childnode>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135287" relation="include">
        </childnode>
        <childnode refid="135288" relation="include">
        </childnode>
        <childnode refid="135289" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135290" relation="include">
        </childnode>
      </node>
      <node id="135343">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="135338" relation="include">
        </childnode>
      </node>
      <node id="135273">
        <label>xAODEventInfo/versions/EventInfo_v1.h</label>
        <link refid="d4/da0/EventInfo__v1_8h_source"/>
        <childnode refid="135274" relation="include">
        </childnode>
        <childnode refid="135275" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135276" relation="include">
        </childnode>
        <childnode refid="135277" relation="include">
        </childnode>
        <childnode refid="135339" relation="include">
        </childnode>
        <childnode refid="135377" relation="include">
        </childnode>
        <childnode refid="135380" relation="include">
        </childnode>
      </node>
      <node id="135255">
        <label>TROOT.h</label>
      </node>
      <node id="135259">
        <label>GoodRunsLists/StrUtil.h</label>
        <link refid="d0/d5f/StrUtil_8h_source"/>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
      </node>
      <node id="135358">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="135354" relation="include">
        </childnode>
        <childnode refid="135343" relation="include">
        </childnode>
      </node>
      <node id="135303">
        <label>typeinfo</label>
      </node>
      <node id="135337">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="135331" relation="include">
        </childnode>
        <childnode refid="135338" relation="include">
        </childnode>
      </node>
      <node id="135248">
        <label>GoodRunsLists/TGRLCollection.h</label>
        <link refid="d7/dd9/TGRLCollection_8h_source"/>
        <childnode refid="135249" relation="include">
        </childnode>
        <childnode refid="135252" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
      </node>
      <node id="135339">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="135334" relation="include">
        </childnode>
        <childnode refid="135340" relation="include">
        </childnode>
        <childnode refid="135341" relation="include">
        </childnode>
        <childnode refid="135342" relation="include">
        </childnode>
        <childnode refid="135348" relation="include">
        </childnode>
        <childnode refid="135349" relation="include">
        </childnode>
        <childnode refid="135354" relation="include">
        </childnode>
        <childnode refid="135356" relation="include">
        </childnode>
        <childnode refid="135360" relation="include">
        </childnode>
        <childnode refid="135361" relation="include">
        </childnode>
        <childnode refid="135357" relation="include">
        </childnode>
        <childnode refid="135363" relation="include">
        </childnode>
        <childnode refid="135298" relation="include">
        </childnode>
        <childnode refid="135364" relation="include">
        </childnode>
        <childnode refid="135365" relation="include">
        </childnode>
        <childnode refid="135359" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
        <childnode refid="135292" relation="include">
        </childnode>
        <childnode refid="135366" relation="include">
        </childnode>
        <childnode refid="135284" relation="include">
        </childnode>
        <childnode refid="135336" relation="include">
        </childnode>
        <childnode refid="135286" relation="include">
        </childnode>
        <childnode refid="135295" relation="include">
        </childnode>
        <childnode refid="135367" relation="include">
        </childnode>
        <childnode refid="135369" relation="include">
        </childnode>
        <childnode refid="135373" relation="include">
        </childnode>
        <childnode refid="135374" relation="include">
        </childnode>
      </node>
      <node id="135251">
        <label>GoodRunsLists/TLumiBlockRange.h</label>
        <link refid="d9/df8/TLumiBlockRange_8h_source"/>
        <childnode refid="135252" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
      </node>
      <node id="135312">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="135379">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="135252">
        <label>TObject.h</label>
      </node>
      <node id="135329">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="135269">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="135262" relation="include">
        </childnode>
        <childnode refid="135264" relation="include">
        </childnode>
        <childnode refid="135270" relation="include">
        </childnode>
      </node>
      <node id="135297">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="135274" relation="include">
        </childnode>
      </node>
      <node id="135311">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="135316">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="135349">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="135350" relation="include">
        </childnode>
        <childnode refid="135342" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135290" relation="include">
        </childnode>
        <childnode refid="135352" relation="include">
        </childnode>
        <childnode refid="135315" relation="include">
        </childnode>
        <childnode refid="135353" relation="include">
        </childnode>
      </node>
      <node id="135293">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="135367">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="135368" relation="include">
        </childnode>
      </node>
      <node id="135301">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="135280" relation="include">
        </childnode>
        <childnode refid="135302" relation="include">
        </childnode>
        <childnode refid="135304" relation="include">
        </childnode>
        <childnode refid="135305" relation="include">
        </childnode>
        <childnode refid="135318" relation="include">
        </childnode>
        <childnode refid="135320" relation="include">
        </childnode>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135326" relation="include">
        </childnode>
        <childnode refid="135327" relation="include">
        </childnode>
      </node>
      <node id="135384">
        <label>TSystem.h</label>
      </node>
      <node id="135239">
        <label>vector</label>
      </node>
      <node id="135375">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="135284" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
      </node>
      <node id="135376">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="135285">
        <label>utility</label>
      </node>
      <node id="135373">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="135313">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="135258">
        <label>sstream</label>
      </node>
      <node id="135235">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/src/GoodRunsListSelectorTool.cxx</label>
        <link refid="GoodRunsListSelectorTool.cxx"/>
        <childnode refid="135236" relation="include">
        </childnode>
        <childnode refid="135248" relation="include">
        </childnode>
        <childnode refid="135254" relation="include">
        </childnode>
        <childnode refid="135257" relation="include">
        </childnode>
        <childnode refid="135259" relation="include">
        </childnode>
        <childnode refid="135260" relation="include">
        </childnode>
        <childnode refid="135271" relation="include">
        </childnode>
        <childnode refid="135268" relation="include">
        </childnode>
        <childnode refid="135272" relation="include">
        </childnode>
        <childnode refid="135382" relation="include">
        </childnode>
        <childnode refid="135383" relation="include">
        </childnode>
        <childnode refid="135245" relation="include">
        </childnode>
        <childnode refid="135384" relation="include">
        </childnode>
        <childnode refid="135385" relation="include">
        </childnode>
      </node>
      <node id="135347">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="135321">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="135271">
        <label>DetectorStatus/IDetStatusSvc.h</label>
      </node>
      <node id="135306">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="135383">
        <label>StoreGate/StoreGate.h</label>
      </node>
      <node id="135320">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="135321" relation="include">
        </childnode>
        <childnode refid="135322" relation="include">
        </childnode>
        <childnode refid="135323" relation="include">
        </childnode>
        <childnode refid="135324" relation="include">
        </childnode>
        <childnode refid="135325" relation="include">
        </childnode>
      </node>
      <node id="135245">
        <label>TFormula.h</label>
      </node>
      <node id="135276">
        <label>iosfwd</label>
      </node>
      <node id="135287">
        <label>cstdlib</label>
      </node>
      <node id="135366">
        <label>iostream</label>
      </node>
      <node id="135335">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="135279">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="135280" relation="include">
        </childnode>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135293" relation="include">
        </childnode>
      </node>
      <node id="135281">
        <label>cstddef</label>
      </node>
      <node id="135268">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="135263">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135258" relation="include">
        </childnode>
        <childnode refid="135262" relation="include">
        </childnode>
        <childnode refid="135264" relation="include">
        </childnode>
        <childnode refid="135266" relation="include">
        </childnode>
        <childnode refid="135268" relation="include">
        </childnode>
      </node>
      <node id="135253">
        <label>TNamed.h</label>
      </node>
      <node id="135333">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="135301" relation="include">
        </childnode>
        <childnode refid="135294" relation="include">
        </childnode>
        <childnode refid="135279" relation="include">
        </childnode>
        <childnode refid="135331" relation="include">
        </childnode>
        <childnode refid="135332" relation="include">
        </childnode>
      </node>
      <node id="135267">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="135380">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="135295" relation="include">
        </childnode>
      </node>
      <node id="135246">
        <label>TString.h</label>
      </node>
      <node id="135353">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="135340" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135247" relation="include">
        </childnode>
        <childnode refid="135338" relation="include">
        </childnode>
        <childnode refid="135287" relation="include">
        </childnode>
        <childnode refid="135295" relation="include">
        </childnode>
      </node>
      <node id="135305">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="135302" relation="include">
        </childnode>
        <childnode refid="135306" relation="include">
        </childnode>
        <childnode refid="135307" relation="include">
        </childnode>
        <childnode refid="135308" relation="include">
        </childnode>
        <childnode refid="135313" relation="include">
        </childnode>
        <childnode refid="135303" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135284" relation="include">
        </childnode>
        <childnode refid="135274" relation="include">
        </childnode>
        <childnode refid="135315" relation="include">
        </childnode>
        <childnode refid="135316" relation="include">
        </childnode>
        <childnode refid="135317" relation="include">
        </childnode>
      </node>
      <node id="135260">
        <label>PathResolver/PathResolver.h</label>
        <link refid="d3/d32/PathResolver_8h_source"/>
        <childnode refid="135261" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
      </node>
      <node id="135261">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135262" relation="include">
        </childnode>
        <childnode refid="135263" relation="include">
        </childnode>
        <childnode refid="135269" relation="include">
        </childnode>
      </node>
      <node id="135315">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="135342">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="135328" relation="include">
        </childnode>
        <childnode refid="135340" relation="include">
        </childnode>
        <childnode refid="135341" relation="include">
        </childnode>
        <childnode refid="135277" relation="include">
        </childnode>
        <childnode refid="135301" relation="include">
        </childnode>
        <childnode refid="135334" relation="include">
        </childnode>
        <childnode refid="135343" relation="include">
        </childnode>
        <childnode refid="135294" relation="include">
        </childnode>
        <childnode refid="135344" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135347" relation="include">
        </childnode>
      </node>
      <node id="135275">
        <label>set</label>
      </node>
      <node id="135381">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="135293" relation="include">
        </childnode>
      </node>
      <node id="135319">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="135308">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="135306" relation="include">
        </childnode>
        <childnode refid="135309" relation="include">
        </childnode>
        <childnode refid="135313" relation="include">
        </childnode>
        <childnode refid="135239" relation="include">
        </childnode>
        <childnode refid="135314" relation="include">
        </childnode>
      </node>
      <node id="135284">
        <label>algorithm</label>
      </node>
      <node id="135363">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="135277">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="135278" relation="include">
        </childnode>
        <childnode refid="135279" relation="include">
        </childnode>
        <childnode refid="135294" relation="include">
        </childnode>
        <childnode refid="135296" relation="include">
        </childnode>
        <childnode refid="135301" relation="include">
        </childnode>
        <childnode refid="135328" relation="include">
        </childnode>
        <childnode refid="135307" relation="include">
        </childnode>
        <childnode refid="135334" relation="include">
        </childnode>
        <childnode refid="135331" relation="include">
        </childnode>
        <childnode refid="135281" relation="include">
        </childnode>
        <childnode refid="135337" relation="include">
        </childnode>
      </node>
      <node id="135296">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="135274" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135297" relation="include">
        </childnode>
        <childnode refid="135298" relation="include">
        </childnode>
      </node>
      <node id="135360">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="135356" relation="include">
        </childnode>
        <childnode refid="135343" relation="include">
        </childnode>
        <childnode refid="135286" relation="include">
        </childnode>
      </node>
      <node id="135340">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="135377">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="135274" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
        <childnode refid="135378" relation="include">
        </childnode>
        <childnode refid="135298" relation="include">
        </childnode>
        <childnode refid="135379" relation="include">
        </childnode>
      </node>
      <node id="135351">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="135365">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="135291">
        <label>memory</label>
      </node>
      <node id="135318">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="135304" relation="include">
        </childnode>
        <childnode refid="135305" relation="include">
        </childnode>
        <childnode refid="135319" relation="include">
        </childnode>
      </node>
      <node id="135344">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="135278" relation="include">
        </childnode>
        <childnode refid="135294" relation="include">
        </childnode>
        <childnode refid="135279" relation="include">
        </childnode>
        <childnode refid="135315" relation="include">
        </childnode>
        <childnode refid="135345" relation="include">
        </childnode>
        <childnode refid="135346" relation="include">
        </childnode>
        <childnode refid="135240" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/df7/GoodRunsListSelectorTool_8h" kindref="compound" tooltip="This file contains the class definition for the GoodRunsListSelectorTool class.">GoodRunsLists/GoodRunsListSelectorTool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TGRLCollection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TGoodRunsListReader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TMsgLogger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/StrUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PathResolver/PathResolver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DetectorStatus/IDetStatusSvc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GaudiKernel/MsgStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventInfo/EventInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventInfo/EventID.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;StoreGate/StoreGate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFormula.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TSystem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">GoodRunsListSelectorTool::GoodRunsListSelectorTool(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IInterface*<sp/>parent<sp/>)<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/>:<sp/>AthAlgTool(<sp/>type,<sp/>name,<sp/>parent<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/>,<sp/>m_reader(0)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/>,<sp/>m_boolop(0)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/>,<sp/>m_passthrough(true)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/>,<sp/>m_usecool(false)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/>,<sp/>m_verbose(false)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/>,<sp/>m_rejectanybrl(false)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/>,<sp/>m_eventselectormode(false)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/>,<sp/>m_detstatussvc(0)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>declareInterface&lt;IGoodRunsListSelectorTool&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>declareInterface&lt;IAthenaEvtLoopPreSelectTool&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;GoodRunsListVec&quot;</highlight><highlight class="normal">,<sp/>m_goodrunslistVec,<sp/></highlight><highlight class="stringliteral">&quot;list<sp/>of<sp/>input<sp/>xml<sp/>files&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;BlackRunsListVec&quot;</highlight><highlight class="normal">,<sp/>m_blackrunslistVec,<sp/></highlight><highlight class="stringliteral">&quot;list<sp/>of<sp/>input<sp/>xml<sp/>files&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;BoolOperation&quot;</highlight><highlight class="normal">,<sp/>m_boolop<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;PassThrough&quot;</highlight><highlight class="normal">,<sp/>m_passthrough<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;DQFlagsFromCOOL&quot;</highlight><highlight class="normal">,<sp/>m_usecool<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;VerboseDetStatus&quot;</highlight><highlight class="normal">,<sp/>m_verbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;DQFlagsQueryVec&quot;</highlight><highlight class="normal">,<sp/>m_dqflagsqueryVec,<sp/></highlight><highlight class="stringliteral">&quot;vector<sp/>of<sp/>dqflags<sp/>query<sp/>strings&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;RunRangeExpressionCOOL&quot;</highlight><highlight class="normal">,<sp/>m_runrangeexpr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;RejectBlackRunsInEventSelector&quot;</highlight><highlight class="normal">,<sp/>m_rejectanybrl<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;EventSelectorMode&quot;</highlight><highlight class="normal">,<sp/>m_eventselectormode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>m_grlcollection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/d9b/classRoot_1_1TGRLCollection" kindref="compound">Root::TGRLCollection</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>m_brlcollection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/d9b/classRoot_1_1TGRLCollection" kindref="compound">Root::TGRLCollection</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>m_reader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d0f/classRoot_1_1TGoodRunsListReader" kindref="compound">Root::TGoodRunsListReader</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">GoodRunsListSelectorTool::~GoodRunsListSelectorTool()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_grlcollection!=0)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_grlcollection;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_brlcollection!=0)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_brlcollection;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_reader!=0)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_reader;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>all<sp/>the<sp/>formula<sp/>pntrs<sp/>in<sp/>the<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>m_dqformula.empty()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;<sp/>std::string,TFormula*<sp/>&gt;::iterator<sp/>itr=<sp/>m_dqformula.begin();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>TFormula*<sp/>form<sp/>=<sp/>(*itr).second;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dqformula.erase(itr);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>form;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">StatusCode<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="db/d72/classGoodRunsListSelectorTool_1a289e7ab4e33f03592970c2d815ee456a" kindref="member" tooltip="To allow access to the IGoodRunsListSelectorTool interface.">GoodRunsListSelectorTool::queryInterface</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InterfaceID&amp;<sp/>riid,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>ppvIf<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>riid<sp/>==<sp/>IGoodRunsListSelectorTool::interfaceID()<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*ppvIf<sp/>=<sp/>(<ref refid="d1/df3/classIGoodRunsListSelectorTool" kindref="compound">IGoodRunsListSelectorTool</ref>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>addRef();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AthAlgTool::queryInterface(<sp/>riid,<sp/>ppvIf<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">StatusCode</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="db/d72/classGoodRunsListSelectorTool_1ae327fc2172a19ce056949f80973b6b68" kindref="member" tooltip="Initialize AlgTool.">GoodRunsListSelectorTool::initialize</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;initialize()<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>Root::TMsgLogger::SetMinLevel(static_cast&lt;Root::TMsgLevel&gt;(outputLevel()));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_goodrunslistVec.empty()<sp/>||<sp/>!m_blackrunslistVec.empty()<sp/>||<sp/>m_usecool)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_passthrough=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_passthrough)<sp/>ATH_MSG_WARNING<sp/>(</highlight><highlight class="stringliteral">&quot;Set<sp/>to<sp/>pass-through<sp/>mode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;::iterator<sp/>itr;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itr=m_goodrunslistVec.begin();<sp/>itr!=m_goodrunslistVec.end()<sp/>&amp;&amp;<sp/>!m_usecool;<sp/>++itr)<sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>fname;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fname;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)!=string::npos<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>gSystem-&gt;ExpandPathName(<sp/>itr-&gt;c_str()<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>(PathResolverFindXMLFile(<sp/>*itr<sp/>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!fileExists(fname.c_str())<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>open<sp/>file<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fname);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itr=m_blackrunslistVec.begin();<sp/>itr!=m_blackrunslistVec.end()<sp/>&amp;&amp;<sp/>!m_usecool;<sp/>++itr)<sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>fname;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fname;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)!=string::npos<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>gSystem-&gt;ExpandPathName(<sp/>itr-&gt;c_str()<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>(PathResolverFindXMLFile(<sp/>*itr<sp/>));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!fileExists(fname.c_str())<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>open<sp/>file<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fname);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_goodrunslistVec.empty()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reader-&gt;Reset();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itr=m_goodrunslistVec.begin();<sp/>itr!=m_goodrunslistVec.end()<sp/>&amp;&amp;<sp/>!m_usecool;<sp/>++itr)<sp/>{<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>fname;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fname;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)!=string::npos<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>gSystem-&gt;ExpandPathName(<sp/>itr-&gt;c_str()<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>(PathResolverFindXMLFile(<sp/>*itr<sp/>));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_reader-&gt;AddXMLFile(fname);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reader-&gt;Interpret();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>*m_grlcollection<sp/>=<sp/>m_reader-&gt;GetMergedGRLCollection(static_cast&lt;Root::BoolOperation&gt;(m_boolop));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_blackrunslistVec.empty()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reader-&gt;Reset();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itr=m_blackrunslistVec.begin();<sp/>itr!=m_blackrunslistVec.end()<sp/>&amp;&amp;<sp/>!m_usecool;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>fname;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fname;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>itr-&gt;find(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)!=string::npos<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>gSystem-&gt;ExpandPathName(<sp/>itr-&gt;c_str()<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>(PathResolverFindXMLFile(<sp/>*itr<sp/>));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_reader-&gt;AddXMLFile(fname);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reader-&gt;Interpret();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>*m_brlcollection<sp/>=<sp/>m_reader-&gt;GetMergedGRLCollection(static_cast&lt;Root::BoolOperation&gt;(m_boolop));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_eventselectormode)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>service(</highlight><highlight class="stringliteral">&quot;StoreGateSvc&quot;</highlight><highlight class="normal">,<sp/>m_storeGate).isFailure()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>get<sp/>StoreGateSvc.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dqflagsqueryVec.empty())<sp/>{<sp/>m_usecool<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_dqflagsqueryVec.empty()<sp/>&amp;&amp;<sp/>m_usecool)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(service(</highlight><highlight class="stringliteral">&quot;DetStatusSvc&quot;</highlight><highlight class="normal">,m_detstatussvc).isFailure())<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>get<sp/>DetStatusSvc.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(itr=m_dqflagsqueryVec.begin();<sp/>itr!=m_dqflagsqueryVec.end()<sp/>&amp;&amp;<sp/>m_usecool;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;Parsing<sp/>dqflags<sp/>query<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*itr);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>dqvec<sp/>=<sp/>GRLStrUtil::split(*itr);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dqvec.size()==3)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>assume<sp/>that<sp/>dqvec[2]<sp/>==<sp/>&quot;LBSUMM&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dqformula[dqvec[0]]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFormula(dqvec[0].c_str(),dqvec[1].c_str());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>parsing<sp/>dq<sp/>query<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*itr);<sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>formOk<sp/>=<sp/>m_inrunrange.setFormula(m_runrangeexpr.c_str())<sp/>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>0!=formOk<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>parse<sp/>run<sp/>range<sp/>expression<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_runrangeexpr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>.<sp/>Return<sp/>Failure.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="db/d72/classGoodRunsListSelectorTool_1a4de037986fa66f7152680a919d0b1798" kindref="member" tooltip="called for each event by EventSelector to decide if the event should be passed">GoodRunsListSelectorTool::passEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EventInfo*<sp/>pEvent)<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passEvent()<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventNumber<sp/>=<sp/>pEvent-&gt;event_ID()-&gt;event_number();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber<sp/><sp/><sp/>=<sp/>pEvent-&gt;event_ID()-&gt;run_number();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lumiBlockNr<sp/>=<sp/>pEvent-&gt;event_ID()-&gt;lumi_block();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeStamp<sp/><sp/><sp/>=<sp/>pEvent-&gt;event_ID()-&gt;time_stamp();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passEvent()<sp/>::<sp/>run<sp/>number<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>runNumber<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>;<sp/>event<sp/>number<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eventNumber<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>;<sp/>lumiblock<sp/>number<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lumiBlockNr<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>;<sp/>timestamp<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timeStamp</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pass(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_passthrough)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passEvent()<sp/>::<sp/>Pass<sp/>through<sp/>mode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_usecool)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>pass<sp/>=<sp/>this-&gt;passRunLB(runNumber,lumiBlockNr);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_inrunrange.getNPars()==1)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy(0);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>drunNr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(runNumber);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_inrunrange.EvalPar(&amp;dummy,&amp;drunNr));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pass)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passEvent()<sp/>::<sp/>Event<sp/>rejected<sp/>based<sp/>on<sp/>provided<sp/>run<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_verbose)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING<sp/>(</highlight><highlight class="stringliteral">&quot;Now<sp/>printing<sp/>list<sp/>of<sp/>DQ<sp/>flags:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DetStatusMap::const_iterator<sp/>begin,end;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_detstatussvc-&gt;getIter(begin,end);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(DetStatusMap::const_iterator<sp/>itr=begin;itr!=end;++itr)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING<sp/>(</highlight><highlight class="stringliteral">&quot;Status<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itr-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>fullcode<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itr-&gt;second.fullCode());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color(0.);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>TFormula*<sp/>form(0);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;<sp/>std::string,TFormula*<sp/>&gt;::iterator<sp/>itr=<sp/>m_dqformula.begin();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr!=m_dqformula.end()<sp/>&amp;&amp;<sp/>pass;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>form<sp/>=<sp/>itr-&gt;second;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DetStatus*<sp/>ptr<sp/>=<sp/>m_detstatussvc-&gt;findStatus(<sp/>(itr-&gt;first).c_str()<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr!=0)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(itr-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>status<sp/>in<sp/>LBSUMM<sp/>found<sp/>to<sp/>be<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ptr-&gt;colour())<sp/>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ptr-&gt;code()<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>=<sp/>pass<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>form-&gt;EvalPar(<sp/>&amp;color<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>status<sp/>for<sp/>flag<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itr-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Do<sp/>not<sp/>pass<sp/>LB.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pass)<sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passEvent()<sp/>::<sp/>Event<sp/>accepted<sp/>based<sp/>on<sp/>info<sp/>in<sp/>LBSUMM.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passEvent()<sp/>::<sp/>Event<sp/>rejected<sp/>based<sp/>on<sp/>info<sp/>in<sp/>LBSUMM.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pass;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="db/d72/classGoodRunsListSelectorTool_1a8a59b27ef8318c9c6ac7fd281ae7e46c" kindref="member" tooltip="called for each event by GoodRunsListSelectorAlg to decide if the event should be...">GoodRunsListSelectorTool::passThisRunLB</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>grlnameVec,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>brlnameVec<sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passThisRunLB()<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1a36b2acd55b1ff4b04f435a71fd213042" kindref="member" tooltip="Definition of the latest event info version.">EventInfo</ref>*<sp/><sp/>pEvent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>StatusCode<sp/>status<sp/>=<sp/>m_storeGate-&gt;retrieve(pEvent);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(status.isSuccess()<sp/>&amp;&amp;<sp/>pEvent!=0))<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>retrieve<sp/>EventInfo<sp/>from<sp/>StoreGate.<sp/>Don&apos;t<sp/>pass<sp/>LB.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventNumber<sp/>=<sp/>pEvent-&gt;event_ID()-&gt;event_number();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber<sp/><sp/><sp/>=<sp/>pEvent-&gt;event_ID()-&gt;run_number();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lumiBlockNr<sp/>=<sp/>pEvent-&gt;event_ID()-&gt;lumi_block();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeStamp<sp/><sp/><sp/>=<sp/>pEvent-&gt;event_ID()-&gt;time_stamp();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passThisRunLB()<sp/>::<sp/>run<sp/>number<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>runNumber<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>;<sp/>event<sp/>number<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eventNumber<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>;<sp/>lumiblock<sp/>number<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lumiBlockNr<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>;<sp/>timestamp<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timeStamp</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pass(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_passthrough)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passThisRunLB()<sp/>::<sp/>Pass<sp/>through<sp/>mode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_usecool)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>pass<sp/>=<sp/>this-&gt;passRunLB(runNumber,lumiBlockNr,grlnameVec,brlnameVec);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_inrunrange.getNPars()==1)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy(0);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>drunNr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(runNumber);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_inrunrange.EvalPar(&amp;dummy,&amp;drunNr));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pass)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passThisRunLB()<sp/>::<sp/>Event<sp/>rejected<sp/>based<sp/>on<sp/>provided<sp/>run<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_verbose)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING<sp/>(</highlight><highlight class="stringliteral">&quot;Now<sp/>printing<sp/>list<sp/>of<sp/>DQ<sp/>flags:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DetStatusMap::const_iterator<sp/>begin,end;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_detstatussvc-&gt;getIter(begin,end);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(DetStatusMap::const_iterator<sp/>itr=begin;itr!=end;++itr)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING<sp/>(</highlight><highlight class="stringliteral">&quot;Status<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itr-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>fullcode<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itr-&gt;second.fullCode());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color(0.);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>TFormula*<sp/>form(0);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;<sp/>std::string,TFormula*<sp/>&gt;::iterator<sp/>itr=<sp/>m_dqformula.begin();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr!=m_dqformula.end()<sp/>&amp;&amp;<sp/>pass;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>form<sp/>=<sp/>itr-&gt;second;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DetStatus*<sp/>ptr<sp/>=<sp/>m_detstatussvc-&gt;findStatus(<sp/>(itr-&gt;first).c_str()<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr!=0)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(itr-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>status<sp/>in<sp/>LBSUMM<sp/>found<sp/>to<sp/>be<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ptr-&gt;colour())<sp/>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ptr-&gt;code()<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>=<sp/>pass<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>form-&gt;EvalPar(<sp/>&amp;color<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>status<sp/>for<sp/>flag<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itr-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Do<sp/>not<sp/>pass<sp/>LB.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pass)<sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passThisRunLB()<sp/>::<sp/>Event<sp/>accepted<sp/>based<sp/>on<sp/>info<sp/>in<sp/>LBSUMM.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passThisRunLB()<sp/>::<sp/>Event<sp/>rejected<sp/>based<sp/>on<sp/>info<sp/>in<sp/>LBSUMM.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pass;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><ref refid="db/d72/classGoodRunsListSelectorTool_1a2859c10101238823640a80b4fb59ac1d" kindref="member" tooltip="called for each event by GoodRunsListSelectorAlg to decide if the event should be...">GoodRunsListSelectorTool::passRunLB</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lumiBlockNr,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>grlnameVec,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>brlnameVec<sp/>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passRunLB()<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_passthrough)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passRunLB()<sp/>::<sp/>Pass<sp/>through<sp/>mode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_rejectanybrl<sp/>&amp;&amp;<sp/>m_eventselectormode<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_brlcollection-&gt;HasRunLumiBlock(runNumber,lumiBlockNr)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passRunLB()<sp/>::<sp/>Event<sp/>rejected<sp/>by<sp/>(_any_<sp/>of)<sp/>merged<sp/>black<sp/>runs<sp/>list.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!brlnameVec.empty())<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reject(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Root::TGoodRunsList&gt;::const_iterator<sp/>brlitr;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;brlnameVec.size()<sp/>&amp;&amp;<sp/>!reject;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>brlitr<sp/>=<sp/>m_brlcollection-&gt;find(brlnameVec[i]);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(brlitr!=m_brlcollection-&gt;end())</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reject<sp/>=<sp/>brlitr-&gt;HasRunLumiBlock(runNumber,lumiBlockNr);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reject)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passRunLB()<sp/>::<sp/>Event<sp/>rejected<sp/>by<sp/>specific<sp/>black<sp/>runs<sp/>list.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!grlnameVec.empty())<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pass(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Root::TGoodRunsList&gt;::const_iterator<sp/>grlitr;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;grlnameVec.size()<sp/>&amp;&amp;<sp/>!pass;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grlitr<sp/>=<sp/>m_grlcollection-&gt;find(grlnameVec[i]);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grlitr!=m_grlcollection-&gt;end())</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>=<sp/>grlitr-&gt;HasRunLumiBlock(runNumber,lumiBlockNr);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pass)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passRunLB()<sp/>::<sp/>Event<sp/>accepted<sp/>by<sp/>specific<sp/>good<sp/>runs<sp/>list.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_grlcollection-&gt;HasRunLumiBlock(runNumber,lumiBlockNr))<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passRunLB()<sp/>::<sp/>Event<sp/>accepted<sp/>by<sp/>(_any_<sp/>of)<sp/>merged<sp/>good<sp/>runs<sp/>list.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;passRunLB()<sp/>::<sp/>Event<sp/>rejected,<sp/>not<sp/>in<sp/>(any)<sp/>good<sp/>runs<sp/>list.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">StatusCode<sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><ref refid="db/d72/classGoodRunsListSelectorTool_1a8a7de9f22619db6e85194580ae6995c6" kindref="member" tooltip="Finalize AlgTool.">GoodRunsListSelectorTool::finalize</ref>()</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;finalize()<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><ref refid="db/d72/classGoodRunsListSelectorTool_1a7c554a59dff344a011119b569f1a62ee" kindref="member">GoodRunsListSelectorTool::fileExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>info;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>file<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>stat(fileName,<sp/>&amp;info);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(info.st_size<sp/>==<sp/>0)<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><ref refid="db/d72/classGoodRunsListSelectorTool_1a063ed7fabd8a06abfd394659860afc7f" kindref="member" tooltip="register grl/brl combination">GoodRunsListSelectorTool::registerGRLSelector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>grlnameVec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>brlnameVec)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_registry.find(name)!=m_registry.end())<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING<sp/>(</highlight><highlight class="stringliteral">&quot;registerGRLSelector()<sp/>::<sp/>GRL<sp/>selector<sp/>with<sp/>name<sp/>&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>already<sp/>registered.<sp/>Return<sp/>false.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!brlnameVec.empty())<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Root::TGoodRunsList&gt;::const_iterator<sp/>brlitr;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;brlnameVec.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>brlitr<sp/>=<sp/>m_brlcollection-&gt;find(brlnameVec[i]);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(brlitr==m_brlcollection-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;registerGRLSelector()<sp/>::<sp/>requested<sp/>BRL<sp/>object<sp/>with<sp/>name<sp/>&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>brlnameVec[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>not<sp/>found.<sp/>Have<sp/>you<sp/>provided<sp/>an<sp/>object<sp/>name<sp/>from<sp/>the<sp/>BRL<sp/>xml-file(s)?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!grlnameVec.empty())<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Root::TGoodRunsList&gt;::const_iterator<sp/>grlitr;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;grlnameVec.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grlitr<sp/>=<sp/>m_grlcollection-&gt;find(grlnameVec[i]);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grlitr==m_grlcollection-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;registerGRLSelector()<sp/>::<sp/>requested<sp/>GRL<sp/>object<sp/>with<sp/>name<sp/>&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>grlnameVec[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>not<sp/>found.<sp/>Have<sp/>you<sp/>provided<sp/>an<sp/>object<sp/>name<sp/>from<sp/>the<sp/>GRL<sp/>xml-file(s)?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;registerGRLSelector()<sp/>::<sp/>GRL<sp/>selector<sp/>with<sp/>name<sp/>&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>registered.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>m_registry[name]<sp/>=<sp/>vvPair(grlnameVec,brlnameVec);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/src/GoodRunsListSelectorTool.cxx"/>
  </compounddef>
</doxygen>
