<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/da2/classDataLink" kind="class" prot="public">
    <compoundname>DataLink</compoundname>
    <basecompoundref refid="d9/dec/classSelectNoInstance" prot="public" virt="non-virtual">SelectNoInstance</basecompoundref>
    <basecompoundref refid="dd/d9d/classDataLinkBase" prot="public" virt="non-virtual">DataLinkBase</basecompoundref>
    <includes refid="da/de8/DataLink_8h" local="no">DataLink.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>STORABLE</declname>
        <defname>STORABLE</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Type definitions taken from the StoreGate-based implementation</header>
      <description><para><anchor id="_1amgrp3edf68b75fd7efb33ad9b724b1b994c3"/> </para></description>
      <memberdef kind="typedef" id="da/da2/classDataLink_1aada99900342159ab89b18afc4d255582" prot="public" static="no">
        <type>std::string</type>
        <definition>typedef std::string DataLink&lt; STORABLE &gt;::ID_type</definition>
        <argsstring></argsstring>
        <name>ID_type</name>
        <briefdescription>
<para>Type of the &quot;regular&quot; identifiers in the event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/da2/classDataLink_1af5993db20a367d0547aa25929f823023" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t DataLink&lt; STORABLE &gt;::sgkey_t</definition>
        <argsstring></argsstring>
        <name>sgkey_t</name>
        <briefdescription>
<para>Integer identifier for the object in the event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/da2/classDataLink_1a0ef6051fb5975bd72ccbc12e01619239" prot="public" static="no">
        <type>STORABLE</type>
        <definition>typedef STORABLE DataLink&lt; STORABLE &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Type of the object being handled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/da2/classDataLink_1af83c034673d87eb35079b5d2ebf4ac43" prot="public" static="no">
        <type>STORABLE *</type>
        <definition>typedef STORABLE* DataLink&lt; STORABLE &gt;::__attribute__((deprecated)) pointer</definition>
        <argsstring>((deprecated)) pointer</argsstring>
        <name>__attribute__</name>
        <briefdescription>
<para>Pointer type for the object being handled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/da2/classDataLink_1a5ec1fb15843434e9b20f9715a8ea07fd" prot="public" static="no">
        <type>const STORABLE *</type>
        <definition>typedef const STORABLE* DataLink&lt; STORABLE &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>Constant pointer type for the object being handled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/da2/classDataLink_1a970ed32f3ef420cd8b2eadbfaae55d79" prot="public" static="no">
        <type>STORABLE &amp;</type>
        <definition>typedef STORABLE&amp; DataLink&lt; STORABLE &gt;::__attribute__((deprecated)) reference</definition>
        <argsstring>((deprecated)) reference</argsstring>
        <name>__attribute__</name>
        <briefdescription>
<para>Reference type for the object being handled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/da2/classDataLink_1affeb717ffcf22624a13118cee072cfe5" prot="public" static="no">
        <type>const STORABLE &amp;</type>
        <definition>typedef const STORABLE&amp; DataLink&lt; STORABLE &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Constant reference type for the object being handled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <description><para><anchor id="_1amgrp559a25fdb98a7d1fd1c3771ac568d5e9"/> </para></description>
      <memberdef kind="function" id="da/da2/classDataLink_1a9ed06ebcb799e2f24a926243c3fce7d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::DataLink</definition>
        <argsstring>()</argsstring>
        <name>DataLink</name>
        <briefdescription>
<para>Default constructor, creating a null pointer basically. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor creates an object that will either return a null pointer when asked for one, or throw an exception when trying to de-reference it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1ac8952c3ed3741f8c71a01512789339dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::DataLink</definition>
        <argsstring>(xAOD::TVirtualEvent *event)</argsstring>
        <name>DataLink</name>
        <param>
          <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">xAOD::TVirtualEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Constructor taking an alternative TVirtualEvent object to use. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor allows the user to create a null-pointer that uses an alternative TVirtualEvent object as its store.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an alternative TVirtualEvent object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a59ddc33f7ae311768845d798ec9f01c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::DataLink</definition>
        <argsstring>(const_reference data, xAOD::TVirtualEvent *event=0)</argsstring>
        <name>DataLink</name>
        <param>
          <type><ref refid="da/da2/classDataLink_1affeb717ffcf22624a13118cee072cfe5" kindref="member">const_reference</ref></type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">xAOD::TVirtualEvent</ref> *</type>
          <declname>event</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor receiving a reference to the target object. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor can be used to create a valid object based on a reference to an existing object, that&apos;s already part of the current event. In case the object can not be found in the current event, the constructor throws an exception.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> constant reference to the object that the smart pointer should point to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an alternative TVirtualEvent object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="71" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a45d8315b0c3617eaf31d9559eb56b5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::DataLink</definition>
        <argsstring>(const_pointer data, xAOD::TVirtualEvent *event=0)</argsstring>
        <name>DataLink</name>
        <param>
          <type><ref refid="da/da2/classDataLink_1a5ec1fb15843434e9b20f9715a8ea07fd" kindref="member">const_pointer</ref></type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">xAOD::TVirtualEvent</ref> *</type>
          <declname>event</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor receiving a pointer to the target object. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor can be used to create a valid object based on a pointer to an existing object, that&apos;s already part of the current event. In case the object can not be found in the current event, the constructor throws an exception.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> constant pointer to the object that the smart pointer should point to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an alternative TVirtualEvent object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a7f5d25dccd9ecfddf4ecb565b7f5abe6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::DataLink</definition>
        <argsstring>(const ID_type &amp;id, xAOD::TVirtualEvent *event=0)</argsstring>
        <name>DataLink</name>
        <param>
          <type>const <ref refid="da/da2/classDataLink_1aada99900342159ab89b18afc4d255582" kindref="member">ID_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">xAOD::TVirtualEvent</ref> *</type>
          <declname>event</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor receiving a user-readable ID for the target object. </para>        </briefdescription>
        <detaileddescription>
<para>This is probably the most convenient version of the constructors. It receives a string identifier (branch name) for the object that the smart pointer should reference.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> string identifier for the object to be referenced </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an alternative TVirtualEvent object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="77" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="94" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1af38e988314ceaf0a0d7a9caf525566e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::DataLink</definition>
        <argsstring>(sgkey_t key, xAOD::TVirtualEvent *event=0)</argsstring>
        <name>DataLink</name>
        <param>
          <type><ref refid="da/da2/classDataLink_1af5993db20a367d0547aa25929f823023" kindref="member">sgkey_t</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">xAOD::TVirtualEvent</ref> *</type>
          <declname>event</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor receiving a hashed ID for the target object. </para>        </briefdescription>
        <detaileddescription>
<para>This is the most cost-effective of the constructors after the default one. It relies on the user knowing exactly what hashed key to ask for for the target object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> hashed key identifying the object to be referenced </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an alternative TVirtualEvent object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a42e8e79c024cfed0337f98877c5d698b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::DataLink</definition>
        <argsstring>(const DataLink&lt; T &gt; &amp;parent)</argsstring>
        <name>DataLink</name>
        <param>
          <type>const <ref refid="da/da2/classDataLink" kindref="compound">DataLink</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Simple copy-constructor. It just copies the persistent information from the base class together with the TVirtualEvent pointer that the parent class had.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent object to be copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="84" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="131" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setter functions</header>
      <description><para><anchor id="_1amgrpb9f0c77f1dfb920b5d8ef4bcad79a249"/> </para></description>
      <memberdef kind="function" id="da/da2/classDataLink_1ac961b0f28b998a33bb26e48be0796c71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataLink&lt; STORABLE &gt;::toStorableObject</definition>
        <argsstring>(const_reference data)</argsstring>
        <name>toStorableObject</name>
        <param>
          <type><ref refid="da/da2/classDataLink_1affeb717ffcf22624a13118cee072cfe5" kindref="member">const_reference</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set the link to a data object that&apos;s already in the event. </para>        </briefdescription>
        <detaileddescription>
<para>This function should be used to set up the object when your code has a reference to the target object.</para><para>The function will throw an exception if the supplied object can&apos;t be found in the current event.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to the target object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="153" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a34591a214df9eb146af9677746040042" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataLink&lt; STORABLE &gt;::toDefaultObject</definition>
        <argsstring>()</argsstring>
        <name>toDefaultObject</name>
        <briefdescription>
<para>Set the link to the default object of this type in the event. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets up the object to point at the default object of the template type in the event. It can be useful when only one object of a given type is available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="169" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1ac7bb8850e61f040116a9cf491a6ab04a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataLink&lt; STORABLE &gt;::toIdentifiedObject</definition>
        <argsstring>(const ID_type &amp;id)</argsstring>
        <name>toIdentifiedObject</name>
        <param>
          <type>const <ref refid="da/da2/classDataLink_1aada99900342159ab89b18afc4d255582" kindref="member">ID_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set the link using a user readable ID for the target object. </para>        </briefdescription>
        <detaileddescription>
<para>This is one of the more convenient functions. It sets up the smart pointer using a user-readable string idetifier for the target object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> string identifier (branch name) for the target object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="98" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="186" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1af0d24a77adc578907be8ff1831e24aa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataLink&lt; STORABLE &gt;::toIdentifiedObject</definition>
        <argsstring>(sgkey_t key)</argsstring>
        <name>toIdentifiedObject</name>
        <param>
          <type><ref refid="da/da2/classDataLink_1af5993db20a367d0547aa25929f823023" kindref="member">sgkey_t</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Set the link using a hashed ID for the target object. </para>        </briefdescription>
        <detaileddescription>
<para>This function hardly has to do anything. It just sets the received key as the persistent information for the object, and resets its internals.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashed key for the target object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="100" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="210" bodyend="219"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Accessor functions</header>
      <description><para><anchor id="_1amgrp89a53d3a36aec486ed41db75b9b5e7f8"/> </para></description>
      <memberdef kind="function" id="da/da2/classDataLink_1a47ae923850cc28f77e48190f0876b1d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/da2/classDataLink_1affeb717ffcf22624a13118cee072cfe5" kindref="member">const_reference</ref></type>
        <definition>DataLink&lt; STORABLE &gt;::const_reference DataLink&lt; STORABLE &gt;::operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Get a reference to the target object. May throw an exception. </para>        </briefdescription>
        <detaileddescription>
<para>This operator can be used to get a constant reference to the object. In most cases though one should probably use the -&gt; operator instead. The code throws an exception if the target object is not available.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> constant reference to the target object if available </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="237" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a2e8b149b6f0645abd54221069029355a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/da2/classDataLink_1a5ec1fb15843434e9b20f9715a8ea07fd" kindref="member">const_pointer</ref></type>
        <definition>const_pointer DataLink&lt; STORABLE &gt;::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Get a pointer to the target object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="110" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a448f30d49af5ff1242097db3a1ffa977" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::operator const_pointer</definition>
        <argsstring>() const </argsstring>
        <name>operator const_pointer</name>
        <briefdescription>
<para>Automatic conversion operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="113" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1ab1d73c84e6cc404116cdacf8424ec826" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/da2/classDataLink_1a5ec1fb15843434e9b20f9715a8ea07fd" kindref="member">const_pointer</ref></type>
        <definition>DataLink&lt; STORABLE &gt;::const_pointer DataLink&lt; STORABLE &gt;::cptr</definition>
        <argsstring>() const </argsstring>
        <name>cptr</name>
        <briefdescription>
<para>Get a constant pointer to the referenced object. </para>        </briefdescription>
        <detaileddescription>
<para>This function is doing most of the heavy lifting. It interacts with the TVirtualEvent object to deliver a pointer to the target object to the user.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> constant pointer to the target object if available, a null pointer if not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>Default key, calculated just once: </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="116" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="261" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a5a3752febd65beb4311d0249580fe8b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DataLink&lt; STORABLE &gt;::isValid</definition>
        <argsstring>() const </argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Check if the object can be found. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Default key, calculated just once: </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="119" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="285" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a71bf4cf282c7679415fdb372b6bec784" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataLink&lt; STORABLE &gt;::operator bool</definition>
        <argsstring>() const </argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Convenience validity check operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1ae2db608dce763dc8e4492f41d99c28ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DataLink&lt; STORABLE &gt;::operator!</definition>
        <argsstring>() const </argsstring>
        <name>operator!</name>
        <briefdescription>
<para>Another convenience validity checker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="124" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a5c536c787e439515ecceca5a1cf428de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="da/da2/classDataLink_1aada99900342159ab89b18afc4d255582" kindref="member">ID_type</ref> &amp;</type>
        <definition>const DataLink&lt; STORABLE &gt;::ID_type &amp; DataLink&lt; STORABLE &gt;::dataID</definition>
        <argsstring>() const </argsstring>
        <name>dataID</name>
        <briefdescription>
<para>Get the key that we reference, as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a02194fe23d753c1f88ea3e5127ecdd52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/da2/classDataLink_1af5993db20a367d0547aa25929f823023" kindref="member">sgkey_t</ref></type>
        <definition>sgkey_t DataLink&lt; STORABLE &gt;::key</definition>
        <argsstring>() const </argsstring>
        <name>key</name>
        <briefdescription>
<para>Get the key that we reference, as a hash. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="129" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="129" bodyend="129"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="da/da2/classDataLink_1a074a32e67025797707f3012ddb64148a" prot="public" static="no">
        <type><ref refid="da/da2/classDataLink" kindref="compound">DataLink</ref>&lt; STORABLE &gt;</type>
        <definition>typedef DataLink&lt; STORABLE &gt; DataLink&lt; STORABLE &gt;::self</definition>
        <argsstring></argsstring>
        <name>self</name>
        <briefdescription>
<para>Convenience declaration of this structure&apos;s type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="169" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="da/da2/classDataLink_1a0735bed3be3b3e06753c24b2efdbcdb1" prot="private" static="no">
        <type>ROOT_SELECTION_NS::DataLink&lt; STORABLE &gt;::<ref refid="da/da2/classDataLink" kindref="compound">self</ref></type>
        <definition>typedef ROOT_SELECTION_NS::DataLink&lt; STORABLE &gt;::self DataLink&lt; STORABLE &gt;::DictSel</definition>
        <argsstring></argsstring>
        <name>DictSel</name>
        <briefdescription>
<para>Needed to take the Reflex/Cling specifications into account. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="151" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/da2/classDataLink_1a0b63c4a4d2a0c407b146445933d0be32" prot="private" static="no" mutable="yes">
        <type><ref refid="da/da2/classDataLink_1a5ec1fb15843434e9b20f9715a8ea07fd" kindref="member">const_pointer</ref></type>
        <definition>const_pointer DataLink&lt; STORABLE &gt;::m_object</definition>
        <argsstring></argsstring>
        <name>m_object</name>
        <briefdescription>
<para>Cached pointer to the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="146" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da2/classDataLink_1af51ee4a7f0c50c3c98d48ade74fba118" prot="private" static="no" mutable="no">
        <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">xAOD::TVirtualEvent</ref> *</type>
        <definition>xAOD::TVirtualEvent* DataLink&lt; STORABLE &gt;::m_event</definition>
        <argsstring></argsstring>
        <name>m_event</name>
        <briefdescription>
<para>Pointer to the event object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="148" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="da/da2/classDataLink_1a7e4eff4d199490f7673978b99d7b36af" prot="public" static="no" mutable="no">
        <type>ROOT_SELECTION_NS::MemberAttributes&lt; kTransient &gt;</type>
        <definition>ROOT_SELECTION_NS::MemberAttributes&lt; kTransient &gt; DataLink&lt; STORABLE &gt;::m_object</definition>
        <argsstring></argsstring>
        <name>m_object</name>
        <briefdescription>
<para>Declare m_object as transient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="184" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da2/classDataLink_1a7d63d1c515728a354d8a0d69559c82b1" prot="public" static="no" mutable="no">
        <type>ROOT_SELECTION_NS::MemberAttributes&lt; kTransient &gt;</type>
        <definition>ROOT_SELECTION_NS::MemberAttributes&lt; kTransient &gt; DataLink&lt; STORABLE &gt;::m_event</definition>
        <argsstring></argsstring>
        <name>m_event</name>
        <briefdescription>
<para>Declare m_event as transient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="186" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/da2/classDataLink_1a2948eecf2b366ce3c548e926c332d1c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">xAOD::TVirtualEvent</ref> *</type>
        <definition>xAOD::TVirtualEvent* DataLink&lt; STORABLE &gt;::source</definition>
        <argsstring>() const </argsstring>
        <name>source</name>
        <briefdescription>
<para>Get the data source for the reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="134" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a2a2f64292ad76a36468de5b3524b02e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DataLink&lt; STORABLE &gt;::toPersistent</definition>
        <argsstring>()</argsstring>
        <name>toPersistent</name>
        <briefdescription>
<para>Prepare the object to be written out. </para>        </briefdescription>
        <detaileddescription>
<para>This function is just here to enable us compiling the same EDM code as we do offline. We don&apos;t actually need to prepare this object for being written out, it&apos;s always in a consistent state.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> dummy value. Just to have the same signature as the offline function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="137" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="333" bodyend="336"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="da/da2/classDataLink_1a02d7389167070ff411998ac8d428a574" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool DataLink&lt; STORABLE &gt;::toTransient</definition>
        <argsstring>()</argsstring>
        <name>toTransient</name>
        <reimplements refid="dd/d9d/classDataLinkBase_1a6d5619ffb7684aece36ba9e821e7b711">toTransient</reimplements>
        <briefdescription>
<para>Reset the object&apos;s internal cache. </para>        </briefdescription>
        <detaileddescription>
<para>This function just resets the cached pointer when ROOT streams in a new object from a TBranch.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> dummy value. Just to have the same signature as the offline function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="345" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="da/da2/classDataLink_1a2fa0183e6778cfb6e4648db754f4d80a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataLink&lt; STORABLE &gt;::findIdentifier</definition>
        <argsstring>()</argsstring>
        <name>findIdentifier</name>
        <briefdescription>
<para>Find the identifier of the object being pointed to. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used internally to find the hashed identifier for an object that was given to the <ref refid="da/da2/classDataLink" kindref="compound">DataLink</ref> either by reference or pointer. It throws an exception if the object can&apos;t be found in the event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.icc" bodystart="356" bodyend="369"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="da/da2/classDataLink" kindref="compound">DataLink</ref> implementation for ROOT usage. </para>    </briefdescription>
    <detaileddescription>
<para>This is an implementation of DataLink&lt;T&gt; for vanilla ROOT. The code is quite simple, leaving most of the work for the <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">xAOD::TEvent</ref> class.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>649074 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2015-02-23 17:51:40 +0100 (Mon, 23 Feb 2015) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="4774">
        <label>DataLink&lt; STORABLE &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="4775" relation="public-inheritance">
        </childnode>
        <childnode refid="4776" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4775">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="4776">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4781">
        <label>STORABLE</label>
      </node>
      <node id="4777">
        <label>DataLink&lt; STORABLE &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="4778" relation="public-inheritance">
        </childnode>
        <childnode refid="4779" relation="public-inheritance">
        </childnode>
        <childnode refid="4780" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="4781" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="4780">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="4778">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="4779">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/DataLink.h" bodystart="37" bodyend="153"/>
    <listofallmembers>
      <member refid="da/da2/classDataLink_1af83c034673d87eb35079b5d2ebf4ac43" prot="public" virt="non-virtual"><scope>DataLink</scope><name>__attribute__</name></member>
      <member refid="da/da2/classDataLink_1a970ed32f3ef420cd8b2eadbfaae55d79" prot="public" virt="non-virtual"><scope>DataLink</scope><name>__attribute__</name></member>
      <member refid="dd/d9d/classDataLinkBase_1a6c40bbdf1515f6373ae0564c4ddf6b37" prot="public" virt="non-virtual"><scope>DataLink</scope><name>clear</name></member>
      <member refid="da/da2/classDataLink_1a5ec1fb15843434e9b20f9715a8ea07fd" prot="public" virt="non-virtual"><scope>DataLink</scope><name>const_pointer</name></member>
      <member refid="da/da2/classDataLink_1affeb717ffcf22624a13118cee072cfe5" prot="public" virt="non-virtual"><scope>DataLink</scope><name>const_reference</name></member>
      <member refid="da/da2/classDataLink_1ab1d73c84e6cc404116cdacf8424ec826" prot="public" virt="non-virtual"><scope>DataLink</scope><name>cptr</name></member>
      <member refid="da/da2/classDataLink_1a5c536c787e439515ecceca5a1cf428de" prot="public" virt="non-virtual"><scope>DataLink</scope><name>dataID</name></member>
      <member refid="da/da2/classDataLink_1a9ed06ebcb799e2f24a926243c3fce7d1" prot="public" virt="non-virtual"><scope>DataLink</scope><name>DataLink</name></member>
      <member refid="da/da2/classDataLink_1ac8952c3ed3741f8c71a01512789339dd" prot="public" virt="non-virtual"><scope>DataLink</scope><name>DataLink</name></member>
      <member refid="da/da2/classDataLink_1a59ddc33f7ae311768845d798ec9f01c0" prot="public" virt="non-virtual"><scope>DataLink</scope><name>DataLink</name></member>
      <member refid="da/da2/classDataLink_1a45d8315b0c3617eaf31d9559eb56b5fd" prot="public" virt="non-virtual"><scope>DataLink</scope><name>DataLink</name></member>
      <member refid="da/da2/classDataLink_1a7f5d25dccd9ecfddf4ecb565b7f5abe6" prot="public" virt="non-virtual"><scope>DataLink</scope><name>DataLink</name></member>
      <member refid="da/da2/classDataLink_1af38e988314ceaf0a0d7a9caf525566e0" prot="public" virt="non-virtual"><scope>DataLink</scope><name>DataLink</name></member>
      <member refid="da/da2/classDataLink_1a42e8e79c024cfed0337f98877c5d698b" prot="public" virt="non-virtual"><scope>DataLink</scope><name>DataLink</name></member>
      <member refid="dd/d9d/classDataLinkBase_1ac598f84b320f37f2297de6b3cbc608b0" prot="public" virt="non-virtual"><scope>DataLink</scope><name>DataLinkBase</name></member>
      <member refid="da/da2/classDataLink_1a0735bed3be3b3e06753c24b2efdbcdb1" prot="private" virt="non-virtual"><scope>DataLink</scope><name>DictSel</name></member>
      <member refid="da/da2/classDataLink_1a2fa0183e6778cfb6e4648db754f4d80a" prot="private" virt="non-virtual"><scope>DataLink</scope><name>findIdentifier</name></member>
      <member refid="da/da2/classDataLink_1aada99900342159ab89b18afc4d255582" prot="public" virt="non-virtual"><scope>DataLink</scope><name>ID_type</name></member>
      <member refid="dd/d9d/classDataLinkBase_1a963405ae674171002d3ae26afa642f08" prot="public" virt="non-virtual"><scope>DataLink</scope><name>isDefault</name></member>
      <member refid="da/da2/classDataLink_1a5a3752febd65beb4311d0249580fe8b9" prot="public" virt="non-virtual"><scope>DataLink</scope><name>isValid</name></member>
      <member refid="da/da2/classDataLink_1a02194fe23d753c1f88ea3e5127ecdd52" prot="public" virt="non-virtual"><scope>DataLink</scope><name>key</name></member>
      <member refid="da/da2/classDataLink_1af51ee4a7f0c50c3c98d48ade74fba118" prot="private" virt="non-virtual"><scope>DataLink</scope><name>m_event</name></member>
      <member refid="da/da2/classDataLink_1a7d63d1c515728a354d8a0d69559c82b1" prot="public" virt="non-virtual"><scope>DataLink</scope><name>m_event</name></member>
      <member refid="dd/d9d/classDataLinkBase_1aba6cc5a414d045bdd05252e8243a1383" prot="protected" virt="non-virtual"><scope>DataLink</scope><name>m_isDirectIO</name></member>
      <member refid="da/da2/classDataLink_1a0b63c4a4d2a0c407b146445933d0be32" prot="private" virt="non-virtual"><scope>DataLink</scope><name>m_object</name></member>
      <member refid="da/da2/classDataLink_1a7e4eff4d199490f7673978b99d7b36af" prot="public" virt="non-virtual"><scope>DataLink</scope><name>m_object</name></member>
      <member refid="dd/d9d/classDataLinkBase_1aa72a86ffd740d5b8bde149c71f4eb932" prot="protected" virt="non-virtual"><scope>DataLink</scope><name>m_persKey</name></member>
      <member refid="da/da2/classDataLink_1a71bf4cf282c7679415fdb372b6bec784" prot="public" virt="non-virtual"><scope>DataLink</scope><name>operator bool</name></member>
      <member refid="da/da2/classDataLink_1a448f30d49af5ff1242097db3a1ffa977" prot="public" virt="non-virtual"><scope>DataLink</scope><name>operator const_pointer</name></member>
      <member refid="da/da2/classDataLink_1ae2db608dce763dc8e4492f41d99c28ee" prot="public" virt="non-virtual"><scope>DataLink</scope><name>operator!</name></member>
      <member refid="da/da2/classDataLink_1a47ae923850cc28f77e48190f0876b1d9" prot="public" virt="non-virtual"><scope>DataLink</scope><name>operator*</name></member>
      <member refid="da/da2/classDataLink_1a2e8b149b6f0645abd54221069029355a" prot="public" virt="non-virtual"><scope>DataLink</scope><name>operator-&gt;</name></member>
      <member refid="dd/d9d/classDataLinkBase_1a83dfbe38815814f196ff9bebb6445732" prot="public" virt="non-virtual"><scope>DataLink</scope><name>persKey</name></member>
      <member refid="da/da2/classDataLink_1a074a32e67025797707f3012ddb64148a" prot="public" virt="non-virtual"><scope>DataLink</scope><name>self</name></member>
      <member refid="dd/d9d/classDataLinkBase_1aeab9424694675c8cf59f2b863117eb71" prot="public" virt="non-virtual"><scope>DataLink</scope><name>setPersKey</name></member>
      <member refid="da/da2/classDataLink_1af5993db20a367d0547aa25929f823023" prot="public" virt="non-virtual"><scope>DataLink</scope><name>sgkey_t</name></member>
      <member refid="da/da2/classDataLink_1a2948eecf2b366ce3c548e926c332d1c5" prot="public" virt="non-virtual"><scope>DataLink</scope><name>source</name></member>
      <member refid="da/da2/classDataLink_1a34591a214df9eb146af9677746040042" prot="public" virt="non-virtual"><scope>DataLink</scope><name>toDefaultObject</name></member>
      <member refid="da/da2/classDataLink_1ac7bb8850e61f040116a9cf491a6ab04a" prot="public" virt="non-virtual"><scope>DataLink</scope><name>toIdentifiedObject</name></member>
      <member refid="da/da2/classDataLink_1af0d24a77adc578907be8ff1831e24aa0" prot="public" virt="non-virtual"><scope>DataLink</scope><name>toIdentifiedObject</name></member>
      <member refid="da/da2/classDataLink_1a2a2f64292ad76a36468de5b3524b02e8" prot="public" virt="non-virtual"><scope>DataLink</scope><name>toPersistent</name></member>
      <member refid="da/da2/classDataLink_1ac961b0f28b998a33bb26e48be0796c71" prot="public" virt="non-virtual"><scope>DataLink</scope><name>toStorableObject</name></member>
      <member refid="da/da2/classDataLink_1a02d7389167070ff411998ac8d428a574" prot="private" virt="virtual"><scope>DataLink</scope><name>toTransient</name></member>
      <member refid="da/da2/classDataLink_1a0ef6051fb5975bd72ccbc12e01619239" prot="public" virt="non-virtual"><scope>DataLink</scope><name>value_type</name></member>
      <member refid="dd/d9d/classDataLinkBase_1a96037aa570ac940cdeedcffdf122c83d" prot="public" virt="virtual"><scope>DataLink</scope><name>~DataLinkBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
