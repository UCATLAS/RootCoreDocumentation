<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d80/TrigGlobEffCorrValidation_8cxx" kind="file">
    <compoundname>TrigGlobEffCorrValidation.cxx</compoundname>
    <includes refid="de/dc4/AnaToolHandle_8h" local="yes">AsgTools/AnaToolHandle.h</includes>
    <includes refid="d7/db1/TriggerAnalysisInterfaces_2TriggerAnalysisInterfaces_2ITrigGlobalEfficiencyCorrectionTool_8h" local="yes">TriggerAnalysisInterfaces/ITrigGlobalEfficiencyCorrectionTool.h</includes>
    <includes refid="dc/d25/IAsgElectronEfficiencyCorrectionTool_8h" local="yes">ElectronEfficiencyCorrection/IAsgElectronEfficiencyCorrectionTool.h</includes>
    <includes refid="d5/d2a/IMuonTriggerScaleFactors_8h" local="yes">MuonEfficiencyCorrections/IMuonTriggerScaleFactors.h</includes>
    <includes refid="dc/db4/Electron_8h" local="yes">xAODEgamma/Electron.h</includes>
    <includes refid="df/dea/ElectronContainer_8h" local="yes">xAODEgamma/ElectronContainer.h</includes>
    <includes refid="d0/d13/ElectronAuxContainer_8h" local="yes">xAODEgamma/ElectronAuxContainer.h</includes>
    <includes refid="dc/dd9/MuonContainer_8h" local="yes">xAODMuon/MuonContainer.h</includes>
    <includes refid="d0/d36/MuonAuxContainer_8h" local="yes">xAODMuon/MuonAuxContainer.h</includes>
    <includes refid="d6/db3/ISystematicsTool_8h" local="yes">PATInterfaces/ISystematicsTool.h</includes>
    <includes local="no">random</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="327920">
        <label>list</label>
      </node>
      <node id="328033">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="328019" relation="include">
        </childnode>
        <childnode refid="328025" relation="include">
        </childnode>
        <childnode refid="327927" relation="include">
        </childnode>
        <childnode refid="328015" relation="include">
        </childnode>
        <childnode refid="327934" relation="include">
        </childnode>
      </node>
      <node id="328019">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="327976">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="328074">
        <label>ElectronEfficiencyCorrection/IAsgElectronEfficiencyCorrectionTool.h</label>
        <link refid="dc/d25/IAsgElectronEfficiencyCorrectionTool_8h_source"/>
        <childnode refid="327909" relation="include">
        </childnode>
        <childnode refid="327924" relation="include">
        </childnode>
        <childnode refid="328073" relation="include">
        </childnode>
        <childnode refid="328075" relation="include">
        </childnode>
      </node>
      <node id="328040">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="328041" relation="include">
        </childnode>
        <childnode refid="328020" relation="include">
        </childnode>
        <childnode refid="327941" relation="include">
        </childnode>
        <childnode refid="328042" relation="include">
        </childnode>
      </node>
      <node id="327919">
        <label>atomic</label>
      </node>
      <node id="328083">
        <label>xAODMuon/versions/MuonContainer_v1.h</label>
        <link refid="da/d0b/MuonContainer__v1_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="327926" relation="include">
        </childnode>
      </node>
      <node id="327978">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="327933" relation="include">
        </childnode>
        <childnode refid="327935" relation="include">
        </childnode>
        <childnode refid="327941" relation="include">
        </childnode>
        <childnode refid="327942" relation="include">
        </childnode>
      </node>
      <node id="327909">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327908" relation="include">
        </childnode>
        <childnode refid="327911" relation="include">
        </childnode>
        <childnode refid="327912" relation="include">
        </childnode>
      </node>
      <node id="327979">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="327944">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="327929" relation="include">
        </childnode>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327945" relation="include">
        </childnode>
        <childnode refid="327943" relation="include">
        </childnode>
      </node>
      <node id="328003">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="328004" relation="include">
        </childnode>
        <childnode refid="328005" relation="include">
        </childnode>
        <childnode refid="328006" relation="include">
        </childnode>
      </node>
      <node id="327940">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="328082">
        <label>xAODMuon/MuonContainer.h</label>
        <link refid="dc/dd9/MuonContainer_8h_source"/>
        <childnode refid="327925" relation="include">
        </childnode>
        <childnode refid="328083" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="327942">
        <label>functional</label>
      </node>
      <node id="328075">
        <label>PATInterfaces/ISystematicsTool.h</label>
        <link refid="d6/db3/ISystematicsTool_8h_source"/>
        <childnode refid="327909" relation="include">
        </childnode>
        <childnode refid="328076" relation="include">
        </childnode>
        <childnode refid="328077" relation="include">
        </childnode>
        <childnode refid="328080" relation="include">
        </childnode>
      </node>
      <node id="328016">
        <label>boost/version.hpp</label>
      </node>
      <node id="327939">
        <label>limits</label>
      </node>
      <node id="327945">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="327974">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="327912">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="327916">
        <label>AsgTools/Deprecated.h</label>
        <link refid="d4/d77/AsgTools_2AsgTools_2Deprecated_8h_source"/>
      </node>
      <node id="327936">
        <label>iterator</label>
      </node>
      <node id="328063">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="328060" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
      </node>
      <node id="328098">
        <label>xAODCore/AuxContainerBase.h</label>
        <link refid="d0/d70/AuxContainerBase_8h_source"/>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327944" relation="include">
        </childnode>
        <childnode refid="328099" relation="include">
        </childnode>
        <childnode refid="328100" relation="include">
        </childnode>
        <childnode refid="327972" relation="include">
        </childnode>
        <childnode refid="327960" relation="include">
        </childnode>
        <childnode refid="327981" relation="include">
        </childnode>
        <childnode refid="328101" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
        <childnode refid="328102" relation="include">
        </childnode>
      </node>
      <node id="327962">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327963" relation="include">
        </childnode>
      </node>
      <node id="328100">
        <label>AthContainersInterfaces/IAuxStoreHolder.h</label>
        <link refid="d7/dab/IAuxStoreHolder_8h_source"/>
      </node>
      <node id="328065">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="328089">
        <label>CxxUtils/final.h</label>
        <link refid="da/d9b/final_8h"/>
      </node>
      <node id="328039">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="327925">
        <label>xAODMuon/Muon.h</label>
        <link refid="d2/dfd/Muon_8h_source"/>
        <childnode refid="327926" relation="include">
        </childnode>
      </node>
      <node id="328045">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="328046" relation="include">
        </childnode>
        <childnode refid="328014" relation="include">
        </childnode>
        <childnode refid="327939" relation="include">
        </childnode>
        <childnode refid="327942" relation="include">
        </childnode>
        <childnode refid="328047" relation="include">
        </childnode>
      </node>
      <node id="327986">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="327930" relation="include">
        </childnode>
        <childnode refid="327987" relation="include">
        </childnode>
        <childnode refid="327988" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
      </node>
      <node id="327958">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327937" relation="include">
        </childnode>
      </node>
      <node id="327947">
        <label>stdint.h</label>
      </node>
      <node id="328025">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="327939" relation="include">
        </childnode>
        <childnode refid="328026" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
        <childnode refid="327937" relation="include">
        </childnode>
        <childnode refid="327931" relation="include">
        </childnode>
      </node>
      <node id="328012">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="327955">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
      </node>
      <node id="328099">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="327930" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
        <childnode refid="328079" relation="include">
        </childnode>
        <childnode refid="327943" relation="include">
        </childnode>
      </node>
      <node id="327950">
        <label>RVersion.h</label>
      </node>
      <node id="328090">
        <label>xAODEgamma/ElectronContainer.h</label>
        <link refid="df/dea/ElectronContainer_8h_source"/>
        <childnode refid="328084" relation="include">
        </childnode>
        <childnode refid="328091" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="328094">
        <label>xAODEgamma/EgammaFwd.h</label>
        <link refid="dc/d0f/EgammaFwd_8h_source"/>
      </node>
      <node id="327932">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="327933" relation="include">
        </childnode>
        <childnode refid="327941" relation="include">
        </childnode>
        <childnode refid="327942" relation="include">
        </childnode>
      </node>
      <node id="328066">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="328055" relation="include">
        </childnode>
        <childnode refid="328059" relation="include">
        </childnode>
      </node>
      <node id="327938">
        <label>cmath</label>
      </node>
      <node id="327990">
        <label>cassert</label>
      </node>
      <node id="328104">
        <label>xAODMuon/MuonAuxContainer.h</label>
        <link refid="d0/d36/MuonAuxContainer_8h_source"/>
        <childnode refid="328105" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="328017">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="328035">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="328068">
        <label>xAODMuon/MuonSegment.h</label>
        <link refid="de/d5b/MuonSegment_8h_source"/>
        <childnode refid="328069" relation="include">
        </childnode>
      </node>
      <node id="327988">
        <label>stdexcept</label>
      </node>
      <node id="327913">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327908" relation="include">
        </childnode>
        <childnode refid="327914" relation="include">
        </childnode>
      </node>
      <node id="327977">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="328005">
        <label>Eigen/Core</label>
      </node>
      <node id="328023">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="328048">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="328049" relation="include">
        </childnode>
      </node>
      <node id="328054">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="328055" relation="include">
        </childnode>
        <childnode refid="328056" relation="include">
        </childnode>
      </node>
      <node id="328030">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="327999">
        <label>TLorentzVector.h</label>
      </node>
      <node id="327908">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328060">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="328061" relation="include">
        </childnode>
      </node>
      <node id="327910">
        <label>string</label>
      </node>
      <node id="327980">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="327930" relation="include">
        </childnode>
        <childnode refid="327929" relation="include">
        </childnode>
        <childnode refid="327962" relation="include">
        </childnode>
        <childnode refid="327958" relation="include">
        </childnode>
        <childnode refid="327946" relation="include">
        </childnode>
        <childnode refid="327981" relation="include">
        </childnode>
        <childnode refid="327982" relation="include">
        </childnode>
        <childnode refid="327965" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327935" relation="include">
        </childnode>
        <childnode refid="327937" relation="include">
        </childnode>
        <childnode refid="327983" relation="include">
        </childnode>
        <childnode refid="327984" relation="include">
        </childnode>
        <childnode refid="327972" relation="include">
        </childnode>
        <childnode refid="327985" relation="include">
        </childnode>
      </node>
      <node id="327953">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
      </node>
      <node id="328009">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="327995" relation="include">
        </childnode>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="327991" relation="include">
        </childnode>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="327998" relation="include">
        </childnode>
        <childnode refid="328002" relation="include">
        </childnode>
        <childnode refid="328048" relation="include">
        </childnode>
        <childnode refid="328050" relation="include">
        </childnode>
        <childnode refid="328051" relation="include">
        </childnode>
      </node>
      <node id="327983">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="328072">
        <label>xAODMuon/versions/MuonSegmentContainer_v1.h</label>
        <link refid="dd/dcd/MuonSegmentContainer__v1_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="328069" relation="include">
        </childnode>
      </node>
      <node id="328105">
        <label>xAODMuon/versions/MuonAuxContainer_v3.h</label>
        <link refid="da/dd8/MuonAuxContainer__v3_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327991" relation="include">
        </childnode>
        <childnode refid="328098" relation="include">
        </childnode>
        <childnode refid="328007" relation="include">
        </childnode>
        <childnode refid="328057" relation="include">
        </childnode>
        <childnode refid="328067" relation="include">
        </childnode>
        <childnode refid="328102" relation="include">
        </childnode>
      </node>
      <node id="328097">
        <label>xAODEgamma/versions/ElectronAuxContainer_v3.h</label>
        <link refid="d2/d62/ElectronAuxContainer__v3_8h_source"/>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327991" relation="include">
        </childnode>
        <childnode refid="328098" relation="include">
        </childnode>
        <childnode refid="328007" relation="include">
        </childnode>
        <childnode refid="328057" relation="include">
        </childnode>
        <childnode refid="328103" relation="include">
        </childnode>
        <childnode refid="328102" relation="include">
        </childnode>
      </node>
      <node id="328084">
        <label>xAODEgamma/Electron.h</label>
        <link refid="dc/db4/Electron_8h_source"/>
        <childnode refid="328085" relation="include">
        </childnode>
      </node>
      <node id="328027">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="328011" relation="include">
        </childnode>
        <childnode refid="328025" relation="include">
        </childnode>
        <childnode refid="328028" relation="include">
        </childnode>
        <childnode refid="328030" relation="include">
        </childnode>
        <childnode refid="328016" relation="include">
        </childnode>
        <childnode refid="327936" relation="include">
        </childnode>
        <childnode refid="327937" relation="include">
        </childnode>
      </node>
      <node id="328041">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="327996">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="327921">
        <label>map</label>
      </node>
      <node id="328042">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="328043" relation="include">
        </childnode>
      </node>
      <node id="327994">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="327995" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
      </node>
      <node id="328043">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="327951">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="327969">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="328095">
        <label>xAODEgamma/ElectronContainerFwd.h</label>
        <link refid="de/d36/ElectronContainerFwd_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="327924" relation="include">
        </childnode>
        <childnode refid="328093" relation="include">
        </childnode>
      </node>
      <node id="327906">
        <label>AsgTools/AnaToolHandle.h</label>
        <link refid="de/dc4/AnaToolHandle_8h_source"/>
        <childnode refid="327907" relation="include">
        </childnode>
        <childnode refid="327916" relation="include">
        </childnode>
        <childnode refid="327917" relation="include">
        </childnode>
        <childnode refid="327919" relation="include">
        </childnode>
        <childnode refid="327920" relation="include">
        </childnode>
        <childnode refid="327921" relation="include">
        </childnode>
        <childnode refid="327922" relation="include">
        </childnode>
      </node>
      <node id="328032">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="328027" relation="include">
        </childnode>
        <childnode refid="327936" relation="include">
        </childnode>
        <childnode refid="327934" relation="include">
        </childnode>
        <childnode refid="328033" relation="include">
        </childnode>
      </node>
      <node id="327984">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="328069">
        <label>versions/MuonSegment_v1.h</label>
        <link refid="df/d0d/MuonSegment__v1_8h_source"/>
        <childnode refid="327927" relation="include">
        </childnode>
        <childnode refid="327991" relation="include">
        </childnode>
        <childnode refid="328070" relation="include">
        </childnode>
        <childnode refid="328071" relation="include">
        </childnode>
      </node>
      <node id="328081">
        <label>MuonEfficiencyCorrections/IMuonTriggerScaleFactors.h</label>
        <link refid="d5/d2a/IMuonTriggerScaleFactors_8h_source"/>
        <childnode refid="327909" relation="include">
        </childnode>
        <childnode refid="328073" relation="include">
        </childnode>
        <childnode refid="328075" relation="include">
        </childnode>
        <childnode refid="327925" relation="include">
        </childnode>
        <childnode refid="328082" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327921" relation="include">
        </childnode>
      </node>
      <node id="327905">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx</label>
        <link refid="TrigGlobEffCorrValidation.cxx"/>
        <childnode refid="327906" relation="include">
        </childnode>
        <childnode refid="327923" relation="include">
        </childnode>
        <childnode refid="328074" relation="include">
        </childnode>
        <childnode refid="328081" relation="include">
        </childnode>
        <childnode refid="328084" relation="include">
        </childnode>
        <childnode refid="328090" relation="include">
        </childnode>
        <childnode refid="328096" relation="include">
        </childnode>
        <childnode refid="328082" relation="include">
        </childnode>
        <childnode refid="328104" relation="include">
        </childnode>
        <childnode refid="328075" relation="include">
        </childnode>
        <childnode refid="328106" relation="include">
        </childnode>
        <childnode refid="328037" relation="include">
        </childnode>
      </node>
      <node id="327966">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="328028">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="328011" relation="include">
        </childnode>
        <childnode refid="327949" relation="include">
        </childnode>
        <childnode refid="327941" relation="include">
        </childnode>
        <childnode refid="328029" relation="include">
        </childnode>
      </node>
      <node id="327928">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="327914">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="327949">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="327950" relation="include">
        </childnode>
        <childnode refid="327951" relation="include">
        </childnode>
      </node>
      <node id="327982">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="327975">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="328070">
        <label>MuonIdHelpers/MuonStationIndex.h</label>
        <link refid="d5/d3f/MuonStationIndex_8h_source"/>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
      </node>
      <node id="328056">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="328026">
        <label>limits.h</label>
      </node>
      <node id="328067">
        <label>xAODMuon/MuonSegmentContainer.h</label>
        <link refid="d5/d26/MuonSegmentContainer_8h_source"/>
        <childnode refid="328068" relation="include">
        </childnode>
        <childnode refid="328072" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="328092">
        <label>xAODEgamma/versions/EgammaContainer_v1.h</label>
        <link refid="d0/d71/EgammaContainer__v1_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="328055" relation="include">
        </childnode>
        <childnode refid="328086" relation="include">
        </childnode>
        <childnode refid="328093" relation="include">
        </childnode>
      </node>
      <node id="328021">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="328022" relation="include">
        </childnode>
      </node>
      <node id="327926">
        <label>versions/Muon_v1.h</label>
        <link refid="da/dde/Muon__v1_8h_source"/>
        <childnode refid="327927" relation="include">
        </childnode>
        <childnode refid="327991" relation="include">
        </childnode>
        <childnode refid="327994" relation="include">
        </childnode>
        <childnode refid="327996" relation="include">
        </childnode>
        <childnode refid="327997" relation="include">
        </childnode>
        <childnode refid="327998" relation="include">
        </childnode>
        <childnode refid="328002" relation="include">
        </childnode>
        <childnode refid="328007" relation="include">
        </childnode>
        <childnode refid="328057" relation="include">
        </childnode>
        <childnode refid="328067" relation="include">
        </childnode>
        <childnode refid="327995" relation="include">
        </childnode>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
        <childnode refid="328010" relation="include">
        </childnode>
      </node>
      <node id="327961">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="327962" relation="include">
        </childnode>
        <childnode refid="327939" relation="include">
        </childnode>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="327964" relation="include">
        </childnode>
      </node>
      <node id="328080">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="328078" relation="include">
        </childnode>
        <childnode refid="328079" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327942" relation="include">
        </childnode>
        <childnode refid="328076" relation="include">
        </childnode>
        <childnode refid="328077" relation="include">
        </childnode>
      </node>
      <node id="327918">
        <label>GaudiKernel/ToolHandle.h</label>
      </node>
      <node id="327930">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327932" relation="include">
        </childnode>
      </node>
      <node id="328093">
        <label>xAODEgamma/EgammaContainerFwd.h</label>
        <link refid="d3/d76/EgammaContainerFwd_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="328055" relation="include">
        </childnode>
        <childnode refid="328094" relation="include">
        </childnode>
      </node>
      <node id="327992">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
      </node>
      <node id="328106">
        <label>random</label>
      </node>
      <node id="328077">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="328078" relation="include">
        </childnode>
        <childnode refid="328001" relation="include">
        </childnode>
        <childnode refid="328079" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
      </node>
      <node id="328006">
        <label>Eigen/Dense</label>
      </node>
      <node id="327933">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="327934" relation="include">
        </childnode>
        <childnode refid="327935" relation="include">
        </childnode>
        <childnode refid="327936" relation="include">
        </childnode>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327937" relation="include">
        </childnode>
        <childnode refid="327938" relation="include">
        </childnode>
        <childnode refid="327939" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327940" relation="include">
        </childnode>
      </node>
      <node id="328014">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="327990" relation="include">
        </childnode>
      </node>
      <node id="327998">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="327999" relation="include">
        </childnode>
        <childnode refid="327927" relation="include">
        </childnode>
        <childnode refid="328000" relation="include">
        </childnode>
        <childnode refid="327945" relation="include">
        </childnode>
      </node>
      <node id="328000">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="328001" relation="include">
        </childnode>
      </node>
      <node id="328059">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="327995" relation="include">
        </childnode>
        <childnode refid="327998" relation="include">
        </childnode>
        <childnode refid="328060" relation="include">
        </childnode>
        <childnode refid="328062" relation="include">
        </childnode>
        <childnode refid="327991" relation="include">
        </childnode>
        <childnode refid="328064" relation="include">
        </childnode>
        <childnode refid="328065" relation="include">
        </childnode>
      </node>
      <node id="328073">
        <label>PATInterfaces/CorrectionCode.h</label>
        <link refid="d8/dab/CorrectionCode_8h_source"/>
      </node>
      <node id="328029">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="328025" relation="include">
        </childnode>
        <childnode refid="328014" relation="include">
        </childnode>
      </node>
      <node id="328085">
        <label>xAODEgamma/versions/Electron_v1.h</label>
        <link refid="df/d27/Electron__v1_8h_source"/>
        <childnode refid="327991" relation="include">
        </childnode>
        <childnode refid="328086" relation="include">
        </childnode>
        <childnode refid="328088" relation="include">
        </childnode>
        <childnode refid="328002" relation="include">
        </childnode>
        <childnode refid="328008" relation="include">
        </childnode>
        <childnode refid="328007" relation="include">
        </childnode>
        <childnode refid="328089" relation="include">
        </childnode>
        <childnode refid="327965" relation="include">
        </childnode>
      </node>
      <node id="327954">
        <label>typeinfo</label>
      </node>
      <node id="328002">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="328003" relation="include">
        </childnode>
      </node>
      <node id="327989">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="327983" relation="include">
        </childnode>
        <childnode refid="327990" relation="include">
        </childnode>
      </node>
      <node id="328058">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="328059" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="328010">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="327986" relation="include">
        </childnode>
        <childnode refid="328011" relation="include">
        </childnode>
        <childnode refid="328012" relation="include">
        </childnode>
        <childnode refid="328013" relation="include">
        </childnode>
        <childnode refid="328019" relation="include">
        </childnode>
        <childnode refid="328020" relation="include">
        </childnode>
        <childnode refid="328025" relation="include">
        </childnode>
        <childnode refid="328027" relation="include">
        </childnode>
        <childnode refid="328031" relation="include">
        </childnode>
        <childnode refid="328032" relation="include">
        </childnode>
        <childnode refid="328028" relation="include">
        </childnode>
        <childnode refid="328034" relation="include">
        </childnode>
        <childnode refid="327949" relation="include">
        </childnode>
        <childnode refid="328035" relation="include">
        </childnode>
        <childnode refid="328036" relation="include">
        </childnode>
        <childnode refid="328030" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
        <childnode refid="327942" relation="include">
        </childnode>
        <childnode refid="328037" relation="include">
        </childnode>
        <childnode refid="327934" relation="include">
        </childnode>
        <childnode refid="327988" relation="include">
        </childnode>
        <childnode refid="327936" relation="include">
        </childnode>
        <childnode refid="327945" relation="include">
        </childnode>
        <childnode refid="328038" relation="include">
        </childnode>
        <childnode refid="328040" relation="include">
        </childnode>
        <childnode refid="328044" relation="include">
        </childnode>
        <childnode refid="328045" relation="include">
        </childnode>
      </node>
      <node id="328078">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="327995">
        <label>bitset</label>
      </node>
      <node id="327964">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="327993">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="327981">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="327948">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
      </node>
      <node id="327963">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="327968">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="328020">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="328021" relation="include">
        </childnode>
        <childnode refid="328013" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327940" relation="include">
        </childnode>
        <childnode refid="328023" relation="include">
        </childnode>
        <childnode refid="327967" relation="include">
        </childnode>
        <childnode refid="328024" relation="include">
        </childnode>
      </node>
      <node id="327943">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="328004">
        <label>unistd.h</label>
      </node>
      <node id="328038">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="328039" relation="include">
        </childnode>
      </node>
      <node id="327952">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="327930" relation="include">
        </childnode>
        <childnode refid="327953" relation="include">
        </childnode>
        <childnode refid="327955" relation="include">
        </childnode>
        <childnode refid="327956" relation="include">
        </childnode>
        <childnode refid="327970" relation="include">
        </childnode>
        <childnode refid="327972" relation="include">
        </childnode>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327978" relation="include">
        </childnode>
        <childnode refid="327979" relation="include">
        </childnode>
      </node>
      <node id="327959">
        <label>vector</label>
      </node>
      <node id="328055">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="327998" relation="include">
        </childnode>
        <childnode refid="327943" relation="include">
        </childnode>
      </node>
      <node id="328046">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="327934" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
      </node>
      <node id="328047">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="328062">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="328063" relation="include">
        </childnode>
      </node>
      <node id="327935">
        <label>utility</label>
      </node>
      <node id="328044">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="327965">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="328086">
        <label>xAODEgamma/versions/Egamma_v1.h</label>
        <link refid="d9/d42/Egamma__v1_8h_source"/>
        <childnode refid="327991" relation="include">
        </childnode>
        <childnode refid="327998" relation="include">
        </childnode>
        <childnode refid="328087" relation="include">
        </childnode>
        <childnode refid="328088" relation="include">
        </childnode>
        <childnode refid="328058" relation="include">
        </childnode>
        <childnode refid="328057" relation="include">
        </childnode>
        <childnode refid="327994" relation="include">
        </childnode>
        <childnode refid="327996" relation="include">
        </childnode>
        <childnode refid="327997" relation="include">
        </childnode>
        <childnode refid="328003" relation="include">
        </childnode>
        <childnode refid="328089" relation="include">
        </childnode>
        <childnode refid="327965" relation="include">
        </childnode>
        <childnode refid="327947" relation="include">
        </childnode>
      </node>
      <node id="328057">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="328058" relation="include">
        </childnode>
        <childnode refid="328066" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="328049">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="328018">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="327973">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="327957">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="327972">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="327973" relation="include">
        </childnode>
        <childnode refid="327974" relation="include">
        </childnode>
        <childnode refid="327975" relation="include">
        </childnode>
        <childnode refid="327976" relation="include">
        </childnode>
        <childnode refid="327977" relation="include">
        </childnode>
      </node>
      <node id="328096">
        <label>xAODEgamma/ElectronAuxContainer.h</label>
        <link refid="d0/d13/ElectronAuxContainer_8h_source"/>
        <childnode refid="328097" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="328061">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="328001">
        <label>iosfwd</label>
      </node>
      <node id="327937">
        <label>cstdlib</label>
      </node>
      <node id="328101">
        <label>xAODCore/AuxSelection.h</label>
        <link refid="d3/dd4/AuxSelection_8h_source"/>
        <childnode refid="328079" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327930" relation="include">
        </childnode>
      </node>
      <node id="328008">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="328009" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="328037">
        <label>iostream</label>
      </node>
      <node id="327987">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="327917">
        <label>AsgTools/ToolHandle.h</label>
        <link refid="de/d2d/ToolHandle_8h_source"/>
        <childnode refid="327908" relation="include">
        </childnode>
        <childnode refid="327918" relation="include">
        </childnode>
      </node>
      <node id="328053">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="328009" relation="include">
        </childnode>
        <childnode refid="328054" relation="include">
        </childnode>
      </node>
      <node id="327929">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="327930" relation="include">
        </childnode>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327943" relation="include">
        </childnode>
      </node>
      <node id="327931">
        <label>cstddef</label>
      </node>
      <node id="327985">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="327952" relation="include">
        </childnode>
        <childnode refid="327944" relation="include">
        </childnode>
        <childnode refid="327929" relation="include">
        </childnode>
        <childnode refid="327983" relation="include">
        </childnode>
        <childnode refid="327984" relation="include">
        </childnode>
      </node>
      <node id="327911">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328102">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="327945" relation="include">
        </childnode>
      </node>
      <node id="328088">
        <label>xAODEgamma/EgammaEnums.h</label>
        <link refid="d4/d8f/EgammaEnums_8h_source"/>
      </node>
      <node id="327922">
        <label>mutex</label>
      </node>
      <node id="328024">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="328011" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327920" relation="include">
        </childnode>
        <childnode refid="327990" relation="include">
        </childnode>
        <childnode refid="327937" relation="include">
        </childnode>
        <childnode refid="327945" relation="include">
        </childnode>
      </node>
      <node id="327956">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="327953" relation="include">
        </childnode>
        <childnode refid="327957" relation="include">
        </childnode>
        <childnode refid="327958" relation="include">
        </childnode>
        <childnode refid="327960" relation="include">
        </childnode>
        <childnode refid="327965" relation="include">
        </childnode>
        <childnode refid="327954" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327934" relation="include">
        </childnode>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="327967" relation="include">
        </childnode>
        <childnode refid="327968" relation="include">
        </childnode>
        <childnode refid="327969" relation="include">
        </childnode>
      </node>
      <node id="328071">
        <label>TrkSegment/SegmentCollection.h</label>
      </node>
      <node id="328050">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="328087">
        <label>xAODEgamma/EgammaDefs.h</label>
        <link refid="dd/d34/EgammaDefs_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
      </node>
      <node id="327924">
        <label>xAODEgamma/ElectronFwd.h</label>
        <link refid="db/d18/ElectronFwd_8h_source"/>
      </node>
      <node id="327967">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="328013">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="327980" relation="include">
        </childnode>
        <childnode refid="328011" relation="include">
        </childnode>
        <childnode refid="328012" relation="include">
        </childnode>
        <childnode refid="327927" relation="include">
        </childnode>
        <childnode refid="327952" relation="include">
        </childnode>
        <childnode refid="327986" relation="include">
        </childnode>
        <childnode refid="328014" relation="include">
        </childnode>
        <childnode refid="327944" relation="include">
        </childnode>
        <childnode refid="328015" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="328018" relation="include">
        </childnode>
      </node>
      <node id="328079">
        <label>set</label>
      </node>
      <node id="327997">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="328103">
        <label>xAODEgamma/versions/EgammaAuxVariables_v3.def</label>
      </node>
      <node id="328052">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="327943" relation="include">
        </childnode>
      </node>
      <node id="327971">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="327960">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="327957" relation="include">
        </childnode>
        <childnode refid="327961" relation="include">
        </childnode>
        <childnode refid="327965" relation="include">
        </childnode>
        <childnode refid="327959" relation="include">
        </childnode>
        <childnode refid="327966" relation="include">
        </childnode>
      </node>
      <node id="327934">
        <label>algorithm</label>
      </node>
      <node id="328064">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="328034">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="328051">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="328091">
        <label>xAODEgamma/versions/ElectronContainer_v1.h</label>
        <link refid="dc/d7f/ElectronContainer__v1_8h_source"/>
        <childnode refid="328010" relation="include">
        </childnode>
        <childnode refid="328085" relation="include">
        </childnode>
        <childnode refid="328092" relation="include">
        </childnode>
        <childnode refid="328095" relation="include">
        </childnode>
      </node>
      <node id="327927">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="327928" relation="include">
        </childnode>
        <childnode refid="327929" relation="include">
        </childnode>
        <childnode refid="327944" relation="include">
        </childnode>
        <childnode refid="327946" relation="include">
        </childnode>
        <childnode refid="327952" relation="include">
        </childnode>
        <childnode refid="327980" relation="include">
        </childnode>
        <childnode refid="327958" relation="include">
        </childnode>
        <childnode refid="327986" relation="include">
        </childnode>
        <childnode refid="327983" relation="include">
        </childnode>
        <childnode refid="327931" relation="include">
        </childnode>
        <childnode refid="327989" relation="include">
        </childnode>
      </node>
      <node id="327907">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="327908" relation="include">
        </childnode>
        <childnode refid="327909" relation="include">
        </childnode>
        <childnode refid="327913" relation="include">
        </childnode>
        <childnode refid="327915" relation="include">
        </childnode>
      </node>
      <node id="327923">
        <label>TriggerAnalysisInterfaces/ITrigGlobalEfficiencyCorrectionTool.h</label>
        <link refid="d7/db1/TriggerAnalysisInterfaces_2TriggerAnalysisInterfaces_2ITrigGlobalEfficiencyCorrectionTool_8h_source"/>
        <childnode refid="327909" relation="include">
        </childnode>
        <childnode refid="327924" relation="include">
        </childnode>
        <childnode refid="327925" relation="include">
        </childnode>
        <childnode refid="328073" relation="include">
        </childnode>
      </node>
      <node id="327946">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327948" relation="include">
        </childnode>
        <childnode refid="327949" relation="include">
        </childnode>
      </node>
      <node id="328031">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="328027" relation="include">
        </childnode>
        <childnode refid="328014" relation="include">
        </childnode>
        <childnode refid="327936" relation="include">
        </childnode>
      </node>
      <node id="328011">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="327991">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="327947" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
        <childnode refid="327992" relation="include">
        </childnode>
        <childnode refid="327949" relation="include">
        </childnode>
        <childnode refid="327993" relation="include">
        </childnode>
      </node>
      <node id="327915">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="328007">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="328008" relation="include">
        </childnode>
        <childnode refid="328053" relation="include">
        </childnode>
        <childnode refid="328052" relation="include">
        </childnode>
      </node>
      <node id="328076">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
      <node id="328022">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="328036">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="327941">
        <label>memory</label>
      </node>
      <node id="327970">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="327955" relation="include">
        </childnode>
        <childnode refid="327956" relation="include">
        </childnode>
        <childnode refid="327971" relation="include">
        </childnode>
      </node>
      <node id="328015">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="327928" relation="include">
        </childnode>
        <childnode refid="327944" relation="include">
        </childnode>
        <childnode refid="327929" relation="include">
        </childnode>
        <childnode refid="327967" relation="include">
        </childnode>
        <childnode refid="328016" relation="include">
        </childnode>
        <childnode refid="328017" relation="include">
        </childnode>
        <childnode refid="327910" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" prot="public">DummyElectronEfficiencyCorrectionTool</innerclass>
    <innerclass refid="d9/dd9/classDummyMuonTriggerScaleFactors" prot="public">DummyMuonTriggerScaleFactors</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a3ade626c716229c970ea365f931e4f01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool configure</definition>
        <argsstring>(asg::AnaToolHandle&lt; ITrigGlobalEfficiencyCorrectionTool &gt; &amp;myTool1, asg::AnaToolHandle&lt; ITrigGlobalEfficiencyCorrectionTool &gt; &amp;myTool2, ToolHandleArray&lt; IAsgElectronEfficiencyCorrectionTool &gt; &amp;electronEffToolsHandles, ToolHandleArray&lt; IAsgElectronEfficiencyCorrectionTool &gt; &amp;electronSFToolsHandles, ToolHandleArray&lt; CP::IMuonTriggerScaleFactors &gt; &amp;muonToolsHandles, const std::string &amp;triggers, unsigned long nToys)</argsstring>
        <name>configure</name>
        <param>
          <type>asg::AnaToolHandle&lt; <ref refid="db/d4a/classITrigGlobalEfficiencyCorrectionTool" kindref="compound">ITrigGlobalEfficiencyCorrectionTool</ref> &gt; &amp;</type>
          <declname>myTool1</declname>
        </param>
        <param>
          <type>asg::AnaToolHandle&lt; <ref refid="db/d4a/classITrigGlobalEfficiencyCorrectionTool" kindref="compound">ITrigGlobalEfficiencyCorrectionTool</ref> &gt; &amp;</type>
          <declname>myTool2</declname>
        </param>
        <param>
          <type>ToolHandleArray&lt; <ref refid="d6/db7/classIAsgElectronEfficiencyCorrectionTool" kindref="compound">IAsgElectronEfficiencyCorrectionTool</ref> &gt; &amp;</type>
          <declname>electronEffToolsHandles</declname>
        </param>
        <param>
          <type>ToolHandleArray&lt; <ref refid="d6/db7/classIAsgElectronEfficiencyCorrectionTool" kindref="compound">IAsgElectronEfficiencyCorrectionTool</ref> &gt; &amp;</type>
          <declname>electronSFToolsHandles</declname>
        </param>
        <param>
          <type>ToolHandleArray&lt; <ref refid="d4/d3a/classCP_1_1IMuonTriggerScaleFactors" kindref="compound">CP::IMuonTriggerScaleFactors</ref> &gt; &amp;</type>
          <declname>muonToolsHandles</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>triggers</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>nToys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="162" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a790052328c6ff5a6c0680cb0a26b08da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool configure</definition>
        <argsstring>(asg::AnaToolHandle&lt; ITrigGlobalEfficiencyCorrectionTool &gt; &amp;myTool, ToolHandleArray&lt; IAsgElectronEfficiencyCorrectionTool &gt; &amp;electronEffToolsHandles, ToolHandleArray&lt; IAsgElectronEfficiencyCorrectionTool &gt; &amp;electronSFToolsHandles, ToolHandleArray&lt; CP::IMuonTriggerScaleFactors &gt; &amp;muonToolsHandles, const std::string &amp;triggers, unsigned long nToys=0)</argsstring>
        <name>configure</name>
        <param>
          <type>asg::AnaToolHandle&lt; <ref refid="db/d4a/classITrigGlobalEfficiencyCorrectionTool" kindref="compound">ITrigGlobalEfficiencyCorrectionTool</ref> &gt; &amp;</type>
          <declname>myTool</declname>
        </param>
        <param>
          <type>ToolHandleArray&lt; <ref refid="d6/db7/classIAsgElectronEfficiencyCorrectionTool" kindref="compound">IAsgElectronEfficiencyCorrectionTool</ref> &gt; &amp;</type>
          <declname>electronEffToolsHandles</declname>
        </param>
        <param>
          <type>ToolHandleArray&lt; <ref refid="d6/db7/classIAsgElectronEfficiencyCorrectionTool" kindref="compound">IAsgElectronEfficiencyCorrectionTool</ref> &gt; &amp;</type>
          <declname>electronSFToolsHandles</declname>
        </param>
        <param>
          <type>ToolHandleArray&lt; <ref refid="d4/d3a/classCP_1_1IMuonTriggerScaleFactors" kindref="compound">CP::IMuonTriggerScaleFactors</ref> &gt; &amp;</type>
          <declname>muonToolsHandles</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>triggers</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>nToys</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="171" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1adbf1e1a7a6ac3fd44073eb4ee81b4c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool compare</definition>
        <argsstring>(double eff, double effToys, unsigned long nToys)</argsstring>
        <name>compare</name>
        <param>
          <type>double</type>
          <declname>eff</declname>
        </param>
        <param>
          <type>double</type>
          <declname>effToys</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>nToys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="198" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a7cc8a837629f2f65f702053f79c8b699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test1L</definition>
        <argsstring>(const xAOD::ElectronContainer &amp;electronContainer, const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test1L</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::ElectronContainer</ref> &amp;</type>
          <declname>electronContainer</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="295" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a6a71acd4d9399211dd9e610960f032ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test2L</definition>
        <argsstring>(const xAOD::ElectronContainer &amp;electronContainer, const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test2L</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::ElectronContainer</ref> &amp;</type>
          <declname>electronContainer</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="328" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1abe5d9ec268049a3ea5961652a29305fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test2L1L</definition>
        <argsstring>(const xAOD::ElectronContainer &amp;electronContainer, const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test2L1L</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::ElectronContainer</ref> &amp;</type>
          <declname>electronContainer</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="399" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1aa5c2ec9e01a6911c634a32f2aab453d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test3Lmixed</definition>
        <argsstring>(const xAOD::ElectronContainer &amp;electronContainer, const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test3Lmixed</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::ElectronContainer</ref> &amp;</type>
          <declname>electronContainer</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="436" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a424cbf48deb8dacb27d1077cceb9e020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test2Lsym1L</definition>
        <argsstring>(const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test2Lsym1L</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="479" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a267f131127bb056390b61ab718d1df35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test2Lasym1L</definition>
        <argsstring>(const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test2Lasym1L</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="516" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a32f0bcce0d8d72cd4732a86222a9d283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test2L2Lsym1L</definition>
        <argsstring>(const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test2L2Lsym1L</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="556" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a4b5ef7a8d594821cce62f0051abfb0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test2L2Lasym1L</definition>
        <argsstring>(const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test2L2Lasym1L</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>if(nsupersoft!=0 || nsoft!=0 || nmedium!=0 || nhard!=2) continue; </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="597" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1aa73da3af85f84377b9fad09f4db95a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test3Lsym</definition>
        <argsstring>(const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test3Lsym</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="640" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1aafaf55577ec5db8c969ff51ab93c6936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test3Lhalfsym</definition>
        <argsstring>(const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test3Lhalfsym</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="665" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1ae7cb9582a81e9b952eef0ec5bb217880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test1Lexternal</definition>
        <argsstring>(const xAOD::ElectronContainer &amp;electronContainer, const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test1Lexternal</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::ElectronContainer</ref> &amp;</type>
          <declname>electronContainer</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="211" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1a8fb79bc88db7384c65cd37e7de189fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test2Lexternal</definition>
        <argsstring>(const xAOD::ElectronContainer &amp;electronContainer, const xAOD::MuonContainer &amp;muonContainer)</argsstring>
        <name>test2Lexternal</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::ElectronContainer</ref> &amp;</type>
          <declname>electronContainer</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &amp;</type>
          <declname>muonContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="254" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="da/d80/TrigGlobEffCorrValidation_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" line="100" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx" bodystart="99" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>contact:<sp/>jmaurer@cern.ch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;xAODRootAccess/Init.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;xAODRootAccess/TStore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;AsgTools/AnaToolHandle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TriggerAnalysisInterfaces/ITrigGlobalEfficiencyCorrectionTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ElectronEfficiencyCorrection/IAsgElectronEfficiencyCorrectionTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MuonEfficiencyCorrections/IMuonTriggerScaleFactors.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Electron.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/ElectronContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/ElectronAuxContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMuon/MuonContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMuon/MuonAuxContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PATInterfaces/ISystematicsTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cout;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::endl;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>configure(asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;&amp;<sp/>myTool1,<sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;&amp;<sp/>myTool2,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;&amp;<sp/>electronEffToolsHandles,<sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;&amp;<sp/>electronSFToolsHandles,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;&amp;<sp/>muonToolsHandles,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>triggers,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>configure(asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;&amp;<sp/>myTool,<sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;&amp;<sp/>electronEffToolsHandles,<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;&amp;<sp/>electronSFToolsHandles,<sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;&amp;<sp/>muonToolsHandles,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>triggers,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys=0);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compare(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>effToys,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2L1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test3Lmixed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2Lsym1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2Lasym1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2L2Lsym1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2L2Lasym1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test3Lsym(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test3Lhalfsym(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test1Lexternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test2Lexternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>:<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d6/db7/classIAsgElectronEfficiencyCorrectionTool" kindref="compound">IAsgElectronEfficiencyCorrectionTool</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>asg::<ref refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" kindref="member" tooltip="Constructor specifying the tool instance&amp;#39;s name.">AsgTool</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ASG_TOOL_CLASS(<ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref>,<sp/><ref refid="d6/db7/classIAsgElectronEfficiencyCorrectionTool" kindref="compound">IAsgElectronEfficiencyCorrectionTool</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_efficiency;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>efficiency<sp/>=<sp/>0.8)<sp/>:<sp/><ref refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" kindref="member" tooltip="Constructor specifying the tool instance&amp;#39;s name.">AsgTool</ref>(name),<sp/>m_efficiency(efficiency)<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool_1afb8bacd845b0637ad397f9fb00e4f1b8" kindref="member" tooltip="The interface for Scale Factors.">getEfficiencyScaleFactor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>efficiencyScaleFactor)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>efficiencyScaleFactor<sp/>=<sp/>m_efficiency;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref><sp/>applyEfficiencyScaleFactor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool_1a2f5039b0bdf77f462e15b8a17d75ab01" kindref="member" tooltip="returns: whether this tool is affected by the given systematics">isAffectedBySystematic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>&amp;)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool_1a697e252d26cbc2e690f46d5b05b2586b" kindref="member" tooltip="returns: the list of all systematics this tool can be affected by">affectingSystematics</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>();<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool_1aff6185da24285a798f30e3b03443075a" kindref="member" tooltip="returns: the list of all systematics this tool recommends to use">recommendedSystematics</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>();<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode" kindref="compound">CP::SystematicCode</ref><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool_1ad9fc19237adb923e6fccb4d6b974bb31" kindref="member">applySystematicVariation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>&amp;)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="d9/dd9/classDummyMuonTriggerScaleFactors" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>CP::IMuonTriggerScaleFactors,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>asg::<ref refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" kindref="member" tooltip="Constructor specifying the tool instance&amp;#39;s name.">AsgTool</ref><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ASG_TOOL_CLASS(<ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref>,<sp/><ref refid="d4/d3a/classCP_1_1IMuonTriggerScaleFactors" kindref="compound">CP::IMuonTriggerScaleFactors</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_efficiency;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,double&gt;<sp/>m_triggerEfficiency;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>efficiency<sp/>=<sp/>0.7)<sp/>:<sp/><ref refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" kindref="member" tooltip="Constructor specifying the tool instance&amp;#39;s name.">AsgTool</ref>(name),<sp/>m_efficiency(efficiency)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">,<sp/>m_year<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;2015&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,double&gt;&amp;<sp/>efficiencies)<sp/>:<sp/><ref refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" kindref="member" tooltip="Constructor specifying the tool instance&amp;#39;s name.">AsgTool</ref>(name),<sp/>m_efficiency(0),<sp/>m_triggerEfficiency(efficiencies)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">,<sp/>m_year<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;2015&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors_1a0f36de9a8a4fc2432ea27f2f330fd0b7" kindref="member">initialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref><sp/>getTriggerScaleFactor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;,<sp/>Double_t&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref><sp/>getTriggerEfficiency(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;,<sp/>Double_t&amp;<sp/>efficiency,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trig,<sp/>Bool_t)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="83"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_triggerEfficiency.size()==0)<sp/>efficiency<sp/>=<sp/>m_efficiency;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>efficiency<sp/>=<sp/>m_triggerEfficiency.at(trig);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref><sp/>setRunNumber(Int_t)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors_1ae6078953d2ea496c778abbaa265d88f9" kindref="member" tooltip="returns: whether this tool is affected by the given systematics">isAffectedBySystematic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>&amp;)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors_1a507af7afff2f8f7ca54574c7e0cbe353" kindref="member" tooltip="returns: the list of all systematics this tool can be affected by">affectingSystematics</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>();<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors_1a76ade790e2690f3eb36e42de48b84d4b" kindref="member" tooltip="returns: the list of all systematics this tool recommends to use">recommendedSystematics</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>();<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode" kindref="compound">CP::SystematicCode</ref><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors_1a2f3eba2d5897910b9263d672cb83f2d2" kindref="member">applySystematicVariation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>&amp;)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>;<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_year;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">asg::msgUserCode;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>StatusCode::enableFailure();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(<ref refid="dd/d44/namespacexAOD_1a2b6ff6013c964ff2254bd3540cd1738d" kindref="member">xAOD::Init</ref>());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dae/classxAOD_1_1TStore" kindref="compound">xAOD::TStore</ref><sp/>store;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1af2337c3c4b130cd6bc26538b7b73a214" kindref="member" tooltip="Enable failure (with a backtrace) on an unchecked correction code.">CP::CorrectionCode::enableFailure</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>electronContainer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1a313b350dfe3799672f72c35b57c428a2" kindref="member" tooltip="Definition of the current &amp;quot;electron container version&amp;quot;.">xAOD::ElectronContainer</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(store.<ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">record</ref>(electronContainer,<sp/></highlight><highlight class="stringliteral">&quot;Electrons&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>electronContainerAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1abc54fd89fa5b0f6b2e8b00f9510f9434" kindref="member">xAOD::ElectronAuxContainer</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(store.<ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">record</ref>(electronContainerAux,<sp/></highlight><highlight class="stringliteral">&quot;ElectronsAux&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>electronContainer-&gt;setStore(electronContainerAux);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;3;++i)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>el<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1aead9678ad1735e66e6f9b879cfcc5261" kindref="member" tooltip="Definition of the current &amp;quot;egamma version&amp;quot;.">xAOD::Electron</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>electronContainer-&gt;push_back(el);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el-&gt;setP4(3e4f,<sp/>0.f,<sp/>0.f,<sp/>0.511f);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muonContainer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1ad81f639d114671d39e8f0c5b00091c64" kindref="member" tooltip="Definition of the current &amp;quot;Muon container version&amp;quot;.">xAOD::MuonContainer</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(store.<ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">record</ref>(muonContainer,<sp/></highlight><highlight class="stringliteral">&quot;Muons&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muonContainerAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1a1275c631a26f4e6393f518113e5a03c1" kindref="member">xAOD::MuonAuxContainer</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(store.<ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">record</ref>(muonContainerAux,<sp/></highlight><highlight class="stringliteral">&quot;MuonsAux&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>muonContainer-&gt;setStore(muonContainerAux);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;3;++i)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1ab0e1f14e75ada3ccf2b11331c803b97d" kindref="member" tooltip="Reference the current persistent version:.">xAOD::Muon</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>muonContainer-&gt;push_back(mu);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu-&gt;setP4(3e4f,<sp/>0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muonContainerVariedPt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1ad81f639d114671d39e8f0c5b00091c64" kindref="member" tooltip="Definition of the current &amp;quot;Muon container version&amp;quot;.">xAOD::MuonContainer</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(store.<ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">record</ref>(muonContainer,<sp/></highlight><highlight class="stringliteral">&quot;MuonsVariedPt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muonContainerVariedPtAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1a1275c631a26f4e6393f518113e5a03c1" kindref="member">xAOD::MuonAuxContainer</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(store.<ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">record</ref>(muonContainerVariedPtAux,<sp/></highlight><highlight class="stringliteral">&quot;MuonsVariedPtAux&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>muonContainerVariedPt-&gt;setStore(muonContainerVariedPtAux);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;100;++i)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mu<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1ab0e1f14e75ada3ccf2b11331c803b97d" kindref="member" tooltip="Reference the current persistent version:.">xAOD::Muon</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>muonContainerVariedPt-&gt;push_back(mu);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pt[5]=<sp/>{5.5e3,<sp/>13e3,<sp/>17e3,<sp/>20e3,<sp/>30e3};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu-&gt;setP4(pt[i%5],<sp/>0.f,<sp/>0.f);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(test1L(*electronContainer,<sp/>*muonContainer));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test2L(*electronContainer,<sp/>*muonContainer));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test2L1L(*electronContainer,<sp/>*muonContainer));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test3Lmixed(*electronContainer,<sp/>*muonContainer));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test2Lsym1L(*muonContainerVariedPt));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test2Lasym1L(*muonContainerVariedPt));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test2L2Lsym1L(*muonContainerVariedPt));<sp/>//<sp/>this<sp/>test<sp/>requires<sp/>modifying<sp/>the<sp/>declaration<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test2L2Lasym1L(*muonContainerVariedPt));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test3Lsym(*muonContainerVariedPt));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test3Lhalfsym(*muonContainerVariedPt));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test1Lexternal(*electronContainer,<sp/>*muonContainer));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(test2Lexternal(*electronContainer,<sp/>*muonContainer));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout&lt;&lt;BOOST_VERSION&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>configure(asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;&amp;<sp/>myTool1,<sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;&amp;<sp/>myTool2,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;&amp;<sp/>electronEffToolsHandles,<sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;&amp;<sp/>electronSFToolsHandles,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;&amp;<sp/>muonToolsHandles,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>triggers,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>configure(myTool1,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,triggers,0)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>configure(myTool2,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,triggers,nToys);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>configure(asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;&amp;<sp/>myTool,<sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;&amp;<sp/>electronEffToolsHandles,<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;&amp;<sp/>electronSFToolsHandles,<sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;&amp;<sp/>muonToolsHandles,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>triggers,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,std::string&gt;<sp/>legsPerTool;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;2;++i)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>handles<sp/>=<sp/>i?<sp/>electronEffToolsHandles<sp/>:<sp/>electronSFToolsHandles;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>h<sp/>:<sp/>handles)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>name<sp/>=<sp/>h-&gt;name();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>name.find(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos==std::string::npos)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>leg<sp/>=<sp/>name.substr(pos+1);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsPerTool.emplace(name,leg);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(myTool.setProperty(</highlight><highlight class="stringliteral">&quot;ElectronEfficiencyTools&quot;</highlight><highlight class="normal">,<sp/>electronEffToolsHandles));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(myTool.setProperty(</highlight><highlight class="stringliteral">&quot;ElectronScaleFactorTools&quot;</highlight><highlight class="normal">,<sp/>electronSFToolsHandles));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(myTool.setProperty(</highlight><highlight class="stringliteral">&quot;ListOfLegsPerTool&quot;</highlight><highlight class="normal">,<sp/>legsPerTool));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(myTool.setProperty(</highlight><highlight class="stringliteral">&quot;MuonTools&quot;</highlight><highlight class="normal">,<sp/>muonToolsHandles));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(myTool.setProperty(</highlight><highlight class="stringliteral">&quot;TriggerCombination2015&quot;</highlight><highlight class="normal">,<sp/>triggers));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(myTool.setProperty(</highlight><highlight class="stringliteral">&quot;NumberOfToys&quot;</highlight><highlight class="normal">,<sp/>nToys));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(myTool.initialize());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compare(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>effToys,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Efficiency<sp/>from<sp/>explicit<sp/>formula<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;eff&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>from<sp/>toys<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;effToys&lt;&lt;endl;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>fabs(eff-effToys);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stat<sp/>=<sp/>sqrt(effToys*(1.-effToys)/nToys);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diff&gt;3.*stat)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>difference<sp/>exceeds<sp/>three<sp/>standard<sp/>deviations,<sp/>significance<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(diff/stat)&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test1Lexternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE1(</highlight><highlight class="stringliteral">&quot;Eff-e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE2(</highlight><highlight class="stringliteral">&quot;SF-e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose&quot;</highlight><highlight class="normal">,1.);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>electronEffToolsHandles<sp/>=<sp/>{&amp;toolE1},<sp/>electronSFToolsHandles<sp/>=<sp/>{&amp;toolE2};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/ZZZ1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,</highlight><highlight class="stringliteral">&quot;e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::default_random_engine<sp/>rdm;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::bernoulli_distribution<sp/>electronLegPdf(0.8);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::bernoulli_distribution<sp/>muonLegPdf(0.7);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ne=0;ne&lt;=3;++ne)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm=0;nm&lt;=3;++nm)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ne==0<sp/>&amp;&amp;<sp/>nm==0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons(ne);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>itrE<sp/>=<sp/>electronContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(electrons.begin(),ne,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrE++);});</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons(nm);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>itrM<sp/>=<sp/>muonContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(muons.begin(),nm,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrM++);});</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Single<sp/>lepton<sp/>trigger,<sp/>#electrons=&quot;</highlight><highlight class="normal">&lt;&lt;ne&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>#muons=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,toolEff<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nPass<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t=0;t&lt;nToys;++t)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trig<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ke=0;ke&lt;ne<sp/>&amp;&amp;<sp/>!trig;++ke)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(electronLegPdf(rdm))<sp/>trig<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>km=0;km&lt;nm<sp/>&amp;&amp;<sp/>!trig;++km)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(muonLegPdf(rdm))<sp/>trig<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trig)<sp/>nPass<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>empEff<sp/>=<sp/>nPass/nToys;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Efficiency<sp/>from<sp/>the<sp/>tool<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;toolEff&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>from<sp/>toys<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;empEff&lt;&lt;endl;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test2Lexternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE1(</highlight><highlight class="stringliteral">&quot;Eff-e12_lhloose_L1EM10VH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE2(</highlight><highlight class="stringliteral">&quot;SF-e12_lhloose_L1EM10VH&quot;</highlight><highlight class="normal">,1.);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>electronEffToolsHandles<sp/>=<sp/>{&amp;toolE1},<sp/>electronSFToolsHandles<sp/>=<sp/>{&amp;toolE2};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/ZZZ2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,</highlight><highlight class="stringliteral">&quot;2e12_lhloose_2L1EM10VH&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::default_random_engine<sp/>rdm;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::bernoulli_distribution<sp/>electronLegPdf(0.8);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>std::bernoulli_distribution<sp/>muonLegPdf(0.7);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ne=0;ne&lt;=3;++ne)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm=0;nm&lt;=3;++nm)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ne+nm&lt;2<sp/>||<sp/>ne&lt;2)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons(ne);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>itrE<sp/>=<sp/>electronContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(electrons.begin(),ne,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrE++);});</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons(nm);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>itrM<sp/>=<sp/>muonContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(muons.begin(),nm,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrM++);});</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Dilepton<sp/>trigger,<sp/>#electrons=&quot;</highlight><highlight class="normal">&lt;&lt;ne&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>#muons=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,toolEff<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nPass<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t=0;t&lt;nToys;++t)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nte=0,<sp/>ntm=0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ke=0;ke&lt;ne;++ke)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(electronLegPdf(rdm))<sp/>++nte;<sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for(int<sp/>km=0;km&lt;nm;++km)<sp/>{<sp/>if(muonLegPdf(rdm))<sp/>++ntm;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nte+ntm&gt;=2)<sp/>nPass<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>empEff<sp/>=<sp/>nPass/nToys;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Efficiency<sp/>from<sp/>the<sp/>tool<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;toolEff&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>from<sp/>toys<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;empEff&lt;&lt;endl;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE1(</highlight><highlight class="stringliteral">&quot;EFF-e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE2(</highlight><highlight class="stringliteral">&quot;SF-e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>electronEffToolsHandles<sp/>=<sp/>{&amp;toolE1},<sp/>electronSFToolsHandles<sp/>=<sp/>{&amp;toolE2};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/1L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/1Ltoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose<sp/>||<sp/>mu20_iloose_L1MU15_OR_mu50&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ne=0;ne&lt;=3;++ne)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm=0;nm&lt;=3;++nm)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ne==0<sp/>&amp;&amp;<sp/>nm==0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons(ne);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>itrE<sp/>=<sp/>electronContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(electrons.begin(),ne,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrE++);});</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons(nm);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>itrM<sp/>=<sp/>muonContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(muons.begin(),nm,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrM++);});</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Single<sp/>lepton<sp/>triggers,<sp/>#electrons=&quot;</highlight><highlight class="normal">&lt;&lt;ne&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>#muons=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE1(</highlight><highlight class="stringliteral">&quot;EFF-e12_lhloose_L1EM10VH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE2(</highlight><highlight class="stringliteral">&quot;SF-e12_lhloose_L1EM10VH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE3(</highlight><highlight class="stringliteral">&quot;EFF-e17_lhloose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE4(</highlight><highlight class="stringliteral">&quot;SF-e17_lhloose&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>electronEffToolsHandles<sp/>=<sp/>{&amp;toolE1,&amp;toolE3},<sp/>electronSFToolsHandles<sp/>=<sp/>{&amp;toolE2,&amp;toolE4};</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2Ltoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2e12_lhloose_L12EM10VH<sp/>||<sp/>e17_lhloose_mu14<sp/>||<sp/>mu18_mu8noL1&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ne=0;ne&lt;=3;++ne)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm=0;nm&lt;=3;++nm)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ne+nm&lt;2)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons(ne);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>itrE<sp/>=<sp/>electronContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(electrons.begin(),ne,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrE++);});</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons(nm);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>itrM<sp/>=<sp/>muonContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(muons.begin(),nm,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrM++);});</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Dilepton<sp/>triggers,<sp/>#electrons=&quot;</highlight><highlight class="normal">&lt;&lt;ne&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>#muons=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="363"><highlight class="comment">bool<sp/>test2L2Lmix(const<sp/>xAOD::ElectronContainer&amp;<sp/>electronContainer,<sp/>const<sp/>xAOD::MuonContainer&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="364"><highlight class="comment">{</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/>DummyElectronEfficiencyCorrectionTool<sp/>toolE1(&quot;EFF-e12_lhloose_L1EM10VH&quot;);</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/>DummyElectronEfficiencyCorrectionTool<sp/>toolE2(&quot;SF-e12_lhloose_L1EM10VH&quot;);</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/>DummyElectronEfficiencyCorrectionTool<sp/>toolE3(&quot;EFF-e17_lhloose&quot;);</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/>DummyElectronEfficiencyCorrectionTool<sp/>toolE4(&quot;SF-e17_lhloose&quot;);<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>DummyMuonTriggerScaleFactors<sp/>toolM(&quot;YYY&quot;);</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>electronEffToolsHandles<sp/>=<sp/>{&amp;toolE1,&amp;toolE3},<sp/>electronSFToolsHandles<sp/>=<sp/>{&amp;toolE2,&amp;toolE4};</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(&quot;TrigGlobalEfficiencyCorrectionTool/2L&quot;);</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(&quot;TrigGlobalEfficiencyCorrectionTool/2Ltoys&quot;);</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;2e12_lhloose_L12EM10VH<sp/>||<sp/>e17_lhloose_mu14<sp/>||<sp/>mu18_mu8noL1&quot;,nToys));</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/>for(int<sp/>ne=0;ne&lt;=3;++ne)</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/>for(int<sp/>nm=0;nm&lt;=3;++nm)</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ne+nm&lt;2)<sp/>continue;</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons(ne);</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xAOD::ElectronContainer::const_iterator<sp/>itrE<sp/>=<sp/>electronContainer.begin();</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(electrons.begin(),ne,[&amp;](){return<sp/>*(itrE++);});</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons(nm);</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xAOD::MuonContainer::const_iterator<sp/>itrM<sp/>=<sp/>muonContainer.begin();</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(muons.begin(),nm,[&amp;](){return<sp/>*(itrM++);});</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;&quot;Dilepton<sp/>triggers,<sp/>#electrons=&quot;&lt;&lt;ne&lt;&lt;&quot;<sp/>and<sp/>#muons=&quot;&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="396"><highlight class="comment">}</highlight></codeline>
<codeline lineno="397"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2L1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE1(</highlight><highlight class="stringliteral">&quot;EFF-e12_lhloose_L1EM10VH&quot;</highlight><highlight class="normal">,0.9);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE2(</highlight><highlight class="stringliteral">&quot;SF-e12_lhloose_L1EM10VH&quot;</highlight><highlight class="normal">,1.);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE3(</highlight><highlight class="stringliteral">&quot;EFF-e17_lhloose&quot;</highlight><highlight class="normal">,0.85);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE4(</highlight><highlight class="stringliteral">&quot;SF-e17_lhloose&quot;</highlight><highlight class="normal">,1.);<sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE5(</highlight><highlight class="stringliteral">&quot;EFF-e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose&quot;</highlight><highlight class="normal">,0.8);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE6(</highlight><highlight class="stringliteral">&quot;SF-e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose&quot;</highlight><highlight class="normal">,1.);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>electronEffToolsHandles<sp/>=<sp/>{&amp;toolE1,&amp;toolE3,&amp;toolE5},<sp/>electronSFToolsHandles<sp/>=<sp/>{&amp;toolE2,&amp;toolE4,&amp;toolE6};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2L1L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2L1Ltoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2e12_lhloose_L12EM10VH<sp/>||<sp/>e17_lhloose_mu14<sp/>||<sp/>mu18_mu8noL1<sp/>||<sp/>e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose<sp/>||<sp/>mu20_iloose_L1MU15_OR_mu50&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ne=0;ne&lt;=3;++ne)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm=0;nm&lt;=3;++nm)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ne+nm&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons(ne);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>itrE<sp/>=<sp/>electronContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(electrons.begin(),ne,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrE++);});</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons(nm);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>itrM<sp/>=<sp/>muonContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(muons.begin(),nm,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrM++);});</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Dilepton+single-lepton<sp/>triggers,<sp/>#electrons=&quot;</highlight><highlight class="normal">&lt;&lt;ne&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>#muons=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test3Lmixed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&amp;<sp/>electronContainer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE1(</highlight><highlight class="stringliteral">&quot;EFF-e12_lhloose&quot;</highlight><highlight class="normal">,0.8);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d7f/classDummyElectronEfficiencyCorrectionTool" kindref="compound">DummyElectronEfficiencyCorrectionTool</ref><sp/>toolE2(</highlight><highlight class="stringliteral">&quot;SF-e12_lhloose&quot;</highlight><highlight class="normal">,1.);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">,0.7);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>electronEffToolsHandles<sp/>=<sp/>{&amp;toolE1},<sp/>electronSFToolsHandles<sp/>=<sp/>{&amp;toolE2};</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/3Lmixed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/3Lmixedtoys&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool3(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2x3L1mixed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool4(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2x3Lmixedtoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,<sp/></highlight><highlight class="stringliteral">&quot;e12_lhloose_2mu10&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool3,myTool4,electronEffToolsHandles,electronSFToolsHandles,muonToolsHandles,<sp/></highlight><highlight class="stringliteral">&quot;e12_lhloose_2mu10<sp/>||<sp/>2e12_lhloose_mu10&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ne=1;ne&lt;=3;++ne)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm=1;nm&lt;=3;++nm)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ne+nm&lt;3)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons(ne);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>itrE<sp/>=<sp/>electronContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(electrons.begin(),ne,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrE++);});</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons(nm);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>itrM<sp/>=<sp/>muonContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(muons.begin(),nm,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrM++);});</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nm&gt;=2)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;e_2mu<sp/>trigger,<sp/>#electrons=&quot;</highlight><highlight class="normal">&lt;&lt;ne&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>#muons=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy1,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy1,toolEff1));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy1,toolEff2));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;e_2mu<sp/>+<sp/>2e_mu<sp/>triggers,<sp/>#electrons=&quot;</highlight><highlight class="normal">&lt;&lt;ne&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>#muons=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy2,<sp/>toolEff3<sp/>=<sp/>0.,<sp/>toolEff4<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool3-&gt;getEfficiency(281130,electrons,muons,dummy2,toolEff3));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool4-&gt;getEfficiency(281130,electrons,muons,dummy2,toolEff4));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff3,toolEff4,nToys));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2Lsym1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,double&gt;<sp/>triggerEfficiency<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;HLT_mu14&quot;</highlight><highlight class="normal">,0.72},{</highlight><highlight class="stringliteral">&quot;HLT_mu24_iloose_L1MU15&quot;</highlight><highlight class="normal">,0.53}};</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">,triggerEfficiency);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>emptyArray;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2Lsym1L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2Lsym1Ltoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,emptyArray,emptyArray,muonToolsHandles,</highlight><highlight class="stringliteral">&quot;2mu14<sp/>||<sp/>mu24_iloose_L1MU15&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmedium=0;nmedium&lt;=2;++nmedium)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nhard=0;nhard&lt;=2;++nhard)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nmedium+nhard&lt;2<sp/>&amp;&amp;<sp/>nhard&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrecmedium=0,<sp/>nrechard=0;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muon<sp/>:<sp/>muonContainer)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((muon-&gt;pt()&gt;15e3<sp/>&amp;&amp;<sp/>muon-&gt;pt()&lt;25e3<sp/>&amp;&amp;<sp/>(nrecmedium++)&lt;nmedium)<sp/>||<sp/>(muon-&gt;pt()&gt;25e3<sp/>&amp;&amp;<sp/>(nrechard++)&lt;nhard))<sp/>muons.push_back(muon);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nrecmedium&lt;nmedium<sp/>||<sp/>nrechard&lt;nhard)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>can&apos;t<sp/>find<sp/>enough<sp/>muons<sp/>to<sp/>run<sp/>the<sp/>test\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;2Lsym+1L<sp/>triggers,<sp/>#muons<sp/>medium=&quot;</highlight><highlight class="normal">&lt;&lt;nmedium&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>hard=&quot;</highlight><highlight class="normal">&lt;&lt;nhard&lt;&lt;endl;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2Lasym1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,double&gt;<sp/>triggerEfficiency<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;HLT_mu8noL1&quot;</highlight><highlight class="normal">,0.91},<sp/>{</highlight><highlight class="stringliteral">&quot;HLT_mu18&quot;</highlight><highlight class="normal">,0.72},{</highlight><highlight class="stringliteral">&quot;HLT_mu24_iloose_L1MU15&quot;</highlight><highlight class="normal">,0.53}};</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">,triggerEfficiency);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>emptyArray;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2Lasym1L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2Lasym1Ltoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,emptyArray,emptyArray,muonToolsHandles,</highlight><highlight class="stringliteral">&quot;mu18_mu8noL1<sp/>||<sp/>mu24_iloose_L1MU15&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsoft=0;nsoft&lt;=2;++nsoft)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmedium=0;nmedium&lt;=2;++nmedium)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nhard=0;nhard&lt;=2;++nhard)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nsoft+nmedium+nhard&lt;2<sp/>||<sp/>nmedium+nhard&lt;1)<sp/>&amp;&amp;<sp/>nhard&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrecsoft=0,<sp/>nrecmedium=0,<sp/>nrechard=0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muon<sp/>:<sp/>muonContainer)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((muon-&gt;pt()&gt;10e3<sp/>&amp;&amp;<sp/>muon-&gt;pt()&lt;15e3<sp/>&amp;&amp;<sp/>(nrecsoft++)&lt;nsoft)<sp/>||<sp/>(muon-&gt;pt()&gt;15e3<sp/>&amp;&amp;<sp/>muon-&gt;pt()&lt;25e3<sp/>&amp;&amp;<sp/>(nrecmedium++)&lt;nmedium)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(muon-&gt;pt()&gt;25e3<sp/>&amp;&amp;<sp/>(nrechard++)&lt;nhard))<sp/>muons.push_back(muon);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nrecsoft&lt;nsoft<sp/>||<sp/>nrecmedium&lt;nmedium<sp/>||<sp/>nrechard&lt;nhard)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;nrecsoft&lt;&lt;</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">&lt;&lt;nsoft&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;nrecmedium&lt;&lt;</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">&lt;&lt;nmedium&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;nrechard&lt;&lt;</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">&lt;&lt;nhard&lt;&lt;endl;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>can&apos;t<sp/>find<sp/>enough<sp/>muons<sp/>to<sp/>run<sp/>the<sp/>test\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;2Lasym+1L<sp/>triggers,<sp/>#muons<sp/>soft=&quot;</highlight><highlight class="normal">&lt;&lt;nsoft&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>medium=&quot;</highlight><highlight class="normal">&lt;&lt;nmedium&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>hard=&quot;</highlight><highlight class="normal">&lt;&lt;nhard&lt;&lt;endl;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2L2Lsym1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;\nWARNING:<sp/>to<sp/>get<sp/>meaningful<sp/>results<sp/>with<sp/>this<sp/>test,<sp/>you<sp/>need<sp/>to<sp/>invert<sp/>the<sp/>hierarchy<sp/>between<sp/>mu10<sp/>and<sp/>mu14<sp/>in<sp/>the<sp/>.icc<sp/>(not<sp/>permanently!!!)\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,double&gt;<sp/>triggerEfficiency<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;HLT_mu10&quot;</highlight><highlight class="normal">,0.51},<sp/>{</highlight><highlight class="stringliteral">&quot;HLT_mu14&quot;</highlight><highlight class="normal">,0.63},{</highlight><highlight class="stringliteral">&quot;HLT_mu24_iloose_L1MU15&quot;</highlight><highlight class="normal">,0.24}};</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">,triggerEfficiency);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>emptyArray;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2L2Lsym&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2L2Lsymtoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,emptyArray,emptyArray,muonToolsHandles,</highlight><highlight class="stringliteral">&quot;2mu10<sp/>||<sp/>2mu14<sp/>||<sp/>mu24_iloose_L1MU15&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsoft=0;nsoft&lt;=2;++nsoft)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmedium=0;nmedium&lt;=2;++nmedium)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nhard=0;nhard&lt;=2;++nhard)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nsoft+nmedium+nhard&lt;2<sp/>&amp;&amp;<sp/>nhard&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrecsoft=0,<sp/>nrecmedium=0,<sp/>nrechard=0;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muon<sp/>:<sp/>muonContainer)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((muon-&gt;pt()&lt;15e3<sp/>&amp;&amp;<sp/>(nrecsoft++)&lt;nsoft)<sp/>||<sp/>(muon-&gt;pt()&gt;15e3<sp/>&amp;&amp;<sp/>muon-&gt;pt()&lt;25e3<sp/>&amp;&amp;<sp/>(nrecmedium++)&lt;nmedium)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(muon-&gt;pt()&gt;25e3<sp/>&amp;&amp;<sp/>(nrechard++)&lt;nhard))<sp/>muons.push_back(muon);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nrecsoft&lt;nsoft<sp/>||<sp/>nrecmedium&lt;nmedium<sp/>||<sp/>nrechard&lt;nhard)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;nrecsoft&lt;&lt;</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">&lt;&lt;nsoft&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;nrecmedium&lt;&lt;</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">&lt;&lt;nmedium&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;nrechard&lt;&lt;</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">&lt;&lt;nhard&lt;&lt;endl;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>can&apos;t<sp/>find<sp/>enough<sp/>muons<sp/>to<sp/>run<sp/>the<sp/>test\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Dilepton+dilepton<sp/>triggers,<sp/>#muons<sp/>soft=&quot;</highlight><highlight class="normal">&lt;&lt;nsoft&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>medium=&quot;</highlight><highlight class="normal">&lt;&lt;nmedium&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>hard=&quot;</highlight><highlight class="normal">&lt;&lt;nhard&lt;&lt;endl;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test2L2Lasym1L(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,double&gt;<sp/>triggerEfficiency<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;HLT_mu8noL1&quot;</highlight><highlight class="normal">,0.92},<sp/>{</highlight><highlight class="stringliteral">&quot;HLT_mu14&quot;</highlight><highlight class="normal">,0.63},<sp/>{</highlight><highlight class="stringliteral">&quot;HLT_mu18&quot;</highlight><highlight class="normal">,0.51},<sp/>{</highlight><highlight class="stringliteral">&quot;HLT_mu24_iloose_L1MU15&quot;</highlight><highlight class="normal">,0.36}};</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">,triggerEfficiency);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>emptyArray;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2L2Lasym&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/2L2Lasymtoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,emptyArray,emptyArray,muonToolsHandles,</highlight><highlight class="stringliteral">&quot;mu18_mu8noL1<sp/>||<sp/>2mu14<sp/>||<sp/>mu24_iloose_L1MU15&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsupersoft=0;nsupersoft&lt;=2;++nsupersoft)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsoft=0;nsoft&lt;=2;++nsoft)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmedium=0;nmedium&lt;=2;++nmedium)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nhard=0;nhard&lt;=2;++nhard)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((nsupersoft+nsoft+nmedium+nhard&lt;2<sp/>||<sp/>nmedium+nhard&lt;1)<sp/>&amp;&amp;<sp/>(nsoft+nmedium+nhard&lt;2)<sp/>&amp;&amp;<sp/>nhard&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrecsupersoft=0,<sp/>nrecsoft=0,<sp/>nrecmedium=0,<sp/>nrechard=0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muon<sp/>:<sp/>muonContainer)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((muon-&gt;pt()&gt;10e3<sp/>&amp;&amp;<sp/>muon-&gt;pt()&lt;14e3<sp/>&amp;&amp;<sp/>(nrecsupersoft++)&lt;nsupersoft)<sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(muon-&gt;pt()&gt;14e3<sp/>&amp;&amp;<sp/>muon-&gt;pt()&lt;18e3<sp/>&amp;&amp;<sp/>(nrecsoft++)&lt;nsoft)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(muon-&gt;pt()&gt;18e3<sp/>&amp;&amp;<sp/>muon-&gt;pt()&lt;24e3<sp/>&amp;&amp;<sp/>(nrecmedium++)&lt;nmedium)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(muon-&gt;pt()&gt;24e3<sp/>&amp;&amp;<sp/>(nrechard++)&lt;nhard))<sp/>muons.push_back(muon);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nrecsupersoft&lt;nsupersoft<sp/>||<sp/>nrecsoft&lt;nsoft<sp/>||<sp/>nrecmedium&lt;nmedium<sp/>||<sp/>nrechard&lt;nhard)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>can&apos;t<sp/>find<sp/>enough<sp/>muons<sp/>to<sp/>run<sp/>the<sp/>test\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Dilepton+dilepton<sp/>triggers,<sp/>#muons<sp/>noL1=&quot;</highlight><highlight class="normal">&lt;&lt;nsupersoft&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>soft=&quot;</highlight><highlight class="normal">&lt;&lt;nsoft&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>medium=&quot;</highlight><highlight class="normal">&lt;&lt;nmedium&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>hard=&quot;</highlight><highlight class="normal">&lt;&lt;nhard&lt;&lt;endl;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test3Lsym(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">,0.8);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>emptyArray;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/3Lsym&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/3Lsymtoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,emptyArray,emptyArray,muonToolsHandles,</highlight><highlight class="stringliteral">&quot;3mu6&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm=3;nm&lt;=7;++nm)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons(nm);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>itrM<sp/>=<sp/>muonContainer.<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate_n(muons.begin(),nm,[&amp;](){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(itrM++);});</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;3L<sp/>trigger,<sp/>#muon<sp/>=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test3Lhalfsym(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&amp;<sp/>muonContainer)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,double&gt;<sp/>triggerEfficiency<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;HLT_mu6&quot;</highlight><highlight class="normal">,0.70},<sp/>{</highlight><highlight class="stringliteral">&quot;HLT_mu4&quot;</highlight><highlight class="normal">,0.80}};</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dd9/classDummyMuonTriggerScaleFactors" kindref="compound">DummyMuonTriggerScaleFactors</ref><sp/>toolM(</highlight><highlight class="stringliteral">&quot;YYY&quot;</highlight><highlight class="normal">,triggerEfficiency);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;CP::IMuonTriggerScaleFactors&gt;<sp/>muonToolsHandles<sp/>=<sp/>{&amp;toolM};</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandleArray&lt;IAsgElectronEfficiencyCorrectionTool&gt;<sp/>emptyArray;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool1(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/3Lhalfsym&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;ITrigGlobalEfficiencyCorrectionTool&gt;<sp/>myTool2(</highlight><highlight class="stringliteral">&quot;TrigGlobalEfficiencyCorrectionTool/3Lhalfsymtoys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>10000000UL;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(configure(myTool1,myTool2,emptyArray,emptyArray,muonToolsHandles,</highlight><highlight class="stringliteral">&quot;mu6_2mu4&quot;</highlight><highlight class="normal">,nToys));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n5=0;n5&lt;=3;++n5)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm=1;nm&lt;=3;++nm)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n5+nm&lt;3)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(n5!=2<sp/>||<sp/>nm!=1)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Electron*&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/>muons;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrec5=0,<sp/>nrec=0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>muon<sp/>:<sp/>muonContainer)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((muon-&gt;pt()&gt;5e3<sp/>&amp;&amp;<sp/>muon-&gt;pt()&lt;6e3<sp/>&amp;&amp;<sp/>(nrec5++)&lt;n5)<sp/>||<sp/>(muon-&gt;pt()&gt;10e3<sp/>&amp;&amp;<sp/>(nrec++)&lt;nm))<sp/>muons.push_back(muon);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nrec5&lt;n5<sp/>||<sp/>nrec&lt;nm)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>can&apos;t<sp/>find<sp/>enough<sp/>muons<sp/>to<sp/>run<sp/>the<sp/>test\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;3L<sp/>triggers,<sp/>#muons<sp/>5<sp/>GeV<sp/>=&quot;</highlight><highlight class="normal">&lt;&lt;n5&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>#muons<sp/>=&quot;</highlight><highlight class="normal">&lt;&lt;nm&lt;&lt;endl;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy,<sp/>toolEff1<sp/>=<sp/>0.,<sp/>toolEff2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool1-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff1));</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(myTool2-&gt;getEfficiency(281130,electrons,muons,dummy,toolEff2));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(compare(toolEff1,toolEff2,nToys));</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigGlobalEfficiencyCorrection/util/TrigGlobEffCorrValidation.cxx"/>
  </compounddef>
</doxygen>
