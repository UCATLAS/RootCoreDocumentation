<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d5b/ChainGroup_8cxx" kind="file">
    <compoundname>ChainGroup.cxx</compoundname>
    <includes local="no">limits</includes>
    <includes local="yes">boost/regex.hpp</includes>
    <includes local="yes">boost/foreach.hpp</includes>
    <includes refid="d4/d72/HLTChain_8h" local="yes">TrigConfHLTData/HLTChain.h</includes>
    <includes refid="d4/d5f/HLTStreamTag_8h" local="yes">TrigConfHLTData/HLTStreamTag.h</includes>
    <includes refid="d7/d7c/HLTSignature_8h" local="yes">TrigConfHLTData/HLTSignature.h</includes>
    <includes refid="dc/d9c/HLTTriggerElement_8h" local="yes">TrigConfHLTData/HLTTriggerElement.h</includes>
    <includes refid="d8/d48/HLTUtils_8h" local="yes">TrigConfHLTData/HLTUtils.h</includes>
    <includes refid="dc/d13/TriggerItem_8h" local="yes">TrigConfL1Data/TriggerItem.h</includes>
    <includes refid="d7/d8a/TriggerItemNode_8h" local="yes">TrigConfL1Data/TriggerItemNode.h</includes>
    <includes refid="de/da4/Chain_8h" local="yes">TrigSteeringEvent/Chain.h</includes>
    <includes refid="d9/dbe/Lvl1Item_8h" local="yes">TrigSteeringEvent/Lvl1Item.h</includes>
    <includes refid="da/da2/ComboIterator_8h" local="yes">TrigNavStructure/ComboIterator.h</includes>
    <includes refid="d9/da1/TrigCompositeContainer_8h" local="yes">xAODTrigger/TrigCompositeContainer.h</includes>
    <includes refid="d2/dd8/ChainGroup_8h" local="yes">TrigDecisionTool/ChainGroup.h</includes>
    <includes refid="de/dfe/TDTUtilities_8h" local="yes">TrigDecisionTool/TDTUtilities.h</includes>
    <includes refid="dd/da4/Logger_8h" local="yes">TrigDecisionTool/Logger.h</includes>
    <incdepgraph>
      <node id="314438">
        <label>list</label>
      </node>
      <node id="314517">
        <label>TrigDecisionTool/Combination.h</label>
        <link refid="dd/daf/Combination_8h_source"/>
        <childnode refid="314518" relation="include">
        </childnode>
        <childnode refid="314539" relation="include">
        </childnode>
        <childnode refid="314513" relation="include">
        </childnode>
        <childnode refid="314464" relation="include">
        </childnode>
        <childnode refid="314544" relation="include">
        </childnode>
        <childnode refid="314321" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314541" relation="include">
        </childnode>
        <childnode refid="314548" relation="include">
        </childnode>
        <childnode refid="314549" relation="include">
        </childnode>
        <childnode refid="314564" relation="include">
        </childnode>
      </node>
      <node id="314470">
        <label>boost/multi_index/ordered_index.hpp</label>
      </node>
      <node id="314529">
        <label>xAODTrigger/MuonRoI.h</label>
        <link refid="de/d0d/MuonRoI_8h_source"/>
        <childnode refid="314530" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314477">
        <label>TrigConfL1Data/TriggerThresholdValue.h</label>
        <link refid="dd/d1d/TriggerThresholdValue_8h_source"/>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314447">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="314432" relation="include">
        </childnode>
        <childnode refid="314439" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314428" relation="include">
        </childnode>
        <childnode refid="314368" relation="include">
        </childnode>
      </node>
      <node id="314432">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="314405">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="314544">
        <label>TrigNavStructure/TrigNavStructure.h</label>
        <link refid="d2/db8/TrigNavStructure_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314521" relation="include">
        </childnode>
        <childnode refid="314545" relation="include">
        </childnode>
        <childnode refid="314546" relation="include">
        </childnode>
        <childnode refid="314547" relation="include">
        </childnode>
      </node>
      <node id="314495">
        <label>TrigConfL1Data/Muctpi.h</label>
        <link refid="d5/d9f/Muctpi_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314453">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="314454" relation="include">
        </childnode>
        <childnode refid="314433" relation="include">
        </childnode>
        <childnode refid="314373" relation="include">
        </childnode>
        <childnode refid="314455" relation="include">
        </childnode>
      </node>
      <node id="314576">
        <label>StoreGate/StoreGateSvc.h</label>
      </node>
      <node id="314407">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="314367" relation="include">
        </childnode>
        <childnode refid="314329" relation="include">
        </childnode>
        <childnode refid="314373" relation="include">
        </childnode>
        <childnode refid="314374" relation="include">
        </childnode>
      </node>
      <node id="314509">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314510" relation="include">
        </childnode>
        <childnode refid="314511" relation="include">
        </childnode>
      </node>
      <node id="314408">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="314375">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="314363" relation="include">
        </childnode>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314376" relation="include">
        </childnode>
        <childnode refid="314354" relation="include">
        </childnode>
      </node>
      <node id="314463">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="314331">
        <label>TrigConfHLTData/HLTLevel.h</label>
        <link refid="dc/d46/HLTLevel_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314372">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="314343">
        <label>TrigConfL1Data/L1DataBaseclass.h</label>
        <link refid="d8/db1/L1DataBaseclass_8h_source"/>
        <childnode refid="314323" relation="include">
        </childnode>
      </node>
      <node id="314570">
        <label>TrigRoiConversion/RoiSerialise.h</label>
        <link refid="d0/d72/RoiSerialise_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314565" relation="include">
        </childnode>
        <childnode refid="314569" relation="include">
        </childnode>
      </node>
      <node id="314515">
        <label>TrigDecisionTool/FeatureContainer.h</label>
        <link refid="d5/de8/FeatureContainer_8h_source"/>
        <childnode refid="314321" relation="include">
        </childnode>
        <childnode refid="314516" relation="include">
        </childnode>
        <childnode refid="314396" relation="include">
        </childnode>
        <childnode refid="314517" relation="include">
        </childnode>
        <childnode refid="314513" relation="include">
        </childnode>
        <childnode refid="314518" relation="include">
        </childnode>
        <childnode refid="314564" relation="include">
        </childnode>
        <childnode refid="314539" relation="include">
        </childnode>
        <childnode refid="314556" relation="include">
        </childnode>
        <childnode refid="314544" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
      </node>
      <node id="314374">
        <label>functional</label>
      </node>
      <node id="314347">
        <label>iomanip</label>
      </node>
      <node id="314519">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="314429">
        <label>boost/version.hpp</label>
      </node>
      <node id="314532">
        <label>xAODTrigger/versions/MuonRoIContainer_v1.h</label>
        <link refid="d5/df0/MuonRoIContainer__v1_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314530" relation="include">
        </childnode>
      </node>
      <node id="314319">
        <label>limits</label>
      </node>
      <node id="314376">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="314403">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="314511">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="314369">
        <label>iterator</label>
      </node>
      <node id="314391">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314392" relation="include">
        </childnode>
      </node>
      <node id="314483">
        <label>TrigConfL1Data/PIT.h</label>
        <link refid="d7/d7e/PIT_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314528">
        <label>xAODTrigger/versions/EmTauRoIContainer_v2.h</label>
        <link refid="d2/d46/EmTauRoIContainer__v2_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314525" relation="include">
        </childnode>
      </node>
      <node id="314520">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="314452">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="314567">
        <label>RoiDescriptor/RoiDescriptor.h</label>
        <link refid="dc/d01/RoiDescriptor_8h_source"/>
        <childnode refid="314345" relation="include">
        </childnode>
        <childnode refid="314568" relation="include">
        </childnode>
      </node>
      <node id="314458">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="314459" relation="include">
        </childnode>
        <childnode refid="314427" relation="include">
        </childnode>
        <childnode refid="314319" relation="include">
        </childnode>
        <childnode refid="314374" relation="include">
        </childnode>
        <childnode refid="314460" relation="include">
        </childnode>
      </node>
      <node id="314415">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="314364" relation="include">
        </childnode>
        <childnode refid="314416" relation="include">
        </childnode>
        <childnode refid="314344" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314388">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314370" relation="include">
        </childnode>
      </node>
      <node id="314546">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314356" relation="include">
        </childnode>
      </node>
      <node id="314478">
        <label>TrigConfL1Data/CaloInfo.h</label>
        <link refid="d2/d93/CaloInfo_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314479" relation="include">
        </childnode>
        <childnode refid="314480" relation="include">
        </childnode>
        <childnode refid="314481" relation="include">
        </childnode>
      </node>
      <node id="314342">
        <label>stdint.h</label>
      </node>
      <node id="314558">
        <label>AnalysisTriggerEvent/Muon_ROI.h</label>
      </node>
      <node id="314549">
        <label>TrigDecisionTool/FeatureCollectAthena.h</label>
        <link refid="d4/d1b/FeatureCollectAthena_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314333" relation="include">
        </childnode>
        <childnode refid="314321" relation="include">
        </childnode>
        <childnode refid="314516" relation="include">
        </childnode>
        <childnode refid="314519" relation="include">
        </childnode>
        <childnode refid="314520" relation="include">
        </childnode>
        <childnode refid="314550" relation="include">
        </childnode>
        <childnode refid="314551" relation="include">
        </childnode>
        <childnode refid="314513" relation="include">
        </childnode>
        <childnode refid="314552" relation="include">
        </childnode>
        <childnode refid="314553" relation="include">
        </childnode>
        <childnode refid="314554" relation="include">
        </childnode>
        <childnode refid="314556" relation="include">
        </childnode>
        <childnode refid="314558" relation="include">
        </childnode>
        <childnode refid="314559" relation="include">
        </childnode>
        <childnode refid="314560" relation="include">
        </childnode>
        <childnode refid="314561" relation="include">
        </childnode>
        <childnode refid="314562" relation="include">
        </childnode>
        <childnode refid="314563" relation="include">
        </childnode>
        <childnode refid="314522" relation="include">
        </childnode>
        <childnode refid="314526" relation="include">
        </childnode>
        <childnode refid="314529" relation="include">
        </childnode>
        <childnode refid="314531" relation="include">
        </childnode>
        <childnode refid="314533" relation="include">
        </childnode>
        <childnode refid="314536" relation="include">
        </childnode>
        <childnode refid="314540" relation="include">
        </childnode>
        <childnode refid="314518" relation="include">
        </childnode>
      </node>
      <node id="314480">
        <label>TrigConfL1Data/METSigParam.h</label>
        <link refid="d3/dab/METSigParam_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314439">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="314319" relation="include">
        </childnode>
        <childnode refid="314440" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
        <childnode refid="314370" relation="include">
        </childnode>
        <childnode refid="314365" relation="include">
        </childnode>
      </node>
      <node id="314425">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="314385">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
      </node>
      <node id="314550">
        <label>TrigNavigation/NavigationCore.h</label>
      </node>
      <node id="314514">
        <label>TrigDecisionInterface/Conditions.h</label>
        <link refid="db/d3b/TrigDecisionInterface_2TrigDecisionInterface_2Conditions_8h_source"/>
      </node>
      <node id="314539">
        <label>TrigDecisionTool/TypelessFeature.h</label>
        <link refid="d0/d2d/TypelessFeature_8h_source"/>
        <childnode refid="314521" relation="include">
        </childnode>
        <childnode refid="314332" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314512" relation="include">
        </childnode>
      </node>
      <node id="314321">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="314536">
        <label>xAODTrigger/JetRoIContainer.h</label>
        <link refid="d7/d36/JetRoIContainer_8h_source"/>
        <childnode refid="314533" relation="include">
        </childnode>
        <childnode refid="314537" relation="include">
        </childnode>
        <childnode refid="314538" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314380">
        <label>RVersion.h</label>
      </node>
      <node id="314366">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="314367" relation="include">
        </childnode>
        <childnode refid="314373" relation="include">
        </childnode>
        <childnode refid="314374" relation="include">
        </childnode>
      </node>
      <node id="314351">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="314535">
        <label>xAODTrigger/versions/JetRoI_v2.h</label>
        <link refid="dc/d2f/JetRoI__v2_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
      </node>
      <node id="314552">
        <label>TrigDecisionTool/TDTUtilities.h</label>
        <link refid="de/dfe/TDTUtilities_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
      </node>
      <node id="314371">
        <label>cmath</label>
      </node>
      <node id="314418">
        <label>cassert</label>
      </node>
      <node id="314430">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="314449">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="314344">
        <label>stdexcept</label>
      </node>
      <node id="314500">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314501" relation="include">
        </childnode>
      </node>
      <node id="314406">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="314436">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="314565">
        <label>TrigSteeringEvent/TrigRoiDescriptor.h</label>
        <link refid="d2/d8a/TrigRoiDescriptor_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314566" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
        <childnode refid="314567" relation="include">
        </childnode>
        <childnode refid="314569" relation="include">
        </childnode>
      </node>
      <node id="314444">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="314542">
        <label>TLorentzVector.h</label>
      </node>
      <node id="314349">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="314554">
        <label>TrigSteeringEvent/TrigPassBits.h</label>
        <link refid="da/d66/TrigSteeringEvent_2TrigSteeringEvent_2TrigPassBits_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314368" relation="include">
        </childnode>
        <childnode refid="314344" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
        <childnode refid="314555" relation="include">
        </childnode>
      </node>
      <node id="314545">
        <label>TrigNavStructure/TriggerElementFactory.h</label>
        <link refid="d1/dc0/TriggerElementFactory_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314356" relation="include">
        </childnode>
        <childnode refid="314521" relation="include">
        </childnode>
      </node>
      <node id="314325">
        <label>string</label>
      </node>
      <node id="314409">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="314364" relation="include">
        </childnode>
        <childnode refid="314363" relation="include">
        </childnode>
        <childnode refid="314391" relation="include">
        </childnode>
        <childnode refid="314388" relation="include">
        </childnode>
        <childnode refid="314377" relation="include">
        </childnode>
        <childnode refid="314410" relation="include">
        </childnode>
        <childnode refid="314411" relation="include">
        </childnode>
        <childnode refid="314394" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314329" relation="include">
        </childnode>
        <childnode refid="314370" relation="include">
        </childnode>
        <childnode refid="314412" relation="include">
        </childnode>
        <childnode refid="314413" relation="include">
        </childnode>
        <childnode refid="314401" relation="include">
        </childnode>
        <childnode refid="314414" relation="include">
        </childnode>
      </node>
      <node id="314340">
        <label>TrigConfL1Data/TriggerItemNode.h</label>
        <link refid="d7/d8a/TriggerItemNode_8h_source"/>
        <childnode refid="314341" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
      </node>
      <node id="314383">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
      </node>
      <node id="314412">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="314441">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="314424" relation="include">
        </childnode>
        <childnode refid="314439" relation="include">
        </childnode>
        <childnode refid="314442" relation="include">
        </childnode>
        <childnode refid="314444" relation="include">
        </childnode>
        <childnode refid="314429" relation="include">
        </childnode>
        <childnode refid="314369" relation="include">
        </childnode>
        <childnode refid="314370" relation="include">
        </childnode>
      </node>
      <node id="314454">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="314327">
        <label>map</label>
      </node>
      <node id="314505">
        <label>AthenaBaseComps/AthMessaging.h</label>
      </node>
      <node id="314455">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="314456" relation="include">
        </childnode>
      </node>
      <node id="314456">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="314573">
        <label>TrigNavStructure/TypedHolder.h</label>
        <link refid="de/de2/TypedHolder_8h_source"/>
        <childnode refid="314373" relation="include">
        </childnode>
        <childnode refid="314344" relation="include">
        </childnode>
        <childnode refid="314574" relation="include">
        </childnode>
        <childnode refid="314516" relation="include">
        </childnode>
        <childnode refid="314575" relation="include">
        </childnode>
        <childnode refid="314521" relation="include">
        </childnode>
        <childnode refid="314424" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314576" relation="include">
        </childnode>
        <childnode refid="314506" relation="include">
        </childnode>
      </node>
      <node id="314381">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="314318">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/ChainGroup.cxx</label>
        <link refid="ChainGroup.cxx"/>
        <childnode refid="314319" relation="include">
        </childnode>
        <childnode refid="314320" relation="include">
        </childnode>
        <childnode refid="314321" relation="include">
        </childnode>
        <childnode refid="314322" relation="include">
        </childnode>
        <childnode refid="314334" relation="include">
        </childnode>
        <childnode refid="314335" relation="include">
        </childnode>
        <childnode refid="314336" relation="include">
        </childnode>
        <childnode refid="314337" relation="include">
        </childnode>
        <childnode refid="314339" relation="include">
        </childnode>
        <childnode refid="314340" relation="include">
        </childnode>
        <childnode refid="314346" relation="include">
        </childnode>
        <childnode refid="314352" relation="include">
        </childnode>
        <childnode refid="314355" relation="include">
        </childnode>
        <childnode refid="314358" relation="include">
        </childnode>
        <childnode refid="314461" relation="include">
        </childnode>
        <childnode refid="314552" relation="include">
        </childnode>
        <childnode refid="314503" relation="include">
        </childnode>
      </node>
      <node id="314398">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="314569">
        <label>TrigSteeringEvent/TrigRoiDescriptorCollection.h</label>
        <link refid="d9/da3/TrigRoiDescriptorCollection_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
        <childnode refid="314565" relation="include">
        </childnode>
      </node>
      <node id="314473">
        <label>TrigConfL1Data/CTPConfig.h</label>
        <link refid="db/d97/CTPConfig_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314474" relation="include">
        </childnode>
        <childnode refid="314486" relation="include">
        </childnode>
        <childnode refid="314487" relation="include">
        </childnode>
        <childnode refid="314490" relation="include">
        </childnode>
        <childnode refid="314491" relation="include">
        </childnode>
        <childnode refid="314492" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314493" relation="include">
        </childnode>
        <childnode refid="314494" relation="include">
        </childnode>
        <childnode refid="314495" relation="include">
        </childnode>
      </node>
      <node id="314531">
        <label>xAODTrigger/MuonRoIContainer.h</label>
        <link refid="db/d4a/MuonRoIContainer_8h_source"/>
        <childnode refid="314529" relation="include">
        </childnode>
        <childnode refid="314532" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314323">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314446">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="314441" relation="include">
        </childnode>
        <childnode refid="314369" relation="include">
        </childnode>
        <childnode refid="314368" relation="include">
        </childnode>
        <childnode refid="314447" relation="include">
        </childnode>
      </node>
      <node id="314555">
        <label>TrigSteeringEvent/TrigPassBitsCollection.h</label>
        <link refid="d4/de2/TrigPassBitsCollection_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
        <childnode refid="314554" relation="include">
        </childnode>
      </node>
      <node id="314537">
        <label>xAODTrigger/versions/JetRoIContainer_v1.h</label>
        <link refid="de/d43/JetRoIContainer__v1_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314534" relation="include">
        </childnode>
      </node>
      <node id="314357">
        <label>boost/variant.hpp</label>
      </node>
      <node id="314332">
        <label>fstream</label>
      </node>
      <node id="314504">
        <label>AthenaKernel/getMessageSvc.h</label>
      </node>
      <node id="314498">
        <label>AsgTools/Check.h</label>
        <link refid="da/d02/Check_8h_source"/>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314499" relation="include">
        </childnode>
      </node>
      <node id="314413">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="314566">
        <label>ostream</label>
      </node>
      <node id="314395">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="314442">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="314424" relation="include">
        </childnode>
        <childnode refid="314379" relation="include">
        </childnode>
        <childnode refid="314373" relation="include">
        </childnode>
        <childnode refid="314443" relation="include">
        </childnode>
      </node>
      <node id="314339">
        <label>TrigConfL1Data/TriggerItem.h</label>
        <link refid="dc/d13/TriggerItem_8h_source"/>
        <childnode refid="314340" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314344" relation="include">
        </childnode>
        <childnode refid="314345" relation="include">
        </childnode>
      </node>
      <node id="314337">
        <label>TrigConfHLTData/HLTUtils.h</label>
        <link refid="d8/d48/HLTUtils_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314338" relation="include">
        </childnode>
        <childnode refid="314333" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
      </node>
      <node id="314503">
        <label>TrigDecisionTool/Logger.h</label>
        <link refid="dd/da4/Logger_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314504" relation="include">
        </childnode>
        <childnode refid="314505" relation="include">
        </childnode>
      </node>
      <node id="314501">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="314362">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="314379">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="314380" relation="include">
        </childnode>
        <childnode refid="314381" relation="include">
        </childnode>
      </node>
      <node id="314411">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="314404">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="314487">
        <label>TrigConfL1Data/BunchGroupSet.h</label>
        <link refid="d8/de0/BunchGroupSet_8h_source"/>
        <childnode refid="314488" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314338" relation="include">
        </childnode>
        <childnode refid="314489" relation="include">
        </childnode>
      </node>
      <node id="314440">
        <label>limits.h</label>
      </node>
      <node id="314422">
        <label>xAODTrigger/versions/TrigCompositeContainer_v1.h</label>
        <link refid="d4/db2/TrigCompositeContainer__v1_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314360" relation="include">
        </childnode>
      </node>
      <node id="314533">
        <label>xAODTrigger/JetRoI.h</label>
        <link refid="df/dd4/JetRoI_8h_source"/>
        <childnode refid="314534" relation="include">
        </childnode>
        <childnode refid="314535" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314336">
        <label>TrigConfHLTData/HLTTriggerElement.h</label>
        <link refid="dc/d9c/HLTTriggerElement_8h_source"/>
        <childnode refid="314323" relation="include">
        </childnode>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314332" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
      </node>
      <node id="314491">
        <label>TrigConfL1Data/DeadTime.h</label>
        <link refid="df/dcb/DeadTime_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314356">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314357" relation="include">
        </childnode>
      </node>
      <node id="314434">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="314435" relation="include">
        </childnode>
      </node>
      <node id="314571">
        <label>xAODTrigger/RoiDescriptorStore.h</label>
        <link refid="de/d31/RoiDescriptorStore_8h_source"/>
        <childnode refid="314572" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314559">
        <label>AnalysisTriggerEvent/EmTau_ROI.h</label>
      </node>
      <node id="314563">
        <label>AnalysisTriggerEvent/LVL1_ROI.h</label>
      </node>
      <node id="314390">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="314391" relation="include">
        </childnode>
        <childnode refid="314319" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314393" relation="include">
        </childnode>
      </node>
      <node id="314364">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314366" relation="include">
        </childnode>
      </node>
      <node id="314358">
        <label>xAODTrigger/TrigCompositeContainer.h</label>
        <link refid="d9/da1/TrigCompositeContainer_8h_source"/>
        <childnode refid="314359" relation="include">
        </childnode>
        <childnode refid="314422" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314420">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
      </node>
      <node id="314482">
        <label>TrigConfL1Data/ThresholdMonitor.h</label>
        <link refid="de/dce/ThresholdMonitor_8h_source"/>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
      </node>
      <node id="314367">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="314368" relation="include">
        </childnode>
        <childnode refid="314329" relation="include">
        </childnode>
        <childnode refid="314369" relation="include">
        </childnode>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314370" relation="include">
        </childnode>
        <childnode refid="314371" relation="include">
        </childnode>
        <childnode refid="314319" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314372" relation="include">
        </childnode>
      </node>
      <node id="314526">
        <label>xAODTrigger/EmTauRoIContainer.h</label>
        <link refid="d0/dc6/EmTauRoIContainer_8h_source"/>
        <childnode refid="314522" relation="include">
        </childnode>
        <childnode refid="314527" relation="include">
        </childnode>
        <childnode refid="314528" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314427">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="314418" relation="include">
        </childnode>
      </node>
      <node id="314541">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="314542" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314543" relation="include">
        </childnode>
        <childnode refid="314376" relation="include">
        </childnode>
      </node>
      <node id="314484">
        <label>TrigConfL1Data/TIP.h</label>
        <link refid="d9/dd3/TIP_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314543">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
      </node>
      <node id="314489">
        <label>sys/types.h</label>
      </node>
      <node id="314326">
        <label>TrigConfHLTData/HLTPrescale.h</label>
        <link refid="df/da4/HLTPrescale_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314329" relation="include">
        </childnode>
        <childnode refid="314323" relation="include">
        </childnode>
        <childnode refid="314330" relation="include">
        </childnode>
      </node>
      <node id="314553">
        <label>TrigDecisionTool/ClassTraits.h</label>
        <link refid="d8/da0/ClassTraits_8h_source"/>
      </node>
      <node id="314443">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="314439" relation="include">
        </childnode>
        <childnode refid="314427" relation="include">
        </childnode>
      </node>
      <node id="314497">
        <label>AsgTools/StatusCode.h</label>
        <link refid="d4/d5c/AsgTools_2AsgTools_2StatusCode_8h_source"/>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314498" relation="include">
        </childnode>
        <childnode refid="314502" relation="include">
        </childnode>
      </node>
      <node id="314479">
        <label>TrigConfL1Data/CaloSinCos.h</label>
        <link refid="d0/da4/CaloSinCos_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314384">
        <label>typeinfo</label>
      </node>
      <node id="314547">
        <label>TrigNavStructure/TrigHolderStructure.h</label>
        <link refid="df/ded/TrigHolderStructure_8h_source"/>
        <childnode refid="314373" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314357" relation="include">
        </childnode>
        <childnode refid="314506" relation="include">
        </childnode>
        <childnode refid="314356" relation="include">
        </childnode>
        <childnode refid="314546" relation="include">
        </childnode>
        <childnode refid="314521" relation="include">
        </childnode>
      </node>
      <node id="314417">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="314412" relation="include">
        </childnode>
        <childnode refid="314418" relation="include">
        </childnode>
      </node>
      <node id="314423">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="314415" relation="include">
        </childnode>
        <childnode refid="314424" relation="include">
        </childnode>
        <childnode refid="314425" relation="include">
        </childnode>
        <childnode refid="314426" relation="include">
        </childnode>
        <childnode refid="314432" relation="include">
        </childnode>
        <childnode refid="314433" relation="include">
        </childnode>
        <childnode refid="314439" relation="include">
        </childnode>
        <childnode refid="314441" relation="include">
        </childnode>
        <childnode refid="314445" relation="include">
        </childnode>
        <childnode refid="314446" relation="include">
        </childnode>
        <childnode refid="314442" relation="include">
        </childnode>
        <childnode refid="314448" relation="include">
        </childnode>
        <childnode refid="314379" relation="include">
        </childnode>
        <childnode refid="314449" relation="include">
        </childnode>
        <childnode refid="314450" relation="include">
        </childnode>
        <childnode refid="314444" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
        <childnode refid="314374" relation="include">
        </childnode>
        <childnode refid="314345" relation="include">
        </childnode>
        <childnode refid="314368" relation="include">
        </childnode>
        <childnode refid="314344" relation="include">
        </childnode>
        <childnode refid="314369" relation="include">
        </childnode>
        <childnode refid="314376" relation="include">
        </childnode>
        <childnode refid="314451" relation="include">
        </childnode>
        <childnode refid="314453" relation="include">
        </childnode>
        <childnode refid="314457" relation="include">
        </childnode>
        <childnode refid="314458" relation="include">
        </childnode>
      </node>
      <node id="314393">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="314421">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="314410">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="314521">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314345" relation="include">
        </childnode>
        <childnode refid="314356" relation="include">
        </childnode>
      </node>
      <node id="314568">
        <label>IRegionSelector/IRoiDescriptor.h</label>
        <link refid="d3/d80/IRoiDescriptor_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314345" relation="include">
        </childnode>
      </node>
      <node id="314499">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314500" relation="include">
        </childnode>
        <childnode refid="314351" relation="include">
        </childnode>
      </node>
      <node id="314525">
        <label>xAODTrigger/versions/EmTauRoI_v2.h</label>
        <link refid="da/d90/EmTauRoI__v2_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
      </node>
      <node id="314378">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
      </node>
      <node id="314466">
        <label>TrigConfHLTData/HLTChainList.h</label>
        <link refid="d5/db5/HLTChainList_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314322" relation="include">
        </childnode>
        <childnode refid="314330" relation="include">
        </childnode>
        <childnode refid="314467" relation="include">
        </childnode>
        <childnode refid="314468" relation="include">
        </childnode>
        <childnode refid="314469" relation="include">
        </childnode>
        <childnode refid="314470" relation="include">
        </childnode>
        <childnode refid="314471" relation="include">
        </childnode>
        <childnode refid="314472" relation="include">
        </childnode>
      </node>
      <node id="314392">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="314397">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="314330">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="314561">
        <label>AnalysisTriggerEvent/JetET_ROI.h</label>
      </node>
      <node id="314433">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="314434" relation="include">
        </childnode>
        <childnode refid="314426" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314372" relation="include">
        </childnode>
        <childnode refid="314436" relation="include">
        </childnode>
        <childnode refid="314396" relation="include">
        </childnode>
        <childnode refid="314437" relation="include">
        </childnode>
      </node>
      <node id="314354">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="314355">
        <label>TrigNavStructure/ComboIterator.h</label>
        <link refid="da/da2/ComboIterator_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314333" relation="include">
        </childnode>
        <childnode refid="314356" relation="include">
        </childnode>
      </node>
      <node id="314451">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="314452" relation="include">
        </childnode>
      </node>
      <node id="314382">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="314364" relation="include">
        </childnode>
        <childnode refid="314383" relation="include">
        </childnode>
        <childnode refid="314385" relation="include">
        </childnode>
        <childnode refid="314386" relation="include">
        </childnode>
        <childnode refid="314399" relation="include">
        </childnode>
        <childnode refid="314401" relation="include">
        </childnode>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314407" relation="include">
        </childnode>
        <childnode refid="314408" relation="include">
        </childnode>
      </node>
      <node id="314557">
        <label>TrigSteeringEvent/TrigPassFlagsCollection.h</label>
        <link refid="d4/dfd/TrigPassFlagsCollection_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
        <childnode refid="314556" relation="include">
        </childnode>
      </node>
      <node id="314462">
        <label>stack</label>
      </node>
      <node id="314328">
        <label>vector</label>
      </node>
      <node id="314548">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314541" relation="include">
        </childnode>
        <childnode refid="314354" relation="include">
        </childnode>
      </node>
      <node id="314459">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="314368" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
      </node>
      <node id="314513">
        <label>TrigDecisionTool/Conditions.h</label>
        <link refid="d7/ddc/TrigDecisionTool_2TrigDecisionTool_2Conditions_8h_source"/>
        <childnode refid="314514" relation="include">
        </childnode>
      </node>
      <node id="314512">
        <label>TrigDecisionTool/EventPtrDef.h</label>
        <link refid="d4/dfc/TrigDecisionTool_2TrigDecisionTool_2EventPtrDef_8h_source"/>
      </node>
      <node id="314359">
        <label>xAODTrigger/TrigComposite.h</label>
        <link refid="d9/dd8/TrigComposite_8h_source"/>
        <childnode refid="314360" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314538">
        <label>xAODTrigger/versions/JetRoIContainer_v2.h</label>
        <link refid="d5/d14/JetRoIContainer__v2_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314535" relation="include">
        </childnode>
      </node>
      <node id="314352">
        <label>TrigSteeringEvent/Lvl1Item.h</label>
        <link refid="d9/dbe/Lvl1Item_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314496">
        <label>TrigDecisionTool/IDecisionUnpacker.h</label>
        <link refid="d1/de0/IDecisionUnpacker_8h_source"/>
        <childnode refid="314497" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314564">
        <label>TrigDecisionTool/FeatureCollectStandalone.h</label>
        <link refid="d9/d17/FeatureCollectStandalone_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314333" relation="include">
        </childnode>
        <childnode refid="314321" relation="include">
        </childnode>
        <childnode refid="314516" relation="include">
        </childnode>
        <childnode refid="314519" relation="include">
        </childnode>
        <childnode refid="314520" relation="include">
        </childnode>
        <childnode refid="314513" relation="include">
        </childnode>
        <childnode refid="314552" relation="include">
        </childnode>
        <childnode refid="314518" relation="include">
        </childnode>
        <childnode refid="314554" relation="include">
        </childnode>
        <childnode refid="314555" relation="include">
        </childnode>
        <childnode refid="314565" relation="include">
        </childnode>
        <childnode refid="314570" relation="include">
        </childnode>
        <childnode refid="314571" relation="include">
        </childnode>
        <childnode refid="314539" relation="include">
        </childnode>
        <childnode refid="314512" relation="include">
        </childnode>
        <childnode refid="314544" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314498" relation="include">
        </childnode>
        <childnode refid="314573" relation="include">
        </childnode>
      </node>
      <node id="314460">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="314461">
        <label>TrigDecisionTool/ChainGroup.h</label>
        <link refid="d2/dd8/ChainGroup_8h_source"/>
        <childnode refid="314369" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314333" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314462" relation="include">
        </childnode>
        <childnode refid="314463" relation="include">
        </childnode>
        <childnode refid="314464" relation="include">
        </childnode>
        <childnode refid="314513" relation="include">
        </childnode>
        <childnode refid="314515" relation="include">
        </childnode>
        <childnode refid="314503" relation="include">
        </childnode>
        <childnode refid="314348" relation="include">
        </childnode>
      </node>
      <node id="314329">
        <label>utility</label>
      </node>
      <node id="314457">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="314394">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="314508">
        <label>sstream</label>
      </node>
      <node id="314469">
        <label>boost/multi_index/hashed_index.hpp</label>
      </node>
      <node id="314431">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="314402">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="314387">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="314401">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="314402" relation="include">
        </childnode>
        <childnode refid="314403" relation="include">
        </childnode>
        <childnode refid="314404" relation="include">
        </childnode>
        <childnode refid="314405" relation="include">
        </childnode>
        <childnode refid="314406" relation="include">
        </childnode>
      </node>
      <node id="314486">
        <label>TrigConfL1Data/PrescaleSet.h</label>
        <link refid="d9/d6a/PrescaleSet_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
      </node>
      <node id="314472">
        <label>boost/multi_index/composite_key.hpp</label>
      </node>
      <node id="314324">
        <label>iosfwd</label>
      </node>
      <node id="314370">
        <label>cstdlib</label>
      </node>
      <node id="314334">
        <label>TrigConfHLTData/HLTStreamTag.h</label>
        <link refid="d4/d5f/HLTStreamTag_8h_source"/>
        <childnode refid="314323" relation="include">
        </childnode>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314332" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314572">
        <label>xAODTrigger/versions/RoiDescriptorStore_v1.h</label>
        <link refid="d6/dac/RoiDescriptorStore__v1_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
      </node>
      <node id="314416">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="314345">
        <label>iostream</label>
      </node>
      <node id="314346">
        <label>TrigSteeringEvent/Chain.h</label>
        <link refid="de/da4/Chain_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314345" relation="include">
        </childnode>
        <childnode refid="314347" relation="include">
        </childnode>
        <childnode refid="314348" relation="include">
        </childnode>
        <childnode refid="314322" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314350" relation="include">
        </childnode>
        <childnode refid="314351" relation="include">
        </childnode>
        <childnode refid="314324" relation="include">
        </childnode>
      </node>
      <node id="314575">
        <label>TrigNavStructure/TypelessHolder.h</label>
        <link refid="df/d30/TypelessHolder_8h_source"/>
        <childnode refid="314546" relation="include">
        </childnode>
      </node>
      <node id="314363">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="314364" relation="include">
        </childnode>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314354" relation="include">
        </childnode>
      </node>
      <node id="314365">
        <label>cstddef</label>
      </node>
      <node id="314540">
        <label>TrigStorageDefinitions/EDM_TypeInfo.h</label>
      </node>
      <node id="314475">
        <label>TrigConfL1Data/ThresholdConfig.h</label>
        <link refid="d5/da1/ThresholdConfig_8h_source"/>
        <childnode refid="314476" relation="include">
        </childnode>
        <childnode refid="314478" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314341" relation="include">
        </childnode>
      </node>
      <node id="314465">
        <label>unordered_map</label>
      </node>
      <node id="314350">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="314507">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314508" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314500" relation="include">
        </childnode>
        <childnode refid="314509" relation="include">
        </childnode>
        <childnode refid="314350" relation="include">
        </childnode>
      </node>
      <node id="314467">
        <label>boost/multi_index_container.hpp</label>
      </node>
      <node id="314551">
        <label>TrigNavigation/NavigationCore.icc</label>
      </node>
      <node id="314414">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="314382" relation="include">
        </childnode>
        <childnode refid="314375" relation="include">
        </childnode>
        <childnode refid="314363" relation="include">
        </childnode>
        <childnode refid="314412" relation="include">
        </childnode>
        <childnode refid="314413" relation="include">
        </childnode>
      </node>
      <node id="314510">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="314524">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="314376" relation="include">
        </childnode>
      </node>
      <node id="314348">
        <label>TrigSteeringEvent/Enums.h</label>
        <link refid="d5/d69/TrigSteeringEvent_2TrigSteeringEvent_2Enums_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
      </node>
      <node id="314335">
        <label>TrigConfHLTData/HLTSignature.h</label>
        <link refid="d7/d7c/HLTSignature_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314332" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
      </node>
      <node id="314562">
        <label>AnalysisTriggerEvent/EnergySum_ROI.h</label>
      </node>
      <node id="314481">
        <label>TrigConfL1Data/IsolationParam.h</label>
        <link refid="d3/d5c/IsolationParam_8h_source"/>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314494">
        <label>TrigConfL1Data/PrioritySet.h</label>
        <link refid="d1/df8/PrioritySet_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314522">
        <label>xAODTrigger/EmTauRoI.h</label>
        <link refid="de/d30/EmTauRoI_8h_source"/>
        <childnode refid="314523" relation="include">
        </childnode>
        <childnode refid="314525" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
      </node>
      <node id="314560">
        <label>AnalysisTriggerEvent/Jet_ROI.h</label>
      </node>
      <node id="314437">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="314424" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314438" relation="include">
        </childnode>
        <childnode refid="314418" relation="include">
        </childnode>
        <childnode refid="314370" relation="include">
        </childnode>
        <childnode refid="314376" relation="include">
        </childnode>
      </node>
      <node id="314386">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="314383" relation="include">
        </childnode>
        <childnode refid="314387" relation="include">
        </childnode>
        <childnode refid="314388" relation="include">
        </childnode>
        <childnode refid="314389" relation="include">
        </childnode>
        <childnode refid="314394" relation="include">
        </childnode>
        <childnode refid="314384" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314368" relation="include">
        </childnode>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314396" relation="include">
        </childnode>
        <childnode refid="314397" relation="include">
        </childnode>
        <childnode refid="314398" relation="include">
        </childnode>
      </node>
      <node id="314523">
        <label>xAODTrigger/versions/EmTauRoI_v1.h</label>
        <link refid="dc/d06/EmTauRoI__v1_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
      </node>
      <node id="314360">
        <label>xAODTrigger/versions/TrigComposite_v1.h</label>
        <link refid="da/d57/TrigComposite__v1_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314419" relation="include">
        </childnode>
      </node>
      <node id="314556">
        <label>TrigSteeringEvent/TrigPassFlags.h</label>
        <link refid="d5/d12/TrigPassFlags_8h_source"/>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314368" relation="include">
        </childnode>
        <childnode refid="314344" relation="include">
        </childnode>
        <childnode refid="314353" relation="include">
        </childnode>
        <childnode refid="314557" relation="include">
        </childnode>
      </node>
      <node id="314490">
        <label>TrigConfL1Data/PrescaledClock.h</label>
        <link refid="d2/d63/PrescaledClock_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314320">
        <label>boost/regex.hpp</label>
      </node>
      <node id="314493">
        <label>TrigConfL1Data/CTPFiles.h</label>
        <link refid="db/d43/CTPFiles_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314338" relation="include">
        </childnode>
        <childnode refid="314489" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314506">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314349" relation="include">
        </childnode>
        <childnode refid="314507" relation="include">
        </childnode>
        <childnode refid="314499" relation="include">
        </childnode>
      </node>
      <node id="314502">
        <label>GaudiKernel/StatusCode.h</label>
      </node>
      <node id="314464">
        <label>TrigDecisionTool/CacheGlobalMemory.h</label>
        <link refid="df/d4a/CacheGlobalMemory_8h_source"/>
        <childnode refid="314369" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314438" relation="include">
        </childnode>
        <childnode refid="314333" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314321" relation="include">
        </childnode>
        <childnode refid="314465" relation="include">
        </childnode>
        <childnode refid="314322" relation="include">
        </childnode>
        <childnode refid="314466" relation="include">
        </childnode>
        <childnode refid="314334" relation="include">
        </childnode>
        <childnode refid="314473" relation="include">
        </childnode>
        <childnode refid="314346" relation="include">
        </childnode>
        <childnode refid="314358" relation="include">
        </childnode>
        <childnode refid="314496" relation="include">
        </childnode>
        <childnode refid="314503" relation="include">
        </childnode>
        <childnode refid="314506" relation="include">
        </childnode>
        <childnode refid="314512" relation="include">
        </childnode>
      </node>
      <node id="314341">
        <label>TrigConfL1Data/L1DataDef.h</label>
        <link refid="da/d67/L1DataDef_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
      </node>
      <node id="314396">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="314426">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="314409" relation="include">
        </childnode>
        <childnode refid="314424" relation="include">
        </childnode>
        <childnode refid="314425" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314382" relation="include">
        </childnode>
        <childnode refid="314415" relation="include">
        </childnode>
        <childnode refid="314427" relation="include">
        </childnode>
        <childnode refid="314375" relation="include">
        </childnode>
        <childnode refid="314428" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314431" relation="include">
        </childnode>
      </node>
      <node id="314574">
        <label>type_traits</label>
      </node>
      <node id="314527">
        <label>xAODTrigger/versions/EmTauRoIContainer_v1.h</label>
        <link refid="db/d0a/EmTauRoIContainer__v1_8h_source"/>
        <childnode refid="314423" relation="include">
        </childnode>
        <childnode refid="314523" relation="include">
        </childnode>
      </node>
      <node id="314333">
        <label>set</label>
      </node>
      <node id="314353">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="314354" relation="include">
        </childnode>
      </node>
      <node id="314488">
        <label>TrigConfL1Data/BunchGroup.h</label>
        <link refid="d9/dfe/BunchGroup_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314400">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="314476">
        <label>TrigConfL1Data/TriggerThreshold.h</label>
        <link refid="d1/de2/TriggerThreshold_8h_source"/>
        <childnode refid="314477" relation="include">
        </childnode>
        <childnode refid="314341" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314345" relation="include">
        </childnode>
      </node>
      <node id="314389">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="314387" relation="include">
        </childnode>
        <childnode refid="314390" relation="include">
        </childnode>
        <childnode refid="314394" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314395" relation="include">
        </childnode>
      </node>
      <node id="314368">
        <label>algorithm</label>
      </node>
      <node id="314448">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="314361">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="314362" relation="include">
        </childnode>
        <childnode refid="314363" relation="include">
        </childnode>
        <childnode refid="314375" relation="include">
        </childnode>
        <childnode refid="314377" relation="include">
        </childnode>
        <childnode refid="314382" relation="include">
        </childnode>
        <childnode refid="314409" relation="include">
        </childnode>
        <childnode refid="314388" relation="include">
        </childnode>
        <childnode refid="314415" relation="include">
        </childnode>
        <childnode refid="314412" relation="include">
        </childnode>
        <childnode refid="314365" relation="include">
        </childnode>
        <childnode refid="314417" relation="include">
        </childnode>
      </node>
      <node id="314485">
        <label>boost/multi_index/sequenced_index.hpp</label>
      </node>
      <node id="314518">
        <label>TrigDecisionTool/Feature.h</label>
        <link refid="dc/d2f/Feature_8h_source"/>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314333" relation="include">
        </childnode>
        <childnode refid="314321" relation="include">
        </childnode>
        <childnode refid="314516" relation="include">
        </childnode>
        <childnode refid="314519" relation="include">
        </childnode>
        <childnode refid="314520" relation="include">
        </childnode>
        <childnode refid="314507" relation="include">
        </childnode>
        <childnode refid="314521" relation="include">
        </childnode>
        <childnode refid="314522" relation="include">
        </childnode>
        <childnode refid="314526" relation="include">
        </childnode>
        <childnode refid="314529" relation="include">
        </childnode>
        <childnode refid="314531" relation="include">
        </childnode>
        <childnode refid="314533" relation="include">
        </childnode>
        <childnode refid="314536" relation="include">
        </childnode>
        <childnode refid="314539" relation="include">
        </childnode>
        <childnode refid="314540" relation="include">
        </childnode>
        <childnode refid="314541" relation="include">
        </childnode>
      </node>
      <node id="314377">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314378" relation="include">
        </childnode>
        <childnode refid="314379" relation="include">
        </childnode>
      </node>
      <node id="314445">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="314441" relation="include">
        </childnode>
        <childnode refid="314427" relation="include">
        </childnode>
        <childnode refid="314369" relation="include">
        </childnode>
      </node>
      <node id="314468">
        <label>boost/multi_index/mem_fun.hpp</label>
      </node>
      <node id="314424">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="314419">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314420" relation="include">
        </childnode>
        <childnode refid="314379" relation="include">
        </childnode>
        <childnode refid="314421" relation="include">
        </childnode>
      </node>
      <node id="314492">
        <label>TrigConfL1Data/Random.h</label>
        <link refid="dd/d6d/Random_8h_source"/>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314343" relation="include">
        </childnode>
      </node>
      <node id="314471">
        <label>boost/multi_index/random_access_index.hpp</label>
      </node>
      <node id="314530">
        <label>xAODTrigger/versions/MuonRoI_v1.h</label>
        <link refid="dd/d82/MuonRoI__v1_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
      </node>
      <node id="314435">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="314450">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="314373">
        <label>memory</label>
      </node>
      <node id="314474">
        <label>TrigConfL1Data/Menu.h</label>
        <link refid="df/dde/Menu_8h_source"/>
        <childnode refid="314343" relation="include">
        </childnode>
        <childnode refid="314339" relation="include">
        </childnode>
        <childnode refid="314475" relation="include">
        </childnode>
        <childnode refid="314482" relation="include">
        </childnode>
        <childnode refid="314483" relation="include">
        </childnode>
        <childnode refid="314484" relation="include">
        </childnode>
        <childnode refid="314467" relation="include">
        </childnode>
        <childnode refid="314468" relation="include">
        </childnode>
        <childnode refid="314469" relation="include">
        </childnode>
        <childnode refid="314470" relation="include">
        </childnode>
        <childnode refid="314485" relation="include">
        </childnode>
        <childnode refid="314471" relation="include">
        </childnode>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
      <node id="314338">
        <label>inttypes.h</label>
      </node>
      <node id="314322">
        <label>TrigConfHLTData/HLTChain.h</label>
        <link refid="d4/d72/HLTChain_8h_source"/>
        <childnode refid="314323" relation="include">
        </childnode>
        <childnode refid="314326" relation="include">
        </childnode>
        <childnode refid="314331" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314324" relation="include">
        </childnode>
        <childnode refid="314332" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314327" relation="include">
        </childnode>
        <childnode refid="314333" relation="include">
        </childnode>
        <childnode refid="314330" relation="include">
        </childnode>
      </node>
      <node id="314399">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="314385" relation="include">
        </childnode>
        <childnode refid="314386" relation="include">
        </childnode>
        <childnode refid="314400" relation="include">
        </childnode>
      </node>
      <node id="314516">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
      <node id="314534">
        <label>xAODTrigger/versions/JetRoI_v1.h</label>
        <link refid="d9/d95/JetRoI__v1_8h_source"/>
        <childnode refid="314342" relation="include">
        </childnode>
        <childnode refid="314328" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
        <childnode refid="314361" relation="include">
        </childnode>
        <childnode refid="314524" relation="include">
        </childnode>
      </node>
      <node id="314428">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="314362" relation="include">
        </childnode>
        <childnode refid="314375" relation="include">
        </childnode>
        <childnode refid="314363" relation="include">
        </childnode>
        <childnode refid="314396" relation="include">
        </childnode>
        <childnode refid="314429" relation="include">
        </childnode>
        <childnode refid="314430" relation="include">
        </childnode>
        <childnode refid="314325" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="df/d28/namespaceChainGroup__impl">ChainGroup_impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@Project:<sp/>TrigDecisionTool</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@Package:<sp/>TrigDecisionTool</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>@Class<sp/><sp/>:<sp/>ChainGroup</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>@brief<sp/>simple<sp/>container<sp/>to<sp/>hold<sp/>trigger<sp/>chains</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>@author<sp/>Michael<sp/>Begel<sp/><sp/>&lt;michael.begel@cern.ch&gt;<sp/>-<sp/>Brookhaven<sp/>National<sp/>Laboratory</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@author<sp/>Alexander<sp/>Mann<sp/><sp/>&lt;mann@cern.ch&gt;<sp/>-<sp/>University<sp/>of<sp/>Goettingen</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>***********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/regex.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/foreach.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTChain.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTStreamTag.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTSignature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTTriggerElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/TriggerItem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/TriggerItemNode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/Chain.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/Lvl1Item.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/ComboIterator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigger/TrigCompositeContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionTool/ChainGroup.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionTool/TDTUtilities.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionTool/Logger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">Trig::ChainGroup::ChainGroup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;&amp;<sp/>triggerNames,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/df9/classTrig_1_1CacheGlobalMemory" kindref="compound">Trig::CacheGlobalMemory</ref>&amp;<sp/><sp/>parent)<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>m_patterns(triggerNames),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>m_cgm(parent),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>m_prescale(0.)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">Trig::ChainGroup</ref>&amp;<sp/>Trig::ChainGroup::operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">Trig::ChainGroup</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>v.resize(patterns().size()+rhs.patterns().size());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>merge(patterns().begin(),patterns().end(),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>(rhs.patterns()).begin(),(rhs.patterns()).end(),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>v.begin());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="d2/df9/classTrig_1_1CacheGlobalMemory" kindref="compound">Trig::CacheGlobalMemory</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cgm())-&gt;createChainGroup(v));</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d43/DataList_8h_1a2f4af3db6bca5dc8d962d673635f0865" kindref="member" tooltip="List equality comparison.">Trig::ChainGroup::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">Trig::ChainGroup</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v1=<ref refid="d2/d87/namespaceTrig_1a6ca77302aef6d33ad12b0ba1ccb3b0ed" kindref="member" tooltip="normalizes the list of triggers (patterns) by sorting and uniquing them">Trig::keyWrap</ref>(names());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v2=<ref refid="d2/d87/namespaceTrig_1a6ca77302aef6d33ad12b0ba1ccb3b0ed" kindref="member" tooltip="normalizes the list of triggers (patterns) by sorting and uniquing them">Trig::keyWrap</ref>(rhs.names());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v1==v2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Trig::ChainGroup::operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">Trig::ChainGroup</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v1=<ref refid="d2/d87/namespaceTrig_1a6ca77302aef6d33ad12b0ba1ccb3b0ed" kindref="member" tooltip="normalizes the list of triggers (patterns) by sorting and uniquing them">Trig::keyWrap</ref>(names());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v2=<ref refid="d2/d87/namespaceTrig_1a6ca77302aef6d33ad12b0ba1ccb3b0ed" kindref="member" tooltip="normalizes the list of triggers (patterns) by sorting and uniquing them">Trig::keyWrap</ref>(rhs.names());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v1!=v2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup_1a558938a3be8455589cb3f5443d99d21e" kindref="member" tooltip="adds alias (sort understandabel name) to the group">Trig::ChainGroup::addAlias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>alias)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="d2/df9/classTrig_1_1CacheGlobalMemory" kindref="compound">Trig::CacheGlobalMemory</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cgm(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))-&gt;createChainGroup(patterns(),alias);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/df9/classTrig_1_1CacheGlobalMemory" kindref="compound">Trig::CacheGlobalMemory</ref>*<sp/>Trig::ChainGroup::cgm(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyConfig)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!onlyConfig<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="d2/df9/classTrig_1_1CacheGlobalMemory" kindref="compound">Trig::CacheGlobalMemory</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;m_cgm)-&gt;assert_decision();<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_cgm;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Trig::ChainGroup::HLTResult(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>chain,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chainRESULT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chainRESULT;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d69/classHLT_1_1Chain" kindref="compound">HLT::Chain</ref>*<sp/>fchain=cgm()-&gt;chain(chain);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chainRESULT;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RAW<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fchain-&gt;chainPassedRaw();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PASSTHROUGH<sp/>=<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1af55bd3883d21a041953b82fe7e747dc1" kindref="member" tooltip="is chain passed through ?">isPassedThrough</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PRESCALED<sp/><sp/><sp/>=<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a608f970eae2722295e59e4ab2b7b1094" kindref="member" tooltip="is chain prescaled ?">isPrescaled</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RESURRECTED<sp/>=<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a7325feca53db88e84812d51f2f3ae240" kindref="member" tooltip="is chain resurrected ?">isResurrected</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Resurrection<sp/>overwrites<sp/>the<sp/>value<sp/>in<sp/>RAW<sp/>but<sp/>sets<sp/>the<sp/>RESURRECTED<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>therefore<sp/>fix<sp/>RAW<sp/>appropriately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(~condition<sp/>&amp;<sp/>TrigDefs::allowResurrectedDecision)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RESURRECTED)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RAW=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>accept<sp/>the<sp/>result?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>&amp;<sp/>TrigDefs::passedThrough)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PASSTHROUGH)<sp/>{chainRESULT=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>&amp;<sp/>TrigDefs::requireDecision)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RAW<sp/>&amp;&amp;<sp/>!PRESCALED)<sp/>{chainRESULT=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>condition<sp/>&amp;<sp/>TrigDefs::allowResurrectedDecision<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>prescaling<sp/>does<sp/>not<sp/>matter<sp/>for<sp/>RR<sp/>(it<sp/>runs<sp/>in<sp/>fact<sp/>because<sp/>of<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RAW)<sp/>{chainRESULT=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>respects<sp/>resurrection<sp/>--<sp/>is<sp/>this<sp/>the<sp/>appropriate<sp/>behavior???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>&amp;<sp/>TrigDefs::eventAccepted)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(RAW<sp/><sp/>&amp;&amp;<sp/>!PRESCALED)<sp/>||<sp/><sp/>PASSTHROUGH)<sp/>{chainRESULT=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;ChainGroup::HLTResult<sp/>Counter<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(4)<sp/>&lt;&lt;<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a2372b9186552e884733b2b912264e141" kindref="member" tooltip="return the unique identifier of this Chain (uint)">getChainCounter</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>name<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1acdbc0323df337e118da7be179786f99a" kindref="member" tooltip="return the Chain name (string)">getChainName</ref>()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>level<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a6b22c037cccd322c60de417eb5289db9" kindref="member" tooltip="get underlying ConfigChain">getConfigChain</ref>()-&gt;level()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>success<sp/>(raw)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fchain-&gt;chainPassedRaw()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>pass-through<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1af55bd3883d21a041953b82fe7e747dc1" kindref="member" tooltip="is chain passed through ?">isPassedThrough</ref>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prescaled<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a608f970eae2722295e59e4ab2b7b1094" kindref="member" tooltip="is chain prescaled ?">isPrescaled</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>rerun<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a7325feca53db88e84812d51f2f3ae240" kindref="member" tooltip="is chain resurrected ?">isResurrected</ref>()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lastActiveStep<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1af816039fc20f116a12e80e13f4dfbfa5" kindref="member" tooltip="return the current step of execution">getChainStep</ref>()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>name<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(35)<sp/>&lt;&lt;<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1acdbc0323df337e118da7be179786f99a" kindref="member" tooltip="return the Chain name (string)">getChainName</ref>()<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>result<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>chainRESULT);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chainRESULT;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>logic<sp/>fails<sp/>for<sp/>passthrough<sp/>especially<sp/>with<sp/>enforceLogicalFlow!!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Trig::ChainGroup::L1Result(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)!=std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>items<sp/>=<sp/><ref refid="d2/d87/namespaceTrig_1a1603ef3999da9799870e1bb433932ed1" kindref="member" tooltip="makes a split of list of chains into the vector of chains">convertStringToVector</ref>(item);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::iterator<sp/>itit<sp/>=<sp/>items.begin();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itit<sp/>!=<sp/>items.end();<sp/>++itit)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(L1Result(*itit,condition))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d40/classLVL1CTP_1_1Lvl1Item" kindref="compound">LVL1CTP::Lvl1Item</ref>*<sp/>fitem=cgm()-&gt;<ref refid="d2/df9/classTrig_1_1CacheGlobalMemory_1a64aa0dd11c90ad5a6972740b537ed29e" kindref="member" tooltip="CTP item from given name.">item</ref>(item);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitem==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;<sp/>success<sp/>(raw)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitem-&gt;isPassedBeforePrescale()</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prescaled<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitem-&gt;isPrescaled()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>vetoed<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fitem-&gt;isVeto()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>name<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(35)<sp/>&lt;&lt;<sp/>fitem-&gt;name());<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>r<sp/>=<sp/>fitem-&gt;isPassedAfterVeto();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>&amp;<sp/>TrigDefs::allowResurrectedDecision)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>fitem-&gt;isPassedBeforePrescale();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(condition<sp/>&amp;<sp/>TrigDefs::eventAccepted)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>r<sp/>=<sp/>fitem-&gt;isPassedAfterVeto();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>r<sp/>=<sp/>fitem-&gt;isPassedBeforePrescale();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">std::string<sp/>Trig::ChainGroup::getLowerName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/df4/classTrigConf_1_1HLTChain" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTChain</ref>*<sp/>cchain<sp/>=<sp/>cgm(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;config_chain(name);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cchain==0){</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;<sp/>Lower<sp/>chain<sp/>name<sp/>used<sp/>by:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>in<sp/>the<sp/>configuration<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;BAD<sp/>NAME&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cchain-&gt;lower_chain_name();</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup_1a0c27d19c5492658377af07b9a2dd7212" kindref="member" tooltip="tells if chain group passed">Trig::ChainGroup::isPassed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_DEBUG(&quot;<sp/>Got<sp/>CG<sp/>to<sp/>work<sp/>with<sp/>&quot;<sp/>&lt;&lt;<sp/>patterns());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_DEBUG(&quot;<sp/>Got<sp/>CG<sp/>to<sp/>work<sp/>with<sp/>&quot;<sp/>&lt;&lt;<sp/>names());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>ChainGroup::const_conf_chain_iterator<sp/>chIt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RESULT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chainRESULT;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>std::string<sp/>nexttwo;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>chIt<sp/>=<sp/>conf_chain_begin();<sp/>chIt<sp/>!=<sp/>conf_chain_end();<sp/>++chIt)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>chainRESULT=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>chainRESULT=HLTResult((*chIt)-&gt;chain_name(),condition);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chainRESULT<sp/>&amp;&amp;<sp/>(condition<sp/>&amp;<sp/>TrigDefs::enforceLogicalFlow))<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enforceLogicalFlow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;EF&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nexttwo=getLowerName((*chIt)-&gt;chain_name());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>&amp;&amp;<sp/>HLTResult(nexttwo,condition);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>&amp;&amp;<sp/>L1Result(getLowerName(nexttwo),condition);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;L2&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>&amp;&amp;<sp/>L1Result(getLowerName((*chIt)-&gt;chain_name()),condition);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;HLT&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>&amp;&amp;<sp/>L1Result(getLowerName((*chIt)-&gt;chain_name()),condition);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>||<sp/>chainRESULT;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>ChainGroup::const_conf_item_iterator<sp/>iIt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>iIt<sp/>=<sp/>conf_item_begin();<sp/>iIt<sp/>!=<sp/>conf_item_end();<sp/>++iIt)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>||<sp/>L1Result((*iIt)-&gt;name(),condition);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>==<sp/>TrigDefs::Express_passed)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>RESULT,<sp/>since<sp/>for<sp/>now<sp/>we<sp/>do<sp/>not<sp/>want<sp/>to<sp/>depend<sp/>on<sp/>the<sp/>upstream<sp/>result,<sp/>but<sp/>just<sp/>pick<sp/>it<sp/>up<sp/>from<sp/>the<sp/>ES<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TrigCompositeContainer</ref>*<sp/>expressCont<sp/>=<sp/>cgm()-&gt;expressStreamContainer();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expressCont<sp/>&amp;&amp;<sp/>expressCont-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/dd4/classxAOD_1_1TrigComposite__v1" kindref="compound">xAOD::TrigComposite</ref>*<sp/>expressStream<sp/>=<sp/>(*expressCont)[0];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expressStream)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//here<sp/>we<sp/>just<sp/>get<sp/>both<sp/>possible<sp/>L1<sp/>Items<sp/>and<sp/>HLT<sp/>Chains<sp/>instead<sp/>of<sp/>looping<sp/>over<sp/>each<sp/>one<sp/>separately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>triggers<sp/>=<sp/>getListOfTriggers();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>express_names<sp/>=<sp/>expressStream-&gt;<ref refid="de/dd4/classxAOD_1_1TrigComposite__v1_1afe2f743bef4477c0bc6f4cf26d2d8196" kindref="member" tooltip="Raw access to the persistent link names.">linkColNames</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>p1,<sp/>p2;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p1=triggers.begin();<sp/>p1!=triggers.end();<sp/>p1++)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p2=express_names.begin();<sp/>p2!=express_names.end();<sp/>++p2)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(*p1)<sp/>==<sp/>(*p2)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//essentially<sp/>implements<sp/>a<sp/>OR<sp/>across<sp/>all<sp/>triggers<sp/>in<sp/>the<sp/>CG<sp/>(as<sp/>is<sp/>done<sp/>upstream)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Express_passed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*p1)<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RESULT;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Trig::ChainGroup::HLTBits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>chain,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chainRESULT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chainRESULT;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d69/classHLT_1_1Chain" kindref="compound">HLT::Chain</ref>*<sp/>fchain<sp/>=<sp/>cgm()-&gt;chain(chain);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chainRESULT;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level==</highlight><highlight class="stringliteral">&quot;L2&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain-&gt;chainPassedRaw())<sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>|<sp/>TrigDefs::L2_passedRaw;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1af55bd3883d21a041953b82fe7e747dc1" kindref="member" tooltip="is chain passed through ?">isPassedThrough</ref>())<sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>|<sp/>TrigDefs::L2_passThrough;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a608f970eae2722295e59e4ab2b7b1094" kindref="member" tooltip="is chain prescaled ?">isPrescaled</ref>())<sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>|<sp/>TrigDefs::L2_prescaled;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a7325feca53db88e84812d51f2f3ae240" kindref="member" tooltip="is chain resurrected ?">isResurrected</ref>())<sp/><sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>|<sp/>TrigDefs::L2_resurrected;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//L2EF<sp/>merged<sp/>use<sp/>same<sp/>EF<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain-&gt;chainPassedRaw())<sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>|<sp/>TrigDefs::EF_passedRaw;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1af55bd3883d21a041953b82fe7e747dc1" kindref="member" tooltip="is chain passed through ?">isPassedThrough</ref>())<sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>|<sp/>TrigDefs::EF_passThrough;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a608f970eae2722295e59e4ab2b7b1094" kindref="member" tooltip="is chain prescaled ?">isPrescaled</ref>())<sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>|<sp/>TrigDefs::EF_prescaled;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a7325feca53db88e84812d51f2f3ae240" kindref="member" tooltip="is chain resurrected ?">isResurrected</ref>())<sp/><sp/><sp/>chainRESULT<sp/>=<sp/>chainRESULT<sp/>|<sp/>TrigDefs::EF_resurrected;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chainRESULT;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Trig::ChainGroup::L1Bits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>item)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)!=std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>items<sp/>=<sp/><ref refid="d2/d87/namespaceTrig_1a1603ef3999da9799870e1bb433932ed1" kindref="member" tooltip="makes a split of list of chains into the vector of chains">convertStringToVector</ref>(item);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::iterator<sp/>itit<sp/>=<sp/>items.begin();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itit<sp/>!=<sp/>items.end();<sp/>++itit)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>|=<sp/>L1Bits(*itit);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d40/classLVL1CTP_1_1Lvl1Item" kindref="compound">LVL1CTP::Lvl1Item</ref>*<sp/>fitem<sp/>=<sp/>cgm()-&gt;<ref refid="d2/df9/classTrig_1_1CacheGlobalMemory_1a64aa0dd11c90ad5a6972740b537ed29e" kindref="member" tooltip="CTP item from given name.">item</ref>(item);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitem==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitem-&gt;isPassedBeforePrescale())<sp/>r<sp/>=<sp/>r<sp/>|<sp/>TrigDefs::L1_isPassedBeforePrescale;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitem-&gt;isPassedAfterPrescale())<sp/><sp/>r<sp/>=<sp/>r<sp/>|<sp/>TrigDefs::L1_isPassedAfterPrescale;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitem-&gt;isPassedAfterVeto())<sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>|<sp/>TrigDefs::L1_isPassedAfterVeto;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup_1a3c2b6590dae4caa42d31c09ffa51f2d6" kindref="member" tooltip="returns bits (OR ed) of the chain group Meaning of the returned bits can be understood...">Trig::ChainGroup::isPassedBits</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>ChainGroup::const_conf_chain_iterator<sp/>chIt;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RESULT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>unsigned<sp/>int<sp/>chainRESULT=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>std::string<sp/>nexttwo;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>chIt<sp/>=<sp/>conf_chain_begin();<sp/>chIt<sp/>!=<sp/>conf_chain_end();<sp/>++chIt)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>|<sp/>HLTBits((*chIt)-&gt;chain_name(),(*chIt)-&gt;level());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;EF&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nexttwo=getLowerName((*chIt)-&gt;chain_name());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>|<sp/>HLTBits(nexttwo,</highlight><highlight class="stringliteral">&quot;L2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>|<sp/>L1Bits(getLowerName(nexttwo));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;L2&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>|<sp/>L1Bits(getLowerName((*chIt)-&gt;chain_name()));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;HLT&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>|<sp/>L1Bits(getLowerName((*chIt)-&gt;chain_name()));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>|<sp/>RESULT;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;After<sp/>looking<sp/>at<sp/>:&quot;<sp/>&lt;&lt;<sp/>(*chIt)-&gt;chain_name()<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>RESULT<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>ChainGroup::const_conf_item_iterator<sp/>iIt;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>iIt<sp/>=<sp/>conf_item_begin();<sp/>iIt<sp/>!=<sp/>conf_item_end();<sp/>++iIt)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>RESULT<sp/>=<sp/>RESULT<sp/>|<sp/>L1Bits((*iIt)-&gt;name());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;After<sp/>looking<sp/>at<sp/>:&quot;<sp/>&lt;&lt;<sp/>(*iIt)-&gt;name()<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>RESULT<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RESULT;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">HLT::ErrorCode</ref><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup_1a5c8be6004a9dd74c2633cb375742d8f3" kindref="member" tooltip="returns most severe error in the chains composing that chain group for L1 it is just...">Trig::ChainGroup::error</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">HLT::ErrorCode</ref><sp/>errorCode<sp/>=<sp/>HLT::OK;<sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>ChainGroup::const_conf_chain_iterator<sp/>chIt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>chIt<sp/>=<sp/>conf_chain_begin();<sp/>chIt<sp/>!=<sp/>conf_chain_end();<sp/>++chIt)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d69/classHLT_1_1Chain" kindref="compound">HLT::Chain</ref>*<sp/>fchain<sp/>=<sp/>cgm()-&gt;<ref refid="d2/df9/classTrig_1_1CacheGlobalMemory_1ade1e9ad5c461021cabfba34d8f8ef9f6" kindref="member" tooltip="HLT chain object from given name (0 pointer returned if no match).">chain</ref>((*chIt)-&gt;chain_name());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain==0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">HLT::ErrorCode</ref><sp/>ec<sp/>=<sp/>fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1ab38606ab6ae8c3a3484b3380c06e4126" kindref="member" tooltip="return this Chain&amp;#39;s most severe error code (from execution)">getErrorCode</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>errorCode<sp/>=<sp/>errorCode<sp/>&gt;<sp/>ec<sp/>?<sp/>errorCode<sp/>:<sp/>ec;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorCode;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Trig::ChainGroup::HLTPrescale(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>chain,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*condition*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/df4/classTrigConf_1_1HLTChain" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTChain</ref>*<sp/>fchain=cgm(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;config_chain(chain);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain==0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>error<sp/>condition,<sp/>we<sp/>always<sp/>need<sp/>configuration<sp/>of<sp/>the<sp/>chains<sp/>in<sp/>the<sp/>chaon<sp/>group!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Configuration<sp/>for<sp/>the<sp/>chain:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>chain<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>known&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;float&gt;::quiet_NaN();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>chainRESULT<sp/>=<sp/>fchain-&gt;prescale();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chainRESULT<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>chainRESULT<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chainRESULT;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Trig::ChainGroup::L1Prescale(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>item,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*condition*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)==std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TrigConf::TriggerItem</ref>*<sp/>fitem=cgm(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;<ref refid="d2/df9/classTrig_1_1CacheGlobalMemory_1aa6089aac34f1be3f14a0ee4b1bd9a451" kindref="member" tooltip="CTP config item from given name.">config_item</ref>(item);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitem==0)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Configuration<sp/>for<sp/>the<sp/>item:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>known&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;int&gt;::quiet_NaN();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can;t<sp/>access<sp/>the<sp/>prescale<sp/>value<sp/>because<sp/>this<sp/>information<sp/>doe<sp/>not<sp/>come<sp/>togehther<sp/>as<sp/>in<sp/>HLT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>go<sp/>to<sp/>the<sp/>cache<sp/>of<sp/>L1<sp/>items<sp/>and<sp/>get<sp/>it<sp/>from<sp/>there<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctpid<sp/>=<sp/>fitem-&gt;ctpId();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>itemprescale<sp/>=<sp/>cgm(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;<ref refid="d2/df9/classTrig_1_1CacheGlobalMemory_1a39f783b1feced8faf79718e303be8bad" kindref="member" tooltip="Prescale for CPT item.">item_prescale</ref>(ctpid);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemprescale<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itemprescale<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itemprescale;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minprescale=0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>items<sp/>=<sp/><ref refid="d2/d87/namespaceTrig_1a1603ef3999da9799870e1bb433932ed1" kindref="member" tooltip="makes a split of list of chains into the vector of chains">convertStringToVector</ref>(item);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::iterator<sp/>itit<sp/>=<sp/>items.begin();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itit<sp/>!=<sp/>items.end();<sp/>++itit)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TrigConf::TriggerItem</ref>*<sp/>fitem=cgm(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;<ref refid="d2/df9/classTrig_1_1CacheGlobalMemory_1aa6089aac34f1be3f14a0ee4b1bd9a451" kindref="member" tooltip="CTP config item from given name.">config_item</ref>(*itit);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fitem==0)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Configuration<sp/>for<sp/>the<sp/>item:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*itit<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>known&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;float&gt;::quiet_NaN();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctpid<sp/>=<sp/>fitem-&gt;ctpId();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>itemprescale<sp/>=<sp/>cgm(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;<ref refid="d2/df9/classTrig_1_1CacheGlobalMemory_1a39f783b1feced8faf79718e303be8bad" kindref="member" tooltip="Prescale for CPT item.">item_prescale</ref>(ctpid);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemprescale<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>itemprescale<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minprescale<sp/>=<sp/>(minprescale&amp;&amp;(minprescale&lt;itemprescale)?minprescale:itemprescale);<sp/></highlight><highlight class="comment">//<sp/>takes<sp/>min,<sp/>except<sp/>the<sp/>first<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minprescale;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d8/d5b/classTrig_1_1ChainGroup_1acf171502930a8cdc27214dc7c584a798" kindref="member" tooltip="returns prescale factor for chain group with single chain in returns real prescale...">Trig::ChainGroup::getPrescale</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>condition<sp/>!=<sp/>TrigDefs::Physics<sp/>)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_prescale;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Trig::ChainGroup::calculatePrescale(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleTrigger<sp/>=<sp/>(m_confChains.size()+m_confItems.size()==1);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>ChainGroup::const_conf_chain_iterator<sp/>chIt;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>chIt<sp/>=<sp/>conf_chain_begin();<sp/>chIt<sp/>!=<sp/>conf_chain_end();<sp/>++chIt)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>hltChainName<sp/>=<sp/>(*chIt)-&gt;chain_name();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>chainRESULT<sp/>=<sp/>HLTPrescale(hltChainName,condition);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>&amp;<sp/>TrigDefs::enforceLogicalFlow)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enforceLogicalFlow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;EF&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>hltChainNameL2<sp/>=<sp/>getLowerName(hltChainName);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>l1ItemName<sp/><sp/><sp/><sp/><sp/>=<sp/>getLowerName(hltChainNameL2);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>*=<sp/>HLTPrescale(hltChainNameL2,condition);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>*=<sp/>L1Prescale(l1ItemName,condition);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l1ItemName.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)!=std::string::npos)<sp/>singleTrigger=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;L2&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>l1ItemName<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>getLowerName(hltChainName);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>*=<sp/>L1Prescale(l1ItemName,condition);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l1ItemName.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)!=std::string::npos)<sp/>singleTrigger=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//todo:<sp/>not<sp/>clear<sp/>how<sp/>to<sp/>handle<sp/>prescales<sp/>in<sp/>the<sp/>merged<sp/>system??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*chIt)-&gt;level()==</highlight><highlight class="stringliteral">&quot;HLT&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>l1ItemName<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>getLowerName(hltChainName);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainRESULT<sp/>*=<sp/>L1Prescale(l1ItemName,condition);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l1ItemName.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)!=std::string::npos)<sp/>singleTrigger=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(singleTrigger)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chainRESULT;<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>single<sp/>trigger<sp/>we<sp/>are<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UNPRESCALED<sp/>=<sp/>(fabs(chainRESULT-1.0)&lt;1e-5);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UNPRESCALED)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>any<sp/>unprescaled<sp/>trigger<sp/>and<sp/>we<sp/>are<sp/>done<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>ChainGroup::const_conf_item_iterator<sp/>iIt;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>iIt<sp/>=<sp/>conf_item_begin();<sp/>iIt<sp/>!=<sp/>conf_item_end();<sp/>++iIt)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>l1ItemName<sp/>=<sp/>(*iIt)-&gt;name();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>itemRESULT<sp/>=<sp/>L1Prescale(l1ItemName,condition);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l1ItemName.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)!=std::string::npos)<sp/>singleTrigger=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(singleTrigger)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itemRESULT;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>single<sp/>trigger<sp/>we<sp/>are<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UNPRESCALED<sp/>=<sp/>(itemRESULT==1);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UNPRESCALED)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>any<sp/>unprescaled<sp/>trigger<sp/>and<sp/>we<sp/>are<sp/>done<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>triggers<sp/>and<sp/>all<sp/>are<sp/>prescaled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>Trig::ChainGroup::getListOfTriggers()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>v.assign(m_names.begin(),m_names.end());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>Trig::ChainGroup::getListOfStreams()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>std::set&lt;<sp/>std::string<sp/>&gt;<sp/>s;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>std::set&lt;const<sp/>TrigConf::HLTChain*&gt;::const_iterator<sp/>foo;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(foo=conf_chain_begin();<sp/>foo<sp/>!=<sp/>conf_chain_end();<sp/>++foo)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::HLTStreamTag*&gt;&amp;<sp/>streamTagList<sp/>=<sp/>(*foo)-&gt;streams();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TrigConf::HLTStreamTag*&gt;::const_iterator<sp/>bar;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bar=streamTagList.begin();<sp/>bar<sp/>!=<sp/>streamTagList.end();<sp/>++bar)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert((*bar)-&gt;stream());</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>v.assign(s.begin(),s.end());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">vector&lt;string&gt;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">Trig::ChainGroup::getListOfGroups()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>vector&lt;<sp/>string<sp/>&gt;<sp/>v;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>BOOST_FOREACH(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/df4/classTrigConf_1_1HLTChain" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTChain</ref>*<sp/>ch,<sp/>m_confChains<sp/>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v.assign(<sp/>ch-&gt;groups().begin(),<sp/>ch-&gt;groups().end()<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>return<sp/>v;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">std::vector&lt;<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&gt;<sp/>Trig::ChainGroup::getListOfSignatures()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>std::set&lt;<sp/>std::string<sp/>&gt;<sp/>s;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>std::set&lt;const<sp/>TrigConf::HLTChain*&gt;::const_iterator<sp/>foo;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>HLT<sp/>Chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(foo=conf_chain_begin();<sp/>foo<sp/>!=<sp/>conf_chain_end();<sp/>++foo)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::HLTSignature*&gt;&amp;<sp/>signatureList<sp/>=<sp/>(*foo)-&gt;signatureList();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TrigConf::HLTSignature*&gt;::const_iterator<sp/>bar;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bar=signatureList.begin();<sp/>bar<sp/>!=<sp/>signatureList.end();<sp/>++bar)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.insert((*bar)-&gt;label());</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>v.assign(s.begin(),s.end());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>level<sp/>1<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">vector&lt;string&gt;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">Trig::ChainGroup::getListOfThresholds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>set&lt;string&gt;<sp/>s;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>a<sp/>set<sp/>makes<sp/>the<sp/>items<sp/>in<sp/>the<sp/>result<sp/>vector<sp/>unique</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>std::stack&lt;TrigConf::TriggerItemNode*&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><ref refid="df/d45/classTrigConf_1_1TriggerItemNode" kindref="compound">TrigConf::TriggerItemNode</ref>*<sp/>node;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>BOOST_FOREACH(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TrigConf::TriggerItem</ref>*<sp/>item,<sp/>m_confItems<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes.push(<sp/>item-&gt;topNode()<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!nodes.empty())<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nodes.top();<sp/>nodes.pop();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;isThreshold())<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;triggerThreshold())<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>if<sp/>thresholds<sp/>have<sp/>been<sp/>read<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;triggerThreshold()-&gt;name().empty())</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(node-&gt;triggerThreshold()-&gt;name());</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;thresholdName().empty())<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>back<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(node-&gt;thresholdName());</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="df/d45/classTrigConf_1_1TriggerItemNode" kindref="compound">TrigConf::TriggerItemNode</ref>*<sp/>childnode,<sp/>node-&gt;children())<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.push(childnode);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>am<sp/>not<sp/>using<sp/>(*it)-&gt;topNode()-&gt;getAllThresholds()<sp/>here,<sp/>because<sp/>it<sp/>returns<sp/>nothing<sp/>when<sp/>only<sp/>ItemDef<sp/>(and<sp/>not<sp/>the<sp/>thresholds<sp/>themselves)<sp/>are<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>vector&lt;string&gt;<sp/>v;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>v.assign(s.begin(),s.end());</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trigger<sp/>Elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">std::vector&lt;<sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>&gt;<sp/>Trig::ChainGroup::getListOfTriggerElements()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>std::set&lt;<sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>&gt;<sp/>s;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>t;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>std::set&lt;const<sp/>TrigConf::HLTChain*&gt;::const_iterator<sp/>foo;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(foo=conf_chain_begin();<sp/>foo<sp/>!=<sp/>conf_chain_end();<sp/>++foo)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::HLTSignature*&gt;&amp;<sp/>signatureList<sp/>=<sp/>(*foo)-&gt;signatureList();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TrigConf::HLTSignature*&gt;::const_iterator<sp/>bar;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bar=signatureList.begin();<sp/>bar<sp/>!=<sp/>signatureList.end();<sp/>++bar)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t.clear();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::HLTTriggerElement*&gt;&amp;<sp/>outputTEs<sp/>=<sp/>(*bar)-&gt;outputTEs();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TrigConf::HLTTriggerElement*&gt;::const_iterator<sp/>foobar;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(foobar=outputTEs.begin();<sp/>foobar<sp/>!=<sp/>outputTEs.end();<sp/>++foobar)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>t.push_back(<sp/>(*foobar)-&gt;name());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(t);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>&gt;<sp/>v;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>v.assign(s.begin(),s.end());</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>vector<sp/>of<sp/>vector<sp/>with<sp/>all<sp/>Trigger<sp/>Elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">std::vector&lt;<sp/>std::vector&lt;<sp/>TrigConf::HLTTriggerElement*<sp/>&gt;<sp/>&gt;<sp/>Trig::ChainGroup::getHLTTriggerElements()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>std::set&lt;<sp/>std::vector&lt;<sp/>TrigConf::HLTTriggerElement*<sp/>&gt;<sp/>&gt;<sp/>s;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TrigConf::HLTTriggerElement*<sp/>&gt;<sp/>t;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>std::set&lt;const<sp/>TrigConf::HLTChain*&gt;::const_iterator<sp/>foo;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(foo=conf_chain_begin();<sp/>foo<sp/>!=<sp/>conf_chain_end();<sp/>++foo)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::HLTSignature*&gt;&amp;<sp/>signatureList<sp/>=<sp/>(*foo)-&gt;signatureList();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TrigConf::HLTSignature*&gt;::const_iterator<sp/>bar;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bar=signatureList.begin();<sp/>bar<sp/>!=<sp/>signatureList.end();<sp/>++bar)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t.clear();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::HLTTriggerElement*&gt;&amp;<sp/>outputTEs<sp/>=<sp/>(*bar)-&gt;outputTEs();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TrigConf::HLTTriggerElement*&gt;::const_iterator<sp/>foobar;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(foobar=outputTEs.begin();<sp/>foobar<sp/>!=<sp/>outputTEs.end();<sp/>++foobar)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>t.push_back(<sp/>(*foobar)<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(t);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>TrigConf::HLTTriggerElement*<sp/>&gt;<sp/>&gt;<sp/>v;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>v.assign(s.begin(),s.end());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal">Trig::ChainGroup::~ChainGroup()<sp/>{}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal">Trig::ChainGroup::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dfb/classTrigConf_1_1HLTChainList" kindref="compound" tooltip="list of all HLT chains in a trigger menu">TrigConf::HLTChainList</ref>*<sp/>confChains,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrigConf::ItemContainer*<sp/>confItems)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/>m_confChains.clear();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/>m_confItems.clear();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/>m_names.clear();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>protect<sp/>against<sp/>genConf<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(confChains<sp/>&amp;&amp;<sp/>confItems)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;<sp/>std::string<sp/>&gt;::const_iterator<sp/>it<sp/>=<sp/>m_patterns.begin();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>m_patterns.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>chains<sp/>matching<sp/>pattern<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::regex<sp/>compiled(*it);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::cmatch<sp/>what;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="db/df4/classTrigConf_1_1HLTChain" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTChain</ref>*<sp/>ch,<sp/>*confChains)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>boost::regex_match(ch-&gt;chain_name().c_str(),<sp/>what,<sp/>compiled)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_confChains.insert(ch);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names.push_back(ch-&gt;chain_name());</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TrigConf::TriggerItem</ref>*<sp/>item,<sp/>*confItems)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>boost::regex_match(<sp/>item-&gt;name().c_str(),<sp/>what,<sp/>compiled)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_confItems.insert(item);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names.push_back(item-&gt;name());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/>m_prescale<sp/>=<sp/>calculatePrescale(TrigDefs::Physics);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="comment">//<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ChainGroup_impl<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">HLT;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Trig;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allActive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerElement*&gt;&amp;<sp/>tes)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(TriggerElement*<sp/>te,<sp/>tes){</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(te-&gt;getActiveState()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collectCombinations(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/df4/classTrigConf_1_1HLTChain" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTChain</ref>*<sp/>conf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CacheGlobalMemory*<sp/>cgm,<sp/>FeatureContainer&amp;<sp/>fc,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition<sp/>){</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>over<sp/>the<sp/>steps<sp/>of<sp/>the<sp/>chain<sp/>and<sp/>collecte<sp/>TEs<sp/>combinations<sp/>for<sp/>each<sp/>of<sp/>the<sp/>chain<sp/>step<sp/>(signature)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>last_step=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d02/classTrigConf_1_1HLTSignature" kindref="compound" tooltip="HLT signature configuration information.">TrigConf::HLTSignature</ref>*<sp/>previous_sig(0);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_REVERSE_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d02/classTrigConf_1_1HLTSignature" kindref="compound" tooltip="HLT signature configuration information.">TrigConf::HLTSignature</ref>*<sp/>sig,<sp/>conf-&gt;signatureList())<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chain<sp/>without<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sig)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>signatures<sp/>size<sp/>changes<sp/>from<sp/>step<sp/>to<sp/>step,<sp/>this<sp/>needs<sp/>custom<sp/>treatement<sp/>and<sp/>the<sp/>iteration<sp/>eeds<sp/>to<sp/>be<sp/>stoped<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>previous_sig<sp/>&amp;&amp;<sp/>previous_sig-&gt;outputTEs().size()<sp/>!=<sp/>sig-&gt;<ref refid="d9/d02/classTrigConf_1_1HLTSignature_1af42cadeb358c572a810d39f6ce232e07" kindref="member" tooltip="accessor to the list of trigger elements">outputTEs</ref>().size()<sp/>)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_sig<sp/>=<sp/>sig;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;HLT::TriggerElement*&gt;<sp/>&gt;<sp/>tes(sig-&gt;<ref refid="d9/d02/classTrigConf_1_1HLTSignature_1af42cadeb358c572a810d39f6ce232e07" kindref="member" tooltip="accessor to the list of trigger elements">outputTEs</ref>().size());<sp/></highlight><highlight class="comment">//<sp/>preallocate<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement" kindref="compound" tooltip="HLT trigger element configuration information.">TrigConf::HLTTriggerElement</ref>*<sp/>confte,<sp/>sig-&gt;<ref refid="d9/d02/classTrigConf_1_1HLTSignature_1af42cadeb358c572a810d39f6ce232e07" kindref="member" tooltip="accessor to the list of trigger elements">outputTEs</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>the<sp/>condition<sp/>enters;<sp/>if<sp/>we<sp/>take<sp/>only<sp/>accepted<sp/>objects<sp/>we<sp/>need<sp/>to<sp/>pick<sp/>only<sp/>the<sp/>active<sp/>TEs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgm-&gt;navigation()-&gt;getAllOfType(confte-&gt;id(),<sp/>tes[idx],<sp/>condition<sp/>&amp;<sp/>TrigDefs::Physics<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx++;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dda/classHLT_1_1ComboIterator" kindref="compound" tooltip="Iterator used to loop over multi-particle combinations.">HLT::ComboIterator</ref><sp/>combination(tes,<sp/>cgm-&gt;navigation());</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>combinations,<sp/>sometimes<sp/>a<sp/>huge<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(combination.isValid())<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>very<sp/>very<sp/>tricky,<sp/>if<sp/>all<sp/>TEs<sp/>in<sp/>the<sp/>combination<sp/>are<sp/>active<sp/>then<sp/>it<sp/>means<sp/>they<sp/>were<sp/>already<sp/>picked<sp/>up<sp/>by<sp/>previous<sp/>combinations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>not<sp/>do<sp/>this<sp/>for<sp/>the<sp/>last<sp/>chain<sp/>step,<sp/>(we<sp/>woudl<sp/>be<sp/>unable<sp/>to<sp/>pick<sp/>objects<sp/>whcih<sp/>made<sp/>trigger<sp/>passing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cerr<sp/>&lt;&lt;<sp/>&quot;emitting<sp/>new<sp/>combination<sp/>last_step:<sp/>&quot;&lt;&lt;<sp/>last_step<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allActive(*combination)<sp/>||<sp/>last_step)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc.addWithChecking(Combination(*combination,<sp/>cgm));</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++combination;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>condition<sp/>&amp;<sp/>TrigDefs::Physics<sp/>)<sp/></highlight><highlight class="comment">//<sp/>here<sp/>again<sp/>athe<sp/>condition<sp/>calls<sp/>for<sp/>the<sp/>loop<sp/>breaking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_step<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>and<sp/>go<sp/>deeper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>eof<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d6f/classTrig_1_1FeatureContainer" kindref="compound">Trig::FeatureContainer</ref><sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><ref refid="d8/d5b/classTrig_1_1ChainGroup_1a5902f86b658a4e322d3441fd902ee1d2" kindref="member" tooltip="returns all features related to given chain group of HLT chains or L1 items Note:...">Trig::ChainGroup::features</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ChainGroup_impl;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/>FeatureContainer<sp/>f(cgm());</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>loop<sp/>only<sp/>applies<sp/>to<sp/>L2<sp/>and<sp/>EF<sp/>chain<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>std::set&lt;const<sp/>TrigConf::HLTChain*&gt;::const_iterator<sp/>chIt;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(chIt=conf_chain_begin();<sp/>chIt<sp/>!=<sp/>conf_chain_end();<sp/>++chIt)<sp/>{<sp/></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d69/classHLT_1_1Chain" kindref="compound">HLT::Chain</ref>*<sp/>fchain<sp/>=<sp/>cgm()-&gt;chain(**chIt);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fchain)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collectCombinations(fchain-&gt;<ref refid="dd/d69/classHLT_1_1Chain_1a6b22c037cccd322c60de417eb5289db9" kindref="member" tooltip="get underlying ConfigChain">getConfigChain</ref>(),<sp/>cgm(),<sp/>f,<sp/>condition);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>part<sp/>only<sp/>applies<sp/>to<sp/>L1<sp/>chain<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>HLT::TriggerElement*&gt;<sp/>&gt;<sp/>tes;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>HLT::TriggerElement*&gt;<sp/>&gt;::iterator<sp/>tesit;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/>const_conf_item_iterator<sp/>it;<sp/></highlight><highlight class="comment">//<sp/>iterator<sp/>over<sp/>configuration<sp/>items,<sp/>*it<sp/>is<sp/>TrigConf::TriggerItem*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TrigConf::TriggerItem</ref>*<sp/>item,<sp/>m_confItems)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;<sp/>std::string<sp/>&gt;<sp/>threshold_names;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stack&lt;TrigConf::TriggerItemNode*&gt;nodes;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d45/classTrigConf_1_1TriggerItemNode" kindref="compound">TrigConf::TriggerItemNode</ref>*node;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threshold_names.clear();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//node<sp/>=<sp/>item-&gt;topNode();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes.push(<sp/>item-&gt;topNode()<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>collect<sp/>unique<sp/>list<sp/>(=<sp/>set)<sp/>of<sp/>threshold<sp/>names<sp/>for<sp/>this<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!nodes.empty())<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nodes.top();<sp/>nodes.pop();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;isThreshold())<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;triggerThreshold())<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>if<sp/>thresholds<sp/>have<sp/>been<sp/>read<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;triggerThreshold()-&gt;name().empty())</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold_names.insert(node-&gt;triggerThreshold()-&gt;name());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;thresholdName().empty())<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>back<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold_names.insert(node-&gt;thresholdName());</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<ref refid="df/d45/classTrigConf_1_1TriggerItemNode" kindref="compound">TrigConf::TriggerItemNode</ref>*<sp/>childnode,<sp/>node-&gt;children())<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.push(childnode);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>collect<sp/>corresponding<sp/>TEs<sp/>and<sp/>add<sp/>them<sp/>using<sp/>appendFeatures()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tes.clear();</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tes.resize(threshold_names.size());<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tesit<sp/>=<sp/>tes.begin();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;<sp/>std::string<sp/>&gt;::iterator<sp/>setstrit;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(setstrit<sp/>=<sp/>threshold_names.begin();<sp/>setstrit<sp/>!=<sp/>threshold_names.end();<sp/>++setstrit,<sp/>++tesit)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cgm()-&gt;navigation()-&gt;getAllOfType(<ref refid="d8/d97/classTrigConf_1_1HLTUtils_1af81842da8307daf333f5ade9d8b5ad08" kindref="member" tooltip="hash function translating TE names into identifiers">TrigConf::HLTUtils::string2hash</ref>(*setstrit),<sp/>*tesit,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>appendFeatures(tes,<sp/>f);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;features:<sp/>features<sp/>container<sp/>size:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>f.getCombinations().size());</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Trig::ChainGroup::appendFeatures(std::vector&lt;<sp/>std::vector&lt;<sp/>HLT::TriggerElement*&gt;<sp/>&gt;&amp;<sp/>tes,<sp/><ref refid="d9/d6f/classTrig_1_1FeatureContainer" kindref="compound">Trig::FeatureContainer</ref>&amp;<sp/>fc)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>appends<sp/>(combinations<sp/>of)<sp/>TriggerElements<sp/>to<sp/>FeatureContainer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tes.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>ComboIterator::isValid<sp/>would<sp/>return<sp/>true<sp/>in<sp/>this<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="d2/dda/classHLT_1_1ComboIterator" kindref="compound" tooltip="Iterator used to loop over multi-particle combinations.">HLT::ComboIterator</ref><sp/>combination(tes,<sp/>cgm()-&gt;navigation());</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(combination.isValid())<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>fc.<ref refid="d9/d6f/classTrig_1_1FeatureContainer_1aa0416acc992c94acb1e72529ac3cadf6" kindref="member" tooltip="add new combination to the container checking for overlap">addWithChecking</ref>(Combination(*combination,<sp/>cgm()));<sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;<sp/>adding<sp/>combination&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Combination(*combination,<sp/>cgm()));</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>++combination;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ChainGroup_impl<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vsize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::HLTTriggerElement*&gt;&amp;<sp/>a<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::HLTTriggerElement*&gt;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.size()<sp/>&lt;<sp/>b.size();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/ChainGroup.cxx"/>
  </compounddef>
</doxygen>
