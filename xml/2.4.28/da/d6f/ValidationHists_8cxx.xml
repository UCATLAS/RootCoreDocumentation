<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d6f/ValidationHists_8cxx" kind="file">
    <compoundname>ValidationHists.cxx</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2014.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/ValidationHists.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Worker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/IEventObjects.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/InternalConfiguration.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ana</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbf/classana_1_1ValidationHists_1aad5c8dbd2f54c62c80e122fc53bbacee" kindref="member">ValidationHists ::</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="d4/dbf/classana_1_1ValidationHists_1aad5c8dbd2f54c62c80e122fc53bbacee" kindref="member">  testInvariant</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="d4/dbf/classana_1_1ValidationHists_1aae2d41d35abe9c93c7a795e5cfe1614a" kindref="member">ValidationHists ::</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="d4/dbf/classana_1_1ValidationHists_1aae2d41d35abe9c93c7a795e5cfe1614a" kindref="member">  ValidationHists</ref><sp/>(<ref refid="da/d12/classEL_1_1Worker" kindref="compound">EL::Worker</ref><sp/>*val_worker,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InternalConfiguration&amp;<sp/>configuration)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_worker<sp/>(val_worker),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_selectionAccessor<sp/>(configuration.selectionName<sp/>(<ref refid="d7/d63/namespaceana_1a936d81073adf9fa0c67f3347a8350f51" kindref="member" tooltip="the different levels of selection we have">SelectionStep</ref>::<ref refid="d7/d63/namespaceana_1a936d81073adf9fa0c67f3347a8350f51ab9d066ab9be1ace326f52ca4485edbba" kindref="member" tooltip="selections that go into the final analysis objects">ANALYSIS</ref>))</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbf/classana_1_1ValidationHists_1a551aff6c2624eafe6be42c9d1015f0af" kindref="member">ValidationHists ::</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="d4/dbf/classana_1_1ValidationHists_1a551aff6c2624eafe6be42c9d1015f0af" kindref="member">  fillHists</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>prefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IEventObjects&amp;<sp/><ref refid="d4/d83/classana_1_1QuickAna_1afb61487d1899c52b88887dd0b763ecb4" kindref="member">objects</ref>,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d4/d83/classana_1_1QuickAna_1add3a477eefcd1053b14de548dcf0e48e" kindref="member">weight</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;weightln&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>-5,<sp/>5,<sp/>log<sp/>(weight),<sp/>1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objects.jets())<sp/>fillHists<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;jet&quot;</highlight><highlight class="normal">,<sp/>*objects.jets(),<sp/>weight);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objects.fat_jets())<sp/>fillHists<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;fat_jet&quot;</highlight><highlight class="normal">,<sp/>*objects.fat_jets(),<sp/>weight);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objects.photons())<sp/>fillHists<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;photon&quot;</highlight><highlight class="normal">,<sp/>*objects.photons(),<sp/>weight);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objects.electrons())<sp/>fillHists<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;electron&quot;</highlight><highlight class="normal">,<sp/>*objects.electrons(),<sp/>weight);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objects.muons())<sp/>fillHists<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;muon&quot;</highlight><highlight class="normal">,<sp/>*objects.muons(),<sp/>weight);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objects.taus())<sp/>fillHists<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;tau&quot;</highlight><highlight class="normal">,<sp/>*objects.taus(),<sp/>weight);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objects.met())<sp/>fillHists<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;met&quot;</highlight><highlight class="normal">,<sp/>*(*objects.met())[</highlight><highlight class="stringliteral">&quot;Final&quot;</highlight><highlight class="normal">],<sp/>weight);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objects.met2())<sp/>fillHists<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;met2&quot;</highlight><highlight class="normal">,<sp/>*(*objects.met2())[</highlight><highlight class="stringliteral">&quot;Final&quot;</highlight><highlight class="normal">],<sp/>weight);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbf/classana_1_1ValidationHists_1a551aff6c2624eafe6be42c9d1015f0af" kindref="member">ValidationHists ::</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="d4/dbf/classana_1_1ValidationHists_1a551aff6c2624eafe6be42c9d1015f0af" kindref="member">  fillHists</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>prefix,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::IParticleContainer</ref>&amp;<sp/>particles,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>particle<sp/>:<sp/>particles)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_selectionAccessor<sp/>(*particle))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_e&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0,<sp/>1e6,<sp/>particle-&gt;e(),<sp/>weight);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_pt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0,<sp/>1e6,<sp/>particle-&gt;pt(),<sp/>weight);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_eta&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-5,<sp/>5,<sp/>particle-&gt;eta(),<sp/>weight);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_phi&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-M_PI,<sp/>M_PI,<sp/>particle-&gt;phi(),<sp/>weight);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_weightln&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>-5,<sp/>5,<sp/>log<sp/>(particle-&gt;auxdata&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;ana_weight&quot;</highlight><highlight class="normal">)),<sp/>1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>++<sp/>count;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_num&quot;</highlight><highlight class="normal">,<sp/>21,<sp/>-0.5,<sp/>20.5,<sp/>count,<sp/>weight);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbf/classana_1_1ValidationHists_1a551aff6c2624eafe6be42c9d1015f0af" kindref="member">ValidationHists ::</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="d4/dbf/classana_1_1ValidationHists_1a551aff6c2624eafe6be42c9d1015f0af" kindref="member">  fillHists</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>prefix,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref>&amp;<sp/>met,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_pt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0,<sp/>1e6,<sp/>met.<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>(),<sp/>weight);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_phi&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-M_PI,<sp/>M_PI,<sp/>met.<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1ae4c8b377be1e4f43815629e6c372b96f" kindref="member" tooltip="Returns .">phi</ref>(),<sp/>weight);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_px&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-1e6,<sp/>1e6,<sp/>met.<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1aa098e7ecb13fd6547bb3e9f26aaf6e5a" kindref="member" tooltip="Returns .">mpx</ref>(),<sp/>weight);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>fillHist<sp/>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_py&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-1e6,<sp/>1e6,<sp/>met.<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1ab2ec5bd42f6f8238455ddc7d1761bd99" kindref="member" tooltip="Returns .">mpy</ref>(),<sp/>weight);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dbf/classana_1_1ValidationHists_1a33c3341d4c706bb341aabc3e3efa3110" kindref="member">ValidationHists ::</ref></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="d4/dbf/classana_1_1ValidationHists_1a33c3341d4c706bb341aabc3e3efa3110" kindref="member">  fillHist</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nbins,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>low,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>high,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weight)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>m_hists.find<sp/>(name);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>m_hists.end())</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;Fill<sp/>(value,<sp/>weight);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1<sp/>*hist<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1D<sp/>(name.c_str(),<sp/>name.c_str(),<sp/>nbins,<sp/>low,<sp/>high);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>hist-&gt;Fill<sp/>(value,<sp/>weight);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>m_hists[name]<sp/>=<sp/>hist;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>m_worker-&gt;addOutput<sp/>(hist);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/ValidationHists.cxx"/>
  </compounddef>
</doxygen>
