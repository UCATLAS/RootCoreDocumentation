<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/dd1/AuxTypeVectorFactory__test_8cxx" kind="file">
    <compoundname>AuxTypeVectorFactory_test.cxx</compoundname>
    <includes refid="dc/d69/AuxTypeVectorFactory_8h" local="yes">AthContainers/tools/AuxTypeVectorFactory.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cassert</includes>
    <incdepgraph>
      <node id="72238">
        <label>limits</label>
      </node>
      <node id="72235">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="72236" relation="include">
        </childnode>
        <childnode refid="72237" relation="include">
        </childnode>
      </node>
      <node id="72230">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="72231" relation="include">
        </childnode>
        <childnode refid="72232" relation="include">
        </childnode>
      </node>
      <node id="72239">
        <label>stdint.h</label>
      </node>
      <node id="72224">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="72225" relation="include">
        </childnode>
        <childnode refid="72226" relation="include">
        </childnode>
      </node>
      <node id="72249">
        <label>cassert</label>
      </node>
      <node id="72236">
        <label>string</label>
      </node>
      <node id="72228">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="72225" relation="include">
        </childnode>
        <childnode refid="72226" relation="include">
        </childnode>
      </node>
      <node id="72222">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx</label>
        <link refid="AuxTypeVectorFactory_test.cxx"/>
        <childnode refid="72223" relation="include">
        </childnode>
        <childnode refid="72248" relation="include">
        </childnode>
        <childnode refid="72249" relation="include">
        </childnode>
      </node>
      <node id="72246">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="72242">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="72234">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="72235" relation="include">
        </childnode>
        <childnode refid="72238" relation="include">
        </childnode>
        <childnode refid="72239" relation="include">
        </childnode>
        <childnode refid="72240" relation="include">
        </childnode>
      </node>
      <node id="72226">
        <label>typeinfo</label>
      </node>
      <node id="72240">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="72237">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="72245">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="72231">
        <label>vector</label>
      </node>
      <node id="72241">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="72229">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="72232">
        <label>cstdlib</label>
      </node>
      <node id="72248">
        <label>iostream</label>
      </node>
      <node id="72225">
        <label>cstddef</label>
      </node>
      <node id="72227">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="72228" relation="include">
        </childnode>
        <childnode refid="72229" relation="include">
        </childnode>
        <childnode refid="72230" relation="include">
        </childnode>
        <childnode refid="72233" relation="include">
        </childnode>
        <childnode refid="72241" relation="include">
        </childnode>
        <childnode refid="72226" relation="include">
        </childnode>
        <childnode refid="72231" relation="include">
        </childnode>
        <childnode refid="72243" relation="include">
        </childnode>
        <childnode refid="72239" relation="include">
        </childnode>
        <childnode refid="72244" relation="include">
        </childnode>
        <childnode refid="72245" relation="include">
        </childnode>
        <childnode refid="72246" relation="include">
        </childnode>
      </node>
      <node id="72244">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="72247">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="72233">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="72229" relation="include">
        </childnode>
        <childnode refid="72234" relation="include">
        </childnode>
        <childnode refid="72241" relation="include">
        </childnode>
        <childnode refid="72231" relation="include">
        </childnode>
        <childnode refid="72242" relation="include">
        </childnode>
      </node>
      <node id="72243">
        <label>algorithm</label>
      </node>
      <node id="72223">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="72224" relation="include">
        </childnode>
        <childnode refid="72227" relation="include">
        </childnode>
        <childnode refid="72247" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/dd1/AuxTypeVectorFactory__test_8cxx_1a7e14e2251cfafbea3ee609f799780a67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d1/def/classT" kindref="compound">T</ref></type>
        <definition>T makeT</definition>
        <argsstring>(int x=0)</argsstring>
        <name>makeT</name>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="da/dd1/AuxTypeVectorFactory__test_8cxx_1a5b4097efd3cbfe3a7c16e44c50f331d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void test_vector</definition>
        <argsstring>()</argsstring>
        <name>test_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx" bodystart="25" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="da/dd1/AuxTypeVectorFactory__test_8cxx_1a1440a7779ac56f47a3f355ce4a8c7da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test1</definition>
        <argsstring>()</argsstring>
        <name>test1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="da/dd1/AuxTypeVectorFactory__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx" line="72" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx" bodystart="71" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regression tests for AuxTypeVectorFactory. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>May, 2014 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d69/AuxTypeVectorFactory_8h" kindref="compound" tooltip="Factory objects that creates vectors using AuxTypeVector.">AthContainers/tools/AuxTypeVectorFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>makeT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>(x);<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>makeT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x&amp;1)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_vector()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory" kindref="compound" tooltip="Factory objects that creates vectors using AuxTypeVector.">SG::AuxTypeVectorFactory&lt;T&gt;</ref><sp/>fac;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>assert<sp/>(fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a07669250585a0111db27e9bfc7788f33" kindref="member" tooltip="Return the size of an element of this vector type.">getEltSize</ref>()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d1/def/classT" kindref="compound">T</ref>));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>assert<sp/>(!fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a113b8fcec227f5df75387bf66659198a" kindref="member" tooltip="True if the vectors created by this factory work by dynamic emulation (via TVirtualCollectionProxy...">isDynamic</ref>());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="d1/def/classT" kindref="compound">T</ref>)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(bool))</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a37166bcf5475d60c4029036156681375" kindref="member" tooltip="Return the type_info of the vector.">tiVec</ref>()<sp/>==<sp/>&amp;</highlight><highlight class="keyword">typeid</highlight><highlight class="normal"><sp/>(std::vector&lt;char&gt;));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a37166bcf5475d60c4029036156681375" kindref="member" tooltip="Return the type_info of the vector.">tiVec</ref>()<sp/>==<sp/>&amp;</highlight><highlight class="keyword">typeid</highlight><highlight class="normal"><sp/>(std::vector&lt;T&gt;));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="de/d12/classSG_1_1IAuxTypeVector" kindref="compound" tooltip="Abstract interface for manipulating vectors of arbitrary types.">SG::IAuxTypeVector</ref>*<sp/>v<sp/>=<sp/>fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1ab47c3c275994600e152416c6a821e3a8" kindref="member" tooltip="Create a vector object of this type.">create</ref><sp/>(10,<sp/>20);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="d1/def/classT" kindref="compound">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(v-&gt;<ref refid="de/d12/classSG_1_1IAuxTypeVector_1a31a1ff0ce19ebaf7af7a183d7a3209ff" kindref="member" tooltip="Return a pointer to the start of the vector&amp;#39;s data.">toPtr</ref>());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>ptr[0]<sp/>=<sp/>makeT(20);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>ptr[1]<sp/>=<sp/>makeT(2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="de/d12/classSG_1_1IAuxTypeVector" kindref="compound" tooltip="Abstract interface for manipulating vectors of arbitrary types.">SG::IAuxTypeVector</ref>*<sp/>v2<sp/>=<sp/>fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1ab47c3c275994600e152416c6a821e3a8" kindref="member" tooltip="Create a vector object of this type.">create</ref><sp/>(10,<sp/>20);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>ptr2<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="d1/def/classT" kindref="compound">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(v2-&gt;<ref refid="de/d12/classSG_1_1IAuxTypeVector_1a31a1ff0ce19ebaf7af7a183d7a3209ff" kindref="member" tooltip="Return a pointer to the start of the vector&amp;#39;s data.">toPtr</ref>());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a469ab34956704968cd8018bdecd578a8" kindref="member" tooltip="Copy an element between vectors.">copy</ref><sp/>(ptr2,<sp/>0,<sp/>ptr,<sp/>1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a469ab34956704968cd8018bdecd578a8" kindref="member" tooltip="Copy an element between vectors.">copy</ref><sp/>(ptr2,<sp/>1,<sp/>ptr,<sp/>0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>assert<sp/>(ptr2[0]<sp/>==<sp/>makeT(2));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>assert<sp/>(ptr2[1]<sp/>==<sp/>makeT(20));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>ptr2[0]<sp/>=<sp/>makeT(10);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>ptr2[1]<sp/>=<sp/>makeT(11);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1ac31d67660a985693d78f9d2b492a6932" kindref="member" tooltip="Swap an element between vectors.">swap</ref><sp/>(ptr2,<sp/>0,<sp/>ptr,<sp/>1);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>assert<sp/>(ptr[0]<sp/>==<sp/>makeT(20));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>assert<sp/>(ptr[1]<sp/>==<sp/>makeT(10));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>assert<sp/>(ptr2[0]<sp/>==<sp/>makeT(2));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>assert<sp/>(ptr2[1]<sp/>==<sp/>makeT(11));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>fac.<ref refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a0a29946cda9a32357098aa9f5216a9c4" kindref="member" tooltip="Clear an element within a vector (static method).">clear</ref><sp/>(ptr2,<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>assert<sp/>(ptr2[0]<sp/>==<sp/>makeT());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>assert<sp/>(ptr2[1]<sp/>==<sp/>makeT(11));</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test1()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>test_vector&lt;int&gt;();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>test_vector&lt;bool&gt;();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>test_vector&lt;float&gt;();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>test1();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxTypeVectorFactory_test.cxx"/>
  </compounddef>
</doxygen>
