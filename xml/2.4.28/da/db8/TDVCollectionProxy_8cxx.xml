<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/db8/TDVCollectionProxy_8cxx" kind="file">
    <compoundname>TDVCollectionProxy.cxx</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">TError.h</includes>
    <includes local="no">TClassEdit.h</includes>
    <includes local="no">TClass.h</includes>
    <includes local="no">TBaseClass.h</includes>
    <includes local="no">TCollectionProxyInfo.h</includes>
    <includes local="no">TSystem.h</includes>
    <includes local="no">TList.h</includes>
    <includes refid="d7/dd6/DataVector_8h" local="yes">AthContainers/DataVector.h</includes>
    <includes refid="d2/d00/TDVCollectionProxy_8h" local="yes">xAODCore/tools/TDVCollectionProxy.h</includes>
    <incdepgraph>
      <node id="358989">
        <label>list</label>
      </node>
      <node id="358998">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="358983" relation="include">
        </childnode>
        <childnode refid="358990" relation="include">
        </childnode>
        <childnode refid="358975" relation="include">
        </childnode>
        <childnode refid="358979" relation="include">
        </childnode>
        <childnode refid="358916" relation="include">
        </childnode>
      </node>
      <node id="358983">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="358954">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="359005">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="359006" relation="include">
        </childnode>
        <childnode refid="358984" relation="include">
        </childnode>
        <childnode refid="358924" relation="include">
        </childnode>
        <childnode refid="359007" relation="include">
        </childnode>
      </node>
      <node id="358971">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="358915" relation="include">
        </childnode>
        <childnode refid="358917" relation="include">
        </childnode>
        <childnode refid="358924" relation="include">
        </childnode>
        <childnode refid="358925" relation="include">
        </childnode>
      </node>
      <node id="358973">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="358933" relation="include">
        </childnode>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358974" relation="include">
        </childnode>
        <childnode refid="358934" relation="include">
        </childnode>
      </node>
      <node id="358972">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="358923">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="358925">
        <label>functional</label>
      </node>
      <node id="358980">
        <label>boost/version.hpp</label>
      </node>
      <node id="358921">
        <label>limits</label>
      </node>
      <node id="358974">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="358952">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="358918">
        <label>iterator</label>
      </node>
      <node id="358935">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="358922" relation="include">
        </childnode>
        <childnode refid="358936" relation="include">
        </childnode>
      </node>
      <node id="359004">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="359010">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="359011" relation="include">
        </childnode>
        <childnode refid="358978" relation="include">
        </childnode>
        <childnode refid="358921" relation="include">
        </childnode>
        <childnode refid="358925" relation="include">
        </childnode>
        <childnode refid="359012" relation="include">
        </childnode>
      </node>
      <node id="358911">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="358912" relation="include">
        </childnode>
        <childnode refid="358926" relation="include">
        </childnode>
        <childnode refid="358927" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
        <childnode refid="358922" relation="include">
        </childnode>
      </node>
      <node id="358937">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="358938" relation="include">
        </childnode>
        <childnode refid="358919" relation="include">
        </childnode>
      </node>
      <node id="358940">
        <label>stdint.h</label>
      </node>
      <node id="358909">
        <label>TList.h</label>
      </node>
      <node id="358990">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="358921" relation="include">
        </childnode>
        <childnode refid="358991" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
        <childnode refid="358919" relation="include">
        </childnode>
        <childnode refid="358913" relation="include">
        </childnode>
      </node>
      <node id="358959">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
      </node>
      <node id="358930">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="358943">
        <label>RVersion.h</label>
      </node>
      <node id="358914">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="358915" relation="include">
        </childnode>
        <childnode refid="358924" relation="include">
        </childnode>
        <childnode refid="358925" relation="include">
        </childnode>
      </node>
      <node id="358920">
        <label>cmath</label>
      </node>
      <node id="358902">
        <label>cassert</label>
      </node>
      <node id="358981">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="359000">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="358927">
        <label>stdexcept</label>
      </node>
      <node id="358955">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="358906">
        <label>TBaseClass.h</label>
      </node>
      <node id="358987">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="358995">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="359013">
        <label>xAODCore/tools/TDVCollectionProxy.h</label>
        <link refid="d2/d00/TDVCollectionProxy_8h_source"/>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="359014" relation="include">
        </childnode>
      </node>
      <node id="358922">
        <label>string</label>
      </node>
      <node id="358932">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="358912" relation="include">
        </childnode>
        <childnode refid="358933" relation="include">
        </childnode>
        <childnode refid="358935" relation="include">
        </childnode>
        <childnode refid="358937" relation="include">
        </childnode>
        <childnode refid="358939" relation="include">
        </childnode>
        <childnode refid="358945" relation="include">
        </childnode>
        <childnode refid="358946" relation="include">
        </childnode>
        <childnode refid="358947" relation="include">
        </childnode>
        <childnode refid="358938" relation="include">
        </childnode>
        <childnode refid="358917" relation="include">
        </childnode>
        <childnode refid="358919" relation="include">
        </childnode>
        <childnode refid="358948" relation="include">
        </childnode>
        <childnode refid="358949" relation="include">
        </childnode>
        <childnode refid="358950" relation="include">
        </childnode>
        <childnode refid="358956" relation="include">
        </childnode>
      </node>
      <node id="358958">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
      </node>
      <node id="358948">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="358992">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="358929" relation="include">
        </childnode>
        <childnode refid="358990" relation="include">
        </childnode>
        <childnode refid="358993" relation="include">
        </childnode>
        <childnode refid="358995" relation="include">
        </childnode>
        <childnode refid="358980" relation="include">
        </childnode>
        <childnode refid="358918" relation="include">
        </childnode>
        <childnode refid="358919" relation="include">
        </childnode>
      </node>
      <node id="359006">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="359007">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="359008" relation="include">
        </childnode>
      </node>
      <node id="359008">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="358944">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="358968">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="359014">
        <label>TGenCollectionProxy.h</label>
      </node>
      <node id="358997">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="358992" relation="include">
        </childnode>
        <childnode refid="358918" relation="include">
        </childnode>
        <childnode refid="358916" relation="include">
        </childnode>
        <childnode refid="358998" relation="include">
        </childnode>
      </node>
      <node id="358949">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="358965">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="358993">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="358929" relation="include">
        </childnode>
        <childnode refid="358942" relation="include">
        </childnode>
        <childnode refid="358924" relation="include">
        </childnode>
        <childnode refid="358994" relation="include">
        </childnode>
      </node>
      <node id="358976">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="358942">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="358943" relation="include">
        </childnode>
        <childnode refid="358944" relation="include">
        </childnode>
      </node>
      <node id="358946">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="358953">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="358991">
        <label>limits.h</label>
      </node>
      <node id="358903">
        <label>TError.h</label>
      </node>
      <node id="358985">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="358986" relation="include">
        </childnode>
      </node>
      <node id="358963">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="358935" relation="include">
        </childnode>
        <childnode refid="358921" relation="include">
        </childnode>
        <childnode refid="358940" relation="include">
        </childnode>
        <childnode refid="358964" relation="include">
        </childnode>
      </node>
      <node id="358912">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358914" relation="include">
        </childnode>
      </node>
      <node id="358915">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="358916" relation="include">
        </childnode>
        <childnode refid="358917" relation="include">
        </childnode>
        <childnode refid="358918" relation="include">
        </childnode>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358919" relation="include">
        </childnode>
        <childnode refid="358920" relation="include">
        </childnode>
        <childnode refid="358921" relation="include">
        </childnode>
        <childnode refid="358922" relation="include">
        </childnode>
        <childnode refid="358923" relation="include">
        </childnode>
      </node>
      <node id="358978">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="358902" relation="include">
        </childnode>
      </node>
      <node id="358994">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="358990" relation="include">
        </childnode>
        <childnode refid="358978" relation="include">
        </childnode>
      </node>
      <node id="358928">
        <label>typeinfo</label>
      </node>
      <node id="358977">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="358948" relation="include">
        </childnode>
        <childnode refid="358902" relation="include">
        </childnode>
      </node>
      <node id="358910">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="358911" relation="include">
        </childnode>
        <childnode refid="358929" relation="include">
        </childnode>
        <childnode refid="358930" relation="include">
        </childnode>
        <childnode refid="358931" relation="include">
        </childnode>
        <childnode refid="358983" relation="include">
        </childnode>
        <childnode refid="358984" relation="include">
        </childnode>
        <childnode refid="358990" relation="include">
        </childnode>
        <childnode refid="358992" relation="include">
        </childnode>
        <childnode refid="358996" relation="include">
        </childnode>
        <childnode refid="358997" relation="include">
        </childnode>
        <childnode refid="358993" relation="include">
        </childnode>
        <childnode refid="358999" relation="include">
        </childnode>
        <childnode refid="358942" relation="include">
        </childnode>
        <childnode refid="359000" relation="include">
        </childnode>
        <childnode refid="359001" relation="include">
        </childnode>
        <childnode refid="358995" relation="include">
        </childnode>
        <childnode refid="358938" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
        <childnode refid="358925" relation="include">
        </childnode>
        <childnode refid="359002" relation="include">
        </childnode>
        <childnode refid="358916" relation="include">
        </childnode>
        <childnode refid="358927" relation="include">
        </childnode>
        <childnode refid="358918" relation="include">
        </childnode>
        <childnode refid="358974" relation="include">
        </childnode>
        <childnode refid="359003" relation="include">
        </childnode>
        <childnode refid="359005" relation="include">
        </childnode>
        <childnode refid="359009" relation="include">
        </childnode>
        <childnode refid="359010" relation="include">
        </childnode>
      </node>
      <node id="358964">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="358945">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="358941">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="358940" relation="include">
        </childnode>
      </node>
      <node id="358936">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="358967">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="358984">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="358985" relation="include">
        </childnode>
        <childnode refid="358931" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358923" relation="include">
        </childnode>
        <childnode refid="358987" relation="include">
        </childnode>
        <childnode refid="358966" relation="include">
        </childnode>
        <childnode refid="358988" relation="include">
        </childnode>
      </node>
      <node id="358934">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="359003">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="359004" relation="include">
        </childnode>
      </node>
      <node id="358957">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="358912" relation="include">
        </childnode>
        <childnode refid="358958" relation="include">
        </childnode>
        <childnode refid="358959" relation="include">
        </childnode>
        <childnode refid="358960" relation="include">
        </childnode>
        <childnode refid="358969" relation="include">
        </childnode>
        <childnode refid="358950" relation="include">
        </childnode>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
        <childnode refid="358938" relation="include">
        </childnode>
        <childnode refid="358971" relation="include">
        </childnode>
        <childnode refid="358972" relation="include">
        </childnode>
      </node>
      <node id="358908">
        <label>TSystem.h</label>
      </node>
      <node id="358938">
        <label>vector</label>
      </node>
      <node id="359011">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="358916" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
      </node>
      <node id="359012">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="358917">
        <label>utility</label>
      </node>
      <node id="359009">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="358947">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="358982">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="358951">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="358961">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="358950">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="358951" relation="include">
        </childnode>
        <childnode refid="358952" relation="include">
        </childnode>
        <childnode refid="358953" relation="include">
        </childnode>
        <childnode refid="358954" relation="include">
        </childnode>
        <childnode refid="358955" relation="include">
        </childnode>
      </node>
      <node id="358919">
        <label>cstdlib</label>
      </node>
      <node id="359002">
        <label>iostream</label>
      </node>
      <node id="358926">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="358933">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="358912" relation="include">
        </childnode>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358934" relation="include">
        </childnode>
      </node>
      <node id="358913">
        <label>cstddef</label>
      </node>
      <node id="358905">
        <label>TClass.h</label>
      </node>
      <node id="358956">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="358957" relation="include">
        </childnode>
        <childnode refid="358973" relation="include">
        </childnode>
        <childnode refid="358933" relation="include">
        </childnode>
        <childnode refid="358948" relation="include">
        </childnode>
        <childnode refid="358949" relation="include">
        </childnode>
      </node>
      <node id="358988">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="358929" relation="include">
        </childnode>
        <childnode refid="358938" relation="include">
        </childnode>
        <childnode refid="358989" relation="include">
        </childnode>
        <childnode refid="358902" relation="include">
        </childnode>
        <childnode refid="358919" relation="include">
        </childnode>
        <childnode refid="358974" relation="include">
        </childnode>
      </node>
      <node id="358960">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="358958" relation="include">
        </childnode>
        <childnode refid="358961" relation="include">
        </childnode>
        <childnode refid="358937" relation="include">
        </childnode>
        <childnode refid="358962" relation="include">
        </childnode>
        <childnode refid="358947" relation="include">
        </childnode>
        <childnode refid="358928" relation="include">
        </childnode>
        <childnode refid="358938" relation="include">
        </childnode>
        <childnode refid="358916" relation="include">
        </childnode>
        <childnode refid="358940" relation="include">
        </childnode>
        <childnode refid="358966" relation="include">
        </childnode>
        <childnode refid="358967" relation="include">
        </childnode>
        <childnode refid="358968" relation="include">
        </childnode>
      </node>
      <node id="358966">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="358931">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="358932" relation="include">
        </childnode>
        <childnode refid="358929" relation="include">
        </childnode>
        <childnode refid="358930" relation="include">
        </childnode>
        <childnode refid="358975" relation="include">
        </childnode>
        <childnode refid="358957" relation="include">
        </childnode>
        <childnode refid="358911" relation="include">
        </childnode>
        <childnode refid="358978" relation="include">
        </childnode>
        <childnode refid="358973" relation="include">
        </childnode>
        <childnode refid="358979" relation="include">
        </childnode>
        <childnode refid="358938" relation="include">
        </childnode>
        <childnode refid="358982" relation="include">
        </childnode>
      </node>
      <node id="358970">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="358904">
        <label>TClassEdit.h</label>
      </node>
      <node id="358962">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="358961" relation="include">
        </childnode>
        <childnode refid="358963" relation="include">
        </childnode>
        <childnode refid="358947" relation="include">
        </childnode>
        <childnode refid="358938" relation="include">
        </childnode>
        <childnode refid="358965" relation="include">
        </childnode>
      </node>
      <node id="358916">
        <label>algorithm</label>
      </node>
      <node id="358907">
        <label>TCollectionProxyInfo.h</label>
      </node>
      <node id="358999">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="358975">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="358976" relation="include">
        </childnode>
        <childnode refid="358933" relation="include">
        </childnode>
        <childnode refid="358973" relation="include">
        </childnode>
        <childnode refid="358939" relation="include">
        </childnode>
        <childnode refid="358957" relation="include">
        </childnode>
        <childnode refid="358932" relation="include">
        </childnode>
        <childnode refid="358937" relation="include">
        </childnode>
        <childnode refid="358911" relation="include">
        </childnode>
        <childnode refid="358948" relation="include">
        </childnode>
        <childnode refid="358913" relation="include">
        </childnode>
        <childnode refid="358977" relation="include">
        </childnode>
      </node>
      <node id="358939">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="358940" relation="include">
        </childnode>
        <childnode refid="358922" relation="include">
        </childnode>
        <childnode refid="358941" relation="include">
        </childnode>
        <childnode refid="358942" relation="include">
        </childnode>
      </node>
      <node id="358996">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="358992" relation="include">
        </childnode>
        <childnode refid="358978" relation="include">
        </childnode>
        <childnode refid="358918" relation="include">
        </childnode>
      </node>
      <node id="358901">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx</label>
        <link refid="TDVCollectionProxy.cxx"/>
        <childnode refid="358902" relation="include">
        </childnode>
        <childnode refid="358903" relation="include">
        </childnode>
        <childnode refid="358904" relation="include">
        </childnode>
        <childnode refid="358905" relation="include">
        </childnode>
        <childnode refid="358906" relation="include">
        </childnode>
        <childnode refid="358907" relation="include">
        </childnode>
        <childnode refid="358908" relation="include">
        </childnode>
        <childnode refid="358909" relation="include">
        </childnode>
        <childnode refid="358910" relation="include">
        </childnode>
        <childnode refid="359013" relation="include">
        </childnode>
      </node>
      <node id="358929">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="358986">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="359001">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="358924">
        <label>memory</label>
      </node>
      <node id="358969">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="358959" relation="include">
        </childnode>
        <childnode refid="358960" relation="include">
        </childnode>
        <childnode refid="358970" relation="include">
        </childnode>
      </node>
      <node id="358979">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="358976" relation="include">
        </childnode>
        <childnode refid="358973" relation="include">
        </childnode>
        <childnode refid="358933" relation="include">
        </childnode>
        <childnode refid="358966" relation="include">
        </childnode>
        <childnode refid="358980" relation="include">
        </childnode>
        <childnode refid="358981" relation="include">
        </childnode>
        <childnode refid="358922" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="da/d4f/classxAOD_1_1TDVCollectionFuncs" prot="public">xAOD::TDVCollectionFuncs</innerclass>
    <innerclass refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff" prot="public">xAOD::TDVCollectionFuncs::TEnvBuff</innerclass>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TDVCollectionProxy.cxx<sp/>660500<sp/>2015-04-14<sp/>14:04:12Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TError.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TClassEdit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TClass.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TBaseClass.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TCollectionProxyInfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TSystem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TList.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/dd6/DataVector_8h" kindref="compound" tooltip="An STL vector of pointers that by default owns its pointed-to elements.">AthContainers/DataVector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/tools/TDVCollectionProxy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1a0549a6166852a29e1a3a469d7f5941ae" kindref="member">safeGetBaseOffset</ref>(<sp/>TClass*<sp/>cls,<sp/>TClass*<sp/>base<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cls-&gt;GetBaseClassOffset(<sp/>base<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>TClass*<sp/><ref refid="dd/d44/namespacexAOD_1af07cbde24a59f1da2e2ee80ca8de9315" kindref="member">classFromDVClass</ref>(<sp/>TClass*<sp/>dvclass<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>up<sp/>the<sp/>class<sp/>name<sp/>into<sp/>template<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>args;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailloc;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TClassEdit::GetSplit(<sp/>dvclass-&gt;GetName(),<sp/>args,<sp/>tailloc<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>args.size()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>be<sp/>the<sp/>element<sp/>type<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>elname<sp/>=<sp/>args[<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>elname.size()<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>the<sp/>element<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>elclass<sp/>=<sp/>TClass::GetClass(<sp/>elname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!elclass)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>class<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elclass;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>TClass*<sp/><ref refid="dd/d44/namespacexAOD_1acafde338d0e6ccce99e04c9b9bd46b43" kindref="member">findDVBase</ref>(<sp/>TClass*<sp/>dvclass<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIter<sp/>next(<sp/>dvclass-&gt;GetListOfBases()<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>TBaseClass*<sp/>bcl<sp/>=<sp/>dynamic_cast&lt;<sp/>TBaseClass*<sp/>&gt;(<sp/>next()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>cc<sp/>=<sp/>bcl-&gt;GetClassPointer();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strncmp(<sp/>cc-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;DataVector&quot;</highlight><highlight class="normal">,<sp/>10<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>bdv<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1acafde338d0e6ccce99e04c9b9bd46b43" kindref="member">findDVBase</ref>(<sp/>cc<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bdv<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bdv;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strncmp(<sp/>cc-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;DataVector&lt;&quot;</highlight><highlight class="normal">,<sp/>11<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/><ref refid="dd/d44/namespacexAOD_1a2e8489da9466e661bc132305ab21298f" kindref="member">findDVElement</ref>(<sp/>TClass*<sp/>cl<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>minimal<sp/>set<sp/>of<sp/>dictionaries<sp/>are<sp/>loaded:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>dummyCl<sp/>=</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TClass::GetClass(<sp/></highlight><highlight class="stringliteral">&quot;DataVector&lt;xAOD::TDVCollectionProxyDummy&gt;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>dummyCl<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::findDVElement&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>load<sp/>the<sp/>dictionary<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DataVector&lt;xAOD::TDVCollectionProxyDummy&gt;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>this<sp/>a<sp/>DV<sp/>class?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>elt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>=<sp/>cl-&gt;GetName();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strncmp(<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;DataVector&lt;&quot;</highlight><highlight class="normal">,<sp/>11<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elt<sp/>=<sp/>std::string(<sp/>name<sp/>+<sp/>11,<sp/>strlen(<sp/>name<sp/>)<sp/>-<sp/>11<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Usually<sp/>the<sp/>full<sp/>DataVector<sp/>name<sp/>includes<sp/>two<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arguments.<sp/>But<sp/>we<sp/>only<sp/>need<sp/>the<sp/>first<sp/>one,<sp/>before<sp/>the<sp/>first<sp/>comma.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string::size_type<sp/>comma<sp/>=<sp/>elt.find(<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>comma<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elt<sp/>=<sp/>elt.substr(<sp/>0,<sp/>comma<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>base<sp/>classes<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIter<sp/>next(<sp/>cl-&gt;GetListOfBases()<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>TBaseClass*<sp/>bcl<sp/>=<sp/>dynamic_cast&lt;<sp/>TBaseClass*<sp/>&gt;(<sp/>next()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>cc<sp/>=<sp/>bcl-&gt;GetClassPointer();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elt<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a2e8489da9466e661bc132305ab21298f" kindref="member">findDVElement</ref>(<sp/>cc<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>elt.empty()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="da/d4f/classxAOD_1_1TDVCollectionFuncs" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs" kindref="compound" tooltip="Helper functions for accessing the container data via the proxy.">TDVCollectionFuncs</ref><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>char*<sp/>&gt;<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aaede777cb0dcb1767d6ac63c0c5b632b" kindref="member" tooltip="The container type. We alias this with the real vector that lives inside the DataVector...">Cont_t</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff" kindref="compound">TEnvBuff</ref><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff_1a01468443a272c96cd379ed7a74334401" kindref="member" tooltip="The index of the last element retrieved.">fIndex</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aaede777cb0dcb1767d6ac63c0c5b632b" kindref="member" tooltip="The container type. We alias this with the real vector that lives inside the DataVector...">Cont_t</ref>*<sp/><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff_1ac95646d4ebe35e38f001481d1562e887" kindref="member" tooltip="Pointer to the container. (Note that the object pointer from the environment will...">fCont</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff_1a6c45ae014eae25afd37f56ff4db2095b" kindref="member" tooltip="The last element pointer to have been returned.">fEltPtr</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff_1a201dc3fe1202a15d2bc4ea6a3cdcd22d" kindref="member">fOffset</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>struct<sp/>TEnvBuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ROOT::TCollectionProxyInfo::Environ&lt;<sp/>TEnvBuff<sp/>&gt;<sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aaede777cb0dcb1767d6ac63c0c5b632b" kindref="member" tooltip="The container type. We alias this with the real vector that lives inside the DataVector...">Cont_t</ref>*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a777eff97f453184f13bb20056d90e7fd" kindref="member">cont</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>&amp;<sp/>e<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>env<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff" kindref="compound">TEnvBuff</ref>&amp;<sp/>buff<sp/>=<sp/>e.fIterator;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff.<ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff_1ac95646d4ebe35e38f001481d1562e887" kindref="member" tooltip="Pointer to the container. (Note that the object pointer from the environment will...">fCont</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1ac59a0cc221b068ddeafec02a473f645d" kindref="member">first</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>&amp;<sp/><sp/>e<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>env<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aaede777cb0dcb1767d6ac63c0c5b632b" kindref="member" tooltip="The container type. We alias this with the real vector that lives inside the DataVector...">Cont_t</ref>&amp;<sp/>c<sp/>=<sp/>*<ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a777eff97f453184f13bb20056d90e7fd" kindref="member">cont</ref>(<sp/>env<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEnvBuff&amp;<sp/>buff<sp/>=<sp/>e.fIterator;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff.fIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.fSize<sp/><sp/>=<sp/>c.size();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>0<sp/>==<sp/>e.fSize<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>start<sp/>=<sp/>c[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff.fEltPtr<sp/>=<sp/>start<sp/>+<sp/>buff.fOffset;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff.fEltPtr;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a74de8489b0c28ec012f0272b64910388" kindref="member">next</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>&amp;<sp/><sp/>e<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>env<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aaede777cb0dcb1767d6ac63c0c5b632b" kindref="member" tooltip="The container type. We alias this with the real vector that lives inside the DataVector...">Cont_t</ref>&amp;<sp/>c<sp/>=<sp/>*<ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a777eff97f453184f13bb20056d90e7fd" kindref="member">cont</ref>(<sp/>env<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEnvBuff&amp;<sp/>buff<sp/>=<sp/>e.fIterator;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff.fIndex<sp/>+=<sp/>e.fIdx;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.fIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>buff.fIndex<sp/>&gt;=<sp/>e.fSize<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>c[<sp/>buff.fIndex<sp/>];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff.fEltPtr<sp/>=<sp/>ptr<sp/>+<sp/>buff.fOffset;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff.fEltPtr;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1adfd682eb7634e4f0b25aa08186b1dccc" kindref="member">size</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>*<sp/>e<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>env<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;fSize<sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a777eff97f453184f13bb20056d90e7fd" kindref="member">cont</ref>(<sp/>env<sp/>)-&gt;size();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(<sp/>e-&gt;fSize<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1ad6f31a9dd48b68c9ec4d28c62c7c36ad" kindref="member">clear</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a777eff97f453184f13bb20056d90e7fd" kindref="member">cont</ref>(<sp/>env<sp/>)-&gt;clear();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aefc7acfaa96cff7260b8a11e139da5a7" kindref="member" tooltip="Return a new environment structure.">create_env</ref>()<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">Env_t</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>methods<sp/>are<sp/>not<sp/>needed<sp/>for<sp/>the<sp/>xAOD<sp/>usage,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>are<sp/>not<sp/>implemented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;typname<sp/>T&gt;<sp/>//<sp/>T<sp/>will<sp/>be<sp/>equal<sp/>to<sp/>final<sp/>class<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1ab0e48510173bddc5e92ee5c34892107e" kindref="member" tooltip="Not implemented for xAOD.">resize</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*obj*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*size*/</highlight><highlight class="normal"><sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;resize<sp/>function<sp/>not<sp/>specified!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a0744fcc983d0ce6c74dce6feecf22372" kindref="member" tooltip="Not implemented for xAOD.">construct</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*from*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*size*/</highlight><highlight class="normal"><sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;construct<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1af0c0ab7d925c9e7825b8ab78bc6f4aa1" kindref="member" tooltip="Not implemented for xAOD.">destruct</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*obj*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*size*/</highlight><highlight class="normal"><sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;destruct<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a34cab90b751612ec14b3ec5847f3c73e" kindref="member" tooltip="Not implemented for xAOD.">feed</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*from*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*to*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*size*/</highlight><highlight class="normal"><sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;feed<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor">#if<sp/>ROOT_VERSION_CODE<sp/>&gt;=<sp/>ROOT_VERSION(<sp/>5,<sp/>34,<sp/>6<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aed3595813a6f7bb76265911e3ab762fc" kindref="member" tooltip="Not implemented for xAOD.">collect</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*from*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*to*/</highlight><highlight class="normal"><sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;collect<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aed3595813a6f7bb76265911e3ab762fc" kindref="member" tooltip="Not implemented for xAOD.">collect</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*env*/</highlight><highlight class="normal"><sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;collect<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>TDVCollectionFuncs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1afa0a4a4fdd5fcc5388ef994fdf5620cc" kindref="member">TDVCollectionProxy::TDVCollectionProxy</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>conttype<sp/>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>TGenCollectionProxy(<sp/>typeid(<sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector</ref>&lt;<sp/>TDVCollectionProxyDummy<sp/>&gt;<sp/>),</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(<sp/>char*<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fName(<sp/>conttype<sp/>),<sp/>fInitialized(<sp/>kFALSE<sp/>),</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fContoff(<sp/>0<sp/>),<sp/>fOffset(<sp/>0<sp/>),<sp/>fEltBase(<sp/>0<sp/>),<sp/>fEltType(<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>element<sp/>size.<sp/><sp/>No<sp/>offset,<sp/>since<sp/>this<sp/>isn&apos;t<sp/>a<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fValDiff<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fValOffset<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>worker<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fSize.call<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1adfd682eb7634e4f0b25aa08186b1dccc" kindref="member">TDVCollectionFuncs::size</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fNext.call<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a74de8489b0c28ec012f0272b64910388" kindref="member">TDVCollectionFuncs::next</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fFirst.call<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1ac59a0cc221b068ddeafec02a473f645d" kindref="member">TDVCollectionFuncs::first</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fClear.call<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1ad6f31a9dd48b68c9ec4d28c62c7c36ad" kindref="member">TDVCollectionFuncs::clear</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ROOT_VERSION_CODE<sp/>&gt;=<sp/>ROOT_VERSION(5,34,6)</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fCollect<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aed3595813a6f7bb76265911e3ab762fc" kindref="member" tooltip="Not implemented for xAOD.">TDVCollectionFuncs::collect</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fCollect.call<sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aed3595813a6f7bb76265911e3ab762fc" kindref="member" tooltip="Not implemented for xAOD.">TDVCollectionFuncs::collect</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fCreateEnv.call<sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aefc7acfaa96cff7260b8a11e139da5a7" kindref="member" tooltip="Return a new environment structure.">TDVCollectionFuncs::create_env</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fResize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1ab0e48510173bddc5e92ee5c34892107e" kindref="member" tooltip="Not implemented for xAOD.">TDVCollectionFuncs::resize</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fConstruct<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a0744fcc983d0ce6c74dce6feecf22372" kindref="member" tooltip="Not implemented for xAOD.">TDVCollectionFuncs::construct</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fDestruct<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1af0c0ab7d925c9e7825b8ab78bc6f4aa1" kindref="member" tooltip="Not implemented for xAOD.">TDVCollectionFuncs::destruct</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fFeed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1a34cab90b751612ec14b3ec5847f3c73e" kindref="member" tooltip="Not implemented for xAOD.">TDVCollectionFuncs::feed</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>TGenCollectionProxy<sp/>knows<sp/>that<sp/>it&apos;s<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fully<sp/>set<sp/>up<sp/>yet:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fValue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ROOT_VERSION_CODE<sp/>&gt;<sp/>ROOT_VERSION(6,2,5)</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fValue.exchange(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fValue;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ROOT_VERSION</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fVal<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fVal;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>container<sp/>pretends<sp/>to<sp/>hold<sp/>objects,<sp/>not<sp/>pointers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPointers<sp/>=<sp/>kFALSE;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>that<sp/>we<sp/>are<sp/>not<sp/>initialized<sp/>yet:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fProperties<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1afa0a4a4fdd5fcc5388ef994fdf5620cc" kindref="member">TDVCollectionProxy::TDVCollectionProxy</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TDVCollectionProxy&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>TGenCollectionProxy(<sp/>rhs<sp/>),</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fName(<sp/>rhs.fName<sp/>),</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fInitialized(<sp/>rhs.fInitialized<sp/>),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fContoff(<sp/>rhs.fContoff<sp/>),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fOffset(<sp/>rhs.fOffset<sp/>),</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fEltBase(<sp/>rhs.fEltBase<sp/>),</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fEltType(<sp/>rhs.fEltType<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>not<sp/>initialised<sp/>yet,<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>base<sp/>class<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>same<sp/>page...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>fInitialized<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fValue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ROOT_VERSION_CODE<sp/>&gt;<sp/>ROOT_VERSION(6,2,5)</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fValue.exchange(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fValue;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ROOT_VERSION</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fVal<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fVal;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1aa1ec4f3fa7c261ac9e3c861fbdab74b2" kindref="member">TDVCollectionProxy::PushProxy</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>objstart<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>base<sp/>class<sp/>stuff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>create<sp/>an<sp/>environment<sp/>buffer<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::TGenCollectionProxy::PushProxy(<sp/>objstart<sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>calculated<sp/>element<sp/>offset<sp/>in<sp/>the<sp/>environment<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TDVCollectionFuncs::TEnvBuff&amp;<sp/>buff<sp/>=</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="da/d4f/classxAOD_1_1TDVCollectionFuncs_1aec43d65be55da447f8c92f45fae93a95" kindref="member" tooltip="The Root proxy environment structure.">TDVCollectionFuncs::Env_t</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>fEnv<sp/>)-&gt;fIterator;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>offset<sp/>needed<sp/>for<sp/>the<sp/>pointer<sp/>operations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buff.fOffset<sp/>=<sp/><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff_1a201dc3fe1202a15d2bc4ea6a3cdcd22d" kindref="member">fOffset</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>address<sp/>of<sp/>the<sp/>underlying<sp/>vector<sp/>of<sp/>the<sp/>DataVector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>adjust<sp/>the<sp/>address<sp/>to<sp/>the<sp/>base<sp/>DataVector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dvstart<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>objstart<sp/>)<sp/>+<sp/>fContoff;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cast<sp/>to<sp/>DV.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector&lt; char &gt;</ref>*<sp/>dv<sp/>=</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector&lt; char &gt;</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>dvstart<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>underlying<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>char*<sp/>&gt;&amp;<sp/>vec<sp/>=<sp/>dv-&gt;<ref refid="d0/d4d/classDataVector_1a0e2e64a35d842a206c96ccfec265df21" kindref="member" tooltip="Return the underlying std::vector of the container.">stdcont</ref>();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>store<sp/>its<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buff.fCont<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>char*<sp/>&gt;*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;vec<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>TVirtualCollectionProxy*<sp/><ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1ae817a177a84c354d9407721402a298bf" kindref="member" tooltip="Clone this object.">TDVCollectionProxy::Generate</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TDVCollectionProxy(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a9fdf047cf54982a6e6c2c7aaac61c9b3" kindref="member" tooltip="Set the resize(...) function used by the proxy.">TDVCollectionProxy::SetResize</ref>(<sp/>Sizing_t<sp/>func<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fResize<sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>TGenCollectionProxy*<sp/>TDVCollectionProxy::InitializeEx(<sp/>Bool_t<sp/>silent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we&apos;re<sp/>initialised<sp/>already:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fInitialized<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>the<sp/>class&apos;s<sp/>dictionary,<sp/>and<sp/>for<sp/>its<sp/>element<sp/>type:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>cl<sp/>=<sp/>TClass::GetClass(<sp/>fName<sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>cl<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy::InitializeEx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>dictionary<sp/>for<sp/>class<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fName.Data()<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it<sp/>is<sp/>a<sp/>DataVector:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>eltname<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a2e8489da9466e661bc132305ab21298f" kindref="member">findDVElement</ref>(<sp/>cl<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>eltname.empty()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy::InitializeEx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>\&quot;%s\&quot;<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>be<sp/>a<sp/>DataVector&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl-&gt;GetName()<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>container<sp/>and<sp/>element<sp/>offsets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FindOffsets(<sp/>eltname.c_str(),<sp/>fName<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>element<sp/>size.<sp/><sp/>No<sp/>offset,<sp/>since<sp/>this<sp/>isn&apos;t<sp/>a<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fValDiff<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fValOffset<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>base<sp/>class<sp/>initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CheckFunctions();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TGenCollectionProxy::InitializeEx(<sp/>silent<sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fSTL_type<sp/>=<sp/>TClassEdit::kList;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>override<sp/>what<sp/>that<sp/>set<sp/>up<sp/>for<sp/>fValue<sp/>and<sp/>fVal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fValue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ROOT_VERSION_CODE<sp/>&gt;<sp/>ROOT_VERSION(6,2,5)</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fValue.exchange(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fValue;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ROOT_VERSION</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fVal<sp/>)<sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fVal;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fValue<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGenCollectionProxy::Value(<sp/>eltname.c_str(),<sp/>false<sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fVal<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGenCollectionProxy::Value(<sp/>*fValue<sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fClass<sp/>=<sp/>cl;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>container<sp/>pretends<sp/>to<sp/>hold<sp/>objects,<sp/>not<sp/>pointers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fPointers<sp/>=<sp/>kFALSE;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>that<sp/>the<sp/>initialisation<sp/>succeeded:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fInitialized<sp/>=<sp/>kTRUE;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ROOT_VERSION_CODE<sp/>&lt;=<sp/>ROOT_VERSION(<sp/>6,<sp/>2,<sp/>5<sp/>)</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fProperties<sp/>|=<sp/>kIsInitialized;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ROOT_VERSION</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TDVCollectionProxy::FindOffsets(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>elttype,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>conttype<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>by<sp/>assuming<sp/>no<sp/>offsets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fContoff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff_1a201dc3fe1202a15d2bc4ea6a3cdcd22d" kindref="member">fOffset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>its<sp/>TClass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>dvclass<sp/>=<sp/>TClass::GetClass(<sp/>conttype<sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>dvclass<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy::FindOffsets&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>class<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>conttype<sp/>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>TClass<sp/>for<sp/>the<sp/>base<sp/>DataVector<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>dvbase<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1acafde338d0e6ccce99e04c9b9bd46b43" kindref="member">findDVBase</ref>(<sp/>dvclass<sp/>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>dvbase<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TClass*<sp/>elclass<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1af07cbde24a59f1da2e2ee80ca8de9315" kindref="member">classFromDVClass</ref>(<sp/>dvclass<sp/>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>elclass<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy::FindOffsets&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>element<sp/>type<sp/>of<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dvclass-&gt;GetName()<sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fEltBase<sp/>=<sp/>elclass;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fEltType<sp/>=<sp/>fEltBase;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>inheritance<sp/>---<sp/>offsets<sp/>are<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>container<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fContoff<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a0549a6166852a29e1a3a469d7f5941ae" kindref="member">safeGetBaseOffset</ref>(<sp/>dvclass,<sp/>dvbase<sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>find<sp/>the<sp/>base<sp/>and<sp/>derived<sp/>element<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>elttype2<sp/>=<sp/>elttype;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>elttype2[<sp/>elttype2.size()<sp/>-<sp/>1<sp/>]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elttype2.erase(<sp/>elttype2.size()<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fEltType<sp/>=<sp/>TClass::GetClass(<sp/>elttype2.c_str()<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fEltBase<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1af07cbde24a59f1da2e2ee80ca8de9315" kindref="member">classFromDVClass</ref>(<sp/>dvbase<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>!<sp/>fEltType<sp/>)<sp/>||<sp/>(<sp/>!<sp/>fEltBase<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TDVCollectionProxy::FindOffsets&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>dictionaries<sp/>for<sp/>DV<sp/>element<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type(s)<sp/>for<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>conttype<sp/>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>offset<sp/>needed<sp/>for<sp/>the<sp/>pointer<sp/>operations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d97/structxAOD_1_1TDVCollectionFuncs_1_1TEnvBuff_1a201dc3fe1202a15d2bc4ea6a3cdcd22d" kindref="member">fOffset</ref><sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a0549a6166852a29e1a3a469d7f5941ae" kindref="member">safeGetBaseOffset</ref>(<sp/>fEltType,<sp/>fEltBase<sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx"/>
  </compounddef>
</doxygen>
