<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d08/classTrig_1_1Combination" kind="class" prot="public">
    <compoundname>Trig::Combination</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="da/d08/classTrig_1_1Combination_1a8af6fed12f136b4833e595721b992b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ::HltNaviChecker</definition>
        <argsstring></argsstring>
        <name>::HltNaviChecker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="151" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/d08/classTrig_1_1Combination_1a85a286af6b796cefee2c3692e855fb41" prot="private" static="no" mutable="no">
        <type>std::vector&lt; const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> * &gt;</type>
        <definition>std::vector&lt;const HLT::TriggerElement*&gt; Trig::Combination::m_tes</definition>
        <argsstring></argsstring>
        <name>m_tes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="158" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d08/classTrig_1_1Combination_1a80624d2e9630a75487ec771909defe3c" prot="private" static="no" mutable="no">
        <type>const <ref refid="d2/df9/classTrig_1_1CacheGlobalMemory" kindref="compound">Trig::CacheGlobalMemory</ref> *</type>
        <definition>const Trig::CacheGlobalMemory* Trig::Combination::m_cgm</definition>
        <argsstring></argsstring>
        <name>m_cgm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="159" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a8534c13a7301ffff2859eb5604649e43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Trig::Combination::Combination</definition>
        <argsstring>()</argsstring>
        <name>Combination</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/Combination.cxx" bodystart="17" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1afa6c4abfbfdbcbda61f5196a46822c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Trig::Combination::Combination</definition>
        <argsstring>(const std::vector&lt; HLT::TriggerElement * &gt; &amp;tes, const Trig::CacheGlobalMemory *cgm)</argsstring>
        <name>Combination</name>
        <param>
          <type>const std::vector&lt; <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> * &gt; &amp;</type>
          <declname>tes</declname>
        </param>
        <param>
          <type>const <ref refid="d2/df9/classTrig_1_1CacheGlobalMemory" kindref="compound">Trig::CacheGlobalMemory</ref> *</type>
          <declname>cgm</declname>
        </param>
        <briefdescription>
<para>normal constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/Combination.cxx" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a0576e3ac6640c517d897bb7f13971822" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="de/dd5/classTrig_1_1TypelessFeature" kindref="compound">Trig::TypelessFeature</ref> &gt;</type>
        <definition>const std::vector&lt; Trig::TypelessFeature &gt; Trig::Combination::typelessGet</definition>
        <argsstring>(HLT::class_id_type clid, const std::string &amp;label=&quot;&quot;, unsigned int condition=TrigDefs::Physics, const std::string &amp;teName=&quot;&quot;) const </argsstring>
        <name>typelessGet</name>
        <param>
          <type>HLT::class_id_type</type>
          <declname>clid</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Typeless version of get method. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clid</parametername>
</parameternamelist>
<parameterdescription>
<para>must be clid of type as stored. No flattening supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/Combination.cxx" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a0f22c3e759e690761e8c222f330d1c9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>const std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &gt;</type>
        <definition>const std::vector&lt; Trig::Feature&lt; T &gt; &gt; Trig::Combination::get</definition>
        <argsstring>(const std::string &amp;label=&quot;&quot;, unsigned int condition=TrigDefs::Physics, const std::string &amp;teName=&quot;&quot;) const </argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Method used to get objects. This is main functionality of combination class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>the keyword with which the objects were labeled in <ref refid="dc/d8d/namespaceHLT" kindref="compound">HLT</ref> algorithms (if none given most recent is returned) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>switch wether to return only objects from passed RoIs (when Physics) or also from failed (alsoDeactivateTEs) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>teName</parametername>
</parameternamelist>
<parameterdescription>
<para>to get features from TEs of specific TEs (it is to be used in combination with switch alsoDeactivateTEs or composite triggers) super-expert usecase </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="167" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a3c41dd93c745c934f01f7a2cea942eac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Trig::Feature&lt;xAOD::IParticle&gt; &gt; Trig::Combination::getIParticle</definition>
        <argsstring>(HLT::class_id_type clid, const std::string &amp;container_name, const std::string &amp;label=&quot;&quot;, unsigned int condition=TrigDefs::Physics, const std::string &amp;teName=&quot;&quot;) const </argsstring>
        <name>getIParticle</name>
        <param>
          <type>HLT::class_id_type</type>
          <declname>clid</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>container_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Experimental flattened get for IParticle types. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clid</parametername>
</parameternamelist>
<parameterdescription>
<para>must be clid of type as stored. No flattening supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="84" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a13716d2a25dea79be31b22fe47cfe66b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CONTAINER</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref>&lt; ELEMENT_OF&lt; CONTAINER &gt; &gt; &gt;</type>
        <definition>std::vector&lt;Feature&lt;ELEMENT_OF&lt;CONTAINER&gt; &gt; &gt; Trig::Combination::elementFeature</definition>
        <argsstring>(const std::string &amp;label=&quot;&quot;, unsigned int condition=TrigDefs::Physics, const std::string &amp;teName=&quot;&quot;) const </argsstring>
        <name>elementFeature</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>get element type features (those attached to TE as single instance of a trigger type) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a56598a7bd7443e53eff3ebdab0bc4c44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CONTAINER</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref>&lt; CONTAINER &gt; &gt;</type>
        <definition>std::vector&lt;Feature&lt;CONTAINER&gt; &gt; Trig::Combination::containerFeature</definition>
        <argsstring>(const std::string &amp;label=&quot;&quot;, unsigned int condition=TrigDefs::Physics, const std::string &amp;teName=&quot;&quot;) const </argsstring>
        <name>containerFeature</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>get container type features (those attached to TE as container of a trigger type) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="105" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a46d77169e3d83fdd842ddc802caebda4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CONTAINER</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref>&lt; ELEMENT_OF&lt; CONTAINER &gt; &gt; &gt;</type>
        <definition>std::vector&lt;Feature&lt;ELEMENT_OF&lt;CONTAINER&gt; &gt; &gt; Trig::Combination::flattenedContainerFeature</definition>
        <argsstring>(const std::string &amp;label=&quot;&quot;, unsigned int condition=TrigDefs::Physics, const std::string &amp;teName=&quot;&quot;) const </argsstring>
        <name>flattenedContainerFeature</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>get container type features flattened as Features (those attached to TE as container of a trigger type) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1abf60cd35c24c3959f8392aa511942c84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Trig::Combination::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Size of combination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1af4cd399f23fe89ae3635ba864f3cd6ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trig::Combination::active</definition>
        <argsstring>() const </argsstring>
        <name>active</name>
        <briefdescription>
<para>Returns the state of the combination i.e. if all TEs are passed by respective hypothesis. This method can be used to differentiate between passed/not-passed objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="128" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/Combination.cxx" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a90ceec0b44989f6aaebd68303d912f57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;const HLT::TriggerElement*&gt;&amp; Trig::Combination::tes</definition>
        <argsstring>() const </argsstring>
        <name>tes</name>
        <briefdescription>
<para>trigger elements in the combination can be used directly with ancestor method </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="136" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1afc27ff23d14962ccb0744f0f86135617" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::Combination::collect</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; T &gt; &gt; &amp;data, const std::string &amp;label, unsigned int condition, const std::string &amp;teName) const </argsstring>
        <name>collect</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
        </param>
        <briefdescription>
<para>Method used to get objects. This is called for each TE in the combination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a65df15f7569530efdebb2c15ed7e1bc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trig::Combination::operator==</definition>
        <argsstring>(const Combination &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="da/d08/classTrig_1_1Combination" kindref="compound">Combination</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="146" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/Combination.cxx" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a795dc630716f9c5837f777a87c2a724a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trig::Combination::operator&lt;</definition>
        <argsstring>(const Combination &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="da/d08/classTrig_1_1Combination" kindref="compound">Combination</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="147" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/Combination.cxx" bodystart="54" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="da/d08/classTrig_1_1Combination_1a2df6e011f43ba1c73216f67e76a5fb34" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
        <definition>HLT::TrigNavStructure * Trig::Combination::navigation</definition>
        <argsstring>() const </argsstring>
        <name>navigation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="156" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/Combination.cxx" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>connector between chains and object It store single combination of trigger elements. Thanks to templates methods <ref refid="da/d08/classTrig_1_1Combination_1a0f22c3e759e690761e8c222f330d1c9a" kindref="member">get()</ref> it is able to invoke features retrieval and return actual objects (wrapped into <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref> class). <simplesect kind="warning"><para>It only looks simple. </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="3894">
        <label>Trig::CacheGlobalMemory</label>
        <link refid="d2/df9/classTrig_1_1CacheGlobalMemory"/>
        <childnode refid="3895" relation="public-inheritance">
        </childnode>
        <childnode refid="3896" relation="usage">
          <edgelabel>m_expressStreamContainer</edgelabel>
        </childnode>
        <childnode refid="3901" relation="usage">
          <edgelabel>m_deleteAtEndOfEvent</edgelabel>
        </childnode>
        <childnode refid="3902" relation="usage">
          <edgelabel>m_navigation</edgelabel>
        </childnode>
        <childnode refid="3907" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="3908" relation="usage">
          <edgelabel>m_confChains</edgelabel>
        </childnode>
        <childnode refid="3909" relation="usage">
          <edgelabel>m_unpacker</edgelabel>
        </childnode>
      </node>
      <node id="3906">
        <label>asg::AsgMessaging</label>
        <link refid="d1/d97/classasg_1_1AsgMessaging"/>
      </node>
      <node id="3907">
        <label>StoreGateSvc</label>
        <link refid="dd/d95/classStoreGateSvc"/>
      </node>
      <node id="3900">
        <label>SG::IsMostDerivedFlag</label>
        <link refid="df/d76/classSG_1_1IsMostDerivedFlag"/>
      </node>
      <node id="3895">
        <label>Trig::Logger</label>
        <link refid="da/d3f/classTrig_1_1Logger"/>
      </node>
      <node id="3909">
        <label>Trig::IDecisionUnpacker</label>
        <link refid="de/daa/classTrig_1_1IDecisionUnpacker"/>
      </node>
      <node id="3905">
        <label>HLT::TrigHolderStructure</label>
        <link refid="da/d94/classHLT_1_1TrigHolderStructure"/>
        <childnode refid="3906" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3908">
        <label>TrigConf::HLTChainList</label>
        <link refid="d0/dfb/classTrigConf_1_1HLTChainList"/>
      </node>
      <node id="3897">
        <label>KeepFirstTemplateArguments&lt; 1 &gt;</label>
        <link refid="d6/de5/classKeepFirstTemplateArguments"/>
      </node>
      <node id="3899">
        <label>DataModel_detail::DVLInfoBase</label>
        <link refid="da/d8a/classDataModel__detail_1_1DVLInfoBase"/>
      </node>
      <node id="3904">
        <label>HLT::TriggerElementFactory</label>
        <link refid="d2/de9/classHLT_1_1TriggerElementFactory"/>
      </node>
      <node id="3901">
        <label>Trig::CacheGlobalMemory::AnyTypeDeleter</label>
      </node>
      <node id="3896">
        <label>DataVector&lt; T, BASE &gt;</label>
        <link refid="d0/d4d/classDataVector"/>
        <childnode refid="3897" relation="private-inheritance">
        </childnode>
        <childnode refid="3898" relation="usage">
          <edgelabel>s_info</edgelabel>
        </childnode>
        <childnode refid="3900" relation="usage">
          <edgelabel>m_isMostDerived</edgelabel>
        </childnode>
      </node>
      <node id="3903">
        <label>HLT::TriggerElement</label>
        <link refid="dd/db8/classHLT_1_1TriggerElement"/>
      </node>
      <node id="3893">
        <label>Trig::Combination</label>
        <link refid="da/d08/classTrig_1_1Combination"/>
        <childnode refid="3894" relation="usage">
          <edgelabel>m_cgm</edgelabel>
        </childnode>
      </node>
      <node id="3898">
        <label>DataModel_detail::DVLInfo&lt; DataVector&lt; T &gt; &gt;</label>
        <link refid="df/d12/classDataModel__detail_1_1DVLInfo"/>
        <childnode refid="3899" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3902">
        <label>HLT::TrigNavStructure</label>
        <link refid="d9/d08/classHLT_1_1TrigNavStructure"/>
        <childnode refid="3903" relation="usage">
          <edgelabel>m_unspecifiedTE</edgelabel>
        </childnode>
        <childnode refid="3904" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="3905" relation="usage">
          <edgelabel>m_holderstorage</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h" bodystart="47" bodyend="160"/>
    <listofallmembers>
      <member refid="da/d08/classTrig_1_1Combination_1a8af6fed12f136b4833e595721b992b27" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>::HltNaviChecker</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1af4cd399f23fe89ae3635ba864f3cd6ba" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>active</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1afc27ff23d14962ccb0744f0f86135617" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>collect</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a8534c13a7301ffff2859eb5604649e43" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>Combination</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1afa6c4abfbfdbcbda61f5196a46822c80" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>Combination</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a56598a7bd7443e53eff3ebdab0bc4c44" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>containerFeature</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a13716d2a25dea79be31b22fe47cfe66b" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>elementFeature</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a46d77169e3d83fdd842ddc802caebda4" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>flattenedContainerFeature</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a0f22c3e759e690761e8c222f330d1c9a" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>get</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a3c41dd93c745c934f01f7a2cea942eac" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>getIParticle</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a80624d2e9630a75487ec771909defe3c" prot="private" virt="non-virtual"><scope>Trig::Combination</scope><name>m_cgm</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a85a286af6b796cefee2c3692e855fb41" prot="private" virt="non-virtual"><scope>Trig::Combination</scope><name>m_tes</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a2df6e011f43ba1c73216f67e76a5fb34" prot="private" virt="non-virtual"><scope>Trig::Combination</scope><name>navigation</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a795dc630716f9c5837f777a87c2a724a" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>operator&lt;</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a65df15f7569530efdebb2c15ed7e1bc1" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>operator==</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1abf60cd35c24c3959f8392aa511942c84" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>size</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a90ceec0b44989f6aaebd68303d912f57" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>tes</name></member>
      <member refid="da/d08/classTrig_1_1Combination_1a0576e3ac6640c517d897bb7f13971822" prot="public" virt="non-virtual"><scope>Trig::Combination</scope><name>typelessGet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
