<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d1f/gt__SystematicSet_8cxx" kind="file">
    <compoundname>gt_SystematicSet.cxx</compoundname>
    <includes refid="d4/db8/SystematicSet_8h" local="no">PATInterfaces/SystematicSet.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <includes local="no">cmath</includes>
    <includes refid="d8/d73/gtest_8h" local="no">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="226026">
        <label>sys/stat.h</label>
      </node>
      <node id="226052">
        <label>gtest/gtest-printers.h</label>
        <link refid="d0/d6d/gtest-printers_8h_source"/>
        <childnode refid="226017" relation="include">
        </childnode>
        <childnode refid="226029" relation="include">
        </childnode>
        <childnode refid="226007" relation="include">
        </childnode>
        <childnode refid="226030" relation="include">
        </childnode>
        <childnode refid="226006" relation="include">
        </childnode>
        <childnode refid="226019" relation="include">
        </childnode>
        <childnode refid="226018" relation="include">
        </childnode>
        <childnode refid="226053" relation="include">
        </childnode>
      </node>
      <node id="226057">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="de/dce/gtest-typed-test_8h_source"/>
        <childnode refid="226019" relation="include">
        </childnode>
        <childnode refid="226044" relation="include">
        </childnode>
      </node>
      <node id="226002">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/gt_SystematicSet.cxx</label>
        <link refid="gt_SystematicSet.cxx"/>
        <childnode refid="226003" relation="include">
        </childnode>
        <childnode refid="226012" relation="include">
        </childnode>
        <childnode refid="226014" relation="include">
        </childnode>
        <childnode refid="226015" relation="include">
        </childnode>
      </node>
      <node id="226048">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="dc/df2/gtest-param-util_8h_source"/>
        <childnode refid="226020" relation="include">
        </childnode>
        <childnode refid="226049" relation="include">
        </childnode>
        <childnode refid="226005" relation="include">
        </childnode>
        <childnode refid="226030" relation="include">
        </childnode>
        <childnode refid="226006" relation="include">
        </childnode>
        <childnode refid="226018" relation="include">
        </childnode>
        <childnode refid="226050" relation="include">
        </childnode>
        <childnode refid="226019" relation="include">
        </childnode>
        <childnode refid="226052" relation="include">
        </childnode>
      </node>
      <node id="226058">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="db/d6e/gtest__pred__impl_8h_source"/>
      </node>
      <node id="226039">
        <label>iomanip</label>
      </node>
      <node id="226008">
        <label>functional</label>
      </node>
      <node id="226016">
        <label>limits</label>
      </node>
      <node id="226053">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="da/db0/internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="226051">
        <label>assert.h</label>
      </node>
      <node id="226049">
        <label>iterator</label>
      </node>
      <node id="226038">
        <label>float.h</label>
      </node>
      <node id="226018">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="d5/da1/gtest-internal_8h_source"/>
        <childnode refid="226019" relation="include">
        </childnode>
        <childnode refid="226020" relation="include">
        </childnode>
        <childnode refid="226038" relation="include">
        </childnode>
        <childnode refid="226024" relation="include">
        </childnode>
        <childnode refid="226039" relation="include">
        </childnode>
        <childnode refid="226016" relation="include">
        </childnode>
        <childnode refid="226040" relation="include">
        </childnode>
        <childnode refid="226005" relation="include">
        </childnode>
        <childnode refid="226007" relation="include">
        </childnode>
        <childnode refid="226006" relation="include">
        </childnode>
        <childnode refid="226041" relation="include">
        </childnode>
        <childnode refid="226042" relation="include">
        </childnode>
        <childnode refid="226043" relation="include">
        </childnode>
        <childnode refid="226044" relation="include">
        </childnode>
      </node>
      <node id="226022">
        <label>stdlib.h</label>
      </node>
      <node id="226014">
        <label>cmath</label>
      </node>
      <node id="226007">
        <label>string</label>
      </node>
      <node id="226040">
        <label>map</label>
      </node>
      <node id="226054">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="dc/db7/gtest-param-util-generated_8h_source"/>
        <childnode refid="226048" relation="include">
        </childnode>
        <childnode refid="226019" relation="include">
        </childnode>
      </node>
      <node id="226021">
        <label>stddef.h</label>
      </node>
      <node id="226037">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="d1/d63/gtest-tuple_8h_source"/>
        <childnode refid="226030" relation="include">
        </childnode>
      </node>
      <node id="226045">
        <label>gtest/gtest-death-test.h</label>
        <link refid="d4/d59/gtest-death-test_8h_source"/>
        <childnode refid="226046" relation="include">
        </childnode>
      </node>
      <node id="226017">
        <label>ostream</label>
      </node>
      <node id="226047">
        <label>gtest/gtest-param-test.h</label>
        <link refid="d0/d31/gtest-param-test_8h_source"/>
        <childnode refid="226019" relation="include">
        </childnode>
        <childnode refid="226030" relation="include">
        </childnode>
        <childnode refid="226018" relation="include">
        </childnode>
        <childnode refid="226048" relation="include">
        </childnode>
        <childnode refid="226054" relation="include">
        </childnode>
      </node>
      <node id="226055">
        <label>gtest/gtest_prod.h</label>
        <link refid="d4/db1/gtest__prod_8h_source"/>
      </node>
      <node id="226003">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="226004" relation="include">
        </childnode>
        <childnode refid="226005" relation="include">
        </childnode>
        <childnode refid="226006" relation="include">
        </childnode>
        <childnode refid="226007" relation="include">
        </childnode>
        <childnode refid="226008" relation="include">
        </childnode>
        <childnode refid="226009" relation="include">
        </childnode>
        <childnode refid="226010" relation="include">
        </childnode>
      </node>
      <node id="226010">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="226004" relation="include">
        </childnode>
        <childnode refid="226011" relation="include">
        </childnode>
        <childnode refid="226005" relation="include">
        </childnode>
        <childnode refid="226007" relation="include">
        </childnode>
      </node>
      <node id="226025">
        <label>sys/types.h</label>
      </node>
      <node id="226043">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="dc/d79/gtest-filepath_8h_source"/>
        <childnode refid="226042" relation="include">
        </childnode>
      </node>
      <node id="226024">
        <label>string.h</label>
      </node>
      <node id="226036">
        <label>typeinfo</label>
      </node>
      <node id="226004">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="226041">
        <label>gtest/gtest-message.h</label>
        <link refid="d6/da4/gtest-message_8h_source"/>
        <childnode refid="226016" relation="include">
        </childnode>
        <childnode refid="226019" relation="include">
        </childnode>
      </node>
      <node id="226033">
        <label>unistd.h</label>
      </node>
      <node id="226006">
        <label>vector</label>
      </node>
      <node id="226032">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="d5/d66/custom_2gtest-port_8h_source"/>
      </node>
      <node id="226030">
        <label>utility</label>
      </node>
      <node id="226050">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="d0/d03/gtest-linked__ptr_8h_source"/>
        <childnode refid="226022" relation="include">
        </childnode>
        <childnode refid="226051" relation="include">
        </childnode>
        <childnode refid="226019" relation="include">
        </childnode>
      </node>
      <node id="226029">
        <label>sstream</label>
      </node>
      <node id="226013">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="226015">
        <label>gtest/gtest.h</label>
        <link refid="d8/d73/gtest_8h_source"/>
        <childnode refid="226016" relation="include">
        </childnode>
        <childnode refid="226017" relation="include">
        </childnode>
        <childnode refid="226006" relation="include">
        </childnode>
        <childnode refid="226018" relation="include">
        </childnode>
        <childnode refid="226042" relation="include">
        </childnode>
        <childnode refid="226045" relation="include">
        </childnode>
        <childnode refid="226041" relation="include">
        </childnode>
        <childnode refid="226047" relation="include">
        </childnode>
        <childnode refid="226052" relation="include">
        </childnode>
        <childnode refid="226055" relation="include">
        </childnode>
        <childnode refid="226056" relation="include">
        </childnode>
        <childnode refid="226057" relation="include">
        </childnode>
        <childnode refid="226058" relation="include">
        </childnode>
      </node>
      <node id="226011">
        <label>iosfwd</label>
      </node>
      <node id="226042">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="d0/d45/gtest-string_8h_source"/>
        <childnode refid="226024" relation="include">
        </childnode>
        <childnode refid="226007" relation="include">
        </childnode>
        <childnode refid="226019" relation="include">
        </childnode>
      </node>
      <node id="226028">
        <label>iostream</label>
      </node>
      <node id="226034">
        <label>strings.h</label>
      </node>
      <node id="226044">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="d9/d97/gtest-type-util_8h_source"/>
        <childnode refid="226019" relation="include">
        </childnode>
      </node>
      <node id="226020">
        <label>ctype.h</label>
      </node>
      <node id="226019">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="d3/dc9/gtest-port_8h_source"/>
        <childnode refid="226020" relation="include">
        </childnode>
        <childnode refid="226021" relation="include">
        </childnode>
        <childnode refid="226022" relation="include">
        </childnode>
        <childnode refid="226023" relation="include">
        </childnode>
        <childnode refid="226024" relation="include">
        </childnode>
        <childnode refid="226025" relation="include">
        </childnode>
        <childnode refid="226026" relation="include">
        </childnode>
        <childnode refid="226027" relation="include">
        </childnode>
        <childnode refid="226028" relation="include">
        </childnode>
        <childnode refid="226029" relation="include">
        </childnode>
        <childnode refid="226007" relation="include">
        </childnode>
        <childnode refid="226030" relation="include">
        </childnode>
        <childnode refid="226006" relation="include">
        </childnode>
        <childnode refid="226031" relation="include">
        </childnode>
        <childnode refid="226032" relation="include">
        </childnode>
        <childnode refid="226033" relation="include">
        </childnode>
        <childnode refid="226034" relation="include">
        </childnode>
        <childnode refid="226035" relation="include">
        </childnode>
        <childnode refid="226036" relation="include">
        </childnode>
        <childnode refid="226037" relation="include">
        </childnode>
      </node>
      <node id="226005">
        <label>set</label>
      </node>
      <node id="226046">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="d0/d1a/gtest-death-test-internal_8h_source"/>
        <childnode refid="226018" relation="include">
        </childnode>
        <childnode refid="226023" relation="include">
        </childnode>
      </node>
      <node id="226012">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="226013" relation="include">
        </childnode>
      </node>
      <node id="226027">
        <label>algorithm</label>
      </node>
      <node id="226035">
        <label>regex.h</label>
      </node>
      <node id="226031">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="d6/d76/gtest-port-arch_8h_source"/>
      </node>
      <node id="226023">
        <label>stdio.h</label>
      </node>
      <node id="226056">
        <label>gtest/gtest-test-part.h</label>
        <link refid="d1/d01/gtest-test-part_8h_source"/>
        <childnode refid="226011" relation="include">
        </childnode>
        <childnode refid="226006" relation="include">
        </childnode>
        <childnode refid="226018" relation="include">
        </childnode>
        <childnode refid="226042" relation="include">
        </childnode>
      </node>
      <node id="226009">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="da/d1f/gt__SystematicSet_8cxx_1a81a2a6b37b4705f9455c73261dab0f11" prot="public" static="no">
        <name>ASSERT_SUCCESS</name>
        <param><defname>x</defname></param>
        <initializer>ASSERT_EQ (asg::CheckHelper&lt;decltype(x)&gt;::successCode(), x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/gt_SystematicSet.cxx" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/gt_SystematicSet.cxx" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="da/d1f/gt__SystematicSet_8cxx_1a50d031dcf90729b5e65711ac0e352ec2" prot="public" static="no">
        <name>ASSERT_FAILURE</name>
        <param><defname>x</defname></param>
        <initializer>ASSERT_EQ (asg::CheckHelper&lt;decltype(x)&gt;::failureCode(), x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/gt_SystematicSet.cxx" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/gt_SystematicSet.cxx" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2015.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;PATInterfaces/SystematicSet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">CP;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_SUCCESS(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/>ASSERT_EQ<sp/>(asg::CheckHelper&lt;decltype(x)&gt;::successCode(),<sp/>x)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_FAILURE(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/>ASSERT_EQ<sp/>(asg::CheckHelper&lt;decltype(x)&gt;::failureCode(),<sp/>x)</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">TEST<sp/>(SystematicSetTest,<sp/>getToyVariation_empty)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(0u,<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">.getToyVariationByBaseName(</highlight><highlight class="stringliteral">&quot;TEST&quot;</highlight><highlight class="normal">).first);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(0,<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">.getToyVariationByBaseName(</highlight><highlight class="stringliteral">&quot;TEST&quot;</highlight><highlight class="normal">).second);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">TEST<sp/>(SystematicSetTest,<sp/>getToyVariation_single)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">.insert<sp/>(SystematicVariation::makeToyVariation<sp/>(</highlight><highlight class="stringliteral">&quot;TEST&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>2.1234));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(3u,<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">.getToyVariationByBaseName(</highlight><highlight class="stringliteral">&quot;TEST&quot;</highlight><highlight class="normal">).first);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Systematic<sp/>variations<sp/>are<sp/>accurate<sp/>up<sp/>to<sp/>four<sp/>digits<sp/>after<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>period,<sp/>so<sp/>I<sp/>check<sp/>that<sp/>it<sp/>is<sp/>accurate<sp/>as<sp/>an<sp/>integer,<sp/>instead<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>accurate<sp/>as<sp/>a<sp/>float.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(21234,<sp/>rint<sp/>(</highlight><highlight class="keyword">set</highlight><highlight class="normal">.getToyVariationByBaseName(</highlight><highlight class="stringliteral">&quot;TEST&quot;</highlight><highlight class="normal">).second<sp/>*<sp/>10000));</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SystematicSetFilterTest<sp/>:<sp/>testing::Test</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">SystematicVariation</ref><sp/>continuous_variation;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">SystematicVariation</ref><sp/>continuous_ensemble;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">SystematicVariation</ref><sp/>toy_variation;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">SystematicVariation</ref><sp/>toy_ensemble;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>full_set;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>SystematicSetFilterTest<sp/>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>continuous_variation<sp/>=<sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">SystematicVariation</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CONTINUOUS_VARIATION&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>continuous_ensemble<sp/>=<sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">SystematicVariation</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CONTINUOUS_ENSEMBLE&quot;</highlight><highlight class="normal">,<sp/>SystematicVariation::CONTINUOUS);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>toy_variation<sp/>=<sp/>SystematicVariation::makeToyVariation<sp/>(</highlight><highlight class="stringliteral">&quot;TOY_VARIATION&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>toy_ensemble<sp/>=<sp/>SystematicVariation::makeToyEnsemble<sp/>(</highlight><highlight class="stringliteral">&quot;TOY_ENSEMBLE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>full_set.insert<sp/>(continuous_variation);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>full_set.insert<sp/>(continuous_ensemble);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>full_set.insert<sp/>(toy_variation);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>full_set.insert<sp/>(toy_ensemble);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>empty)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>ASSERT_SUCCESS<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(0u,<sp/>filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>());</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>continuous_variation)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(continuous_variation);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>ASSERT_SUCCESS<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(1u,<sp/>filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(*filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>(),<sp/>continuous_variation);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>continuous_variation_from_ensemble)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(SystematicVariation::makeContinuousEnsemble<sp/>(continuous_variation.basename()));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>ASSERT_SUCCESS<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(1u,<sp/>filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(*filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>(),<sp/>continuous_variation);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>continuous_variation_from_ensemble_discrete)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(SystematicVariation::makeContinuousEnsemble<sp/>(continuous_variation.basename()));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(continuous_variation);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>ASSERT_SUCCESS<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(1u,<sp/>filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(*filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>(),<sp/>continuous_variation);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>continuous_variation_parameter_missmatch)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">SystematicVariation</ref><sp/>(continuous_variation.basename(),<sp/>continuous_variation.parameter()+1));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>ASSERT_FAILURE<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>continuous_variation_toy_missmatch)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(SystematicVariation::makeToyEnsemble<sp/>(continuous_variation.basename()));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>ASSERT_FAILURE<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>continuous_ensemble)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(continuous_ensemble);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>ASSERT_SUCCESS<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(1u,<sp/>filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(*filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>(),<sp/>continuous_ensemble);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>toy_variation)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(toy_variation);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>ASSERT_SUCCESS<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(1u,<sp/>filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(*filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>(),<sp/>toy_variation);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>toy_variation_from_ensemble)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(SystematicVariation::makeToyEnsemble<sp/>(toy_variation.basename()));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>ASSERT_SUCCESS<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(1u,<sp/>filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(*filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>(),<sp/>toy_variation);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>toy_variation_continuous_missmatch)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(SystematicVariation::makeContinuousEnsemble<sp/>(toy_variation.basename()));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>ASSERT_FAILURE<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">TEST_F<sp/>(SystematicSetFilterTest,<sp/>toy_ensemble)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">SystematicSet</ref><sp/>affecting,<sp/>filtered;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>affecting.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref><sp/>(toy_ensemble);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>ASSERT_SUCCESS<sp/>(SystematicSet::filterForAffectingSystematics<sp/>(full_set,<sp/>affecting,<sp/>filtered));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(1u,<sp/>filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>ASSERT_EQ<sp/>(*filtered.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>(),<sp/>toy_ensemble);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>::testing::InitGoogleTest<sp/>(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/gt_SystematicSet.cxx"/>
  </compounddef>
</doxygen>
