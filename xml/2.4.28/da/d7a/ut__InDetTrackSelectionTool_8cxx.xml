<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d7a/ut__InDetTrackSelectionTool_8cxx" kind="file">
    <compoundname>ut_InDetTrackSelectionTool.cxx</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cassert</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TError.h</includes>
    <includes refid="d7/de0/InDetTrackSelectionTool_8h" local="yes">InDetTrackSelectionTool/InDetTrackSelectionTool.h</includes>
    <incdepgraph>
      <node id="137366">
        <label>list</label>
      </node>
      <node id="137375">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="137360" relation="include">
        </childnode>
        <childnode refid="137367" relation="include">
        </childnode>
        <childnode refid="137352" relation="include">
        </childnode>
        <childnode refid="137356" relation="include">
        </childnode>
        <childnode refid="137300" relation="include">
        </childnode>
      </node>
      <node id="137360">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="137331">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="137382">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="137383" relation="include">
        </childnode>
        <childnode refid="137361" relation="include">
        </childnode>
        <childnode refid="137268" relation="include">
        </childnode>
        <childnode refid="137384" relation="include">
        </childnode>
      </node>
      <node id="137348">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="137299" relation="include">
        </childnode>
        <childnode refid="137301" relation="include">
        </childnode>
        <childnode refid="137268" relation="include">
        </childnode>
        <childnode refid="137306" relation="include">
        </childnode>
      </node>
      <node id="137276">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="137277" relation="include">
        </childnode>
        <childnode refid="137278" relation="include">
        </childnode>
        <childnode refid="137279" relation="include">
        </childnode>
        <childnode refid="137280" relation="include">
        </childnode>
      </node>
      <node id="137350">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="137314" relation="include">
        </childnode>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137351" relation="include">
        </childnode>
        <childnode refid="137315" relation="include">
        </childnode>
      </node>
      <node id="137349">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="137395">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="137396" relation="include">
        </childnode>
        <childnode refid="137397" relation="include">
        </childnode>
        <childnode refid="137398" relation="include">
        </childnode>
      </node>
      <node id="137305">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="137306">
        <label>functional</label>
      </node>
      <node id="137357">
        <label>boost/version.hpp</label>
      </node>
      <node id="137304">
        <label>limits</label>
      </node>
      <node id="137351">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="137329">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="137280">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="137302">
        <label>iterator</label>
      </node>
      <node id="137316">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="137277" relation="include">
        </childnode>
        <childnode refid="137317" relation="include">
        </childnode>
      </node>
      <node id="137381">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="137387">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="137388" relation="include">
        </childnode>
        <childnode refid="137355" relation="include">
        </childnode>
        <childnode refid="137304" relation="include">
        </childnode>
        <childnode refid="137306" relation="include">
        </childnode>
        <childnode refid="137389" relation="include">
        </childnode>
      </node>
      <node id="137295">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="137296" relation="include">
        </childnode>
        <childnode refid="137307" relation="include">
        </childnode>
        <childnode refid="137308" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
        <childnode refid="137277" relation="include">
        </childnode>
      </node>
      <node id="137427">
        <label>TrkExInterfaces/IExtrapolator.h</label>
      </node>
      <node id="137318">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137269" relation="include">
        </childnode>
      </node>
      <node id="137287">
        <label>stdint.h</label>
      </node>
      <node id="137367">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="137304" relation="include">
        </childnode>
        <childnode refid="137368" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
        <childnode refid="137269" relation="include">
        </childnode>
        <childnode refid="137297" relation="include">
        </childnode>
      </node>
      <node id="137336">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
      </node>
      <node id="137311">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="137407">
        <label>Eigen/Geometry</label>
      </node>
      <node id="137291">
        <label>RVersion.h</label>
      </node>
      <node id="137298">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="137299" relation="include">
        </childnode>
        <childnode refid="137268" relation="include">
        </childnode>
        <childnode refid="137306" relation="include">
        </childnode>
      </node>
      <node id="137303">
        <label>cmath</label>
      </node>
      <node id="137267">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx</label>
        <link refid="ut_InDetTrackSelectionTool.cxx"/>
        <childnode refid="137268" relation="include">
        </childnode>
        <childnode refid="137269" relation="include">
        </childnode>
        <childnode refid="137270" relation="include">
        </childnode>
        <childnode refid="137271" relation="include">
        </childnode>
        <childnode refid="137272" relation="include">
        </childnode>
        <childnode refid="137273" relation="include">
        </childnode>
      </node>
      <node id="137270">
        <label>cassert</label>
      </node>
      <node id="137358">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="137377">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="137308">
        <label>stdexcept</label>
      </node>
      <node id="137421">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="137277" relation="include">
        </childnode>
        <childnode refid="137278" relation="include">
        </childnode>
        <childnode refid="137422" relation="include">
        </childnode>
      </node>
      <node id="137332">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="137397">
        <label>Eigen/Core</label>
      </node>
      <node id="137364">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="137399">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="137294" relation="include">
        </childnode>
        <childnode refid="137400" relation="include">
        </childnode>
      </node>
      <node id="137409">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="137294" relation="include">
        </childnode>
        <childnode refid="137410" relation="include">
        </childnode>
        <childnode refid="137411" relation="include">
        </childnode>
      </node>
      <node id="137372">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="137391">
        <label>TLorentzVector.h</label>
      </node>
      <node id="137278">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="137277">
        <label>string</label>
      </node>
      <node id="137313">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="137296" relation="include">
        </childnode>
        <childnode refid="137314" relation="include">
        </childnode>
        <childnode refid="137316" relation="include">
        </childnode>
        <childnode refid="137318" relation="include">
        </childnode>
        <childnode refid="137320" relation="include">
        </childnode>
        <childnode refid="137322" relation="include">
        </childnode>
        <childnode refid="137323" relation="include">
        </childnode>
        <childnode refid="137324" relation="include">
        </childnode>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137301" relation="include">
        </childnode>
        <childnode refid="137269" relation="include">
        </childnode>
        <childnode refid="137325" relation="include">
        </childnode>
        <childnode refid="137326" relation="include">
        </childnode>
        <childnode refid="137327" relation="include">
        </childnode>
        <childnode refid="137333" relation="include">
        </childnode>
      </node>
      <node id="137335">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
      </node>
      <node id="137286">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="137284" relation="include">
        </childnode>
        <childnode refid="137287" relation="include">
        </childnode>
        <childnode refid="137288" relation="include">
        </childnode>
        <childnode refid="137294" relation="include">
        </childnode>
        <childnode refid="137390" relation="include">
        </childnode>
        <childnode refid="137394" relation="include">
        </childnode>
        <childnode refid="137399" relation="include">
        </childnode>
        <childnode refid="137401" relation="include">
        </childnode>
        <childnode refid="137402" relation="include">
        </childnode>
      </node>
      <node id="137325">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="137274">
        <label>InDetTrackSelectionTool/IInDetTrackSelectionTool.h</label>
        <link refid="d2/d36/IInDetTrackSelectionTool_8h_source"/>
        <childnode refid="137275" relation="include">
        </childnode>
        <childnode refid="137285" relation="include">
        </childnode>
        <childnode refid="137404" relation="include">
        </childnode>
        <childnode refid="137401" relation="include">
        </childnode>
      </node>
      <node id="137369">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="137310" relation="include">
        </childnode>
        <childnode refid="137367" relation="include">
        </childnode>
        <childnode refid="137370" relation="include">
        </childnode>
        <childnode refid="137372" relation="include">
        </childnode>
        <childnode refid="137357" relation="include">
        </childnode>
        <childnode refid="137302" relation="include">
        </childnode>
        <childnode refid="137269" relation="include">
        </childnode>
      </node>
      <node id="137383">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="137283">
        <label>map</label>
      </node>
      <node id="137384">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="137385" relation="include">
        </childnode>
      </node>
      <node id="137385">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="137292">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="137345">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="137408">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="137374">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="137369" relation="include">
        </childnode>
        <childnode refid="137302" relation="include">
        </childnode>
        <childnode refid="137300" relation="include">
        </childnode>
        <childnode refid="137375" relation="include">
        </childnode>
      </node>
      <node id="137326">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="137342">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="137425">
        <label>GaudiKernel/ServiceHandle.h</label>
      </node>
      <node id="137370">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="137310" relation="include">
        </childnode>
        <childnode refid="137290" relation="include">
        </childnode>
        <childnode refid="137268" relation="include">
        </childnode>
        <childnode refid="137371" relation="include">
        </childnode>
      </node>
      <node id="137422">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="137353">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="137290">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="137291" relation="include">
        </childnode>
        <childnode refid="137292" relation="include">
        </childnode>
      </node>
      <node id="137323">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="137330">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="137411">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="137368">
        <label>limits.h</label>
      </node>
      <node id="137272">
        <label>TError.h</label>
      </node>
      <node id="137362">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="137363" relation="include">
        </childnode>
      </node>
      <node id="137340">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="137316" relation="include">
        </childnode>
        <childnode refid="137304" relation="include">
        </childnode>
        <childnode refid="137287" relation="include">
        </childnode>
        <childnode refid="137341" relation="include">
        </childnode>
      </node>
      <node id="137424">
        <label>GaudiKernel/ToolHandle.h</label>
      </node>
      <node id="137296">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137298" relation="include">
        </childnode>
      </node>
      <node id="137289">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="137287" relation="include">
        </childnode>
      </node>
      <node id="137398">
        <label>Eigen/Dense</label>
      </node>
      <node id="137299">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="137300" relation="include">
        </childnode>
        <childnode refid="137301" relation="include">
        </childnode>
        <childnode refid="137302" relation="include">
        </childnode>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137269" relation="include">
        </childnode>
        <childnode refid="137303" relation="include">
        </childnode>
        <childnode refid="137304" relation="include">
        </childnode>
        <childnode refid="137277" relation="include">
        </childnode>
        <childnode refid="137305" relation="include">
        </childnode>
      </node>
      <node id="137355">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="137270" relation="include">
        </childnode>
      </node>
      <node id="137390">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="137391" relation="include">
        </childnode>
        <childnode refid="137352" relation="include">
        </childnode>
        <childnode refid="137392" relation="include">
        </childnode>
        <childnode refid="137351" relation="include">
        </childnode>
      </node>
      <node id="137392">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="137393" relation="include">
        </childnode>
      </node>
      <node id="137371">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="137367" relation="include">
        </childnode>
        <childnode refid="137355" relation="include">
        </childnode>
      </node>
      <node id="137309">
        <label>typeinfo</label>
      </node>
      <node id="137394">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="137395" relation="include">
        </childnode>
      </node>
      <node id="137354">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="137325" relation="include">
        </childnode>
        <childnode refid="137270" relation="include">
        </childnode>
      </node>
      <node id="137294">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="137295" relation="include">
        </childnode>
        <childnode refid="137310" relation="include">
        </childnode>
        <childnode refid="137311" relation="include">
        </childnode>
        <childnode refid="137312" relation="include">
        </childnode>
        <childnode refid="137360" relation="include">
        </childnode>
        <childnode refid="137361" relation="include">
        </childnode>
        <childnode refid="137367" relation="include">
        </childnode>
        <childnode refid="137369" relation="include">
        </childnode>
        <childnode refid="137373" relation="include">
        </childnode>
        <childnode refid="137374" relation="include">
        </childnode>
        <childnode refid="137370" relation="include">
        </childnode>
        <childnode refid="137376" relation="include">
        </childnode>
        <childnode refid="137290" relation="include">
        </childnode>
        <childnode refid="137377" relation="include">
        </childnode>
        <childnode refid="137378" relation="include">
        </childnode>
        <childnode refid="137372" relation="include">
        </childnode>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
        <childnode refid="137306" relation="include">
        </childnode>
        <childnode refid="137379" relation="include">
        </childnode>
        <childnode refid="137300" relation="include">
        </childnode>
        <childnode refid="137308" relation="include">
        </childnode>
        <childnode refid="137302" relation="include">
        </childnode>
        <childnode refid="137351" relation="include">
        </childnode>
        <childnode refid="137380" relation="include">
        </childnode>
        <childnode refid="137382" relation="include">
        </childnode>
        <childnode refid="137386" relation="include">
        </childnode>
        <childnode refid="137387" relation="include">
        </childnode>
      </node>
      <node id="137413">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="137414" relation="include">
        </childnode>
        <childnode refid="137403" relation="include">
        </childnode>
      </node>
      <node id="137284">
        <label>bitset</label>
      </node>
      <node id="137341">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="137293">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="137322">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="137321">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="137287" relation="include">
        </childnode>
      </node>
      <node id="137405">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137352" relation="include">
        </childnode>
        <childnode refid="137288" relation="include">
        </childnode>
        <childnode refid="137395" relation="include">
        </childnode>
        <childnode refid="137406" relation="include">
        </childnode>
        <childnode refid="137408" relation="include">
        </childnode>
        <childnode refid="137394" relation="include">
        </childnode>
        <childnode refid="137409" relation="include">
        </childnode>
        <childnode refid="137412" relation="include">
        </childnode>
        <childnode refid="137392" relation="include">
        </childnode>
        <childnode refid="137419" relation="include">
        </childnode>
      </node>
      <node id="137317">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="137344">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="137361">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="137362" relation="include">
        </childnode>
        <childnode refid="137312" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137305" relation="include">
        </childnode>
        <childnode refid="137364" relation="include">
        </childnode>
        <childnode refid="137343" relation="include">
        </childnode>
        <childnode refid="137365" relation="include">
        </childnode>
      </node>
      <node id="137315">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="137396">
        <label>unistd.h</label>
      </node>
      <node id="137380">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="137381" relation="include">
        </childnode>
      </node>
      <node id="137334">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="137296" relation="include">
        </childnode>
        <childnode refid="137335" relation="include">
        </childnode>
        <childnode refid="137336" relation="include">
        </childnode>
        <childnode refid="137337" relation="include">
        </childnode>
        <childnode refid="137346" relation="include">
        </childnode>
        <childnode refid="137327" relation="include">
        </childnode>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137348" relation="include">
        </childnode>
        <childnode refid="137349" relation="include">
        </childnode>
      </node>
      <node id="137319">
        <label>vector</label>
      </node>
      <node id="137410">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="137294" relation="include">
        </childnode>
        <childnode refid="137390" relation="include">
        </childnode>
        <childnode refid="137315" relation="include">
        </childnode>
      </node>
      <node id="137388">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="137300" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
      </node>
      <node id="137271">
        <label>TFile.h</label>
      </node>
      <node id="137404">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="137405" relation="include">
        </childnode>
      </node>
      <node id="137416">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="137287" relation="include">
        </childnode>
        <childnode refid="137294" relation="include">
        </childnode>
        <childnode refid="137414" relation="include">
        </childnode>
        <childnode refid="137417" relation="include">
        </childnode>
      </node>
      <node id="137389">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="137301">
        <label>utility</label>
      </node>
      <node id="137386">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="137324">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="137406">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="137396" relation="include">
        </childnode>
        <childnode refid="137407" relation="include">
        </childnode>
      </node>
      <node id="137400">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="137426">
        <label>TrkToolInterfaces/ITrackSummaryTool.h</label>
      </node>
      <node id="137359">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="137328">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="137275">
        <label>PATCore/IAsgSelectionTool.h</label>
        <link refid="d9/dfd/IAsgSelectionTool_8h_source"/>
        <childnode refid="137276" relation="include">
        </childnode>
        <childnode refid="137281" relation="include">
        </childnode>
      </node>
      <node id="137338">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="137327">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="137328" relation="include">
        </childnode>
        <childnode refid="137329" relation="include">
        </childnode>
        <childnode refid="137330" relation="include">
        </childnode>
        <childnode refid="137331" relation="include">
        </childnode>
        <childnode refid="137332" relation="include">
        </childnode>
      </node>
      <node id="137393">
        <label>iosfwd</label>
      </node>
      <node id="137269">
        <label>cstdlib</label>
      </node>
      <node id="137285">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="137286" relation="include">
        </childnode>
        <childnode refid="137403" relation="include">
        </childnode>
      </node>
      <node id="137379">
        <label>iostream</label>
      </node>
      <node id="137307">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="137314">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="137296" relation="include">
        </childnode>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137315" relation="include">
        </childnode>
      </node>
      <node id="137297">
        <label>cstddef</label>
      </node>
      <node id="137281">
        <label>PATCore/TAccept.h</label>
        <link refid="d0/dcf/TAccept_8h_source"/>
        <childnode refid="137282" relation="include">
        </childnode>
        <childnode refid="137283" relation="include">
        </childnode>
        <childnode refid="137284" relation="include">
        </childnode>
      </node>
      <node id="137333">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="137334" relation="include">
        </childnode>
        <childnode refid="137350" relation="include">
        </childnode>
        <childnode refid="137314" relation="include">
        </childnode>
        <childnode refid="137325" relation="include">
        </childnode>
        <childnode refid="137326" relation="include">
        </childnode>
      </node>
      <node id="137279">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="137419">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="137351" relation="include">
        </childnode>
      </node>
      <node id="137282">
        <label>TString.h</label>
      </node>
      <node id="137415">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="137365">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="137310" relation="include">
        </childnode>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137366" relation="include">
        </childnode>
        <childnode refid="137270" relation="include">
        </childnode>
        <childnode refid="137269" relation="include">
        </childnode>
        <childnode refid="137351" relation="include">
        </childnode>
      </node>
      <node id="137337">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="137335" relation="include">
        </childnode>
        <childnode refid="137338" relation="include">
        </childnode>
        <childnode refid="137318" relation="include">
        </childnode>
        <childnode refid="137339" relation="include">
        </childnode>
        <childnode refid="137324" relation="include">
        </childnode>
        <childnode refid="137309" relation="include">
        </childnode>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137300" relation="include">
        </childnode>
        <childnode refid="137287" relation="include">
        </childnode>
        <childnode refid="137343" relation="include">
        </childnode>
        <childnode refid="137344" relation="include">
        </childnode>
        <childnode refid="137345" relation="include">
        </childnode>
      </node>
      <node id="137401">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="137414">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="137288" relation="include">
        </childnode>
        <childnode refid="137294" relation="include">
        </childnode>
        <childnode refid="137390" relation="include">
        </childnode>
        <childnode refid="137394" relation="include">
        </childnode>
        <childnode refid="137399" relation="include">
        </childnode>
        <childnode refid="137284" relation="include">
        </childnode>
        <childnode refid="137287" relation="include">
        </childnode>
        <childnode refid="137415" relation="include">
        </childnode>
      </node>
      <node id="137273">
        <label>InDetTrackSelectionTool/InDetTrackSelectionTool.h</label>
        <link refid="d7/de0/InDetTrackSelectionTool_8h_source"/>
        <childnode refid="137274" relation="include">
        </childnode>
        <childnode refid="137420" relation="include">
        </childnode>
        <childnode refid="137424" relation="include">
        </childnode>
        <childnode refid="137425" relation="include">
        </childnode>
        <childnode refid="137426" relation="include">
        </childnode>
        <childnode refid="137427" relation="include">
        </childnode>
        <childnode refid="137283" relation="include">
        </childnode>
        <childnode refid="137304" relation="include">
        </childnode>
      </node>
      <node id="137418">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="137343">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="137412">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="137413" relation="include">
        </childnode>
        <childnode refid="137416" relation="include">
        </childnode>
        <childnode refid="137403" relation="include">
        </childnode>
      </node>
      <node id="137312">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="137313" relation="include">
        </childnode>
        <childnode refid="137310" relation="include">
        </childnode>
        <childnode refid="137311" relation="include">
        </childnode>
        <childnode refid="137352" relation="include">
        </childnode>
        <childnode refid="137334" relation="include">
        </childnode>
        <childnode refid="137295" relation="include">
        </childnode>
        <childnode refid="137355" relation="include">
        </childnode>
        <childnode refid="137350" relation="include">
        </childnode>
        <childnode refid="137356" relation="include">
        </childnode>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137359" relation="include">
        </childnode>
      </node>
      <node id="137403">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="137315" relation="include">
        </childnode>
      </node>
      <node id="137347">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="137339">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="137338" relation="include">
        </childnode>
        <childnode refid="137340" relation="include">
        </childnode>
        <childnode refid="137324" relation="include">
        </childnode>
        <childnode refid="137319" relation="include">
        </childnode>
        <childnode refid="137342" relation="include">
        </childnode>
      </node>
      <node id="137300">
        <label>algorithm</label>
      </node>
      <node id="137376">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="137402">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="137352">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="137353" relation="include">
        </childnode>
        <childnode refid="137314" relation="include">
        </childnode>
        <childnode refid="137350" relation="include">
        </childnode>
        <childnode refid="137320" relation="include">
        </childnode>
        <childnode refid="137334" relation="include">
        </childnode>
        <childnode refid="137313" relation="include">
        </childnode>
        <childnode refid="137318" relation="include">
        </childnode>
        <childnode refid="137295" relation="include">
        </childnode>
        <childnode refid="137325" relation="include">
        </childnode>
        <childnode refid="137297" relation="include">
        </childnode>
        <childnode refid="137354" relation="include">
        </childnode>
      </node>
      <node id="137420">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="137278" relation="include">
        </childnode>
        <childnode refid="137276" relation="include">
        </childnode>
        <childnode refid="137421" relation="include">
        </childnode>
        <childnode refid="137423" relation="include">
        </childnode>
      </node>
      <node id="137320">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="137287" relation="include">
        </childnode>
        <childnode refid="137277" relation="include">
        </childnode>
        <childnode refid="137321" relation="include">
        </childnode>
        <childnode refid="137290" relation="include">
        </childnode>
      </node>
      <node id="137373">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="137369" relation="include">
        </childnode>
        <childnode refid="137355" relation="include">
        </childnode>
        <childnode refid="137302" relation="include">
        </childnode>
      </node>
      <node id="137310">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="137288">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="137287" relation="include">
        </childnode>
        <childnode refid="137277" relation="include">
        </childnode>
        <childnode refid="137289" relation="include">
        </childnode>
        <childnode refid="137290" relation="include">
        </childnode>
        <childnode refid="137293" relation="include">
        </childnode>
      </node>
      <node id="137423">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="137363">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="137378">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="137268">
        <label>memory</label>
      </node>
      <node id="137417">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="137294" relation="include">
        </childnode>
        <childnode refid="137410" relation="include">
        </childnode>
        <childnode refid="137418" relation="include">
        </childnode>
      </node>
      <node id="137346">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="137336" relation="include">
        </childnode>
        <childnode refid="137337" relation="include">
        </childnode>
        <childnode refid="137347" relation="include">
        </childnode>
      </node>
      <node id="137356">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="137353" relation="include">
        </childnode>
        <childnode refid="137350" relation="include">
        </childnode>
        <childnode refid="137314" relation="include">
        </childnode>
        <childnode refid="137343" relation="include">
        </childnode>
        <childnode refid="137357" relation="include">
        </childnode>
        <childnode refid="137358" relation="include">
        </childnode>
        <childnode refid="137277" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a3bc147c92ad62e07ed967798aecdbb79" prot="public" static="no">
        <name>CHECK</name>
        <param><defname>ARG</defname></param>
        <initializer>do {ASG_CHECK_SA( APP_NAME, ARG );} while (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="48"/>
      </memberdef>
      <memberdef kind="define" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a1b7f4c3455a377b2a9967abe99d437c4" prot="public" static="no">
        <name>FUNC_HELP</name>
        <param><defname>CUT</defname></param>
        <initializer>do {cutFuncs[ #CUT ] = pass##CUT;} while (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a928f773c2af95332aa0e80c553e065b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passNoCut</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passNoCut</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1aea1a88f5421c6bd92e38c604af8022d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passLoose</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passLoose</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="176" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a036ac6a17eb016355f05753252d4a6e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passLoosePrimary</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passLoosePrimary</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="196" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1afc0874d4370a79f6088d7e4a0877850c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passTightPrimary</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passTightPrimary</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="212" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1aee670a708c343e0524a54a227643a378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passLooseMuon</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passLooseMuon</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="235" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1ab89893a61154ce4fdb8bc29c2df5700b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passLooseElectron</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passLooseElectron</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="254" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a71679b8c4319ae16f12a415478d45177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passLooseTau</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passLooseTau</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="264" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a3d0f2130c0e866caa58e661d26b0937a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passMinBias</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passMinBias</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="281" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a72371432ca32617bba2f2aa896e935d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passHILoose</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passHILoose</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="311" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1aca6177321057c03a738cb22c338a6a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passHITight</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passHITight</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="340" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a15653bde907060c2365ea358cd96550b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool passExpPix</definition>
        <argsstring>(const TrackParticle &amp;trk, const xAOD::Vertex *vtx=nullptr)</argsstring>
        <name>passExpPix</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vtx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="372" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a9fe231f6eacdc4ab55d343ef9680b8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getSum</definition>
        <argsstring>(const TrackParticle &amp;, xAOD::SummaryType)</argsstring>
        <name>getSum</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <defname>trk</defname>
        </param>
        <param>
          <type><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">xAOD::SummaryType</ref></type>
          <defname>sumType</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="390" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a2cff70efb87cc0317c300ba2520c75b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dumpTrack</definition>
        <argsstring>(const TrackParticle &amp;)</argsstring>
        <name>dumpTrack</name>
        <param>
          <type>const TrackParticle &amp;</type>
          <defname>trk</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="399" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="da/d7a/ut__InDetTrackSelectionTool_8cxx_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx" bodystart="44" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>A<sp/>unit<sp/>test<sp/>for<sp/>the<sp/>track<sp/>selection<sp/>tool.<sp/>Currently<sp/>this<sp/>compares<sp/>the<sp/>pre-defined<sp/>cut<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>hard-coded<sp/>versions<sp/>that<sp/>can<sp/>be<sp/>easily<sp/>read.<sp/>Does<sp/>not<sp/>check<sp/>every<sp/>possible<sp/>cut<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TError.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Infrastructure<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;xAODRootAccess/Init.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;xAODRootAccess/TEvent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;InDetTrackSelectionTool/InDetTrackSelectionTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::map;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::unique_ptr;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDet::InDetTrackSelectionTool</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>tool_ptr<sp/>=<sp/>unique_ptr&lt;InDetTrackSelectionTool&gt;;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passNoCut(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLoose(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLoosePrimary(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passTightPrimary(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLooseMuon(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLooseElectron(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLooseTau(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passMinBias(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passHILoose(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passHITight(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passExpPix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">uint8_t<sp/>getSum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">xAOD::SummaryType</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dumpTrack(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>application&apos;s<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>APP_NAME<sp/>=<sp/>argv[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK(<sp/>ARG<sp/>)<sp/>do<sp/>{ASG_CHECK_SA(<sp/>APP_NAME,<sp/>ARG<sp/>);}<sp/>while<sp/>(false)</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>filename<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;ROOTCORE_TEST_FILE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename.empty())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>$ROOTCORE_TEST_FILE.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fail<sp/>on<sp/>an<sp/>unchecked<sp/>StatusCode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>StatusCode::enableFailure();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>application:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>ASG_CHECK_SA(<sp/>APP_NAME,<sp/>static_cast&lt;StatusCode&gt;(<ref refid="dd/d44/namespacexAOD_1a2b6ff6013c964ff2254bd3540cd1738d" kindref="member">xAOD::Init</ref>(<sp/>APP_NAME<sp/>))<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>map&lt;string,<sp/>tool_ptr&gt;<sp/>selTools;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>map&lt;string,<sp/>bool<sp/>(*)(const<sp/>TrackParticle&amp;,<sp/>const<sp/>xAOD::Vertex*)&gt;<sp/>cutFuncs;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUNC_HELP(<sp/>CUT<sp/>)<sp/>do<sp/>{cutFuncs[<sp/>#CUT<sp/>]<sp/>=<sp/>pass##CUT;}<sp/>while<sp/>(false)</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>NoCut<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>Loose<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>LoosePrimary<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>TightPrimary<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>LooseMuon<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>LooseElectron<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>LooseTau<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>MinBias<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>HILoose<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>FUNC_HELP(<sp/>HITight<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>FUNC_HELP</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cutLevelPair<sp/>:<sp/>cutFuncs)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cutLevel<sp/>=<sp/>cutLevelPair.first;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>toolName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TrackSel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>toolName<sp/>+=<sp/>cutLevel;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>selTools[cutLevel]<sp/>=<sp/>tool_ptr(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>(toolName,<sp/>cutLevel)<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>selTools[cutLevel]-&gt;initialize()<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>the<sp/>experimental<sp/>one<sp/>differently:<sp/>add<sp/>the<sp/>map<sp/>entry<sp/>after<sp/>initializing<sp/>the<sp/>others<sp/>because<sp/>it<sp/>is<sp/>not<sp/>a<sp/>selection<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>cutFuncs[</highlight><highlight class="stringliteral">&quot;ExpPix&quot;</highlight><highlight class="normal">]<sp/>=<sp/>passExpPix;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>selTools[</highlight><highlight class="stringliteral">&quot;ExpPix&quot;</highlight><highlight class="normal">]<sp/>=<sp/>tool_ptr(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>(</highlight><highlight class="stringliteral">&quot;TrackSelExpPix&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>CHECK(<sp/>selTools[</highlight><highlight class="stringliteral">&quot;ExpPix&quot;</highlight><highlight class="normal">]-&gt;setProperty(<sp/></highlight><highlight class="stringliteral">&quot;useExperimentalInnermostLayersCut&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>CHECK(<sp/>selTools[</highlight><highlight class="stringliteral">&quot;ExpPix&quot;</highlight><highlight class="normal">]-&gt;initialize()<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>input<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Opening<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>filename.data()<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>unique_ptr&lt;<sp/>TFile<sp/>&gt;<sp/>ifile(<sp/>TFile::Open(<sp/>filename.data(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>StatusCode<sp/>gotFile<sp/>=<sp/>ifile.get()!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?<sp/>StatusCode::SUCCESS<sp/>:<sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>CHECK(<sp/>gotFile<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>TEvent<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xAOD::TEvent<sp/>event(<sp/>static_cast&lt;TFile*&gt;(nullptr),<sp/>xAOD::TEvent::kClassAccess<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ASG_CHECK_SA(<sp/>APP_NAME,<sp/>static_cast&lt;StatusCode&gt;(event.readFrom(<sp/>ifile.get()<sp/>))<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound" tooltip="Tool for accessing xAOD files outside of Athena.">xAOD::TEvent</ref><sp/>event(<sp/>ifile.get(),<sp/><ref refid="de/d95/classxAOD_1_1TEvent_1a02e3b91306a978cdbe478a5bdf03b348a89f268521007c479d536d29ee506ee82" kindref="member" tooltip="Access containers/objects like Athena does.">xAOD::TEvent::kAthenaAccess</ref><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>events<sp/>in<sp/>the<sp/>file:<sp/>%llu&quot;</highlight><highlight class="normal">,<sp/>event.getEntries()<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decide<sp/>how<sp/>many<sp/>events<sp/>to<sp/>run<sp/>over:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>Long64_t<sp/>entries<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.getEntries();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>argc<sp/>&gt;<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long64_t<sp/>e<sp/>=<sp/>atoll(<sp/>argv[<sp/>2<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>e<sp/>&lt;<sp/>entries<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Long64_t<sp/>entry<sp/>=<sp/>0;<sp/>entry<sp/>&lt;<sp/>entries;<sp/>++entry)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>!event.getEntry(entry)<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>MinBias<sp/>cut<sp/>has<sp/>IP<sp/>cuts<sp/>w.r.t.<sp/>the<sp/>primary<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::VertexContainer</ref>*<sp/>vertices<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!event.retrieve(<sp/>vertices,<sp/></highlight><highlight class="stringliteral">&quot;PrimaryVertices&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>retrieve<sp/>primary<sp/>vertices.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>primaryVertex<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>find_vtx<sp/>=<sp/>std::find_if(vertices-&gt;cbegin(),<sp/>vertices-&gt;cend(),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vtx-&gt;vertexType()<sp/>==<sp/><ref refid="d3/db2/namespacexAOD_1_1VxType_1a1d548d2beffc6a21d4162b4aa513afbaaa480b0462eea82edf429357e8a6f9c48" kindref="member" tooltip="Primary vertex.">xAOD::VxType::PriVtx</ref>;}<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find_vtx<sp/>==<sp/>vertices-&gt;cend())<sp/>Warning(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>primary<sp/>vertex.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>primaryVertex<sp/>=<sp/>*find_vtx;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TrackParticleContainer</ref>*<sp/>tracks<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!event.retrieve(<sp/>tracks,<sp/></highlight><highlight class="stringliteral">&quot;InDetTrackParticles&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>retrieve<sp/>track<sp/>particles.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>track<sp/>:<sp/>*tracks)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cutLevelPair<sp/>:<sp/>cutFuncs)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cutLevel<sp/>=<sp/>cutLevelPair.first;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>selTools[cutLevel]-&gt;accept(<sp/>*track,<sp/>primaryVertex<sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>cutFuncs[cutLevel](<sp/>*track,<sp/>primaryVertex<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Track<sp/>selection<sp/>tool<sp/>at<sp/>%s<sp/>cut<sp/>level<sp/>does<sp/>not&quot;</highlight><highlight class="normal">,<sp/>cutLevel.data()<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>match<sp/>hard-coded<sp/>test<sp/>function.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>taccept<sp/>=<sp/>selTools[cutLevel]-&gt;getTAccept();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taccept)<sp/>Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Passes<sp/>tool<sp/>but<sp/>not<sp/>function&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Passes<sp/>function<sp/>but<sp/>not<sp/>tool&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i_cut=0;<sp/>i_cut<sp/>&lt;<sp/>taccept.getNCuts();<sp/>++i_cut)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cutName<sp/>=<sp/>taccept.getCutName(i_cut);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Result<sp/>of<sp/>%s<sp/>=<sp/>%i&quot;</highlight><highlight class="normal">,<sp/>cutName.Data(),<sp/>taccept.getCutResult(i_cut)<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dumpTrack(<sp/>*track<sp/>);<sp/></highlight><highlight class="comment">//<sp/>output<sp/>track<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>loop<sp/>over<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finalize<sp/>all<sp/>the<sp/>tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cutLevelPair<sp/>:<sp/>cutFuncs)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>selTools[cutLevelPair.first]-&gt;finalize()<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>gracefully:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>functions<sp/>are<sp/>implemented<sp/>in<sp/>an<sp/>easy-to-read<sp/>form</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passNoCut(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLoose(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.eta())<sp/>&gt;<sp/>2.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>+<sp/>nSctHits<sp/>&lt;<sp/>7)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixShared<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aacc2b83cb1470747d4419177d5b5d364a" kindref="member" tooltip="number of Pixel all-layer hits shared by several tracks [unit8_t].">xAOD::numberOfPixelSharedHits</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctShared<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aad258b27ca6a49e24c17c5737f8617c70" kindref="member" tooltip="number of SCT hits shared by several tracks [unit8_t].">xAOD::numberOfSCTSharedHits</ref>);<sp/></highlight><highlight class="comment">//<sp/>need<sp/>two<sp/>shared<sp/>SCT<sp/>hits<sp/>to<sp/>count<sp/>for<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixShared<sp/>+<sp/>nSctShared/2<sp/>&gt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHoles<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa32879c7c56a05554ae78f56a59c37ded" kindref="member" tooltip="number of pixel layers on track with absence of hits [unit8_t].">xAOD::numberOfPixelHoles</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSiHoles<sp/>=<sp/>nPixHoles<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aafda4eda04287f300bf1e3dfff1642863" kindref="member" tooltip="number of SCT holes [unit8_t].">xAOD::numberOfSCTHoles</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSiHoles<sp/>&gt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHoles<sp/>&gt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLoosePrimary(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!passLoose(trk))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixShared<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aacc2b83cb1470747d4419177d5b5d364a" kindref="member" tooltip="number of Pixel all-layer hits shared by several tracks [unit8_t].">xAOD::numberOfPixelSharedHits</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctShared<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aad258b27ca6a49e24c17c5737f8617c70" kindref="member" tooltip="number of SCT hits shared by several tracks [unit8_t].">xAOD::numberOfSCTSharedHits</ref>);<sp/></highlight><highlight class="comment">//<sp/>need<sp/>two<sp/>shared<sp/>SCT<sp/>hits<sp/>to<sp/>count<sp/>for<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixShared<sp/>+<sp/>nSctShared<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>+<sp/>nSctHits<sp/>&lt;<sp/>10)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passTightPrimary(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!passLoose(trk))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>uint8_t<sp/>minSiHits<sp/>=<sp/>(std::fabs(trk.eta())<sp/>&lt;=<sp/>1.65)<sp/>?<sp/>9<sp/>:<sp/>11;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>+<sp/>nSctHits<sp/>&lt;<sp/>minSiHits)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectInnermost<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa06c0bb644b3a4f67491b7f5b3cc61cab" kindref="member" tooltip="Do we expect a 0th-layer hit for this track?">xAOD::expectInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectNextToInnermost<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaa97033897cd90fe07637a1a52512aa60" kindref="member" tooltip="Do we expect a 1st-layer hit for this track?">xAOD::expectNextToInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectInnermost<sp/>&amp;&amp;<sp/>expectNextToInnermost)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nInnermost<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac74426cbd9c6d46d01222ccd2dd33d39" kindref="member" tooltip="these are the hits in the 0th pixel layer?">xAOD::numberOfInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nNextToInnermost<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa75317c5a2915d0affbd0b48a36875f8f" kindref="member" tooltip="these are the hits in the 1st pixel layer">xAOD::numberOfNextToInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nInnermost<sp/>+<sp/>nNextToInnermost<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHoles<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa32879c7c56a05554ae78f56a59c37ded" kindref="member" tooltip="number of pixel layers on track with absence of hits [unit8_t].">xAOD::numberOfPixelHoles</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHoles<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLooseMuon(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSctHits<sp/>&lt;<sp/>5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSiHoles<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa32879c7c56a05554ae78f56a59c37ded" kindref="member" tooltip="number of pixel layers on track with absence of hits [unit8_t].">xAOD::numberOfPixelHoles</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aafda4eda04287f300bf1e3dfff1642863" kindref="member" tooltip="number of SCT holes [unit8_t].">xAOD::numberOfSCTHoles</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSiHoles<sp/>&gt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>absEta<sp/>=<sp/>std::fabs(trk.eta());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0.1<sp/>&lt;<sp/>absEta<sp/>&amp;&amp;<sp/>absEta<sp/>&lt;<sp/>1.9)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nTrtHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7299409936cab78c06b800211034aa47" kindref="member" tooltip="number of TRT hits [unit8_t].">xAOD::numberOfTRTHits</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nTrtOutliers<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aae3e8f5c06c93710179d2c9694ceeb0f4" kindref="member" tooltip="number of TRT outliers [unit8_t].">xAOD::numberOfTRTOutliers</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTrtHits<sp/>+<sp/>nTrtOutliers<sp/>&lt;<sp/>6)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nTrtOutliers<sp/>&gt;=<sp/>0.9*(nTrtHits<sp/>+<sp/>nTrtOutliers))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLooseElectron(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>+<sp/>nSctHits<sp/>&lt;<sp/>7)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passLooseTau(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trk.pt()<sp/>&lt;<sp/>1000.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>pT<sp/>cut<sp/>at<sp/>1<sp/>GeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>+<sp/>nSctHits<sp/>&lt;<sp/>7)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.d0())<sp/>&gt;<sp/>1.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vtx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.z0()<sp/>+<sp/>trk.vz()<sp/>-<sp/>vtx-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a9173ecba7b08275d3438d274a4869814" kindref="member" tooltip="Returns the z position.">z</ref>())<sp/>&gt;<sp/>1.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passMinBias(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.eta())<sp/>&gt;<sp/>2.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trk.pt()<sp/>&lt;<sp/>500.)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectIBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa06c0bb644b3a4f67491b7f5b3cc61cab" kindref="member" tooltip="Do we expect a 0th-layer hit for this track?">xAOD::expectInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaa97033897cd90fe07637a1a52512aa60" kindref="member" tooltip="Do we expect a 1st-layer hit for this track?">xAOD::expectNextToInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nIBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac74426cbd9c6d46d01222ccd2dd33d39" kindref="member" tooltip="these are the hits in the 0th pixel layer?">xAOD::numberOfInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa75317c5a2915d0affbd0b48a36875f8f" kindref="member" tooltip="these are the hits in the 1st pixel layer">xAOD::numberOfNextToInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectIBL)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIBL<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectBL<sp/>&amp;&amp;<sp/>nBL<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSctHits<sp/>&lt;<sp/>6)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trk.pt()<sp/>&gt;<sp/>10.0*1e3<sp/>&amp;&amp;<sp/>TMath::Prob(trk.chiSquared(),<sp/>trk.numberDoF())<sp/>&lt;<sp/>0.01)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.d0())<sp/>&gt;<sp/>1.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vtx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.z0()<sp/>+<sp/>trk.vz()<sp/>-<sp/>vtx-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a9173ecba7b08275d3438d274a4869814" kindref="member" tooltip="Returns the z position.">z</ref>())*std::sin(trk.theta())<sp/>&gt;<sp/>1.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passHILoose(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.eta())<sp/>&gt;<sp/>2.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectIBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa06c0bb644b3a4f67491b7f5b3cc61cab" kindref="member" tooltip="Do we expect a 0th-layer hit for this track?">xAOD::expectInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaa97033897cd90fe07637a1a52512aa60" kindref="member" tooltip="Do we expect a 1st-layer hit for this track?">xAOD::expectNextToInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nIBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac74426cbd9c6d46d01222ccd2dd33d39" kindref="member" tooltip="these are the hits in the 0th pixel layer?">xAOD::numberOfInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa75317c5a2915d0affbd0b48a36875f8f" kindref="member" tooltip="these are the hits in the 1st pixel layer">xAOD::numberOfNextToInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectIBL)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIBL<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectBL<sp/>&amp;&amp;<sp/>nBL<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pt<sp/>=<sp/>trk.pt()*1e-3;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pt<sp/>&gt;=<sp/>0.4<sp/>&amp;&amp;<sp/>nSctHits<sp/>&lt;<sp/>6)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pt<sp/>&gt;=<sp/>0.3<sp/>&amp;&amp;<sp/>nSctHits<sp/>&lt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSctHits<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.d0())<sp/>&gt;<sp/>1.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vtx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.z0()<sp/>+<sp/>trk.vz()<sp/>-<sp/>vtx-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a9173ecba7b08275d3438d274a4869814" kindref="member" tooltip="Returns the z position.">z</ref>())*std::sin(trk.theta())<sp/>&gt;<sp/>1.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passHITight(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vtx<sp/>)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.eta())<sp/>&gt;<sp/>2.5)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectIBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa06c0bb644b3a4f67491b7f5b3cc61cab" kindref="member" tooltip="Do we expect a 0th-layer hit for this track?">xAOD::expectInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expectBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaa97033897cd90fe07637a1a52512aa60" kindref="member" tooltip="Do we expect a 1st-layer hit for this track?">xAOD::expectNextToInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nIBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac74426cbd9c6d46d01222ccd2dd33d39" kindref="member" tooltip="these are the hits in the 0th pixel layer?">xAOD::numberOfInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa75317c5a2915d0affbd0b48a36875f8f" kindref="member" tooltip="these are the hits in the 1st pixel layer">xAOD::numberOfNextToInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectIBL)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIBL<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectBL<sp/>&amp;&amp;<sp/>nBL<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHits<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSctHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>+<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pt<sp/>=<sp/>trk.pt()*1e-3;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pt<sp/>&gt;=<sp/>0.4<sp/>&amp;&amp;<sp/>nSctHits<sp/>&lt;<sp/>8)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pt<sp/>&gt;=<sp/>0.3<sp/>&amp;&amp;<sp/>nSctHits<sp/>&lt;<sp/>6)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSctHits<sp/>&lt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.d0())<sp/>&gt;<sp/>1.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vtx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(trk.z0()<sp/>+<sp/>trk.vz()<sp/>-<sp/>vtx-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a9173ecba7b08275d3438d274a4869814" kindref="member" tooltip="Returns the z position.">z</ref>())*std::sin(trk.theta())<sp/>&gt;<sp/>1.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trk.chiSquared()<sp/>/<sp/>trk.numberDoF()<sp/>&gt;<sp/>6.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>whether<sp/>the<sp/>track<sp/>passes<sp/>the<sp/>experimental<sp/>pixel<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passExpPix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nPixHoles<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa32879c7c56a05554ae78f56a59c37ded" kindref="member" tooltip="number of pixel layers on track with absence of hits [unit8_t].">xAOD::numberOfPixelHoles</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHoles<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>no<sp/>pixel<sp/>holes,<sp/>then<sp/>the<sp/>track<sp/>passes<sp/>regardless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nPixHoles<sp/>&gt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>is<sp/>more<sp/>than<sp/>1<sp/>hole,<sp/>the<sp/>track<sp/>fails<sp/>regardless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nIBLHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac74426cbd9c6d46d01222ccd2dd33d39" kindref="member" tooltip="these are the hits in the 0th pixel layer?">xAOD::numberOfInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>uint8_t<sp/>expectBL<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaa97033897cd90fe07637a1a52512aa60" kindref="member" tooltip="Do we expect a 1st-layer hit for this track?">xAOD::expectNextToInnermostPixelLayerHit</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nBLHits<sp/>=<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa75317c5a2915d0affbd0b48a36875f8f" kindref="member" tooltip="these are the hits in the 1st pixel layer">xAOD::numberOfNextToInnermostPixelLayerHits</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>an<sp/>exception<sp/>is<sp/>there<sp/>is<sp/>an<sp/>IBL<sp/>hit,<sp/>and<sp/>the<sp/>hole<sp/>is<sp/>in<sp/>the<sp/>BLayer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIBLHits<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectBL<sp/>&amp;&amp;<sp/>nBLHits<sp/>==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">uint8_t<sp/>getSum(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">xAOD::SummaryType</ref><sp/>sumType<sp/>)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>uint8_t<sp/>sumVal=0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trk.summaryValue(sumVal,<sp/>sumType))<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="stringliteral">&quot;getSum()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>summary<sp/>type<sp/>%i&quot;</highlight><highlight class="normal">,<sp/>sumType<sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sumVal;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dumpTrack(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackParticle&amp;<sp/>trk<sp/>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pt<sp/>=<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>trk.pt()<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eta<sp/>=<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>trk.eta()<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;expect<sp/>ibl<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa06c0bb644b3a4f67491b7f5b3cc61cab" kindref="member" tooltip="Do we expect a 0th-layer hit for this track?">xAOD::expectInnermostPixelLayerHit</ref>)<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ibl<sp/>hit<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac74426cbd9c6d46d01222ccd2dd33d39" kindref="member" tooltip="these are the hits in the 0th pixel layer?">xAOD::numberOfInnermostPixelLayerHits</ref>)<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;expect<sp/>bl<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaa97033897cd90fe07637a1a52512aa60" kindref="member" tooltip="Do we expect a 1st-layer hit for this track?">xAOD::expectNextToInnermostPixelLayerHit</ref>)<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bl<sp/>hit<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa75317c5a2915d0affbd0b48a36875f8f" kindref="member" tooltip="these are the hits in the 1st pixel layer">xAOD::numberOfNextToInnermostPixelLayerHits</ref>)<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pix<sp/>hit<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>)<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pix<sp/>dead<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aaed52645632f89e89813e4e5f14c83540" kindref="member" tooltip="number of dead pixel sensors crossed [unit8_t].">xAOD::numberOfPixelDeadSensors</ref>)<sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pix<sp/>holes<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa32879c7c56a05554ae78f56a59c37ded" kindref="member" tooltip="number of pixel layers on track with absence of hits [unit8_t].">xAOD::numberOfPixelHoles</ref>)<sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sct<sp/>hit<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>)<sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sct<sp/>dead<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7fce0259f3a0d566e104077748ceb4a7" kindref="member" tooltip="number of dead SCT sensors crossed [unit8_t].">xAOD::numberOfSCTDeadSensors</ref>)<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sct<sp/>holes<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aafda4eda04287f300bf1e3dfff1642863" kindref="member" tooltip="number of SCT holes [unit8_t].">xAOD::numberOfSCTHoles</ref>)<sp/>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;trt<sp/>hits<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aa7299409936cab78c06b800211034aa47" kindref="member" tooltip="number of TRT hits [unit8_t].">xAOD::numberOfTRTHits</ref>)<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;dumpTrack()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;trt<sp/>outliers<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>getSum(trk,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aae3e8f5c06c93710179d2c9694ceeb0f4" kindref="member" tooltip="number of TRT outliers [unit8_t].">xAOD::numberOfTRTOutliers</ref>)<sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/test/ut_InDetTrackSelectionTool.cxx"/>
  </compounddef>
</doxygen>
