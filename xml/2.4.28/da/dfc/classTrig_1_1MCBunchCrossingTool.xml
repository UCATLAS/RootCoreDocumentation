<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/dfc/classTrig_1_1MCBunchCrossingTool" kind="class" prot="public">
    <compoundname>Trig::MCBunchCrossingTool</compoundname>
    <basecompoundref refid="db/df3/classTrig_1_1BunchCrossingToolBase" prot="public" virt="non-virtual">Trig::BunchCrossingToolBase</basecompoundref>
    <basecompoundref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase" prot="public" virt="non-virtual">Trig::BunchCrossingConfProviderBase</basecompoundref>
    <includes refid="d7/d28/MCBunchCrossingTool_8h" local="no">MCBunchCrossingTool.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1abb13d3d15c2814d5d79bc93892f7896e" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Trig::MCBunchCrossingTool::m_minBunchIntensity</definition>
        <argsstring></argsstring>
        <name>m_minBunchIntensity</name>
        <briefdescription>
<para>Minimum intensity for a bunch crossing to be considered filled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1abfb2482fc2bd1e48eefb56f1f307f4ff" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Trig::MCBunchCrossingTool::m_isConfigured</definition>
        <argsstring></argsstring>
        <name>m_isConfigured</name>
        <briefdescription>
<para>Flag specifying if the configuration could be read. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="100" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a6ad5c339feb60cfbafe6338995d66e99" prot="private" static="no" mutable="no">
        <type><ref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1ad30fc9b02c7c88c2beadda0071a0d4a6" kindref="member">configid_type</ref></type>
        <definition>configid_type Trig::MCBunchCrossingTool::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
<para>ID of the current configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="102" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1af1d024771f1c82e686ca1f22b9315537" prot="private" static="no" mutable="no">
        <type>ServiceHandle&lt; IIncidentSvc &gt;</type>
        <definition>ServiceHandle&lt; IIncidentSvc &gt; Trig::MCBunchCrossingTool::m_incidentSvc</definition>
        <argsstring></argsstring>
        <name>m_incidentSvc</name>
        <briefdescription>
<para>The incident service handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="105" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a48547c6c75f8d0f73d1027b424838a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Trig::MCBunchCrossingTool::MCBunchCrossingTool</definition>
        <argsstring>(const std::string &amp;type, const std::string &amp;name, const IInterface *parent)</argsstring>
        <name>MCBunchCrossingTool</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const IInterface *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Standard AlgTool constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="24" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a0a2be26c85b96cb88dbf5baf31255753" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>StatusCode</type>
        <definition>StatusCode Trig::MCBunchCrossingTool::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplements refid="d5/dbb/classasg_1_1AsgTool_1a55b3c013a3e54ae4c1d0d76de8e1e726">initialize</reimplements>
        <briefdescription>
<para>Regular AlgTool initialization function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="40" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac8fde5be2aa2f7589131ccf6589662ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Trig::MCBunchCrossingTool::isFilled</definition>
        <argsstring>(bcid_type bcid) const </argsstring>
        <name>isFilled</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a9db99df0515f2acd26a50da37f168d95">isFilled</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <briefdescription>
<para>The simplest query: Is the bunch crossing filled or not? </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a3ab0a18ef9d9bdc06b4c18acddfc36f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Trig::MCBunchCrossingTool::isBeam1</definition>
        <argsstring>(bcid_type bcid=0) const </argsstring>
        <name>isBeam1</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ae20e96672675556eddbad87a3bd40df7">isBeam1</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function deciding if there was a bunch from &quot;beam 1&quot; in this bunch crossing. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac9ae6d6ba637900092c1d26b1d82c217" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Trig::MCBunchCrossingTool::isBeam2</definition>
        <argsstring>(bcid_type bcid=0) const </argsstring>
        <name>isBeam2</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a774292ba2828a939fb69402d5401718d">isBeam2</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function deciding if there was a bunch from &quot;beam 2&quot; in this bunch crossing. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a461c2b1eb11d7c3333b0229923d034f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float Trig::MCBunchCrossingTool::bcIntensity</definition>
        <argsstring>(bcid_type bcid, BeamType type=Crossing) const </argsstring>
        <name>bcIntensity</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a01e68f99e0c68f4badf7d9c2e087de84">bcIntensity</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" kindref="member">BeamType</ref></type>
          <declname>type</declname>
          <defval>Crossing</defval>
        </param>
        <briefdescription>
<para>Function returning the &quot;intensity&quot; of a given bunch crossing. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1ae73075ec935b72664f7a585414372693" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cf" kindref="member">BunchCrossingType</ref></type>
        <definition>IBunchCrossingTool::BunchCrossingType Trig::MCBunchCrossingTool::bcType</definition>
        <argsstring>(bcid_type bcid) const </argsstring>
        <name>bcType</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a15997803b368bc9a3fc27f6ebd3486f2">bcType</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <briefdescription>
<para>Get the type of the specific bunch crossing. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1acc68b272d6f04a98fd8cc147833b6a64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::MCBunchCrossingTool::gapBeforeBunch</definition>
        <argsstring>(bcid_type bcid, BunchDistanceType dtype=NanoSec, BunchFillType ftype=CollidingBunch) const </argsstring>
        <name>gapBeforeBunch</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ab8ac1297dd93899e04e68622530dab18">gapBeforeBunch</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>dtype</declname>
          <defval>NanoSec</defval>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8" kindref="member">BunchFillType</ref></type>
          <declname>ftype</declname>
          <defval>CollidingBunch</defval>
        </param>
        <briefdescription>
<para>Gap before a particular bunch. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a8f78cac1b71b78cf767767524ed199d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::MCBunchCrossingTool::gapAfterBunch</definition>
        <argsstring>(bcid_type bcid, BunchDistanceType dtype=NanoSec, BunchFillType ftype=CollidingBunch) const </argsstring>
        <name>gapAfterBunch</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a5684c852a799a421c09b4bb1d6f5c70d">gapAfterBunch</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>dtype</declname>
          <defval>NanoSec</defval>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8" kindref="member">BunchFillType</ref></type>
          <declname>ftype</declname>
          <defval>CollidingBunch</defval>
        </param>
        <briefdescription>
<para>Gap after a particular bunch. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1acd8316f25da4cce67f4bb9f2d9c0201b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; Trig::MCBunchCrossingTool::bunchesInFront</definition>
        <argsstring>(bcid_type bcid, int bunches=10) const </argsstring>
        <name>bunchesInFront</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a7791e0d9ee813c1679bac22c859de01e">bunchesInFront</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bunches</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Function returning whether the previous bunches were filled, and how. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="146" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a259a9ab1e51ad92af759b09309fb4845" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; Trig::MCBunchCrossingTool::bunchesAfter</definition>
        <argsstring>(bcid_type bcid, int bunches=10) const </argsstring>
        <name>bunchesAfter</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ab4dafc695308b9f4e5795bf2e3f9566c">bunchesAfter</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bunches</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Function returning whether the following bunches were filled, and how. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="165" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a2371cd65b547f431e0781fda40f991c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::MCBunchCrossingTool::bunchIntInFront</definition>
        <argsstring>(bcid_type bcid, int bunches=10, BeamType type=Crossing) const </argsstring>
        <name>bunchIntInFront</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a53c0b29db0a8d7393822a57015d56bcc">bunchIntInFront</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bunches</declname>
          <defval>10</defval>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" kindref="member">BeamType</ref></type>
          <declname>type</declname>
          <defval>Crossing</defval>
        </param>
        <briefdescription>
<para>Function returning the intensities of the bunch crossings before the reference. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="72" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="184" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a5cc5fa16b7c9746c169e0d3bf48e63f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::MCBunchCrossingTool::bunchIntAfter</definition>
        <argsstring>(bcid_type bcid, int bunches=10, BeamType type=Crossing) const </argsstring>
        <name>bunchIntAfter</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a053165be519af8e4be49ce77c5c0c7bf">bunchIntAfter</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bunches</declname>
          <defval>10</defval>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" kindref="member">BeamType</ref></type>
          <declname>type</declname>
          <defval>Crossing</defval>
        </param>
        <briefdescription>
<para>Function returning the intensities of the bunch crossings after the reference. </para>        </briefdescription>
        <detaileddescription>
<para>Function re-implemented to give meaningful answers for non-pileup MC files as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="76" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="204" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1adcd6b90147d8f2f57488fe486288e1cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int Trig::MCBunchCrossingTool::numberOfFilledBunches</definition>
        <argsstring>() const </argsstring>
        <name>numberOfFilledBunches</name>
        <reimplements refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad27cf24864c23bd5e90fa6342e71b6bf">numberOfFilledBunches</reimplements>
        <briefdescription>
<para>Get the number of filled bunches in the current configuration. </para>        </briefdescription>
        <detaileddescription>
<para>In case the tool is not configured (we&apos;re not processing a pileup MC file) it should not report 0 filled bunches, but 1. The override of this function makes sure that this is what happens... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="79" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a39d11665c402dd15251de49f17678658" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1ad30fc9b02c7c88c2beadda0071a0d4a6" kindref="member">configid_type</ref></type>
        <definition>IBunchCrossingConfProvider::configid_type Trig::MCBunchCrossingTool::configID</definition>
        <argsstring>() const </argsstring>
        <name>configID</name>
        <reimplements refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1a7e4a4c4f5a4548c02dccac794e4b7b12">configID</reimplements>
        <briefdescription>
<para>Unique identifier for the current configuration. </para>        </briefdescription>
        <detaileddescription>
<para>This tool returns a hash created from the string version of the bunch configuration. Luckily the MC files contain the full configuration in an std::string, so it&apos;s quite easy to create a unique ID from them. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="82" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac3e74e966a491d171f98fc57379202a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; Trig::MCBunchCrossingTool::configuredBCIDs</definition>
        <argsstring>() const </argsstring>
        <name>configuredBCIDs</name>
        <reimplements refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a6689dc298a887310e6a00df1fc14f8a2">configuredBCIDs</reimplements>
        <briefdescription>
<para>Function providing the BCIDs of the configured colliding bunches. </para>        </briefdescription>
        <detaileddescription>
<para>This function is re-implemented from the base class to take into account whether the tool managed to find the configuration or not. In <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref> running the tool will report all bunches as single empty bunches when it&apos;s not &quot;configured&quot;. So the base class would give a configuration with all the bunches filled.</para><para>Instead this function returns an empty vector when the configuration is not available, and only lets the base class do it&apos;s work when the configuration was found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="84" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1accf5d0162458465ee6cf4cc5843a83b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::MCBunchCrossingTool::configuredIntensitiesBeam1</definition>
        <argsstring>() const </argsstring>
        <name>configuredIntensitiesBeam1</name>
        <reimplements refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1ad54897be82f5d5133553ee08204d1ba5">configuredIntensitiesBeam1</reimplements>
        <briefdescription>
<para>Function providing the intensities of the configured colliding bunches. </para>        </briefdescription>
        <detaileddescription>
<para>This function is re-implemented from the base class to take into account whether the tool managed to find the configuration or not. In <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref> running the tool will report all bunches as single empty bunches when it&apos;s not &quot;configured&quot;. So the base class would give a configuration with all the bunches filled.</para><para>Instead this function returns an empty vector when the configuration is not available, and only lets the base class do it&apos;s work when the configuration was found.</para><para>When the configuration is available, we still can&apos;t use the base class&apos;s function, as it would be asking for the Beam1 intensities instead of the collision intensities. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="86" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="268" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a09b94e2b5e0e0efbdcf059561a80b0f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::MCBunchCrossingTool::configuredIntensitiesBeam2</definition>
        <argsstring>() const </argsstring>
        <name>configuredIntensitiesBeam2</name>
        <reimplements refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1aadf2c635e6c68f7cdf722b528c51c6e3">configuredIntensitiesBeam2</reimplements>
        <briefdescription>
<para>Function providing the intensities of the configured colliding bunches. </para>        </briefdescription>
        <detaileddescription>
<para>The MC meta-data stores relative bunch luminosities. That value is stores in the Beam1 variable by convention, and this variable is left empty. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="88" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="286" bodyend="289"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1aa5e7588e4d8f5c9d81f972127e3d4e21" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode Trig::MCBunchCrossingTool::update</definition>
        <argsstring>(IOVSVC_CALLBACK_ARGS)</argsstring>
        <name>update</name>
        <param>
          <type>IOVSVC_CALLBACK_ARGS</type>
        </param>
        <briefdescription>
<para>Function called when the MC configuration changes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="da/dfc/classTrig_1_1MCBunchCrossingTool_1a7ebe92dfea0629f84fdc5dda6e4739b0" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::MCBunchCrossingTool::tokenize</definition>
        <argsstring>(const std::string &amp;pattern)</argsstring>
        <name>tokenize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Convert an std::string into a vector of floats. </para>        </briefdescription>
        <detaileddescription>
<para>This helper function is used to convert a string of type &quot;[0.0, 0.0, 1.0, 1.0, 1.0]&quot; into a vector of floats. As it happens, the digitization stores the bunch pattern in such a fancy style...</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern extracted from the MC file metadata </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The &quot;decoded&quot; bunch pattern </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="94" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="426" bodyend="458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The MC implementation of <ref refid="d0/d67/classTrig_1_1IBunchCrossingTool" kindref="compound">Trig::IBunchCrossingTool</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>This implementation of the <ref refid="d0/d67/classTrig_1_1IBunchCrossingTool" kindref="compound">IBunchCrossingTool</ref> interface can read the metadata from pileup MC samples, and present the information to the analyst in the same way as the other tools represent the information for real data.</para><para>It also acts as a bunch crossing configuration provider, implementing the <ref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider" kindref="compound">Trig::IBunchCrossingConfProvider</ref> interface.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>660152 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2015-04-13 09:19:38 +0200 (Mon, 13 Apr 2015) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="13838">
        <label>asg::AsgMetadataTool</label>
        <link refid="da/dfd/classasg_1_1AsgMetadataTool"/>
        <childnode refid="13839" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13835">
        <label>Trig::BunchCrossingToolBase</label>
        <link refid="db/df3/classTrig_1_1BunchCrossingToolBase"/>
        <childnode refid="13836" relation="public-inheritance">
        </childnode>
        <childnode refid="13838" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13841">
        <label>Trig::IBunchCrossingConfProvider</label>
        <link refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider"/>
        <childnode refid="13837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13839">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="13837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13837">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="13834">
        <label>Trig::MCBunchCrossingTool</label>
        <link refid="da/dfc/classTrig_1_1MCBunchCrossingTool"/>
        <childnode refid="13835" relation="public-inheritance">
        </childnode>
        <childnode refid="13840" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13836">
        <label>Trig::IBunchCrossingTool</label>
        <link refid="d0/d67/classTrig_1_1IBunchCrossingTool"/>
        <childnode refid="13837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13840">
        <label>Trig::BunchCrossingConfProviderBase</label>
        <link refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase"/>
        <childnode refid="13841" relation="public-inheritance">
        </childnode>
        <childnode refid="13836" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13846">
        <label>asg::AsgMetadataTool</label>
        <link refid="da/dfd/classasg_1_1AsgMetadataTool"/>
        <childnode refid="13847" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13843">
        <label>Trig::BunchCrossingToolBase</label>
        <link refid="db/df3/classTrig_1_1BunchCrossingToolBase"/>
        <childnode refid="13844" relation="public-inheritance">
        </childnode>
        <childnode refid="13846" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13849">
        <label>Trig::IBunchCrossingConfProvider</label>
        <link refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider"/>
        <childnode refid="13845" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13847">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="13845" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13845">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="13842">
        <label>Trig::MCBunchCrossingTool</label>
        <link refid="da/dfc/classTrig_1_1MCBunchCrossingTool"/>
        <childnode refid="13843" relation="public-inheritance">
        </childnode>
        <childnode refid="13848" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13844">
        <label>Trig::IBunchCrossingTool</label>
        <link refid="d0/d67/classTrig_1_1IBunchCrossingTool"/>
        <childnode refid="13845" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13848">
        <label>Trig::BunchCrossingConfProviderBase</label>
        <link refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase"/>
        <childnode refid="13849" relation="public-inheritance">
        </childnode>
        <childnode refid="13844" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.h" bodystart="33" bodyend="107"/>
    <listofallmembers>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a59a741dd8ea7efecf776cc39470c87de" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>AsgMetadataTool</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>AsgTool</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>bcid_type</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a461c2b1eb11d7c3333b0229923d034f2" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>bcIntensity</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ae73075ec935b72664f7a585414372693" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>bcType</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a0a2435c329f92970602ae6a6c2f8165a" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Beam1</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a84657ab866c535aaaa27f007dd81b703" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Beam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>BeamType</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a197cfa14f94c758c53a770544b7dad88" prot="protected" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>beginEvent</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a0f88194c53ae0af538819858bdff07da" prot="protected" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>beginInputFile</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1af55d06296531100f4d78dfd5aee04e81" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>BUNCH_CONFIG_INCIDENT_NAME</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea0a64ff40e0cd130bf46a4dc695842780" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>BunchCrossings</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a9e4363277c1d17205c7b10b714b07e3d" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>BunchCrossingToolBase</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cf" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>BunchCrossingType</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>BunchDistanceType</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a259a9ab1e51ad92af759b09309fb4845" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>bunchesAfter</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1acd8316f25da4cce67f4bb9f2d9c0201b" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>bunchesInFront</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>BunchFillType</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a5cc5fa16b7c9746c169e0d3bf48e63f9" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>bunchIntAfter</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a2371cd65b547f431e0781fda40f991c9" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>bunchIntInFront</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a59de0d5fe70c893874b0418ce294d5a5" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>bunchTrainSpacing</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a521766e927f41055758f34ee58b5d012" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>CollidingBunch</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a39d11665c402dd15251de49f17678658" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configID</name></member>
      <member refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1ad30fc9b02c7c88c2beadda0071a0d4a6" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configid_type</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac3e74e966a491d171f98fc57379202a5" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configuredBCIDs</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1accf5d0162458465ee6cf4cc5843a83b5" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configuredIntensitiesBeam1</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a09b94e2b5e0e0efbdcf059561a80b0f3" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configuredIntensitiesBeam2</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a9717638b1e35b15c97fe603b9cd7841e" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configuredUnpairedBCIDsBeam1</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a5e78aba398533aad48f19e76012c4e80" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configuredUnpairedBCIDsBeam2</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a8aef723183a84775cd610e8573c438cd" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configuredUnpairedIntensitiesBeam1</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a828136eed8341a683555a76e90e54c17" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>configuredUnpairedIntensitiesBeam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a9d05da22e67bd5be8ea2807a72563690" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Crossing</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1af3f021e1433c5d1c820fc8d28aade214" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>distanceFromFront</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a55ded04a49420061e42910f6d4a72863" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>distanceFromTail</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa4b0c804ae3e2125b4c260b6fefd79ea8" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Empty</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a8ddf98c396a923c2e48174e4ddfcf0a5" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>EmptyBunch</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a96c1e806bc026046faec3c695ca1fa2b" prot="protected" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>endInputFile</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea8110a0e05955daca343f82a4ae037873" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>FilledBunches</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa259bae7213f9b2ee63d726133b5ccd54" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>FirstEmpty</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa5581dfb9e92aa4e7c3bb185de93bc21c" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Front</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a8f78cac1b71b78cf767767524ed199d7" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>gapAfterBunch</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a25f17b451a8b4d86553d10956d92c269" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>gapAfterTrain</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1acc68b272d6f04a98fd8cc147833b6a64" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>gapBeforeBunch</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a4c8ce18adcca57ed5391d77aab064d1d" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>gapBeforeTrain</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a5d9d9eae0988784fb6c257e0a2440ca6" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>getProperty</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a530a60a4a450f07baec2e3895f567656" prot="protected" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>handle</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a0a2be26c85b96cb88dbf5baf31255753" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>initialize</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1ae352e92bf7637cdd3fec63ca2df4bb79" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>inputMetaStore</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a3ab0a18ef9d9bdc06b4c18acddfc36f3" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>isBeam1</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac9ae6d6ba637900092c1d26b1d82c217" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>isBeam2</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac8fde5be2aa2f7589131ccf6589662ed" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>isFilled</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ac0290e90cf90bd34d70b99cc3efab88d" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>isInTrain</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a5f7ea73dc415f2e16a6de8be234e03d5" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>isUnpaired</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a289406fc3f36e544aa02e16673dd3a04" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>loadBunchTrains</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ac983cbae796e341d7371902b41a4587c" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>loadSingleBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad84da5ff8344107234e53aeff5e18bee" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>loadUnpairedBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1aeacbab34ba7a65f9672a6822d01249b9" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_bunchTrains</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad78f428d02ca4832fd663378e552fa65" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_filledBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad7b926a368d2961e6ce655c9d81dd89d" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_frontLength</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a6ad5c339feb60cfbafe6338995d66e99" prot="private" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_id</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1af1d024771f1c82e686ca1f22b9315537" prot="private" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_incidentSvc</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1abfb2482fc2bd1e48eefb56f1f307f4ff" prot="private" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_isConfigured</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1acc703223701968694a4f2d576b84c1d7" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_maxBunchSpacing</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1abb13d3d15c2814d5d79bc93892f7896e" prot="private" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_minBunchIntensity</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a129a33228220d9f1124b656e142d8470" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_singleBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1afca1209ab406f0572af565103c65ca62" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_tailLength</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1aac29b06ab503bf643bdaa72d8768f674" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>m_unpairedBunches</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a48547c6c75f8d0f73d1027b424838a72" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>MCBunchCrossingTool</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1abb00c6ab139868a879d647adabbddc2c" prot="protected" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>metaDataStop</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa8b13f6fcb97a797aba6ce81089e63f18" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Middle</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfae196bca5223029fbfbd4543646fcf793" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>MiddleEmpty</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a3aeba8f7ad5ade0197f5848fe9e4480e" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>msg_level_name</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea5e0331cbdd292eb12a1834b835bd79c7" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>NanoSec</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a8da99b872d015c8275a79b4334c40e63" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>numberOfBunchTrains</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1adcd6b90147d8f2f57488fe486288e1cb" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>numberOfFilledBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a48c96620cc51f7682c51cbed180e77aa" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>numberOfUnpairedBunches</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1aecc5130b7f5a7e9342e974891b562e1c" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>outputMetaStore</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1af1aac990b958e92bf38123318d926e67" prot="public" virt="pure-virtual" ambiguityscope="Trig::"><scope>Trig::MCBunchCrossingTool</scope><name>print</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1af4cc6ba53b6505045c2866d4e30e821d" prot="public" virt="virtual" ambiguityscope="asg::AsgMetadataTool::"><scope>Trig::MCBunchCrossingTool</scope><name>print</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a29b990621fc9b619cf2b7bd653a36c1d" prot="protected" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>printConfig</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1abe82065a516344e4f0f0abb2f23d9f8a" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>retrieveMetadata</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfad69950ed575625ca7e0c9905bb99f14d" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Single</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1af0c49a5d93cf0f25cbb0a2f12e5394d9" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>sysInitialize</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa334a589a59f6cd4362f4b5afaedc356f" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Tail</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a7ebe92dfea0629f84fdc5dda6e4739b0" prot="private" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>tokenize</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa17f24a20f1378fd1e9542d078133778b" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>Unpaired</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a955e2b8f3446de622b29908f7843b2f5" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>UnpairedBeam1</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8ac260bfad34a78e1b5076eb998c6aa417" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>UnpairedBeam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a5ad3382c869d5996cd7cc6e69d7affd8" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>UnpairedBunch</name></member>
      <member refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1aa5e7588e4d8f5c9d81f972127e3d4e21" prot="private" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>update</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a5e5666d87754b5f3b8d572512c41d5af" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>~AsgMetadataTool</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1abf22f7aa60258c67b79cf67bf70a3a5b" prot="public" virt="non-virtual"><scope>Trig::MCBunchCrossingTool</scope><name>~AsgTool</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>Trig::MCBunchCrossingTool</scope><name>~IAsgTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
