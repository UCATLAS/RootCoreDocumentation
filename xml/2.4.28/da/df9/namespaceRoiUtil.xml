<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/df9/namespaceRoiUtil" kind="namespace">
    <compoundname>RoiUtil</compoundname>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88" prot="public" static="no">
        <name>ROIENUM</name>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88a1d044beb8454210cba660638f9ca3992" prot="public">
          <name>PARAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88aed6a04cf825a6c8700b39f9f1bc8522c" prot="public">
          <name>ETA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88a41e32424943d9bf3087fc7b04967c8f3" prot="public">
          <name>ETAMINUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88a986627cd0a48197a2b172415ce645255" prot="public">
          <name>ETAPLUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88afcf40c39b52d26e1969f43a60c5263fa" prot="public">
          <name>PHI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88a3c613818ebbaacc6830f273d0effc320" prot="public">
          <name>PHIMINUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88a1fcf766d15e5cbd74af7a7172ed7a6e1" prot="public">
          <name>PHIPLUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88aba7fd6d9b9651f228e12cce152a3a9d8" prot="public">
          <name>ZED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88a5022422bffe2900f153343b4d0bfd031" prot="public">
          <name>ZEDMINUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a420d1eaab5a382754b1108d4e9532e88ac884bd529351e067a3e8818a963f838b" prot="public">
          <name>ZEDPLUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="enum" id="da/df9/namespaceRoiUtil_1a876f8526e6f6183e70a70399a3566784" prot="public" static="no">
        <name>MASK</name>
        <enumvalue id="da/df9/namespaceRoiUtil_1a876f8526e6f6183e70a70399a3566784a442e377adbfa4ca395cb048ca5cb9ccc" prot="public">
          <name>FULLSCAN</name>
          <initializer> 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a876f8526e6f6183e70a70399a3566784a1552e087eab3ceda0cb46d18643e64d2" prot="public">
          <name>COMPOSITE</name>
          <initializer> 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/df9/namespaceRoiUtil_1a876f8526e6f6183e70a70399a3566784a8b77d8cbe80629b59862370de964375c" prot="public">
          <name>ROITYPE</name>
          <initializer> 0x4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" bodystart="33" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="da/df9/namespaceRoiUtil_1a6929a9a0c08b67be911ffd5dc53d9304" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t RoiUtil::roitype_t</definition>
        <argsstring></argsstring>
        <name>roitype_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/df9/namespaceRoiUtil_1a1ca6c69f581e20d6153f6da977567877" prot="public" static="no">
        <type>std::vector&lt; std::vector&lt; roitype_t &gt; &gt;</type>
        <definition>typedef std::vector&lt; std::vector&lt;roitype_t&gt; &gt; RoiUtil::roiserial_type</definition>
        <argsstring></argsstring>
        <name>roiserial_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1af714aac69dbafc5139cc312b0e3bd28d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RoiUtil::contains</definition>
        <argsstring>(const IRoiDescriptor &amp;roi, double z0, double dzdr)</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> &amp;</type>
          <declname>roi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dzdr</declname>
        </param>
        <briefdescription>
<para>see whether a segment is contained within the roi in r-z </para>        </briefdescription>
        <detaileddescription>
<para>test whether a stub is contained within the roi </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1aec31b18869e74930fbd11d638fa19bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RoiUtil::contains_internal</definition>
        <argsstring>(const IRoiDescriptor &amp;roi, double z0, double zouter)</argsstring>
        <name>contains_internal</name>
        <param>
          <type>const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> &amp;</type>
          <declname>roi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zouter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="24" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1aedc2f0d58c7b7831e8e943baf0403567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RoiUtil::contains</definition>
        <argsstring>(const IRoiDescriptor &amp;roi, double z, double r, double phi)</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> &amp;</type>
          <declname>roi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>see whether a point is contained within the roi (in phi and r-z) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="96" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a6ebb2e13957188de572a2f042d691524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RoiUtil::containsPhi</definition>
        <argsstring>(const IRoiDescriptor &amp;roi, double phi)</argsstring>
        <name>containsPhi</name>
        <param>
          <type>const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> &amp;</type>
          <declname>roi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>test whether a stub is contained within the roi </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="50" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1afcfcdb6b597d62560f5dcd0f6ee7fa26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RoiUtil::containsZed</definition>
        <argsstring>(const IRoiDescriptor &amp;roi, double z, double r)</argsstring>
        <name>containsZed</name>
        <param>
          <type>const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> &amp;</type>
          <declname>roi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="80" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a952bc07b0b3a108ae3c6dcdea5f644f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RoiUtil::roiContainsZed</definition>
        <argsstring>(const IRoiDescriptor &amp;roi, double z, double r)</argsstring>
        <name>roiContainsZed</name>
        <param>
          <type>const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> &amp;</type>
          <declname>roi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>old non-member, non-friend interface methods - left in for backwards compatibility</para><para>non member, non friend interface function test whether a stub is contained within the roi </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="67" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a6bb9ad91a8af0f345ea08ca971100a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RoiUtil::roiContains</definition>
        <argsstring>(const IRoiDescriptor &amp;roi, double z, double r, double phi)</argsstring>
        <name>roiContains</name>
        <param>
          <type>const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> &amp;</type>
          <declname>roi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a6a37564e1096003f372cf2eadb42f15d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double RoiUtil::phicheck</definition>
        <argsstring>(double phi)</argsstring>
        <name>phicheck</name>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>basic range checkers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="122" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a177557b7f23606e8c763dc19c086f631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double RoiUtil::etacheck</definition>
        <argsstring>(double eta)</argsstring>
        <name>etacheck</name>
        <param>
          <type>double</type>
          <declname>eta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a11150d9fa00841c3d4ff7f722f891b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double RoiUtil::zedcheck</definition>
        <argsstring>(double zed)</argsstring>
        <name>zedcheck</name>
        <param>
          <type>double</type>
          <declname>zed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a990445f361d68fee3dfd78df0a2bd519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RoiUtil::serialise</definition>
        <argsstring>(const std::vector&lt; const IRoiDescriptor * &gt; &amp;rois, roiserial_type &amp;s)</argsstring>
        <name>serialise</name>
        <param>
          <type>const std::vector&lt; const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> * &gt; &amp;</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>roiserial_type &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>serialise an entire vector of IRoiDescriptors </para>        </briefdescription>
        <detaileddescription>
<para>serialise a vector of IRoiDescriptors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1ab5906b1710d865204ebcca17501ada4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RoiUtil::serialise</definition>
        <argsstring>(const TrigRoiDescriptorCollection &amp;rois, roiserial_type &amp;s)</argsstring>
        <name>serialise</name>
        <param>
          <type>const <ref refid="de/df5/classTrigRoiDescriptorCollection" kindref="compound">TrigRoiDescriptorCollection</ref> &amp;</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>roiserial_type &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>serialise an entire <ref refid="de/dc9/classTrigRoiDescriptor" kindref="compound">TrigRoiDescriptor</ref> collection </para>        </briefdescription>
        <detaileddescription>
<para>serialise a vector of IRoiDescriptors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a179db2b8bfbf0b2128b2878eb371ded9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RoiUtil::deserialise</definition>
        <argsstring>(const roiserial_type &amp;s, std::vector&lt; const IRoiDescriptor * &gt; &amp;rois)</argsstring>
        <name>deserialise</name>
        <param>
          <type>const roiserial_type &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> * &gt; &amp;</type>
          <declname>rois</declname>
        </param>
        <briefdescription>
<para>deserialise uint32_t vector into a full vector of IRoiDescriptors </para>        </briefdescription>
        <detaileddescription>
<para>deserialise a serialised vector into a full vector of IRoiDescriptors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" bodystart="60" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a10a7a058334e8311b94be04e2a4893d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RoiUtil::deserialise</definition>
        <argsstring>(const roiserial_type &amp;s, TrigRoiDescriptorCollection &amp;rois)</argsstring>
        <name>deserialise</name>
        <param>
          <type>const roiserial_type &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/df5/classTrigRoiDescriptorCollection" kindref="compound">TrigRoiDescriptorCollection</ref> &amp;</type>
          <declname>rois</declname>
        </param>
        <briefdescription>
<para>deserialise uint32_t vector into a <ref refid="de/df5/classTrigRoiDescriptorCollection" kindref="compound">TrigRoiDescriptorCollection</ref> </para>        </briefdescription>
        <detaileddescription>
<para>deserialise a serialised vector into a full vector of IRoiDescriptors </para>        </detaileddescription>
        <inbodydescription>
<para>Oh dear, or dear rois.push_back( RoiUtil::deserialise( s_end, s_last ) );</para><para>while ( s_end&lt;s_last ) </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" bodystart="76" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a943495a7700bc4eb3c0c6b00a75ce6b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RoiUtil::serialise</definition>
        <argsstring>(const IRoiDescriptor *roi, std::vector&lt; roitype_t &gt; &amp;s)</argsstring>
        <name>serialise</name>
        <param>
          <type>const <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> *</type>
          <declname>roi</declname>
        </param>
        <param>
          <type>std::vector&lt; roitype_t &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>serialise a single <ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="da/df9/namespaceRoiUtil_1a3fd3674e40334d460739603970c12835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/da4/classIRoiDescriptor" kindref="compound">IRoiDescriptor</ref> *</type>
        <definition>IRoiDescriptor * RoiUtil::deserialise</definition>
        <argsstring>(const roitype_t *&amp;s_end, const roitype_t *s_last)</argsstring>
        <name>deserialise</name>
        <param>
          <type>const roitype_t *&amp;</type>
          <declname>s_end</declname>
        </param>
        <param>
          <type>const roitype_t *</type>
          <declname>s_last</declname>
        </param>
        <briefdescription>
<para>deserialise to a single IRoiDescriptors (including constituents) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>get the packed version / fullscan / composite word</para><para>get the version</para><para>at this point we can have some customisation for the version number if required</para><para>is it a fullscan roi ?</para><para>is it a composite roi</para><para>set the expected limit of the serialised roitype_t container</para><para>calculate the untimate end of the basic roi roitype_t container</para><para>protection against over flowing the vector contents NB: this should really print an error or throw an exception but skipped in the interests of code portability</para><para>actually s_end becomes the address of the *next* word</para><para>get the additional (unwanted) roi words if required</para><para>create if fullscan</para><para>if not full scan, create with the roi parameters ...</para><para>this requires the roi words ... NB: if not required, the roi words are all set to 0</para><para>created the roi, now set composite if required NB: this is needed in case it is composite, but has no constituents</para><para>create constituents if required </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/TrigRoiConversion/RoiSerialise.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigRoiConversion/Root/RoiSerialise.cxx" bodystart="160" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/IRegionSelector/IRegionSelector/RoiUtil.h" line="20"/>
  </compounddef>
</doxygen>
