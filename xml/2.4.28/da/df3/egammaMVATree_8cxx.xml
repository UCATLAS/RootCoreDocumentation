<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/df3/egammaMVATree_8cxx" kind="file">
    <compoundname>egammaMVATree.cxx</compoundname>
    <includes local="no">exception</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">TTreeFormula.h</includes>
    <includes refid="d6/d1c/Egamma_8h" local="yes">xAODEgamma/Egamma.h</includes>
    <includes refid="dd/d34/EgammaDefs_8h" local="yes">xAODEgamma/EgammaDefs.h</includes>
    <includes refid="dc/db4/Electron_8h" local="yes">xAODEgamma/Electron.h</includes>
    <includes refid="d0/d71/EgammaxAODHelpers_8h" local="yes">xAODEgamma/EgammaxAODHelpers.h</includes>
    <includes refid="d4/df7/Photon_8h" local="yes">xAODEgamma/Photon.h</includes>
    <includes refid="db/d88/CaloCluster_8h" local="yes">xAODCaloEvent/CaloCluster.h</includes>
    <includes refid="d9/d2d/Vertex_8h" local="yes">xAODTracking/Vertex.h</includes>
    <includes refid="d2/d15/TrackParticle_8h" local="yes">xAODTracking/TrackParticle.h</includes>
    <includes refid="d2/d4c/TrackingPrimitives_8h" local="yes">xAODTracking/TrackingPrimitives.h</includes>
    <includes refid="de/d6c/egammaMVATree_8h" local="yes">egammaMVACalib/egammaMVATree.h</includes>
    <incdepgraph>
      <node id="116231">
        <label>list</label>
      </node>
      <node id="116240">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="116225" relation="include">
        </childnode>
        <childnode refid="116232" relation="include">
        </childnode>
        <childnode refid="116141" relation="include">
        </childnode>
        <childnode refid="116221" relation="include">
        </childnode>
        <childnode refid="116148" relation="include">
        </childnode>
      </node>
      <node id="116225">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="116186">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="116247">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="116248" relation="include">
        </childnode>
        <childnode refid="116226" relation="include">
        </childnode>
        <childnode refid="116155" relation="include">
        </childnode>
        <childnode refid="116249" relation="include">
        </childnode>
      </node>
      <node id="116188">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="116147" relation="include">
        </childnode>
        <childnode refid="116149" relation="include">
        </childnode>
        <childnode refid="116155" relation="include">
        </childnode>
        <childnode refid="116156" relation="include">
        </childnode>
      </node>
      <node id="116324">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116319" relation="include">
        </childnode>
        <childnode refid="116325" relation="include">
        </childnode>
        <childnode refid="116326" relation="include">
        </childnode>
      </node>
      <node id="116189">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="116158">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="116143" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116159" relation="include">
        </childnode>
        <childnode refid="116157" relation="include">
        </childnode>
      </node>
      <node id="116259">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="116260" relation="include">
        </childnode>
        <childnode refid="116261" relation="include">
        </childnode>
        <childnode refid="116262" relation="include">
        </childnode>
      </node>
      <node id="116154">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="116156">
        <label>functional</label>
      </node>
      <node id="116222">
        <label>boost/version.hpp</label>
      </node>
      <node id="116153">
        <label>limits</label>
      </node>
      <node id="116277">
        <label>xAODEgamma/EgammaxAODHelpers.h</label>
        <link refid="d0/d71/EgammaxAODHelpers_8h_source"/>
        <childnode refid="116278" relation="include">
        </childnode>
        <childnode refid="116279" relation="include">
        </childnode>
        <childnode refid="116267" relation="include">
        </childnode>
        <childnode refid="116280" relation="include">
        </childnode>
        <childnode refid="116283" relation="include">
        </childnode>
        <childnode refid="116287" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116282" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
      </node>
      <node id="116159">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="116292">
        <label>xAODTruth/TruthVertexFwd.h</label>
        <link refid="d5/d1a/TruthVertexFwd_8h_source"/>
      </node>
      <node id="116184">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="116326">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="116150">
        <label>iterator</label>
      </node>
      <node id="116210">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="116207" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
      </node>
      <node id="116172">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116173" relation="include">
        </childnode>
      </node>
      <node id="116212">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="116315">
        <label>cstdint</label>
      </node>
      <node id="116125">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/Root/egammaMVATree.cxx</label>
        <link refid="egammaMVATree.cxx"/>
        <childnode refid="116126" relation="include">
        </childnode>
        <childnode refid="116127" relation="include">
        </childnode>
        <childnode refid="116128" relation="include">
        </childnode>
        <childnode refid="116129" relation="include">
        </childnode>
        <childnode refid="116202" relation="include">
        </childnode>
        <childnode refid="116264" relation="include">
        </childnode>
        <childnode refid="116277" relation="include">
        </childnode>
        <childnode refid="116296" relation="include">
        </childnode>
        <childnode refid="116204" relation="include">
        </childnode>
        <childnode refid="116298" relation="include">
        </childnode>
        <childnode refid="116267" relation="include">
        </childnode>
        <childnode refid="116266" relation="include">
        </childnode>
        <childnode refid="116311" relation="include">
        </childnode>
      </node>
      <node id="116263">
        <label>CxxUtils/final.h</label>
        <link refid="da/d9b/final_8h"/>
      </node>
      <node id="116246">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="116293">
        <label>xAODTruth/versions/TruthParticleContainer_v1.h</label>
        <link refid="dd/d30/TruthParticleContainer__v1_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116255" relation="include">
        </childnode>
        <childnode refid="116290" relation="include">
        </childnode>
        <childnode refid="116294" relation="include">
        </childnode>
      </node>
      <node id="116252">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="116253" relation="include">
        </childnode>
        <childnode refid="116220" relation="include">
        </childnode>
        <childnode refid="116153" relation="include">
        </childnode>
        <childnode refid="116156" relation="include">
        </childnode>
        <childnode refid="116254" relation="include">
        </childnode>
      </node>
      <node id="116196">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="116144" relation="include">
        </childnode>
        <childnode refid="116197" relation="include">
        </childnode>
        <childnode refid="116127" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
        <childnode refid="116133" relation="include">
        </childnode>
      </node>
      <node id="116168">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116151" relation="include">
        </childnode>
      </node>
      <node id="116132">
        <label>stdint.h</label>
      </node>
      <node id="116232">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="116153" relation="include">
        </childnode>
        <childnode refid="116233" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
        <childnode refid="116151" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
      </node>
      <node id="116218">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="116165">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
      </node>
      <node id="116286">
        <label>Eigen/Geometry</label>
      </node>
      <node id="116136">
        <label>RVersion.h</label>
      </node>
      <node id="116278">
        <label>xAODEgamma/EgammaFwd.h</label>
        <link refid="dc/d0f/EgammaFwd_8h_source"/>
      </node>
      <node id="116146">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="116147" relation="include">
        </childnode>
        <childnode refid="116155" relation="include">
        </childnode>
        <childnode refid="116156" relation="include">
        </childnode>
      </node>
      <node id="116329">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="116215">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116255" relation="include">
        </childnode>
        <childnode refid="116205" relation="include">
        </childnode>
      </node>
      <node id="116152">
        <label>cmath</label>
      </node>
      <node id="116199">
        <label>cassert</label>
      </node>
      <node id="116223">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="116242">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="116127">
        <label>stdexcept</label>
      </node>
      <node id="116322">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116319" relation="include">
        </childnode>
        <childnode refid="116323" relation="include">
        </childnode>
      </node>
      <node id="116316">
        <label>numeric</label>
      </node>
      <node id="116187">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="116261">
        <label>Eigen/Core</label>
      </node>
      <node id="116229">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="116269">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116270" relation="include">
        </childnode>
      </node>
      <node id="116275">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116255" relation="include">
        </childnode>
        <childnode refid="116276" relation="include">
        </childnode>
      </node>
      <node id="116237">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="116140">
        <label>TLorentzVector.h</label>
      </node>
      <node id="116284">
        <label>xAODEgamma/PhotonFwd.h</label>
        <link refid="dd/d2c/PhotonFwd_8h_source"/>
      </node>
      <node id="116290">
        <label>xAODTruth/versions/TruthParticle_v1.h</label>
        <link refid="d3/d3b/TruthParticle__v1_8h_source"/>
        <childnode refid="116131" relation="include">
        </childnode>
        <childnode refid="116139" relation="include">
        </childnode>
        <childnode refid="116200" relation="include">
        </childnode>
        <childnode refid="116291" relation="include">
        </childnode>
      </node>
      <node id="116319">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="116207">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116208" relation="include">
        </childnode>
      </node>
      <node id="116128">
        <label>TTreeFormula.h</label>
      </node>
      <node id="116133">
        <label>string</label>
      </node>
      <node id="116190">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="116144" relation="include">
        </childnode>
        <childnode refid="116143" relation="include">
        </childnode>
        <childnode refid="116172" relation="include">
        </childnode>
        <childnode refid="116168" relation="include">
        </childnode>
        <childnode refid="116160" relation="include">
        </childnode>
        <childnode refid="116191" relation="include">
        </childnode>
        <childnode refid="116192" relation="include">
        </childnode>
        <childnode refid="116175" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116149" relation="include">
        </childnode>
        <childnode refid="116151" relation="include">
        </childnode>
        <childnode refid="116193" relation="include">
        </childnode>
        <childnode refid="116194" relation="include">
        </childnode>
        <childnode refid="116182" relation="include">
        </childnode>
        <childnode refid="116195" relation="include">
        </childnode>
      </node>
      <node id="116163">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
      </node>
      <node id="116268">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="116206" relation="include">
        </childnode>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116131" relation="include">
        </childnode>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116139" relation="include">
        </childnode>
        <childnode refid="116266" relation="include">
        </childnode>
        <childnode refid="116269" relation="include">
        </childnode>
        <childnode refid="116271" relation="include">
        </childnode>
        <childnode refid="116272" relation="include">
        </childnode>
      </node>
      <node id="116193">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="116264">
        <label>xAODEgamma/Electron.h</label>
        <link refid="dc/db4/Electron_8h_source"/>
        <childnode refid="116265" relation="include">
        </childnode>
      </node>
      <node id="116234">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="116217" relation="include">
        </childnode>
        <childnode refid="116232" relation="include">
        </childnode>
        <childnode refid="116235" relation="include">
        </childnode>
        <childnode refid="116237" relation="include">
        </childnode>
        <childnode refid="116222" relation="include">
        </childnode>
        <childnode refid="116150" relation="include">
        </childnode>
        <childnode refid="116151" relation="include">
        </childnode>
      </node>
      <node id="116248">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="116312">
        <label>map</label>
      </node>
      <node id="116257">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="116294">
        <label>xAODTruth/TruthParticleContainerFwd.h</label>
        <link refid="dd/d8f/TruthParticleContainerFwd_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116255" relation="include">
        </childnode>
        <childnode refid="116295" relation="include">
        </childnode>
      </node>
      <node id="116249">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="116250" relation="include">
        </childnode>
      </node>
      <node id="116256">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="116206" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
      </node>
      <node id="116250">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="116137">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="116179">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="116300">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="116239">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="116234" relation="include">
        </childnode>
        <childnode refid="116150" relation="include">
        </childnode>
        <childnode refid="116148" relation="include">
        </childnode>
        <childnode refid="116240" relation="include">
        </childnode>
      </node>
      <node id="116126">
        <label>exception</label>
      </node>
      <node id="116287">
        <label>xAODEgamma/EgammaTruthxAODHelpers.h</label>
        <link refid="d0/d59/EgammaTruthxAODHelpers_8h_source"/>
        <childnode refid="116278" relation="include">
        </childnode>
        <childnode refid="116281" relation="include">
        </childnode>
        <childnode refid="116284" relation="include">
        </childnode>
        <childnode refid="116276" relation="include">
        </childnode>
        <childnode refid="116288" relation="include">
        </childnode>
        <childnode refid="116289" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116282" relation="include">
        </childnode>
      </node>
      <node id="116194">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="116330">
        <label>egammaMVACalib/egammaMVALayerDepth.h</label>
        <link refid="db/de6/egammaMVALayerDepth_8h_source"/>
        <childnode refid="116313" relation="include">
        </childnode>
      </node>
      <node id="116176">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="116309">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="116298" relation="include">
        </childnode>
        <childnode refid="116310" relation="include">
        </childnode>
        <childnode refid="116213" relation="include">
        </childnode>
      </node>
      <node id="116296">
        <label>xAODEgamma/Photon.h</label>
        <link refid="d4/df7/Photon_8h_source"/>
        <childnode refid="116297" relation="include">
        </childnode>
      </node>
      <node id="116235">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="116217" relation="include">
        </childnode>
        <childnode refid="116135" relation="include">
        </childnode>
        <childnode refid="116155" relation="include">
        </childnode>
        <childnode refid="116236" relation="include">
        </childnode>
      </node>
      <node id="116323">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="116142">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="116135">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="116136" relation="include">
        </childnode>
        <childnode refid="116137" relation="include">
        </childnode>
      </node>
      <node id="116192">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="116185">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="116311">
        <label>egammaMVACalib/egammaMVATree.h</label>
        <link refid="de/d6c/egammaMVATree_8h_source"/>
        <childnode refid="116156" relation="include">
        </childnode>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116312" relation="include">
        </childnode>
        <childnode refid="116313" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116314" relation="include">
        </childnode>
        <childnode refid="116152" relation="include">
        </childnode>
        <childnode refid="116282" relation="include">
        </childnode>
        <childnode refid="116315" relation="include">
        </childnode>
        <childnode refid="116316" relation="include">
        </childnode>
        <childnode refid="116129" relation="include">
        </childnode>
        <childnode refid="116264" relation="include">
        </childnode>
        <childnode refid="116296" relation="include">
        </childnode>
        <childnode refid="116277" relation="include">
        </childnode>
        <childnode refid="116204" relation="include">
        </childnode>
        <childnode refid="116317" relation="include">
        </childnode>
        <childnode refid="116140" relation="include">
        </childnode>
        <childnode refid="116318" relation="include">
        </childnode>
        <childnode refid="116330" relation="include">
        </childnode>
      </node>
      <node id="116276">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="116233">
        <label>limits.h</label>
      </node>
      <node id="116227">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="116228" relation="include">
        </childnode>
      </node>
      <node id="116310">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116299" relation="include">
        </childnode>
      </node>
      <node id="116171">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="116172" relation="include">
        </childnode>
        <childnode refid="116153" relation="include">
        </childnode>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116174" relation="include">
        </childnode>
      </node>
      <node id="116144">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116146" relation="include">
        </childnode>
      </node>
      <node id="116134">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="116132" relation="include">
        </childnode>
      </node>
      <node id="116262">
        <label>Eigen/Dense</label>
      </node>
      <node id="116147">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="116148" relation="include">
        </childnode>
        <childnode refid="116149" relation="include">
        </childnode>
        <childnode refid="116150" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116151" relation="include">
        </childnode>
        <childnode refid="116152" relation="include">
        </childnode>
        <childnode refid="116153" relation="include">
        </childnode>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116154" relation="include">
        </childnode>
      </node>
      <node id="116220">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="116199" relation="include">
        </childnode>
      </node>
      <node id="116139">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="116140" relation="include">
        </childnode>
        <childnode refid="116141" relation="include">
        </childnode>
        <childnode refid="116200" relation="include">
        </childnode>
        <childnode refid="116159" relation="include">
        </childnode>
      </node>
      <node id="116279">
        <label>xAODCaloEvent/CaloClusterFwd.h</label>
        <link refid="d9/d35/CaloClusterFwd_8h_source"/>
      </node>
      <node id="116200">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="116201" relation="include">
        </childnode>
      </node>
      <node id="116205">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116206" relation="include">
        </childnode>
        <childnode refid="116139" relation="include">
        </childnode>
        <childnode refid="116207" relation="include">
        </childnode>
        <childnode refid="116209" relation="include">
        </childnode>
        <childnode refid="116131" relation="include">
        </childnode>
        <childnode refid="116211" relation="include">
        </childnode>
        <childnode refid="116212" relation="include">
        </childnode>
      </node>
      <node id="116236">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="116232" relation="include">
        </childnode>
        <childnode refid="116220" relation="include">
        </childnode>
      </node>
      <node id="116265">
        <label>xAODEgamma/versions/Electron_v1.h</label>
        <link refid="df/d27/Electron__v1_8h_source"/>
        <childnode refid="116131" relation="include">
        </childnode>
        <childnode refid="116130" relation="include">
        </childnode>
        <childnode refid="116203" relation="include">
        </childnode>
        <childnode refid="116266" relation="include">
        </childnode>
        <childnode refid="116267" relation="include">
        </childnode>
        <childnode refid="116273" relation="include">
        </childnode>
        <childnode refid="116263" relation="include">
        </childnode>
        <childnode refid="116175" relation="include">
        </childnode>
      </node>
      <node id="116164">
        <label>typeinfo</label>
      </node>
      <node id="116266">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="116259" relation="include">
        </childnode>
      </node>
      <node id="116198">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="116193" relation="include">
        </childnode>
        <childnode refid="116199" relation="include">
        </childnode>
      </node>
      <node id="116204">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="116205" relation="include">
        </childnode>
        <childnode refid="116213" relation="include">
        </childnode>
      </node>
      <node id="116216">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="116196" relation="include">
        </childnode>
        <childnode refid="116217" relation="include">
        </childnode>
        <childnode refid="116218" relation="include">
        </childnode>
        <childnode refid="116219" relation="include">
        </childnode>
        <childnode refid="116225" relation="include">
        </childnode>
        <childnode refid="116226" relation="include">
        </childnode>
        <childnode refid="116232" relation="include">
        </childnode>
        <childnode refid="116234" relation="include">
        </childnode>
        <childnode refid="116238" relation="include">
        </childnode>
        <childnode refid="116239" relation="include">
        </childnode>
        <childnode refid="116235" relation="include">
        </childnode>
        <childnode refid="116241" relation="include">
        </childnode>
        <childnode refid="116135" relation="include">
        </childnode>
        <childnode refid="116242" relation="include">
        </childnode>
        <childnode refid="116243" relation="include">
        </childnode>
        <childnode refid="116237" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
        <childnode refid="116156" relation="include">
        </childnode>
        <childnode refid="116244" relation="include">
        </childnode>
        <childnode refid="116148" relation="include">
        </childnode>
        <childnode refid="116127" relation="include">
        </childnode>
        <childnode refid="116150" relation="include">
        </childnode>
        <childnode refid="116159" relation="include">
        </childnode>
        <childnode refid="116245" relation="include">
        </childnode>
        <childnode refid="116247" relation="include">
        </childnode>
        <childnode refid="116251" relation="include">
        </childnode>
        <childnode refid="116252" relation="include">
        </childnode>
      </node>
      <node id="116302">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="116303" relation="include">
        </childnode>
        <childnode refid="116213" relation="include">
        </childnode>
      </node>
      <node id="116206">
        <label>bitset</label>
      </node>
      <node id="116174">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="116138">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="116314">
        <label>tuple</label>
      </node>
      <node id="116191">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="116328">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="116319" relation="include">
        </childnode>
        <childnode refid="116322" relation="include">
        </childnode>
        <childnode refid="116329" relation="include">
        </childnode>
      </node>
      <node id="116161">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="116132" relation="include">
        </childnode>
      </node>
      <node id="116299">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116141" relation="include">
        </childnode>
        <childnode refid="116131" relation="include">
        </childnode>
        <childnode refid="116259" relation="include">
        </childnode>
        <childnode refid="116285" relation="include">
        </childnode>
        <childnode refid="116300" relation="include">
        </childnode>
        <childnode refid="116266" relation="include">
        </childnode>
        <childnode refid="116275" relation="include">
        </childnode>
        <childnode refid="116301" relation="include">
        </childnode>
        <childnode refid="116200" relation="include">
        </childnode>
        <childnode refid="116308" relation="include">
        </childnode>
      </node>
      <node id="116173">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="116178">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="116226">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="116227" relation="include">
        </childnode>
        <childnode refid="116219" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116154" relation="include">
        </childnode>
        <childnode refid="116229" relation="include">
        </childnode>
        <childnode refid="116177" relation="include">
        </childnode>
        <childnode refid="116230" relation="include">
        </childnode>
      </node>
      <node id="116157">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="116260">
        <label>unistd.h</label>
      </node>
      <node id="116245">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="116246" relation="include">
        </childnode>
      </node>
      <node id="116162">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="116144" relation="include">
        </childnode>
        <childnode refid="116163" relation="include">
        </childnode>
        <childnode refid="116165" relation="include">
        </childnode>
        <childnode refid="116166" relation="include">
        </childnode>
        <childnode refid="116180" relation="include">
        </childnode>
        <childnode refid="116182" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116188" relation="include">
        </childnode>
        <childnode refid="116189" relation="include">
        </childnode>
      </node>
      <node id="116169">
        <label>vector</label>
      </node>
      <node id="116255">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116139" relation="include">
        </childnode>
        <childnode refid="116157" relation="include">
        </childnode>
      </node>
      <node id="116253">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="116148" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
      </node>
      <node id="116298">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="116299" relation="include">
        </childnode>
      </node>
      <node id="116305">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116303" relation="include">
        </childnode>
        <childnode refid="116306" relation="include">
        </childnode>
      </node>
      <node id="116297">
        <label>xAODEgamma/versions/Photon_v1.h</label>
        <link refid="d3/d5c/Photon__v1_8h_source"/>
        <childnode refid="116131" relation="include">
        </childnode>
        <childnode refid="116298" relation="include">
        </childnode>
        <childnode refid="116309" relation="include">
        </childnode>
        <childnode refid="116273" relation="include">
        </childnode>
        <childnode refid="116130" relation="include">
        </childnode>
        <childnode refid="116283" relation="include">
        </childnode>
        <childnode refid="116263" relation="include">
        </childnode>
        <childnode refid="116175" relation="include">
        </childnode>
      </node>
      <node id="116254">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="116209">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="116210" relation="include">
        </childnode>
      </node>
      <node id="116149">
        <label>utility</label>
      </node>
      <node id="116251">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="116313">
        <label>array</label>
      </node>
      <node id="116175">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="116321">
        <label>sstream</label>
      </node>
      <node id="116130">
        <label>xAODEgamma/versions/Egamma_v1.h</label>
        <link refid="d9/d42/Egamma__v1_8h_source"/>
        <childnode refid="116131" relation="include">
        </childnode>
        <childnode refid="116139" relation="include">
        </childnode>
        <childnode refid="116202" relation="include">
        </childnode>
        <childnode refid="116203" relation="include">
        </childnode>
        <childnode refid="116204" relation="include">
        </childnode>
        <childnode refid="116214" relation="include">
        </childnode>
        <childnode refid="116256" relation="include">
        </childnode>
        <childnode refid="116257" relation="include">
        </childnode>
        <childnode refid="116258" relation="include">
        </childnode>
        <childnode refid="116259" relation="include">
        </childnode>
        <childnode refid="116263" relation="include">
        </childnode>
        <childnode refid="116175" relation="include">
        </childnode>
        <childnode refid="116132" relation="include">
        </childnode>
      </node>
      <node id="116214">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="116204" relation="include">
        </childnode>
        <childnode refid="116215" relation="include">
        </childnode>
        <childnode refid="116213" relation="include">
        </childnode>
      </node>
      <node id="116288">
        <label>xAODTruth/TruthParticleContainer.h</label>
        <link refid="d9/dbc/TruthParticleContainer_8h_source"/>
        <childnode refid="116289" relation="include">
        </childnode>
        <childnode refid="116293" relation="include">
        </childnode>
        <childnode refid="116213" relation="include">
        </childnode>
      </node>
      <node id="116291">
        <label>xAODTruth/TruthVertexContainerFwd.h</label>
        <link refid="da/ddf/TruthVertexContainerFwd_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116292" relation="include">
        </childnode>
      </node>
      <node id="116285">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="116260" relation="include">
        </childnode>
        <childnode refid="116286" relation="include">
        </childnode>
      </node>
      <node id="116270">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="116224">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="116183">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="116167">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="116280">
        <label>xAODEgamma/ElectronxAODHelpers.h</label>
        <link refid="df/dec/ElectronxAODHelpers_8h_source"/>
        <childnode refid="116281" relation="include">
        </childnode>
        <childnode refid="116276" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116282" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
      </node>
      <node id="116182">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="116183" relation="include">
        </childnode>
        <childnode refid="116184" relation="include">
        </childnode>
        <childnode refid="116185" relation="include">
        </childnode>
        <childnode refid="116186" relation="include">
        </childnode>
        <childnode refid="116187" relation="include">
        </childnode>
      </node>
      <node id="116208">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="116201">
        <label>iosfwd</label>
      </node>
      <node id="116151">
        <label>cstdlib</label>
      </node>
      <node id="116267">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="116268" relation="include">
        </childnode>
        <childnode refid="116213" relation="include">
        </childnode>
      </node>
      <node id="116244">
        <label>iostream</label>
      </node>
      <node id="116197">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="116274">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116268" relation="include">
        </childnode>
        <childnode refid="116275" relation="include">
        </childnode>
      </node>
      <node id="116143">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="116144" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116157" relation="include">
        </childnode>
      </node>
      <node id="116145">
        <label>cstddef</label>
      </node>
      <node id="116327">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="116320">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116321" relation="include">
        </childnode>
        <childnode refid="116319" relation="include">
        </childnode>
        <childnode refid="116322" relation="include">
        </childnode>
        <childnode refid="116324" relation="include">
        </childnode>
        <childnode refid="116327" relation="include">
        </childnode>
      </node>
      <node id="116195">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="116162" relation="include">
        </childnode>
        <childnode refid="116158" relation="include">
        </childnode>
        <childnode refid="116143" relation="include">
        </childnode>
        <childnode refid="116193" relation="include">
        </childnode>
        <childnode refid="116194" relation="include">
        </childnode>
      </node>
      <node id="116325">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="116308">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="116159" relation="include">
        </childnode>
      </node>
      <node id="116203">
        <label>xAODEgamma/EgammaEnums.h</label>
        <link refid="d4/d8f/EgammaEnums_8h_source"/>
      </node>
      <node id="116304">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="116230">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="116217" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116231" relation="include">
        </childnode>
        <childnode refid="116199" relation="include">
        </childnode>
        <childnode refid="116151" relation="include">
        </childnode>
        <childnode refid="116159" relation="include">
        </childnode>
      </node>
      <node id="116166">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="116163" relation="include">
        </childnode>
        <childnode refid="116167" relation="include">
        </childnode>
        <childnode refid="116168" relation="include">
        </childnode>
        <childnode refid="116170" relation="include">
        </childnode>
        <childnode refid="116175" relation="include">
        </childnode>
        <childnode refid="116164" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116148" relation="include">
        </childnode>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116177" relation="include">
        </childnode>
        <childnode refid="116178" relation="include">
        </childnode>
        <childnode refid="116179" relation="include">
        </childnode>
      </node>
      <node id="116271">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="116129">
        <label>xAODEgamma/Egamma.h</label>
        <link refid="d6/d1c/Egamma_8h_source"/>
        <childnode refid="116130" relation="include">
        </childnode>
      </node>
      <node id="116289">
        <label>xAODTruth/TruthParticle.h</label>
        <link refid="dd/d44/TruthParticle_8h_source"/>
        <childnode refid="116290" relation="include">
        </childnode>
      </node>
      <node id="116202">
        <label>xAODEgamma/EgammaDefs.h</label>
        <link refid="dd/d34/EgammaDefs_8h_source"/>
        <childnode refid="116132" relation="include">
        </childnode>
      </node>
      <node id="116303">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="116131" relation="include">
        </childnode>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116139" relation="include">
        </childnode>
        <childnode refid="116266" relation="include">
        </childnode>
        <childnode refid="116269" relation="include">
        </childnode>
        <childnode refid="116206" relation="include">
        </childnode>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116304" relation="include">
        </childnode>
      </node>
      <node id="116318">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116319" relation="include">
        </childnode>
        <childnode refid="116320" relation="include">
        </childnode>
        <childnode refid="116328" relation="include">
        </childnode>
      </node>
      <node id="116307">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="116281">
        <label>xAODEgamma/ElectronFwd.h</label>
        <link refid="db/d18/ElectronFwd_8h_source"/>
      </node>
      <node id="116283">
        <label>xAODEgamma/PhotonxAODHelpers.h</label>
        <link refid="d5/d20/PhotonxAODHelpers_8h_source"/>
        <childnode refid="116284" relation="include">
        </childnode>
        <childnode refid="116270" relation="include">
        </childnode>
        <childnode refid="116276" relation="include">
        </childnode>
        <childnode refid="116203" relation="include">
        </childnode>
        <childnode refid="116285" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116282" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
      </node>
      <node id="116177">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="116317">
        <label>TTree.h</label>
      </node>
      <node id="116301">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="116302" relation="include">
        </childnode>
        <childnode refid="116305" relation="include">
        </childnode>
        <childnode refid="116213" relation="include">
        </childnode>
      </node>
      <node id="116219">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="116190" relation="include">
        </childnode>
        <childnode refid="116217" relation="include">
        </childnode>
        <childnode refid="116218" relation="include">
        </childnode>
        <childnode refid="116141" relation="include">
        </childnode>
        <childnode refid="116162" relation="include">
        </childnode>
        <childnode refid="116196" relation="include">
        </childnode>
        <childnode refid="116220" relation="include">
        </childnode>
        <childnode refid="116158" relation="include">
        </childnode>
        <childnode refid="116221" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116224" relation="include">
        </childnode>
      </node>
      <node id="116282">
        <label>set</label>
      </node>
      <node id="116258">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="116213">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="116157" relation="include">
        </childnode>
      </node>
      <node id="116181">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="116170">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="116167" relation="include">
        </childnode>
        <childnode refid="116171" relation="include">
        </childnode>
        <childnode refid="116175" relation="include">
        </childnode>
        <childnode refid="116169" relation="include">
        </childnode>
        <childnode refid="116176" relation="include">
        </childnode>
      </node>
      <node id="116148">
        <label>algorithm</label>
      </node>
      <node id="116211">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="116241">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="116272">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="116141">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="116142" relation="include">
        </childnode>
        <childnode refid="116143" relation="include">
        </childnode>
        <childnode refid="116158" relation="include">
        </childnode>
        <childnode refid="116160" relation="include">
        </childnode>
        <childnode refid="116162" relation="include">
        </childnode>
        <childnode refid="116190" relation="include">
        </childnode>
        <childnode refid="116168" relation="include">
        </childnode>
        <childnode refid="116196" relation="include">
        </childnode>
        <childnode refid="116193" relation="include">
        </childnode>
        <childnode refid="116145" relation="include">
        </childnode>
        <childnode refid="116198" relation="include">
        </childnode>
      </node>
      <node id="116160">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116161" relation="include">
        </childnode>
        <childnode refid="116135" relation="include">
        </childnode>
      </node>
      <node id="116238">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="116234" relation="include">
        </childnode>
        <childnode refid="116220" relation="include">
        </childnode>
        <childnode refid="116150" relation="include">
        </childnode>
      </node>
      <node id="116217">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="116131">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="116132" relation="include">
        </childnode>
        <childnode refid="116133" relation="include">
        </childnode>
        <childnode refid="116134" relation="include">
        </childnode>
        <childnode refid="116135" relation="include">
        </childnode>
        <childnode refid="116138" relation="include">
        </childnode>
      </node>
      <node id="116273">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="116267" relation="include">
        </childnode>
        <childnode refid="116274" relation="include">
        </childnode>
        <childnode refid="116213" relation="include">
        </childnode>
      </node>
      <node id="116228">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="116243">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="116155">
        <label>memory</label>
      </node>
      <node id="116306">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="116216" relation="include">
        </childnode>
        <childnode refid="116255" relation="include">
        </childnode>
        <childnode refid="116307" relation="include">
        </childnode>
      </node>
      <node id="116180">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="116165" relation="include">
        </childnode>
        <childnode refid="116166" relation="include">
        </childnode>
        <childnode refid="116181" relation="include">
        </childnode>
      </node>
      <node id="116295">
        <label>xAODTruth/TruthParticleFwd.h</label>
        <link refid="de/d03/TruthParticleFwd_8h_source"/>
      </node>
      <node id="116221">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="116142" relation="include">
        </childnode>
        <childnode refid="116158" relation="include">
        </childnode>
        <childnode refid="116143" relation="include">
        </childnode>
        <childnode refid="116177" relation="include">
        </childnode>
        <childnode refid="116222" relation="include">
        </childnode>
        <childnode refid="116223" relation="include">
        </childnode>
        <childnode refid="116133" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTreeFormula.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Egamma.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/EgammaDefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Electron.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/EgammaxAODHelpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Photon.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCaloEvent/CaloCluster.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/Vertex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/TrackParticle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/TrackingPrimitives.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;egammaMVACalib/egammaMVATree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">egammaMVATreeHelpers;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//ClassImp(egammaMVATreeEgamma)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/>ROOTCORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//ClassImp(egammaMVATreeElectron)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">egammaMVATreeEgamma::egammaMVATreeEgamma(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>prefix,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_layer_corrected)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">:<sp/>TTree(name.c_str(),<sp/>name.c_str()),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>asg::AsgMessaging(name),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>m_prefix(prefix),<sp/>m_use_layer_corrected(use_layer_corrected)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>SetCacheSize(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>to<sp/>avoid<sp/>creation<sp/>of<sp/>(big)<sp/>cache<sp/>for<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;use<sp/>layer<sp/>corrected:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>use_layer_corrected);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>init_variables(variables);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>egammaMVATreeEgamma::init_variables(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::function&lt;float(const<sp/>xAOD::CaloCluster&amp;)&gt;&gt;<sp/>map_float_CaloCluster<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_cl_eta&quot;</highlight><highlight class="normal">,<sp/>compute_cl_eta},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_cl_phi&quot;</highlight><highlight class="normal">,<sp/>compute_cl_phi},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_cl_E&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.e();<sp/>}},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_cl_etaCalo&quot;</highlight><highlight class="normal">,<sp/>compute_cl_etaCalo},</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_cl_phiCalo&quot;</highlight><highlight class="normal">,<sp/>compute_cl_phiCalo},</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_cl_E_TileGap3&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.eSample(CaloSampling::TileGap3);<sp/>}}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::function&lt;float(const<sp/>xAOD::Egamma&amp;)&gt;&gt;<sp/>map_float_particle;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_use_layer_corrected)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_Es0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_correctedcl_Es0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_Es1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_correctedcl_Es1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_Es2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_correctedcl_Es2;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_Es3&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_correctedcl_Es3;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_calibHitsShowerDepth&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_correctedcl_calibHitsShowerDepth;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_Es0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_rawcl_Es0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_Es1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_rawcl_Es1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_Es2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_rawcl_Es2;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_Es3&quot;</highlight><highlight class="normal">]<sp/>=<sp/>compute_rawcl_Es3;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>everything<sp/>that<sp/>depends<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>cast<sp/>here<sp/>is<sp/>needed<sp/>to<sp/>resolve<sp/>overload<sp/>(std::function<sp/>is<sp/>not<sp/>able<sp/>to)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>map_float_CaloCluster[m_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_rawcl_calibHitsShowerDepth&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(*)(</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(compute_rawcl_calibHitsShowerDepth);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>create_structure&lt;float&gt;(variables,<sp/>map_float_CaloCluster,<sp/>m_functions_float_from_calo_cluster);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>create_structure&lt;float&gt;(variables,<sp/>map_float_particle,<sp/>m_functions_float_from_particle);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>egammaMVATreeEgamma::get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>m_functions_float_from_calo_cluster)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(item)<sp/>==<sp/>var_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;std::get&lt;2&gt;(item);<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>m_functions_float_from_particle)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(item)<sp/>==<sp/>var_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;std::get&lt;2&gt;(item);<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>egammaMVATreeEgamma::get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*var_name*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>no<sp/>int<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" kindref="member">egammaMVATreeEgamma::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound" tooltip="Class describing an e/gamma.">xAOD::Egamma</ref>*<sp/>egamma)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" kindref="member">update</ref>(egamma,<sp/>egamma-&gt;caloCluster());</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" kindref="member">egammaMVATreeEgamma::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound" tooltip="Class describing an e/gamma.">xAOD::Egamma</ref>*<sp/>particle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>*<sp/>cluster)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;updating<sp/>egamma<sp/>from<sp/>cluster&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(m_functions_float_from_calo_cluster.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>float<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cluster<sp/>and<sp/>m_functions_float_from_calo_cluster.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1ad9b91b96bc77b47e3a3d00e4ed11fcfa" kindref="member" tooltip="size method (forwarded from CaloClusterCellLink obj)">size</ref>()<sp/>&gt;<sp/>0)<sp/>{<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;egamma<sp/>cluster<sp/>pointer<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_float_from_calo_cluster)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>=<sp/>std::get&lt;1&gt;(var_function);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>f(*cluster);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(std::get&lt;0&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>var<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(var_function));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;updating<sp/>egamma<sp/>from<sp/>particle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(m_functions_float_from_particle.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>float<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!particle<sp/>and<sp/>m_functions_float_from_particle.size()<sp/>&gt;<sp/>0)<sp/>{<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;particle<sp/>pointer<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_float_from_particle)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>=<sp/>std::get&lt;1&gt;(var_function);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>f(*particle);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(std::get&lt;0&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>var<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(var_function));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">egammaMVATreeElectron::egammaMVATreeElectron(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>vars,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_layer_corrected)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">:<ref refid="d5/dbb/classegammaMVATreeEgamma" kindref="compound">egammaMVATreeEgamma</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;el&quot;</highlight><highlight class="normal">,<sp/>vars,<sp/>use_layer_corrected)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal">ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;creating<sp/>tree<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vars.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>variables:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::accumulate(vars.begin(),<sp/>vars.end(),<sp/>std::string(),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>b)<sp/>-&gt;<sp/>std::string<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>(a.length()<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>init_variables(vars);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>egammaMVATreeElectron::init_variables(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;init<sp/>variable<sp/>for<sp/>electron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::function&lt;float(const<sp/>xAOD::Electron&amp;)&gt;&gt;<sp/>map_float_Electron<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;el_charge&quot;</highlight><highlight class="normal">,<sp/>compute_el_charge},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;el_tracketa&quot;</highlight><highlight class="normal">,<sp/>compute_el_tracketa},</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;el_trackpt&quot;</highlight><highlight class="normal">,<sp/>compute_el_trackpt},</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;el_trackz0&quot;</highlight><highlight class="normal">,<sp/>compute_el_trackz0},</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;el_refittedTrack_qoverp&quot;</highlight><highlight class="normal">,<sp/>compute_el_refittedTrack_qoverp}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::function&lt;int(const<sp/>xAOD::Electron&amp;)&gt;&gt;<sp/>map_int_Electron<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;el_author&quot;</highlight><highlight class="normal">,<sp/>compute_el_author}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>create_structure&lt;float&gt;(variables,<sp/>map_float_Electron,<sp/>m_functions_float_from_electron);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>create_structure&lt;int&gt;(variables,<sp/>map_int_Electron,<sp/>m_functions_int_from_electron);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>egammaMVATreeElectron::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>electron)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>update(electron,<sp/>electron-&gt;caloCluster());</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>egammaMVATreeElectron::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>electron,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>*<sp/>cluster)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" kindref="member">egammaMVATreeEgamma::update</ref>(electron,<sp/>cluster);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;updating<sp/>electron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(m_functions_float_from_electron.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>float<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!electron<sp/>and<sp/>!m_functions_float_from_electron.empty())<sp/>{<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;electron<sp/>pointer<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_float_from_electron)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>=<sp/>std::get&lt;1&gt;(var_function);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>f(*electron);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(std::get&lt;0&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>var<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>&amp;var);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(m_functions_int_from_electron.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>int<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!electron<sp/>and<sp/>!m_functions_int_from_electron.empty())<sp/>{<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;electron<sp/>pointer<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_int_from_electron)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>=<sp/>std::get&lt;1&gt;(var_function);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>f(*electron);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(std::get&lt;0&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>var<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>&amp;var);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>egammaMVATreeElectron::get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="182"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>var<sp/>=<sp/>egammaMVATreeEgamma::get_ptr&lt;float&gt;(var_name);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var;<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>m_functions_float_from_electron)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(item)<sp/>==<sp/>var_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;std::get&lt;2&gt;(item);<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>egammaMVATreeElectron::get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="192"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>var<sp/>=<sp/>egammaMVATreeEgamma::get_ptr&lt;int&gt;(var_name);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var;<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>m_functions_int_from_electron)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(item)<sp/>==<sp/>var_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;std::get&lt;2&gt;(item);<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/>ROOTCORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//ClassImp(egammaMVATreePhoton)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">egammaMVATreePhoton::egammaMVATreePhoton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>vars,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_layer_corrected,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_conversion_to_zero_when_null_photon</highlight><highlight class="comment">/*=false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">:<sp/><ref refid="d5/dbb/classegammaMVATreeEgamma" kindref="compound">egammaMVATreeEgamma</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;ph&quot;</highlight><highlight class="normal">,<sp/>vars,<sp/>use_layer_corrected),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>m_force_conversion_to_zero_when_null_photon(force_conversion_to_zero_when_null_photon)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;creating<sp/>tree<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vars.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>variables:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::accumulate(vars.begin(),<sp/>vars.end(),<sp/>std::string(),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>b)<sp/>-&gt;<sp/>std::string<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>(a.length()<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>init_variables(vars);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>egammaMVATreePhoton::init_variables(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;init<sp/>variable<sp/>for<sp/>photon&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::function&lt;float(const<sp/>xAOD::Photon&amp;)&gt;&gt;<sp/>map_float_Photon<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::function&lt;int(const<sp/>xAOD::Photon&amp;)&gt;&gt;<sp/>map_int_Photon<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_convFlag&quot;</highlight><highlight class="normal">,<sp/>compute_ph_convFlag}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::function&lt;float(const<sp/>ConversionHelper&amp;)&gt;&gt;<sp/>map_float_ConversionHelper<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_Rconv&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_Rconv();<sp/>}},</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_zconv&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_zconv();<sp/>}},</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_pt1conv&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_pt1conv();<sp/>}},</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_pt2conv&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_pt2conv();<sp/>}},</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_ptconv&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_ptconv();<sp/>}}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::function&lt;int(const<sp/>ConversionHelper&amp;)&gt;&gt;<sp/>map_int_ConversionHelper<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_convtrk1nPixHits&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_convtrk1nPixHits();<sp/>}},</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_convtrk2nPixHits&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_convtrk2nPixHits();<sp/>}},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_convtrk1nSCTHits&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_convtrk1nSCTHits();<sp/>}},</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ph_convtrk2nSCTHits&quot;</highlight><highlight class="normal">,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>&amp;<sp/>ch)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch.ph_convtrk2nSCTHits();<sp/>}}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>create_structure&lt;float&gt;(variables,<sp/>map_float_Photon,<sp/>m_functions_float_from_photon);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>create_structure&lt;int&gt;(variables,<sp/>map_int_Photon,<sp/>m_functions_int_from_photon);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>create_structure&lt;float&gt;(variables,<sp/>map_float_ConversionHelper,<sp/>m_functions_float_from_ConversionHelper);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>create_structure&lt;int&gt;(variables,<sp/>map_int_ConversionHelper,<sp/>m_functions_int_from_ConversionHelper);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>egammaMVATreePhoton::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound" tooltip="Class describing an photon.">xAOD::Photon</ref>*<sp/>photon)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>update(photon,<sp/>photon-&gt;caloCluster());</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>egammaMVATreePhoton::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound" tooltip="Class describing an photon.">xAOD::Photon</ref>*<sp/>photon,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>*<sp/>cluster)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" kindref="member">egammaMVATreeEgamma::update</ref>(photon,<sp/>cluster);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;updating<sp/>photon&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(m_functions_float_from_photon.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>float<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!photon<sp/>and<sp/>!m_functions_float_from_photon.empty())<sp/>{<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;photon<sp/>pointer<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_float_from_photon)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>=<sp/>std::get&lt;1&gt;(var_function);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>f(*photon);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(std::get&lt;0&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>var<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>&amp;var);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!photon<sp/>and<sp/>!m_functions_int_from_photon.empty())<sp/>{<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;photon<sp/>pointer<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(m_functions_int_from_photon.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>int<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_int_from_photon)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>=<sp/>std::get&lt;1&gt;(var_function);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>f(*photon);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(std::get&lt;0&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>var<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>&amp;var);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_functions_int_from_ConversionHelper.size()<sp/>&gt;<sp/>0<sp/>or</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_functions_float_from_ConversionHelper.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!photon<sp/>and<sp/>!m_force_conversion_to_zero_when_null_photon)<sp/>{<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;photon<sp/>pointer<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;computing<sp/>function<sp/>with<sp/>Conversion<sp/>Helper&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!photon<sp/>and<sp/>m_force_conversion_to_zero_when_null_photon)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>for<sp/>the<sp/>trigger<sp/>calibration.<sp/>For<sp/>historical<sp/>reason<sp/>it<sp/>needs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>radius<sp/>of<sp/>conversion<sp/>to<sp/>be<sp/>present<sp/>and<sp/>equal<sp/>to<sp/>zero.<sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>distinguish<sp/>between<sp/>convertend<sp/>and<sp/>unconverted.<sp/>In<sp/>this<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>photon<sp/>will<sp/>be<sp/>threated<sp/>as<sp/>unconverted,<sp/>but<sp/>the<sp/>tool<sp/>expect<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>files<sp/>(converted<sp/>/<sp/>unconverted),<sp/>the<sp/>converted<sp/>is<sp/>never<sp/>used<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>calibration.<sp/>TODO:<sp/>remove<sp/>when<sp/>improved<sp/>support<sp/>for<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MVAs<sp/>(converted<sp/>/<sp/>unconverted<sp/>/<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;forcing<sp/>conversion<sp/>variables<sp/>to<sp/>zero<sp/>since<sp/>photon<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_float_from_ConversionHelper)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_int_from_ConversionHelper)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>normal<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref><sp/>conv_helper(photon);<sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>predigested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(m_functions_float_from_ConversionHelper.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>int<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_float_from_ConversionHelper)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>=<sp/>std::get&lt;1&gt;(var_function);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>f(conv_helper);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(std::get&lt;0&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>var<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>&amp;var);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(m_functions_int_from_ConversionHelper.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>int<sp/>functions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var_function<sp/>:<sp/>m_functions_int_from_ConversionHelper)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>var<sp/>=<sp/>std::get&lt;2&gt;(var_function);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>=<sp/>std::get&lt;1&gt;(var_function);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>f(conv_helper);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(std::get&lt;0&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>var<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(var_function)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>&amp;var);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>egammaMVATreePhoton::get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="326"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>var<sp/>=<sp/>egammaMVATreeEgamma::get_ptr&lt;float&gt;(var_name);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var;<sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>m_functions_float_from_photon)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(item)<sp/>==<sp/>var_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;std::get&lt;2&gt;(item);<sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>m_functions_float_from_ConversionHelper)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(item)<sp/>==<sp/>var_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;std::get&lt;2&gt;(item);<sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>egammaMVATreePhoton::get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="339"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>var<sp/>=<sp/>egammaMVATreeEgamma::get_ptr&lt;int&gt;(var_name);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var;<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>m_functions_int_from_photon)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(item)<sp/>==<sp/>var_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;std::get&lt;2&gt;(item);<sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>m_functions_int_from_ConversionHelper)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;0&gt;(item)<sp/>==<sp/>var_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;std::get&lt;2&gt;(item);<sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/Root/egammaMVATree.cxx"/>
  </compounddef>
</doxygen>
