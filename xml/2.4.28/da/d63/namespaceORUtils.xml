<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d63/namespaceORUtils" kind="namespace">
    <compoundname>ORUtils</compoundname>
    <innerclass refid="dd/def/classORUtils_1_1AltMuJetOverlapTool" prot="public">ORUtils::AltMuJetOverlapTool</innerclass>
    <innerclass refid="d2/d5f/classORUtils_1_1BaseOverlapTool" prot="public">ORUtils::BaseOverlapTool</innerclass>
    <innerclass refid="d5/dd0/classORUtils_1_1BJetHelper" prot="public">ORUtils::BJetHelper</innerclass>
    <innerclass refid="da/d92/classORUtils_1_1DeltaRMatcher" prot="public">ORUtils::DeltaRMatcher</innerclass>
    <innerclass refid="d2/d66/classORUtils_1_1SlidingDeltaRMatcher" prot="public">ORUtils::SlidingDeltaRMatcher</innerclass>
    <innerclass refid="d8/dd2/classORUtils_1_1DeltaROverlapTool" prot="public">ORUtils::DeltaROverlapTool</innerclass>
    <innerclass refid="da/d05/classORUtils_1_1EleEleOverlapTool" prot="public">ORUtils::EleEleOverlapTool</innerclass>
    <innerclass refid="d0/d6c/classORUtils_1_1EleJetOverlapTool" prot="public">ORUtils::EleJetOverlapTool</innerclass>
    <innerclass refid="dc/ddf/classORUtils_1_1EleMuSharedTrkOverlapTool" prot="public">ORUtils::EleMuSharedTrkOverlapTool</innerclass>
    <innerclass refid="dc/d62/classORUtils_1_1IParticleAssociator" prot="public">ORUtils::IParticleAssociator</innerclass>
    <innerclass refid="d3/d83/classORUtils_1_1IOverlapRemovalTool" prot="public">ORUtils::IOverlapRemovalTool</innerclass>
    <innerclass refid="d8/d79/classORUtils_1_1IOverlapTool" prot="public">ORUtils::IOverlapTool</innerclass>
    <innerclass refid="d4/db2/classORUtils_1_1MuJetGhostDRMatcher" prot="public">ORUtils::MuJetGhostDRMatcher</innerclass>
    <innerclass refid="d1/dda/classORUtils_1_1MuJetOverlapTool" prot="public">ORUtils::MuJetOverlapTool</innerclass>
    <innerclass refid="da/d07/classORUtils_1_1ObjLinkOverlapTool" prot="public">ORUtils::ObjLinkOverlapTool</innerclass>
    <innerclass refid="db/d01/classORUtils_1_1OverlapDecorationHelper" prot="public">ORUtils::OverlapDecorationHelper</innerclass>
    <innerclass refid="d5/d90/classORUtils_1_1OverlapLinkHelper" prot="public">ORUtils::OverlapLinkHelper</innerclass>
    <innerclass refid="dd/d52/structORUtils_1_1ORFlags" prot="public">ORUtils::ORFlags</innerclass>
    <innerclass refid="d3/d22/classORUtils_1_1OverlapRemovalTool" prot="public">ORUtils::OverlapRemovalTool</innerclass>
    <innerclass refid="de/d3a/classORUtils_1_1TauAntiTauJetOverlapTool" prot="public">ORUtils::TauAntiTauJetOverlapTool</innerclass>
    <innerclass refid="d2/dca/classORUtils_1_1TauJetOverlapTool" prot="public">ORUtils::TauJetOverlapTool</innerclass>
    <innerclass refid="d9/d43/classORUtils_1_1TauLooseEleOverlapTool" prot="public">ORUtils::TauLooseEleOverlapTool</innerclass>
    <innerclass refid="d8/ded/classORUtils_1_1TauLooseMuOverlapTool" prot="public">ORUtils::TauLooseMuOverlapTool</innerclass>
    <innerclass refid="d8/d6d/classORUtils_1_1ToolBox" prot="public">ORUtils::ToolBox</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/d63/namespaceORUtils_1ac9e1ddcc3329b4e864838b7e0161c3de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode ORUtils::recommendedTools</definition>
        <argsstring>(const ORFlags &amp;flags, ToolBox &amp;toolBox)</argsstring>
        <name>recommendedTools</name>
        <param>
          <type>const <ref refid="dd/d52/structORUtils_1_1ORFlags" kindref="compound">ORFlags</ref> &amp;</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="d8/d6d/classORUtils_1_1ToolBox" kindref="compound">ToolBox</ref> &amp;</type>
          <declname>toolBox</declname>
        </param>
        <briefdescription>
<para>Pre-configured standard recommended OR tools. </para>        </briefdescription>
        <detaileddescription>
<para>This function provides the tool configuration corresponding to the updated overlap removal recommendations as summarized in this ASG meeting by Will Buttinger: <ulink url="https://indico.cern.ch/event/457238/">https://indico.cern.ch/event/457238/</ulink></para><para>The tools are returned uninitialized; the user can override properties and initialize all the tools with a call to ORToolBox::initialize.</para><para>This function uses the new <ref refid="dd/d52/structORUtils_1_1ORFlags" kindref="compound">ORFlags</ref> object to communicate common configuration options and the new <ref refid="d8/d6d/classORUtils_1_1ToolBox" kindref="compound">ToolBox</ref> design based on AnaToolHandle.</para><para>Users can replace overlap tools with their own configured versions by setting <ref refid="d8/d6d/classORUtils_1_1ToolBox" kindref="compound">ToolBox</ref> handles prior to calling this method. Right now the way to do that would be with something like this: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d6d/classORUtils_1_1ToolBox" kindref="compound" tooltip="A container and helper class for overlap removal tools.">ORUtils::ToolBox</ref><sp/>toolBox;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>toolBox.tauEleORT<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ORUtils::ToolBox::OverlapHandle_t(</highlight><highlight class="stringliteral">&quot;ORUtils::DeltaROverlapTool/TauEleORT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>toolBox.tauEleORT.setProperty(...)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/><ref refid="da/d63/namespaceORUtils_1ac9e1ddcc3329b4e864838b7e0161c3de" kindref="member" tooltip="Pre-configured standard recommended OR tools.">ORUtils::recommendedTools</ref>(flags,<sp/>toolBox)<sp/>);</highlight></codeline>
</programlisting> Note that the config function will still set the &apos;global&apos; properties on your custom tool (e.g. input label). I&apos;m assuming this is the behavior users would want.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="dd/d52/structORUtils_1_1ORFlags" kindref="compound">ORFlags</ref> object containing config options. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">toolBox</parametername>
</parameternamelist>
<parameterdescription>
<para>Container to be filled with tools. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/AssociationUtils/OverlapRemovalInit.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/OverlapRemovalInit.cxx" bodystart="50" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file defines the overlap removal tool: ORTool. </para>    </briefdescription>
    <detaileddescription>
<para>This file provides the SUSY-specific overlap-removal code. Like the default ORTool implementation, this wraps the <ref refid="d3/d22/classORUtils_1_1OverlapRemovalTool" kindref="compound">OverlapRemovalTool</ref> from Association Utils. However, the usage of the tool is a little bit different. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/AssociationUtils/AltMuJetOverlapTool.h" line="15"/>
  </compounddef>
</doxygen>
