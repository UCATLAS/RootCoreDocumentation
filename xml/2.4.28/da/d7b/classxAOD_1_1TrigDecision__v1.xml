<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d7b/classxAOD_1_1TrigDecision__v1" kind="class" prot="public">
    <compoundname>xAOD::TrigDecision_v1</compoundname>
    <basecompoundref refid="dc/db0/classSG_1_1AuxElement" prot="public" virt="non-virtual">SG::AuxElement</basecompoundref>
    <includes refid="d1/ddd/TrigDecision__v1_8h" local="no">TrigDecision_v1.h</includes>
      <sectiondef kind="user-defined">
      <header>Trigger configuration key accessors</header>
      <description><para><anchor id="_1amgrp81563f9f894c92054a38c438c4f963c1"/> </para></description>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a7337f389889bd56914fe77b8e3aef1d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t xAOD::TrigDecision_v1::smk</definition>
        <argsstring>() const </argsstring>
        <name>smk</name>
        <briefdescription>
<para>Get the Super Master Key describing this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ab3da3afe841ed46ea931d89d16386f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setSMK</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>setSMK</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the Super Master Key describing this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Level-1 result accessors</header>
      <description><para><anchor id="_1amgrp65055bbe6631c8bb731c433204c9922e"/> </para></description>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1add321db14c52f78a711f6c6a1bebebff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char xAOD::TrigDecision_v1::bgCode</definition>
        <argsstring>() const </argsstring>
        <name>bgCode</name>
        <briefdescription>
<para>Get the bunch group code of the current event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1afff1b26c90eea73cc7669d2660a4270c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setBGCode</definition>
        <argsstring>(char value)</argsstring>
        <name>setBGCode</name>
        <param>
          <type>char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the bunch group code of the current event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ad5ed3f835f38bd8d4f43854acc5af25f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::tav</definition>
        <argsstring>() const </argsstring>
        <name>tav</name>
        <briefdescription>
<para>Get the Trigger After Veto bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ad23e3a1c1f1fc3d2faf39bbbce38c353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setTAV</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setTAV</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the Trigger After Veto bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a2f059ec225daf9c69ca921bd39a0d0f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::tap</definition>
        <argsstring>() const </argsstring>
        <name>tap</name>
        <briefdescription>
<para>Get the Trigger After Prescale bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1abfbf5a10d17098b06b9946e7e6d8de35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setTAP</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setTAP</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the Trigger After Prescale bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="67"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1aa7c96f37b24bb17f4894427a41413813" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::tbp</definition>
        <argsstring>() const </argsstring>
        <name>tbp</name>
        <briefdescription>
<para>Get the Trigger Before Prescale bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a0c897c06b1dcaceb4a7e8ca68a9c890e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setTBP</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setTBP</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the Trigger Before Prescale bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>HLT result accessors</header>
      <description><para><anchor id="_1amgrp5d86918fc2ac0b8c5a2416f8036fcf86"/> </para></description>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a921aa987eb654e074ef622f154c76709" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t xAOD::TrigDecision_v1::lvl2ErrorBits</definition>
        <argsstring>() const </argsstring>
        <name>lvl2ErrorBits</name>
        <briefdescription>
<para>Get a summary of all errors that happened during the LVL2 execution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1af2ad66798d17d081d0240287aa985f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setLVL2ErrorBits</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>setLVL2ErrorBits</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a summary of all errors that happened during the LVL2 execution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1af3a3f844e5d5485696dca927eef22cd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t xAOD::TrigDecision_v1::efErrorBits</definition>
        <argsstring>() const </argsstring>
        <name>efErrorBits</name>
        <briefdescription>
<para>Get a summary of all errors that happened during the EF execution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ac97650031260e7a006d5f478867cc6a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setEFErrorBits</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>setEFErrorBits</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a summary of all errors that happened during the EF execution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a56d2d34a624fa321d5c08380b255206c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrigDecision_v1::lvl2Truncated</definition>
        <argsstring>() const </argsstring>
        <name>lvl2Truncated</name>
        <briefdescription>
<para>Is the LVL2 result truncated? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ad2cda01065cc4b7ed33bc952f71282a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setLVL2Truncated</definition>
        <argsstring>(bool value)</argsstring>
        <name>setLVL2Truncated</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set whether the LVL2 result is truncated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ab7049b0d7a1e4fa091c60ebf432241e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrigDecision_v1::efTruncated</definition>
        <argsstring>() const </argsstring>
        <name>efTruncated</name>
        <briefdescription>
<para>Is the EF result truncated? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="95"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a4da5d57260bbf3b26072732878b7043b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setEFTruncated</definition>
        <argsstring>(bool value)</argsstring>
        <name>setEFTruncated</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set whether the EF result is truncated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a591bc5ef7963f2e5b7002d6c3ece7121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::lvl2PassedPhysics</definition>
        <argsstring>() const </argsstring>
        <name>lvl2PassedPhysics</name>
        <briefdescription>
<para>Get the LVL2 physics decision bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="100"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a75ffe2ed99563c526d644ed52e74e703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setLVL2PassedPhysics</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setLVL2PassedPhysics</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the LVL2 physics decision bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="102"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1aba7b738b8cbe860b3923f264d9f9f192" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::efPassedPhysics</definition>
        <argsstring>() const </argsstring>
        <name>efPassedPhysics</name>
        <briefdescription>
<para>Get the EF physics decision bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a4063d743d4f7bf97289b1d0ccd3ff080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setEFPassedPhysics</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setEFPassedPhysics</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the EF physics decision bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a7585031438c598bc444db2081e46b6a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::lvl2PassedRaw</definition>
        <argsstring>() const </argsstring>
        <name>lvl2PassedRaw</name>
        <briefdescription>
<para>Get the LVL2 passed-raw bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a87215435d39f00fb69e7788f43389228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setLVL2PassedRaw</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setLVL2PassedRaw</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the LVL2 passed-raw bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a506fdce278d40a98ed0e7f95749ef084" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::efPassedRaw</definition>
        <argsstring>() const </argsstring>
        <name>efPassedRaw</name>
        <briefdescription>
<para>Get the EF passed-raw bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a98a6032167e284ee8576c2fee191bb25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setEFPassedRaw</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setEFPassedRaw</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the EF passed-raw bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1afde5e88efad547cf5deea2e30eb72410" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::lvl2PassedThrough</definition>
        <argsstring>() const </argsstring>
        <name>lvl2PassedThrough</name>
        <briefdescription>
<para>Get the LVL2 pass-through bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ab7032623a954f7484bb8b235d3be33ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setLVL2PassedThrough</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setLVL2PassedThrough</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the LVL2 pass-through bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ad65d64233ef3cec0813266c35adf3c26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::efPassedThrough</definition>
        <argsstring>() const </argsstring>
        <name>efPassedThrough</name>
        <briefdescription>
<para>Get the EF pass-through bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a636c62d18958b4e147b271d7da486b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setEFPassedThrough</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setEFPassedThrough</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the EF pass-through bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a21316debc86f07f88b52d7946127493e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::lvl2Prescaled</definition>
        <argsstring>() const </argsstring>
        <name>lvl2Prescaled</name>
        <briefdescription>
<para>Get the LVL2 prescaled bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="130"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a611427f32fb1103d7cb6dcc1cb2776f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setLVL2Prescaled</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setLVL2Prescaled</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the LVL2 prescaled bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a0601e6640b3c99ce8aec26f8edb4c618" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::efPrescaled</definition>
        <argsstring>() const </argsstring>
        <name>efPrescaled</name>
        <briefdescription>
<para>Get the EF prescaled bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="135"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a5e5d64bbd6a4da24865bf3dfb42137eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setEFPrescaled</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setEFPrescaled</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the EF prescaled bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1aa55ab30ebd4d4c433e8fa66605b7abde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::lvl2Resurrected</definition>
        <argsstring>() const </argsstring>
        <name>lvl2Resurrected</name>
        <briefdescription>
<para>Get the LVL2 resurrected bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a072213c31a2a288808be5639514464bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setLVL2Resurrected</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setLVL2Resurrected</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the LVL2 resurrected bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="142"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a2c2400a07eafcae227080958a08bbd31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; uint32_t &gt; &amp;</type>
        <definition>const std::vector&lt; uint32_t &gt;&amp; xAOD::TrigDecision_v1::efResurrected</definition>
        <argsstring>() const </argsstring>
        <name>efResurrected</name>
        <briefdescription>
<para>Get the EF resurrected bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="145"/>
      </memberdef>
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1a654ce0c9c642f8ffd410dced8054b48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrigDecision_v1::setEFResurrected</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;value)</argsstring>
        <name>setEFResurrected</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the EF resurrected bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="147"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d7b/classxAOD_1_1TrigDecision__v1_1ac5e28925c93bd32c4875cc064918285b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::TrigDecision_v1::TrigDecision_v1</definition>
        <argsstring>()</argsstring>
        <name>TrigDecision_v1</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/TrigDecision_v1.cxx" bodystart="11" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface to the raw trigger decision information of the event</para><para>This interface is used to access the raw trigger decision information in the event. It should only be used directly by experts, regular users should access the trigger decision information rather through the TrigDecisionTool.</para><para>Note that the <ref refid="dc/d8d/namespaceHLT" kindref="compound">HLT</ref> information of the class is a bit redundant. The decision can also be derived from the other 4 bitsets that are stored. The reason for having it saved separately is to allow us to slim away the detailed bits during analysis, while still keeping the trigger decision needed for the physics analysis.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>631149 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-11-26 13:26:18 +0100 (Wed, 26 Nov 2014) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="20693">
        <label>xAOD::TrigDecision_v1</label>
        <link refid="da/d7b/classxAOD_1_1TrigDecision__v1"/>
        <childnode refid="20694" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20695">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="20694">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="20695" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="20696">
        <label>xAOD::TrigDecision_v1</label>
        <link refid="da/d7b/classxAOD_1_1TrigDecision__v1"/>
        <childnode refid="20697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20709">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="20710">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="20705">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="20714">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="20699" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20708">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="20709" relation="public-inheritance">
        </childnode>
        <childnode refid="20710" relation="public-inheritance">
        </childnode>
        <childnode refid="20711" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20703">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="20704">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="20698">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="20701">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="20702">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="20703" relation="public-inheritance">
        </childnode>
        <childnode refid="20704" relation="public-inheritance">
        </childnode>
        <childnode refid="20705" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="20701" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="20700">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="20701" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20707">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="20708" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20711">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="20712">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="20713" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="20706">
        <label>mutex</label>
      </node>
      <node id="20697">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="20698" relation="public-inheritance">
        </childnode>
        <childnode refid="20699" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="20714" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="20713">
        <label>void</label>
      </node>
      <node id="20699">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="20700" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="20702" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="20701" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="20706" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="20707" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="20712" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigDecision_v1.h" bodystart="35" bodyend="151"/>
    <listofallmembers>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a7aaa8e9eb54091ab7ee43bb7c73918e4" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5279e0349d690c26121f60b5a8778322" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>AuxElement</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1add321db14c52f78a711f6c6a1bebebff" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>bgCode</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>clearDecorations</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>container</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1af3a3f844e5d5485696dca927eef22cd6" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>efErrorBits</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1aba7b738b8cbe860b3923f264d9f9f192" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>efPassedPhysics</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a506fdce278d40a98ed0e7f95749ef084" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>efPassedRaw</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ad65d64233ef3cec0813266c35adf3c26" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>efPassedThrough</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a0601e6640b3c99ce8aec26f8edb4c618" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>efPrescaled</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a2c2400a07eafcae227080958a08bbd31" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>efResurrected</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ab7049b0d7a1e4fa091c60ebf432241e5" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>efTruncated</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>getConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>getStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>IAuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>index</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af727b22ab51f1d848fc3cf59065b99ea" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>isAvailable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a864fc1dab026cbcf20b2c7e3904b89a4" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a921aa987eb654e074ef622f154c76709" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>lvl2ErrorBits</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a591bc5ef7963f2e5b7002d6c3ece7121" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>lvl2PassedPhysics</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a7585031438c598bc444db2081e46b6a5" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>lvl2PassedRaw</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1afde5e88efad547cf5deea2e30eb72410" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>lvl2PassedThrough</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a21316debc86f07f88b52d7946127493e" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>lvl2Prescaled</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1aa55ab30ebd4d4c433e8fa66605b7abde" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>lvl2Resurrected</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a56d2d34a624fa321d5c08380b255206c" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>lvl2Truncated</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>operator=</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>releasePrivateStore</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1afff1b26c90eea73cc7669d2660a4270c" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setBGCode</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setConstStore</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ac97650031260e7a006d5f478867cc6a6" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setEFErrorBits</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a4063d743d4f7bf97289b1d0ccd3ff080" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setEFPassedPhysics</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a98a6032167e284ee8576c2fee191bb25" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setEFPassedRaw</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a636c62d18958b4e147b271d7da486b54" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setEFPassedThrough</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a5e5d64bbd6a4da24865bf3dfb42137eb" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setEFPrescaled</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a654ce0c9c642f8ffd410dced8054b48b" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setEFResurrected</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a4da5d57260bbf3b26072732878b7043b" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setEFTruncated</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1af2ad66798d17d081d0240287aa985f84" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setLVL2ErrorBits</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a75ffe2ed99563c526d644ed52e74e703" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setLVL2PassedPhysics</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a87215435d39f00fb69e7788f43389228" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setLVL2PassedRaw</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ab7032623a954f7484bb8b235d3be33ae" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setLVL2PassedThrough</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a611427f32fb1103d7cb6dcc1cb2776f4" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setLVL2Prescaled</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a072213c31a2a288808be5639514464bb" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setLVL2Resurrected</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ad2cda01065cc4b7ed33bc952f71282a0" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setLVL2Truncated</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setNonConstStore</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ab3da3afe841ed46ea931d89d16386f5c" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setSMK</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setStore</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1abfbf5a10d17098b06b9946e7e6d8de35" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setTAP</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ad23e3a1c1f1fc3d2faf39bbbce38c353" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setTAV</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a0c897c06b1dcaceb4a7e8ca68a9c890e" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>setTBP</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a7337f389889bd56914fe77b8e3aef1d4" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>smk</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a2f059ec225daf9c69ca921bd39a0d0f5" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>tap</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ad5ed3f835f38bd8d4f43854acc5af25f" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>tav</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1aa7c96f37b24bb17f4894427a41413813" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>tbp</name></member>
      <member refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ac5e28925c93bd32c4875cc064918285b" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>TrigDecision_v1</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::TrigDecision_v1</scope><name>~AuxElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
