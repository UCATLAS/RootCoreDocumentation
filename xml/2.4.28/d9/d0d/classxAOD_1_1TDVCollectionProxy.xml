<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d0d/classxAOD_1_1TDVCollectionProxy" kind="class" prot="public">
    <compoundname>xAOD::TDVCollectionProxy</compoundname>
    <includes refid="d2/d00/TDVCollectionProxy_8h" local="no">TDVCollectionProxy.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1afadc1e68f1b132e5c0f8b536a025a4c4" prot="public" static="no">
        <type>TGenCollectionProxy::Sizing_t</type>
        <definition>typedef TGenCollectionProxy::Sizing_t xAOD::TDVCollectionProxy::Sizing_t</definition>
        <argsstring></argsstring>
        <name>Sizing_t</name>
        <briefdescription>
<para>Make the definition of Sizing_t public. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1ae33b96970c61df4b7fee91b72ee5d510" prot="private" static="no" mutable="no">
        <type>TString</type>
        <definition>TString xAOD::TDVCollectionProxy::fName</definition>
        <argsstring></argsstring>
        <name>fName</name>
        <briefdescription>
<para>Name of the container that this class proxies. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="75" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a57a517b4813e018820cb0db2b7cde68e" prot="private" static="no" mutable="no">
        <type>Bool_t</type>
        <definition>Bool_t xAOD::TDVCollectionProxy::fInitialized</definition>
        <argsstring></argsstring>
        <name>fInitialized</name>
        <briefdescription>
<para>Flag for knowing whether the class was initialised already. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="77" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1af479c42059c5f9c9d29731b6f8b5b694" prot="private" static="no" mutable="no">
        <type>ptrdiff_t</type>
        <definition>ptrdiff_t xAOD::TDVCollectionProxy::fContoff</definition>
        <argsstring></argsstring>
        <name>fContoff</name>
        <briefdescription>
<para>The offset of the underlying <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> in the declared type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1af9c2552f94a20ce5e42bfc933bfa0ea2" prot="private" static="no" mutable="no">
        <type>ptrdiff_t</type>
        <definition>ptrdiff_t xAOD::TDVCollectionProxy::fOffset</definition>
        <argsstring></argsstring>
        <name>fOffset</name>
        <briefdescription>
<para>Offset between the <ref refid="d3/d78/structDV" kindref="compound">DV</ref> base pointer and the full <ref refid="d3/d78/structDV" kindref="compound">DV</ref> pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="82" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a50c4885b23cc9238355c62b370e14687" prot="private" static="no" mutable="no">
        <type>TClass *</type>
        <definition>TClass* xAOD::TDVCollectionProxy::fEltBase</definition>
        <argsstring></argsstring>
        <name>fEltBase</name>
        <briefdescription>
<para>The element type to which the <ref refid="d3/d78/structDV" kindref="compound">DV</ref> representation points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a84642833fdb70fb5bfe3d30300dd111d" prot="private" static="no" mutable="no">
        <type>TClass *</type>
        <definition>TClass* xAOD::TDVCollectionProxy::fEltType</definition>
        <argsstring></argsstring>
        <name>fEltType</name>
        <briefdescription>
<para>The declared element type of the <ref refid="d3/d78/structDV" kindref="compound">DV</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="87" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1afa0a4a4fdd5fcc5388ef994fdf5620cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::TDVCollectionProxy::TDVCollectionProxy</definition>
        <argsstring>(const char *conttype)</argsstring>
        <name>TDVCollectionProxy</name>
        <param>
          <type>const char *</type>
          <declname>conttype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conttype</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the container type we&apos;re proxying. Note that this may be different from a <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> of <emphasis>elttype</emphasis> for classes which derive from <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx" bodystart="308" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1ac00a7e984608cb78129d4b652211127f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::TDVCollectionProxy::TDVCollectionProxy</definition>
        <argsstring>(const TDVCollectionProxy &amp;rhs)</argsstring>
        <name>TDVCollectionProxy</name>
        <param>
          <type>const <ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy" kindref="compound">TDVCollectionProxy</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The proxy to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx" bodystart="359" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1aa1ec4f3fa7c261ac9e3c861fbdab74b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::TDVCollectionProxy::PushProxy</definition>
        <argsstring>(void *objstart)</argsstring>
        <name>PushProxy</name>
        <param>
          <type>void *</type>
          <declname>objstart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start working with a new collection. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>objstart</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the collection. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx" bodystart="389" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1ae817a177a84c354d9407721402a298bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>TVirtualCollectionProxy *</type>
        <definition>TVirtualCollectionProxy * xAOD::TDVCollectionProxy::Generate</definition>
        <argsstring>() const </argsstring>
        <name>Generate</name>
        <briefdescription>
<para>Clone this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx" bodystart="417" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a9fdf047cf54982a6e6c2c7aaac61c9b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TDVCollectionProxy::SetResize</definition>
        <argsstring>(Sizing_t func)</argsstring>
        <name>SetResize</name>
        <param>
          <type><ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1afadc1e68f1b132e5c0f8b536a025a4c4" kindref="member">Sizing_t</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Set the resize(...) function used by the proxy. </para>        </briefdescription>
        <detaileddescription>
<para>The resize(...) functions need to be specific for the different classes. This function is used to supply a specific resize(...) function for this proxy&apos;s class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx" bodystart="428" bodyend="432"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a66be101471aecee105282e804e540cbb" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>TGenCollectionProxy *</type>
        <definition>TGenCollectionProxy * xAOD::TDVCollectionProxy::InitializeEx</definition>
        <argsstring>(Bool_t silent)</argsstring>
        <name>InitializeEx</name>
        <param>
          <type>Bool_t</type>
          <declname>silent</declname>
        </param>
        <briefdescription>
<para>Function initialising the proxy just in time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="69" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx" bodystart="434" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a532aca35481216304362805e75cc4a51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TDVCollectionProxy::FindOffsets</definition>
        <argsstring>(const char *elttype, const char *conttype)</argsstring>
        <name>FindOffsets</name>
        <param>
          <type>const char *</type>
          <declname>elttype</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>conttype</declname>
        </param>
        <briefdescription>
<para>Initialize the cached pointer offsets. </para>        </briefdescription>
        <detaileddescription>
<para>Initialize the cached pointer offsets.</para><para>Suppose we have <computeroutput><ref refid="d7/db3/structD" kindref="compound">D</ref></computeroutput> deriving from <computeroutput><ref refid="d9/db3/structB" kindref="compound">B</ref></computeroutput>, and thus <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d7/db3/structD" kindref="compound">D</ref>&gt;</computeroutput> deriving from <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d9/db3/structB" kindref="compound">B</ref>&gt;</computeroutput>. In general, inheritance may be multiple or virtual, so we need to adjust the pointer offsets.</para><para>Suppose we&apos;re setting up the proxy for <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d7/db3/structD" kindref="compound">D</ref>&gt;</computeroutput>. Then <computeroutput>fContoff</computeroutput> will be set to the offset of the <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d9/db3/structB" kindref="compound">B</ref>&gt;</computeroutput> base within <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d7/db3/structD" kindref="compound">D</ref>&gt;</computeroutput> --- this is the amount we need to shift the container pointer by before applying the proxy. Originally, we cached an offset for the element conversions as well. But that doesn&apos;t work for the case of virtual derivation. Instead, we save the Reflex types for the base and derived types, and use Reflex to convert. (We can get away with caching the offset for the container because we know what the fully-derived type will be. We don&apos;t know that for the elements.)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elttype</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the contained type (including a trailing &apos;*&apos;). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conttype</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the container type we&apos;re proxying. Note that this may be different from a <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> of <emphasis>elttype</emphasis> for classes which derive from <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="72" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/TDVCollectionProxy.cxx" bodystart="518" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a3f6f921a46e0891e1fd7e59e8f32ee93" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy" kindref="compound">TDVCollectionProxy</ref> &amp;</type>
        <definition>TDVCollectionProxy&amp; xAOD::TDVCollectionProxy::operator=</definition>
        <argsstring>(const TDVCollectionProxy &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d9/d0d/classxAOD_1_1TDVCollectionProxy" kindref="compound">TDVCollectionProxy</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> Root collection proxy for <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> containers.</para><para>In order for a container type to be treated properly by <computeroutput>TTree::Draw</computeroutput> and friends, Root must recognize that it is in fact a container type, and generate an appropriate proxy for it. This doesn&apos;t happen automatically, though. This class serves as an appropriate proxy for <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> classes. Like the Root proxy classes, it&apos;s based on making a hard cast to a dummy <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> type. But because <computeroutput>DataVector&apos;s</computeroutput> can inherit, we need to be careful about pointer conversions, something the Root proxy classes could ignore. We extend the Root environment buffer to cache information about the pointer offsets.</para><para><simplesect kind="author"><para>Scott Snyder &lt;<ulink url="mailto:Scott.Snyder@cern.ch">Scott.Snyder@cern.ch</ulink>&gt; </para><simplesectsep/><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>687822 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2015-08-06 09:58:06 +0200 (Thu, 06 Aug 2015) </para></simplesect>
</para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/TDVCollectionProxy.h" bodystart="40" bodyend="92"/>
    <listofallmembers>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1af479c42059c5f9c9d29731b6f8b5b694" prot="private" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>fContoff</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a50c4885b23cc9238355c62b370e14687" prot="private" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>fEltBase</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a84642833fdb70fb5bfe3d30300dd111d" prot="private" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>fEltType</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a532aca35481216304362805e75cc4a51" prot="private" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>FindOffsets</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a57a517b4813e018820cb0db2b7cde68e" prot="private" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>fInitialized</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1ae33b96970c61df4b7fee91b72ee5d510" prot="private" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>fName</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1af9c2552f94a20ce5e42bfc933bfa0ea2" prot="private" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>fOffset</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1ae817a177a84c354d9407721402a298bf" prot="public" virt="virtual"><scope>xAOD::TDVCollectionProxy</scope><name>Generate</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a66be101471aecee105282e804e540cbb" prot="private" virt="virtual"><scope>xAOD::TDVCollectionProxy</scope><name>InitializeEx</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a3f6f921a46e0891e1fd7e59e8f32ee93" prot="private" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>operator=</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1aa1ec4f3fa7c261ac9e3c861fbdab74b2" prot="public" virt="virtual"><scope>xAOD::TDVCollectionProxy</scope><name>PushProxy</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1a9fdf047cf54982a6e6c2c7aaac61c9b3" prot="public" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>SetResize</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1afadc1e68f1b132e5c0f8b536a025a4c4" prot="public" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>Sizing_t</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1afa0a4a4fdd5fcc5388ef994fdf5620cc" prot="public" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>TDVCollectionProxy</name></member>
      <member refid="d9/d0d/classxAOD_1_1TDVCollectionProxy_1ac00a7e984608cb78129d4b652211127f" prot="public" virt="non-virtual"><scope>xAOD::TDVCollectionProxy</scope><name>TDVCollectionProxy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
