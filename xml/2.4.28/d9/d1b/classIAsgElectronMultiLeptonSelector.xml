<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d1b/classIAsgElectronMultiLeptonSelector" kind="class" prot="public">
    <compoundname>IAsgElectronMultiLeptonSelector</compoundname>
    <basecompoundref refid="d9/db3/classIAsgSelectionTool" prot="public" virt="virtual">IAsgSelectionTool</basecompoundref>
    <derivedcompoundref refid="d2/d30/classAsgElectronMultiLeptonSelector" prot="public" virt="virtual">AsgElectronMultiLeptonSelector</derivedcompoundref>
    <includes refid="d2/dd4/IAsgElectronMultiLeptonSelector_8h" local="no">IAsgElectronMultiLeptonSelector.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d1b/classIAsgElectronMultiLeptonSelector_1a30559ad3084c7c49aa3a372603f9f4ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual IAsgElectronMultiLeptonSelector::~IAsgElectronMultiLeptonSelector</definition>
        <argsstring>()</argsstring>
        <name>~IAsgElectronMultiLeptonSelector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Virtual Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="d9/d1b/classIAsgElectronMultiLeptonSelector_1a12c4e8f46632034dc56e31df1df55d4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="d0/d75/classRoot_1_1TAccept" kindref="compound">Root::TAccept</ref> &amp;</type>
        <definition>virtual const Root::TAccept&amp; IAsgElectronMultiLeptonSelector::accept</definition>
        <argsstring>(const xAOD::IParticle *part) const =0</argsstring>
        <name>accept</name>
        <reimplements refid="d9/db3/classIAsgSelectionTool_1a749cc5c0ad3c19f19cb30568cefcc663">accept</reimplements>
        <reimplementedby refid="d2/d30/classAsgElectronMultiLeptonSelector_1a5b591b98995a5b4af6e8e6fc5309c234">accept</reimplementedby>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref> *</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The main accept method: using the generic interface </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" line="32"/>
      </memberdef>
      <memberdef kind="function" id="d9/d1b/classIAsgElectronMultiLeptonSelector_1a4a47d6fb343b6df9cebc5a8051c82745" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="d0/d75/classRoot_1_1TAccept" kindref="compound">Root::TAccept</ref> &amp;</type>
        <definition>virtual const Root::TAccept&amp; IAsgElectronMultiLeptonSelector::accept</definition>
        <argsstring>(const xAOD::Electron *part) const =0</argsstring>
        <name>accept</name>
        <reimplementedby refid="d2/d30/classAsgElectronMultiLeptonSelector_1ac87e3fdd69a3c5fc1ac54b388bf1cc0b">accept</reimplementedby>
        <param>
          <type>const <ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound">xAOD::Electron</ref> *</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The main accept method: the actual cuts are applied here </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" line="35"/>
      </memberdef>
      <memberdef kind="function" id="d9/d1b/classIAsgElectronMultiLeptonSelector_1a5d0b12fcd112bd81f536088146dd6834" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="d0/d75/classRoot_1_1TAccept" kindref="compound">Root::TAccept</ref> &amp;</type>
        <definition>virtual const Root::TAccept&amp; IAsgElectronMultiLeptonSelector::accept</definition>
        <argsstring>(const xAOD::IParticle &amp;part) const =0</argsstring>
        <name>accept</name>
        <reimplementedby refid="d2/d30/classAsgElectronMultiLeptonSelector_1a0fbbd68e8a910f0525ce7b6d22b5c9b4">accept</reimplementedby>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref> &amp;</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The main accept method: using the generic interface </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="d9/d1b/classIAsgElectronMultiLeptonSelector_1aae8707639e67ffaa170cbab841c00a24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="d0/d75/classRoot_1_1TAccept" kindref="compound">Root::TAccept</ref> &amp;</type>
        <definition>virtual const Root::TAccept&amp; IAsgElectronMultiLeptonSelector::accept</definition>
        <argsstring>(const xAOD::Electron &amp;part) const =0</argsstring>
        <name>accept</name>
        <reimplementedby refid="d2/d30/classAsgElectronMultiLeptonSelector_1a948376d2e19cf0197e37313d170d2814">accept</reimplementedby>
        <param>
          <type>const <ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound">xAOD::Electron</ref> &amp;</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The main accept method: the actual cuts are applied here </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" line="40"/>
      </memberdef>
      <memberdef kind="function" id="d9/d1b/classIAsgElectronMultiLeptonSelector_1aa424d958eb89632ade219e76e47e6032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string IAsgElectronMultiLeptonSelector::getOperatingPointName</definition>
        <argsstring>() const =0</argsstring>
        <name>getOperatingPointName</name>
        <reimplementedby refid="d2/d30/classAsgElectronMultiLeptonSelector_1af445d7038907ed71fa924db05eb41d93">getOperatingPointName</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method to get the operating point </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" line="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface to tool to select electrons. </para>    </briefdescription>
    <detaileddescription>
<para>12-MAR-2014, convert to ASG tool </para>    </detaileddescription>
    <inheritancegraph>
      <node id="8168">
        <label>IAsgElectronMultiLeptonSelector</label>
        <link refid="d9/d1b/classIAsgElectronMultiLeptonSelector"/>
        <childnode refid="8169" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8171">
        <label>AsgElectronMultiLeptonSelector</label>
        <link refid="d2/d30/classAsgElectronMultiLeptonSelector"/>
        <childnode refid="8168" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8170">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="8169">
        <label>IAsgSelectionTool</label>
        <link refid="d9/db3/classIAsgSelectionTool"/>
        <childnode refid="8170" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8172">
        <label>IAsgElectronMultiLeptonSelector</label>
        <link refid="d9/d1b/classIAsgElectronMultiLeptonSelector"/>
        <childnode refid="8173" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8174">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="8173">
        <label>IAsgSelectionTool</label>
        <link refid="d9/db3/classIAsgSelectionTool"/>
        <childnode refid="8174" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/ElectronPhotonSelectorTools/IAsgElectronMultiLeptonSelector.h" bodystart="21" bodyend="45"/>
    <listofallmembers>
      <member refid="d9/d1b/classIAsgElectronMultiLeptonSelector_1a12c4e8f46632034dc56e31df1df55d4e" prot="public" virt="pure-virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>accept</name></member>
      <member refid="d9/d1b/classIAsgElectronMultiLeptonSelector_1a4a47d6fb343b6df9cebc5a8051c82745" prot="public" virt="pure-virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>accept</name></member>
      <member refid="d9/d1b/classIAsgElectronMultiLeptonSelector_1a5d0b12fcd112bd81f536088146dd6834" prot="public" virt="pure-virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>accept</name></member>
      <member refid="d9/d1b/classIAsgElectronMultiLeptonSelector_1aae8707639e67ffaa170cbab841c00a24" prot="public" virt="pure-virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>accept</name></member>
      <member refid="d9/d1b/classIAsgElectronMultiLeptonSelector_1aa424d958eb89632ade219e76e47e6032" prot="public" virt="pure-virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>getOperatingPointName</name></member>
      <member refid="d9/db3/classIAsgSelectionTool_1a1df254dbf07a9906cf12d5ab810b37f5" prot="public" virt="pure-virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>getTAccept</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1af1aac990b958e92bf38123318d926e67" prot="public" virt="pure-virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>print</name></member>
      <member refid="d9/d1b/classIAsgElectronMultiLeptonSelector_1a30559ad3084c7c49aa3a372603f9f4ba" prot="public" virt="virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>~IAsgElectronMultiLeptonSelector</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>IAsgElectronMultiLeptonSelector</scope><name>~IAsgTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
