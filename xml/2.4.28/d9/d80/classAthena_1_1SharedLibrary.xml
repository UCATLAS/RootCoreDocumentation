<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d80/classAthena_1_1SharedLibrary" kind="class" prot="public">
    <compoundname>Athena::SharedLibrary</compoundname>
    <includes refid="d7/d36/SealSharedLib_8h" local="no">SealSharedLib.h</includes>
    <innerclass refid="d7/d0a/structAthena_1_1SharedLibrary_1_1LibraryInfo" prot="public">Athena::SharedLibrary::LibraryInfo</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d9/d80/classAthena_1_1SharedLibrary_1a8adb658ef031260525d546e99de69dcc" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* Athena::SharedLibrary::Data</definition>
        <argsstring></argsstring>
        <name>Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="163" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d9/d80/classAthena_1_1SharedLibrary_1a0abe3de8e2ec12b36876d16f767d2375" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Athena::SharedLibrary::Function)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>Function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="164" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d9/d80/classAthena_1_1SharedLibrary_1a4ff456c287d3712ca3e28b429a961598" prot="public" static="no">
        <type><ref refid="d3/d81/classAthena_1_1Callback1" kindref="compound">Callback1</ref>&lt; const <ref refid="d7/d0a/structAthena_1_1SharedLibrary_1_1LibraryInfo" kindref="compound">LibraryInfo</ref> &amp; &gt;</type>
        <definition>typedef Callback1&lt;const LibraryInfo &amp;&gt; Athena::SharedLibrary::InfoHandler</definition>
        <argsstring></argsstring>
        <name>InfoHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="178" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d80/classAthena_1_1SharedLibrary_1a9faf3076c6b6526dbe0998e28956c637" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* Athena::SharedLibrary::m_handle</definition>
        <argsstring></argsstring>
        <name>m_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="200" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a9f0bb9a095c39237e9d13aba69e42f43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Athena::SharedLibrary::path</definition>
        <argsstring>(void)</argsstring>
        <name>path</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="180" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="160" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1adc0a74bc29cc378cbb277410c620eb6a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Athena::SharedLibrary::path</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>path</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="181" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="168" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a799f726b91d3e7fd3ecd6a676d897e78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Athena::SharedLibrary::libname</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>libname</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a shared library name that follows the system conventions for naming shared library. <emphasis>name</emphasis> is the basic name of the shared library, without the name prefix (&quot;lib&quot; on unix) or the extension (&quot;.so&quot;, &quot;.sl&quot;, &quot;.dylib&quot; or &quot;.dll&quot;). <emphasis>name</emphasis> must not have any directory components. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="182" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="196" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1aa4c6f37188c8c625403e6e2aa5c33d98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Athena::SharedLibrary::symname</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>symname</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transform &apos;extern &quot;C&quot;&apos; symbol <emphasis>name</emphasis> into a name suitable for lookup in a shared library, e.g. with <ref refid="d9/d80/classAthena_1_1SharedLibrary_1a3a824e8c6abe8b0ea8f3e2d1bbbe9898" kindref="member">data()</ref> or <ref refid="d9/d80/classAthena_1_1SharedLibrary_1ad987af73163e2eb8c436bdfb2e7a3400" kindref="member">function()</ref>. Normally the latter two automatically perform the necessary mangling by calling this function, but the clients can also do the mangling themselves. The <emphasis>name</emphasis> should be in the form it is spelled in <ref refid="db/db2/structC" kindref="compound">C</ref> source code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="183" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="214" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1ab898dc0cb6a23ec90ee62f56744580bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d80/classAthena_1_1SharedLibrary" kindref="compound">SharedLibrary</ref> *</type>
        <definition>SharedLibrary * Athena::SharedLibrary::self</definition>
        <argsstring>(void)</argsstring>
        <name>self</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a shared library object representing the application itself. The returned object is allocated with <computeroutput>new</computeroutput>. The caller must release the object with either <ref refid="d9/d80/classAthena_1_1SharedLibrary_1a634861608dd54018813f57c740f9be66" kindref="member">release()</ref> or <ref refid="d9/d80/classAthena_1_1SharedLibrary_1a101f99f93c6afc7586174ebb30cf074b" kindref="member">abandon()</ref>. The method throws a SharedLibraryError if the operation is not supported or some failure occurs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="185" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="224" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a0d87d73d2c4a3ef89de36fa6341ef95f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d80/classAthena_1_1SharedLibrary" kindref="compound">SharedLibrary</ref> *</type>
        <definition>SharedLibrary * Athena::SharedLibrary::load</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>load</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load a shared library and return an object representing it. The returned object is allocated with <computeroutput>new</computeroutput>. The caller must release the object with either <ref refid="d9/d80/classAthena_1_1SharedLibrary_1a634861608dd54018813f57c740f9be66" kindref="member">release()</ref> or <ref refid="d9/d80/classAthena_1_1SharedLibrary_1a101f99f93c6afc7586174ebb30cf074b" kindref="member">abandon()</ref>. The method throws a SharedLibraryError if the operation is not supported or some failure occurs. Please note that on several systems failure to properly load a library, e.g. due to missing symbols, is effectively fatal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="186" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="259" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a5ffc686eff9a53c6fbe6c4448352a8e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Athena::SharedLibrary::loaded</definition>
        <argsstring>(const InfoHandler &amp;handler)</argsstring>
        <name>loaded</name>
        <param>
          <type>const <ref refid="d3/d81/classAthena_1_1Callback1" kindref="compound">InfoHandler</ref> &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate and provide information about all currently loaded shared libraries. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="187" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="294" bodyend="601"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a634861608dd54018813f57c740f9be66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Athena::SharedLibrary::release</definition>
        <argsstring>(void)</argsstring>
        <name>release</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release a shared library. This unloads any library the object currently refers to, then deletes <computeroutput>this</computeroutput>. Note that releasing the library does not guarantee that it will actually be unloaded. If there are outstanding references to the library, explicit or implicit, the library will remain in memory. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="189" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="620" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a101f99f93c6afc7586174ebb30cf074b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Athena::SharedLibrary::abandon</definition>
        <argsstring>(void)</argsstring>
        <name>abandon</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Abandon a library. This simply destroys the shared library object (<computeroutput>this</computeroutput>) without releasing the underlying dynamic object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="190" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="643" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a3a824e8c6abe8b0ea8f3e2d1bbbe9898" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Data</type>
        <definition>SharedLibrary::Data Athena::SharedLibrary::data</definition>
        <argsstring>(const std::string &amp;name, bool mangle=true) const </argsstring>
        <name>data</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mangle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Locate and return a reference to a data symbol called <emphasis>name</emphasis>. If no such symbol exists, returns a null pointer. If <emphasis>mangle</emphasis> is the default <computeroutput>true</computeroutput>, the symbol is mangled to the platform convention, typically prepending an underscore if required. The mangling does not refer to C++ name mangling, but to the mangling required to convert <ref refid="db/db2/structC" kindref="compound">C</ref> identifiers to run-time symbol names; see <ref refid="d9/d80/classAthena_1_1SharedLibrary_1aa4c6f37188c8c625403e6e2aa5c33d98" kindref="member">symname()</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="192" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="658" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1ad987af73163e2eb8c436bdfb2e7a3400" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Function</type>
        <definition>SharedLibrary::Function Athena::SharedLibrary::function</definition>
        <argsstring>(const std::string &amp;name, bool mangle=true) const </argsstring>
        <name>function</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mangle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Locate and return a reference to a function symbol called <emphasis>name</emphasis>. If no such symbol exists, returns a null pointer. If <emphasis>mangle</emphasis> is the default <computeroutput>true</computeroutput>, the symbol is mangled to the platform convention, typically prepending an underscore if required. The mangling does not refer to C++ name mangling, but to the mangling required to convert <ref refid="db/db2/structC" kindref="compound">C</ref> identifiers to run-time symbol names; see <ref refid="d9/d80/classAthena_1_1SharedLibrary_1aa4c6f37188c8c625403e6e2aa5c33d98" kindref="member">symname()</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="193" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="696" bodyend="727"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a09c338f7cb49c12fb7178af6e03ec373" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Athena::SharedLibrary::SharedLibrary</definition>
        <argsstring>(void *handle)</argsstring>
        <name>SharedLibrary</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protected constructor for initialising a library object. The real initialisation happens in <ref refid="d9/d80/classAthena_1_1SharedLibrary_1a0d87d73d2c4a3ef89de36fa6341ef95f" kindref="member">load()</ref> or <ref refid="d9/d80/classAthena_1_1SharedLibrary_1ab898dc0cb6a23ec90ee62f56744580bb" kindref="member">self()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="196" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="605" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a735bec33e4046000c7c0a50c818b45d5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Athena::SharedLibrary::~SharedLibrary</definition>
        <argsstring>(void)</argsstring>
        <name>~SharedLibrary</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protected destructor for cleaning up a library object. The real destruction happens in <ref refid="d9/d80/classAthena_1_1SharedLibrary_1a634861608dd54018813f57c740f9be66" kindref="member">release()</ref> or abadon(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="197" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSharedLib.cxx" bodystart="611" bodyend="612"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1aeb64414dff473a5cb39cbe17f95ed7be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Athena::SharedLibrary::SharedLibrary</definition>
        <argsstring>(const SharedLibrary &amp;)</argsstring>
        <name>SharedLibrary</name>
        <param>
          <type>const <ref refid="d9/d80/classAthena_1_1SharedLibrary" kindref="compound">SharedLibrary</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="203"/>
      </memberdef>
      <memberdef kind="function" id="d9/d80/classAthena_1_1SharedLibrary_1a9c858e17fb16accbdc8968f96e305b35" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d80/classAthena_1_1SharedLibrary" kindref="compound">SharedLibrary</ref> &amp;</type>
        <definition>SharedLibrary&amp; Athena::SharedLibrary::operator=</definition>
        <argsstring>(const SharedLibrary &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d9/d80/classAthena_1_1SharedLibrary" kindref="compound">SharedLibrary</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Shared library services. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="17550">
        <label>Athena::SharedLibrary</label>
        <link refid="d9/d80/classAthena_1_1SharedLibrary"/>
        <childnode refid="17551" relation="usage">
          <edgelabel>m_handle</edgelabel>
        </childnode>
      </node>
      <node id="17551">
        <label>void</label>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="161" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" bodystart="160" bodyend="205"/>
    <listofallmembers>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a101f99f93c6afc7586174ebb30cf074b" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>abandon</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a8adb658ef031260525d546e99de69dcc" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>Data</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a3a824e8c6abe8b0ea8f3e2d1bbbe9898" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>data</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a0abe3de8e2ec12b36876d16f767d2375" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>Function</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1ad987af73163e2eb8c436bdfb2e7a3400" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>function</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a4ff456c287d3712ca3e28b429a961598" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>InfoHandler</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a799f726b91d3e7fd3ecd6a676d897e78" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>libname</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a0d87d73d2c4a3ef89de36fa6341ef95f" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>load</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a5ffc686eff9a53c6fbe6c4448352a8e6" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>loaded</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a9faf3076c6b6526dbe0998e28956c637" prot="private" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>m_handle</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a9c858e17fb16accbdc8968f96e305b35" prot="private" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>operator=</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a9f0bb9a095c39237e9d13aba69e42f43" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>path</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1adc0a74bc29cc378cbb277410c620eb6a" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>path</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a634861608dd54018813f57c740f9be66" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>release</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1ab898dc0cb6a23ec90ee62f56744580bb" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>self</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a09c338f7cb49c12fb7178af6e03ec373" prot="protected" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>SharedLibrary</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1aeb64414dff473a5cb39cbe17f95ed7be" prot="private" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>SharedLibrary</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1aa4c6f37188c8c625403e6e2aa5c33d98" prot="public" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>symname</name></member>
      <member refid="d9/d80/classAthena_1_1SharedLibrary_1a735bec33e4046000c7c0a50c818b45d5" prot="protected" virt="non-virtual"><scope>Athena::SharedLibrary</scope><name>~SharedLibrary</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
