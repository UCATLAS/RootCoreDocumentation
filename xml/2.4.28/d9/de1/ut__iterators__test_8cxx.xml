<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/de1/ut__iterators__test_8cxx" kind="file">
    <compoundname>ut_iterators_test.cxx</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="da/dfe/StandaloneNavigation_8h" local="yes">TrigNavStructure/StandaloneNavigation.h</includes>
    <includes refid="da/da2/ComboIterator_8h" local="yes">TrigNavStructure/ComboIterator.h</includes>
    <includes refid="d3/d1a/testutils_8h" local="yes">testutils.h</includes>
    <incdepgraph>
      <node id="328647">
        <label>TrigNavStructure/TrigNavStructure.h</label>
        <link refid="d2/db8/TrigNavStructure_8h_source"/>
        <childnode refid="328648" relation="include">
        </childnode>
        <childnode refid="328649" relation="include">
        </childnode>
        <childnode refid="328655" relation="include">
        </childnode>
        <childnode refid="328656" relation="include">
        </childnode>
        <childnode refid="328657" relation="include">
        </childnode>
      </node>
      <node id="328664">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="328651" relation="include">
        </childnode>
        <childnode refid="328659" relation="include">
        </childnode>
        <childnode refid="328665" relation="include">
        </childnode>
        <childnode refid="328666" relation="include">
        </childnode>
      </node>
      <node id="328673">
        <label>iomanip</label>
      </node>
      <node id="328666">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="328656">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="328651" relation="include">
        </childnode>
        <childnode refid="328648" relation="include">
        </childnode>
        <childnode refid="328653" relation="include">
        </childnode>
      </node>
      <node id="328644">
        <label>stdint.h</label>
      </node>
      <node id="328669">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="328662">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="328651" relation="include">
        </childnode>
        <childnode refid="328659" relation="include">
        </childnode>
        <childnode refid="328663" relation="include">
        </childnode>
      </node>
      <node id="328659">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328655">
        <label>TrigNavStructure/TriggerElementFactory.h</label>
        <link refid="d1/dc0/TriggerElementFactory_8h_source"/>
        <childnode refid="328648" relation="include">
        </childnode>
        <childnode refid="328653" relation="include">
        </childnode>
        <childnode refid="328649" relation="include">
        </childnode>
      </node>
      <node id="328651">
        <label>string</label>
      </node>
      <node id="328650">
        <label>map</label>
      </node>
      <node id="328654">
        <label>boost/variant.hpp</label>
      </node>
      <node id="328645">
        <label>TrigNavStructure/StandaloneNavigation.h</label>
        <link refid="da/dfe/StandaloneNavigation_8h_source"/>
        <childnode refid="328646" relation="include">
        </childnode>
        <childnode refid="328647" relation="include">
        </childnode>
      </node>
      <node id="328663">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="328653">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="328644" relation="include">
        </childnode>
        <childnode refid="328654" relation="include">
        </childnode>
      </node>
      <node id="328657">
        <label>TrigNavStructure/TrigHolderStructure.h</label>
        <link refid="df/ded/TrigHolderStructure_8h_source"/>
        <childnode refid="328646" relation="include">
        </childnode>
        <childnode refid="328650" relation="include">
        </childnode>
        <childnode refid="328651" relation="include">
        </childnode>
        <childnode refid="328654" relation="include">
        </childnode>
        <childnode refid="328658" relation="include">
        </childnode>
        <childnode refid="328653" relation="include">
        </childnode>
        <childnode refid="328656" relation="include">
        </childnode>
        <childnode refid="328649" relation="include">
        </childnode>
      </node>
      <node id="328649">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="328650" relation="include">
        </childnode>
        <childnode refid="328648" relation="include">
        </childnode>
        <childnode refid="328651" relation="include">
        </childnode>
        <childnode refid="328644" relation="include">
        </childnode>
        <childnode refid="328652" relation="include">
        </childnode>
        <childnode refid="328653" relation="include">
        </childnode>
      </node>
      <node id="328668">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="328659" relation="include">
        </childnode>
        <childnode refid="328662" relation="include">
        </childnode>
        <childnode refid="328669" relation="include">
        </childnode>
      </node>
      <node id="328670">
        <label>TrigNavStructure/ComboIterator.h</label>
        <link refid="da/da2/ComboIterator_8h_source"/>
        <childnode refid="328648" relation="include">
        </childnode>
        <childnode refid="328671" relation="include">
        </childnode>
        <childnode refid="328653" relation="include">
        </childnode>
      </node>
      <node id="328648">
        <label>vector</label>
      </node>
      <node id="328661">
        <label>sstream</label>
      </node>
      <node id="328652">
        <label>iostream</label>
      </node>
      <node id="328667">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="328660">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="328651" relation="include">
        </childnode>
        <childnode refid="328661" relation="include">
        </childnode>
        <childnode refid="328659" relation="include">
        </childnode>
        <childnode refid="328662" relation="include">
        </childnode>
        <childnode refid="328664" relation="include">
        </childnode>
        <childnode refid="328667" relation="include">
        </childnode>
      </node>
      <node id="328665">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328643">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx</label>
        <link refid="ut_iterators_test.cxx"/>
        <childnode refid="328644" relation="include">
        </childnode>
        <childnode refid="328645" relation="include">
        </childnode>
        <childnode refid="328670" relation="include">
        </childnode>
        <childnode refid="328672" relation="include">
        </childnode>
      </node>
      <node id="328658">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="328651" relation="include">
        </childnode>
        <childnode refid="328659" relation="include">
        </childnode>
        <childnode refid="328660" relation="include">
        </childnode>
        <childnode refid="328668" relation="include">
        </childnode>
      </node>
      <node id="328672">
        <label>testutils.h</label>
        <link refid="d3/d1a/testutils_8h_source"/>
        <childnode refid="328652" relation="include">
        </childnode>
        <childnode refid="328673" relation="include">
        </childnode>
      </node>
      <node id="328671">
        <label>set</label>
      </node>
      <node id="328646">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d4/d9f/namespaceID">ID</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d9/de1/ut__iterators__test_8cxx_1aed0fcce80d74623c0ffbc9e33e1a3bba" prot="public" static="no" mutable="no">
        <type><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref></type>
        <definition>StandaloneNavigation tns</definition>
        <argsstring></argsstring>
        <name>tns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="7" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d9/de1/ut__iterators__test_8cxx_1a54b5da7b70f7153a5721f2005df864b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">TriggerElement</ref> *</type>
        <definition>TriggerElement* makeTopoConnections</definition>
        <argsstring>(TriggerElement *t1, TriggerElement *t2, unsigned id)</argsstring>
        <name>makeTopoConnections</name>
        <param>
          <type><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">TriggerElement</ref> *</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">TriggerElement</ref> *</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="17" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="d9/de1/ut__iterators__test_8cxx_1a13b1274655216dbc1072c03070a40801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prepareNavigation</definition>
        <argsstring>()</argsstring>
        <name>prepareNavigation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="24" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="24" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="d9/de1/ut__iterators__test_8cxx_1a2fe38ea467f5f0d700ea30d40626f03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printCombination</definition>
        <argsstring>(size_t n, const TEVec &amp;comb)</argsstring>
        <name>printCombination</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const TEVec &amp;</type>
          <declname>comb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="d9/de1/ut__iterators__test_8cxx_1a595cfaba5faca8cbd3f9fe9fcc58966e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t iterateAndPrint</definition>
        <argsstring>(ComboIteratorBase &amp;it)</argsstring>
        <name>iterateAndPrint</name>
        <param>
          <type><ref refid="db/d54/classHLT_1_1ComboIteratorBase" kindref="compound">ComboIteratorBase</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="80" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="d9/de1/ut__iterators__test_8cxx_1a47efaf337ccbc71a754a0d77a986002d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testPlainIteratorSymmetric</definition>
        <argsstring>()</argsstring>
        <name>testPlainIteratorSymmetric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="94" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="94" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="d9/de1/ut__iterators__test_8cxx_1ac99df572d82b12201f8d431349d754c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testPlainIteratorAsymmetric</definition>
        <argsstring>()</argsstring>
        <name>testPlainIteratorAsymmetric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="114" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="d9/de1/ut__iterators__test_8cxx_1a066cc43a3d4aa494b59f1efa0c8c2b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testTopoIterator</definition>
        <argsstring>()</argsstring>
        <name>testTopoIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="136" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="136" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="d9/de1/ut__iterators__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" line="184" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx" bodystart="184" bodyend="199"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/StandaloneNavigation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/ComboIterator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">HLT;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref><sp/>tns;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ID<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>te_id_type<sp/>trk=22;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>te_id_type<sp/>mu=33;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>te_id_type<sp/>trk2=44;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>te_id_type<sp/>topoCalo=7000;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>te_id_type<sp/>topoMu=8000;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>te_id_type<sp/>topoMuCalo=9000;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>makeTopoConnections(<ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>t1,<sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>t2,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::vector&lt;TriggerElement*&gt;<sp/>seeds;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>seeds.push_back(t1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>seeds.push_back(t2);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(seeds,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prepareNavigation()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a23f79a5e2e5b4c5e5d0d5523d3465083" kindref="member" tooltip="resets all the navigation, goes to the factory and asks to withdraw all produced...">reset</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>RoIs<sp/>(calo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi1<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi2<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi3<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi4<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>fist<sp/>TE<sp/>seeding<sp/>from<sp/>this<sp/>RoIs<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>calo1<sp/>=<sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi1,<sp/>1101);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>calo2<sp/>=<sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi2,<sp/>1102);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>calo3<sp/>=<sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi3,<sp/>1103);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>calo4<sp/>=<sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi4,<sp/>1104);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>topo<sp/>connections<sp/>(1-2,<sp/>and<sp/>1-3,<sp/>no<sp/>2-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>makeTopoConnections(calo1,<sp/>calo2,<sp/>ID::topoCalo);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>makeTopoConnections(calo1,<sp/>calo3,<sp/>ID::topoCalo);<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>makeTopoConnections(calo2,<sp/>calo4,<sp/>ID::topoCalo)-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1ae84fe374e160f8cce3b51738c070ff4d" kindref="member" tooltip="set state of the TriggerElement">setActiveState</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>topo<sp/>run<sp/>but<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(calo1,<sp/>ID::trk);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(calo2,<sp/>ID::trk);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(calo3,<sp/>ID::trk);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(calo4,<sp/>ID::trk);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>RoIs<sp/>(mu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi5<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi6<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi7<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>ms1<sp/>=<sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi5,<sp/>3301);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>ms2<sp/>=<sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi6,<sp/>3302);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>ms3<sp/>=<sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi7,<sp/>3303);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>topo<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>makeTopoConnections(ms1,<sp/>ms2,<sp/>ID::topoMu)-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1ae84fe374e160f8cce3b51738c070ff4d" kindref="member" tooltip="set state of the TriggerElement">setActiveState</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>makeTopoConnections(ms1,<sp/>ms3,<sp/>ID::topoMu);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>makeTopoConnections(ms2,<sp/>ms3,<sp/>ID::topoMu)-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1ae84fe374e160f8cce3b51738c070ff4d" kindref="member" tooltip="set state of the TriggerElement">setActiveState</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(ms1,<sp/>ID::trk2);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(ms2,<sp/>ID::trk2);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(ms3,<sp/>ID::trk2);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>mu+electron<sp/>combinations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>makeTopoConnections(ms1,<sp/>calo1,<sp/>ID::topoMuCalo);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>makeTopoConnections(ms2,<sp/>calo1,<sp/>ID::topoMuCalo);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>makeTopoConnections(ms3,<sp/>calo2,<sp/>ID::topoMuCalo)-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1ae84fe374e160f8cce3b51738c070ff4d" kindref="member" tooltip="set state of the TriggerElement">setActiveState</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printCombination(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TEVec&amp;<sp/>comb)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te1<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad9ef66b52d6a11e57887bf4b3525b61e" kindref="member" tooltip="returns list of direct predecessors (nodes seeding me)">getDirectPredecessors</ref>(comb[0])[0];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te2<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad9ef66b52d6a11e57887bf4b3525b61e" kindref="member" tooltip="returns list of direct predecessors (nodes seeding me)">getDirectPredecessors</ref>(comb[1])[0];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Combination<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>TEs<sp/>seeded<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>te1-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1a3b549590aa2392644ce33125f62058c8" kindref="member" tooltip="reset internals. Needed because of TriggerStore (or TriggerFactory ...) can be used...">getId</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>te2-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1a3b549590aa2392644ce33125f62058c8" kindref="member" tooltip="reset internals. Needed because of TriggerStore (or TriggerFactory ...) can be used...">getId</ref>());<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iterateAndPrint(<ref refid="db/d54/classHLT_1_1ComboIteratorBase" kindref="compound" tooltip="Base class for iterator used to loop over multi-particle combinations.">ComboIteratorBase</ref>&amp;<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a51847d075d40b0fb69e397ac3949f1d3" kindref="member" tooltip="Validity check for the iterator.">isValid</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>TEVec<sp/>comb;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>comb<sp/>=<sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a4abdb9b0ceac911d9e67c1ee82df8d7e" kindref="member" tooltip="Accessor method for the current combination.">combination</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>printCombination(counter,<sp/>comb);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>it++;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>counter;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>testPlainIteratorSymmetric()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>TEVec<sp/>trks;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a311c58edad4dbe23f12bec046283c82d" kindref="member" tooltip="The query returning a collection of all TriggerElements if name is given.">getAllOfType</ref>(ID::trk,<sp/>trks);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>std::vector&lt;TEVec&gt;<sp/>zipped{trks,<sp/>trks};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="d2/dda/classHLT_1_1ComboIterator" kindref="compound" tooltip="Iterator used to loop over multi-particle combinations.">ComboIterator</ref><sp/>it(zipped,<sp/><sp/>&amp;tns);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a4c9a951e5b3c51ce5a5d7723cd53699c" kindref="member" tooltip="Rewind method, resetting the iterator to the first element.">rewind</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a51847d075d40b0fb69e397ac3949f1d3" kindref="member" tooltip="Validity check for the iterator.">isValid</ref>()<sp/>)<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Newly<sp/>made<sp/>ComboIterator<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>iterateAndPrint(it);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>counter<sp/>!=<sp/>6<sp/>)<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;To<sp/>few<sp/>combinations&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Plain<sp/>iterator<sp/>test<sp/>passed<sp/>ok<sp/>on<sp/>symmetric<sp/>test&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>testPlainIteratorAsymmetric()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>TEVec<sp/>trksCalo;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a311c58edad4dbe23f12bec046283c82d" kindref="member" tooltip="The query returning a collection of all TriggerElements if name is given.">getAllOfType</ref>(ID::trk,<sp/>trksCalo);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>TEVec<sp/>trksMu;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a311c58edad4dbe23f12bec046283c82d" kindref="member" tooltip="The query returning a collection of all TriggerElements if name is given.">getAllOfType</ref>(ID::trk2,<sp/>trksMu);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>std::vector&lt;TEVec&gt;<sp/>zipped{trksCalo,<sp/>trksMu};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="d2/dda/classHLT_1_1ComboIterator" kindref="compound" tooltip="Iterator used to loop over multi-particle combinations.">ComboIterator</ref><sp/>it(zipped,<sp/><sp/>&amp;tns);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a51847d075d40b0fb69e397ac3949f1d3" kindref="member" tooltip="Validity check for the iterator.">isValid</ref>()<sp/>)<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Newly<sp/>made<sp/>ComboIterator<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>iterateAndPrint(it);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>counter<sp/>!=<sp/><sp/>trksCalo.size()*trksMu.size())<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>number<sp/>of<sp/>combinations<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>counter);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>testTopoIterator()<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>TEVec<sp/>trksCalo;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a311c58edad4dbe23f12bec046283c82d" kindref="member" tooltip="The query returning a collection of all TriggerElements if name is given.">getAllOfType</ref>(ID::trk,<sp/>trksCalo);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>TEVec<sp/>trksMu;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a311c58edad4dbe23f12bec046283c82d" kindref="member" tooltip="The query returning a collection of all TriggerElements if name is given.">getAllOfType</ref>(ID::trk2,<sp/>trksMu);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TEVec&gt;<sp/>zipped{trksCalo,<sp/>trksCalo};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d6b/classHLT_1_1ComboIteratorTopo" kindref="compound">ComboIteratorTopo</ref><sp/>it(zipped,<sp/>&amp;tns,<sp/>ID::topoCalo);<sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a4c9a951e5b3c51ce5a5d7723cd53699c" kindref="member" tooltip="Rewind method, resetting the iterator to the first element.">rewind</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>iterateAndPrint(it);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>counter<sp/>!=<sp/>2<sp/>)<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Topo<sp/>iterator<sp/>provides<sp/>wrong<sp/>number<sp/>of<sp/>combinations<sp/>(2)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>counter<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TEVec&gt;<sp/>zipped{trksMu,<sp/>trksMu};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d6b/classHLT_1_1ComboIteratorTopo" kindref="compound">ComboIteratorTopo</ref><sp/>it(zipped,<sp/>&amp;tns,<sp/>ID::topoMu);<sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a4c9a951e5b3c51ce5a5d7723cd53699c" kindref="member" tooltip="Rewind method, resetting the iterator to the first element.">rewind</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>iterateAndPrint(it);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>counter<sp/>!=<sp/>1<sp/>)<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Topo<sp/>iterator<sp/>provides<sp/>wrong<sp/>number<sp/>of<sp/>combinations<sp/>(1)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>counter<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TEVec&gt;<sp/>zipped{trksMu,<sp/>trksCalo};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d6b/classHLT_1_1ComboIteratorTopo" kindref="compound">ComboIteratorTopo</ref><sp/>it(zipped,<sp/>&amp;tns,<sp/>ID::topoMu);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>on<sp/>purpose<sp/>there<sp/>should<sp/>be<sp/>0<sp/>combs<sp/>as<sp/>topoMu<sp/>never<sp/>spans<sp/>caloTEs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a4c9a951e5b3c51ce5a5d7723cd53699c" kindref="member" tooltip="Rewind method, resetting the iterator to the first element.">rewind</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>iterateAndPrint(it);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>counter<sp/>!=<sp/>0<sp/>)<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Topo<sp/>iterator<sp/>provides<sp/>wrong<sp/>number<sp/>of<sp/>combinations<sp/>(0)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>counter<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TEVec&gt;<sp/>zipped{trksMu,<sp/>trksCalo};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d6b/classHLT_1_1ComboIteratorTopo" kindref="compound">ComboIteratorTopo</ref><sp/>it(zipped,<sp/>&amp;tns,<sp/>ID::topoMuCalo);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>it.<ref refid="db/d54/classHLT_1_1ComboIteratorBase_1a4c9a951e5b3c51ce5a5d7723cd53699c" kindref="member" tooltip="Rewind method, resetting the iterator to the first element.">rewind</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>iterateAndPrint(it);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>counter<sp/>!=<sp/>2<sp/>)<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Topo<sp/>iterator<sp/>provides<sp/>wrong<sp/>number<sp/>of<sp/>combinations<sp/>(2)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>counter<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>prepareNavigation();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>testPlainIteratorSymmetric()<sp/>)<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;testPlainIteratorAsymmetric()<sp/>test<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>testPlainIteratorAsymmetric()<sp/>)<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;testPlainIteratorAsymmetric()<sp/>test<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>testTopoIterator())</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;testTopoIterator()<sp/>test<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_iterators_test.cxx"/>
  </compounddef>
</doxygen>
