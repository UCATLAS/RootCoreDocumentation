<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d5c/BosonTag_8cxx" kind="file">
    <compoundname>BosonTag.cxx</compoundname>
    <includes refid="d1/dba/BosonTag_8h" local="yes">JetSubStructureUtils/BosonTag.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="d3/d32/PathResolver_8h" local="yes">PathResolver/PathResolver.h</includes>
    <includes local="no">TSystem.h</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TH2F.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">fstream</includes>
    <incdepgraph>
      <node id="190089">
        <label>list</label>
      </node>
      <node id="190098">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="190083" relation="include">
        </childnode>
        <childnode refid="190090" relation="include">
        </childnode>
        <childnode refid="190011" relation="include">
        </childnode>
        <childnode refid="190079" relation="include">
        </childnode>
        <childnode refid="190018" relation="include">
        </childnode>
      </node>
      <node id="190083">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="190056">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="190105">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="190106" relation="include">
        </childnode>
        <childnode refid="190084" relation="include">
        </childnode>
        <childnode refid="190025" relation="include">
        </childnode>
        <childnode refid="190107" relation="include">
        </childnode>
      </node>
      <node id="190058">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="190017" relation="include">
        </childnode>
        <childnode refid="190019" relation="include">
        </childnode>
        <childnode refid="190025" relation="include">
        </childnode>
        <childnode refid="190026" relation="include">
        </childnode>
      </node>
      <node id="190166">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190161" relation="include">
        </childnode>
        <childnode refid="190167" relation="include">
        </childnode>
        <childnode refid="190168" relation="include">
        </childnode>
      </node>
      <node id="190059">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="190028">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="190013" relation="include">
        </childnode>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190029" relation="include">
        </childnode>
        <childnode refid="190027" relation="include">
        </childnode>
      </node>
      <node id="190122">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="190123" relation="include">
        </childnode>
        <childnode refid="190124" relation="include">
        </childnode>
        <childnode refid="190125" relation="include">
        </childnode>
      </node>
      <node id="190024">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="190026">
        <label>functional</label>
      </node>
      <node id="190080">
        <label>boost/version.hpp</label>
      </node>
      <node id="190023">
        <label>limits</label>
      </node>
      <node id="190029">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="190153">
        <label>xAODBTagging/versions/BTaggingContainer_v1.h</label>
        <link refid="d9/d93/BTaggingContainer__v1_8h_source"/>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190115" relation="include">
        </childnode>
      </node>
      <node id="190054">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="190168">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="190020">
        <label>iterator</label>
      </node>
      <node id="190042">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190043" relation="include">
        </childnode>
      </node>
      <node id="189999">
        <label>xAODJet/Jet.h</label>
        <link refid="da/db7/Jet_8h_source"/>
        <childnode refid="190000" relation="include">
        </childnode>
        <childnode refid="190130" relation="include">
        </childnode>
      </node>
      <node id="190151">
        <label>xAODBTagging/versions/BTagVertex_v1.h</label>
        <link refid="d6/df4/BTagVertex__v1_8h_source"/>
        <childnode refid="190011" relation="include">
        </childnode>
        <childnode refid="190002" relation="include">
        </childnode>
        <childnode refid="190009" relation="include">
        </childnode>
        <childnode refid="190073" relation="include">
        </childnode>
        <childnode refid="190117" relation="include">
        </childnode>
        <childnode refid="190135" relation="include">
        </childnode>
        <childnode refid="190134" relation="include">
        </childnode>
        <childnode refid="190001" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190027" relation="include">
        </childnode>
      </node>
      <node id="190104">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="190110">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="190111" relation="include">
        </childnode>
        <childnode refid="190078" relation="include">
        </childnode>
        <childnode refid="190023" relation="include">
        </childnode>
        <childnode refid="190026" relation="include">
        </childnode>
        <childnode refid="190112" relation="include">
        </childnode>
      </node>
      <node id="190066">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="190014" relation="include">
        </childnode>
        <childnode refid="190067" relation="include">
        </childnode>
        <childnode refid="190068" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
      </node>
      <node id="190038">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190021" relation="include">
        </childnode>
      </node>
      <node id="190003">
        <label>stdint.h</label>
      </node>
      <node id="190090">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="190023" relation="include">
        </childnode>
        <childnode refid="190091" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
        <childnode refid="190021" relation="include">
        </childnode>
        <childnode refid="190015" relation="include">
        </childnode>
      </node>
      <node id="190076">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="190035">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
      </node>
      <node id="190138">
        <label>Eigen/Geometry</label>
      </node>
      <node id="190006">
        <label>RVersion.h</label>
      </node>
      <node id="190016">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="190017" relation="include">
        </childnode>
        <childnode refid="190025" relation="include">
        </childnode>
        <childnode refid="190026" relation="include">
        </childnode>
      </node>
      <node id="190171">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="190022">
        <label>cmath</label>
      </node>
      <node id="190070">
        <label>cassert</label>
      </node>
      <node id="190081">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="190100">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="190068">
        <label>stdexcept</label>
      </node>
      <node id="190164">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190161" relation="include">
        </childnode>
        <childnode refid="190165" relation="include">
        </childnode>
      </node>
      <node id="190057">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="190124">
        <label>Eigen/Core</label>
      </node>
      <node id="190087">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="190126">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190127" relation="include">
        </childnode>
      </node>
      <node id="190132">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190073" relation="include">
        </childnode>
        <childnode refid="190133" relation="include">
        </childnode>
      </node>
      <node id="190095">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="190010">
        <label>TLorentzVector.h</label>
      </node>
      <node id="190161">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="189998">
        <label>string</label>
      </node>
      <node id="190060">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="190014" relation="include">
        </childnode>
        <childnode refid="190013" relation="include">
        </childnode>
        <childnode refid="190042" relation="include">
        </childnode>
        <childnode refid="190038" relation="include">
        </childnode>
        <childnode refid="190030" relation="include">
        </childnode>
        <childnode refid="190061" relation="include">
        </childnode>
        <childnode refid="190062" relation="include">
        </childnode>
        <childnode refid="190045" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190019" relation="include">
        </childnode>
        <childnode refid="190021" relation="include">
        </childnode>
        <childnode refid="190063" relation="include">
        </childnode>
        <childnode refid="190064" relation="include">
        </childnode>
        <childnode refid="190052" relation="include">
        </childnode>
        <childnode refid="190065" relation="include">
        </childnode>
      </node>
      <node id="190033">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
      </node>
      <node id="190119">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="190120" relation="include">
        </childnode>
        <childnode refid="190003" relation="include">
        </childnode>
        <childnode refid="190002" relation="include">
        </childnode>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190009" relation="include">
        </childnode>
        <childnode refid="190121" relation="include">
        </childnode>
        <childnode refid="190126" relation="include">
        </childnode>
        <childnode refid="190128" relation="include">
        </childnode>
        <childnode refid="190129" relation="include">
        </childnode>
      </node>
      <node id="190063">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="190115">
        <label>xAODBTagging/versions/BTagging_v1.h</label>
        <link refid="dc/da1/BTagging__v1_8h_source"/>
        <childnode refid="190011" relation="include">
        </childnode>
        <childnode refid="190002" relation="include">
        </childnode>
        <childnode refid="190116" relation="include">
        </childnode>
        <childnode refid="190117" relation="include">
        </childnode>
        <childnode refid="190134" relation="include">
        </childnode>
        <childnode refid="190149" relation="include">
        </childnode>
        <childnode refid="190001" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190102" relation="include">
        </childnode>
        <childnode refid="190027" relation="include">
        </childnode>
      </node>
      <node id="190000">
        <label>xAODJet/versions/Jet_v1.h</label>
        <link refid="df/d71/Jet__v1_8h_source"/>
        <childnode refid="190001" relation="include">
        </childnode>
        <childnode refid="190002" relation="include">
        </childnode>
        <childnode refid="190009" relation="include">
        </childnode>
        <childnode refid="190073" relation="include">
        </childnode>
        <childnode refid="190113" relation="include">
        </childnode>
        <childnode refid="190154" relation="include">
        </childnode>
        <childnode refid="190157" relation="include">
        </childnode>
        <childnode refid="190155" relation="include">
        </childnode>
        <childnode refid="190158" relation="include">
        </childnode>
      </node>
      <node id="190092">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="190075" relation="include">
        </childnode>
        <childnode refid="190090" relation="include">
        </childnode>
        <childnode refid="190093" relation="include">
        </childnode>
        <childnode refid="190095" relation="include">
        </childnode>
        <childnode refid="190080" relation="include">
        </childnode>
        <childnode refid="190020" relation="include">
        </childnode>
        <childnode refid="190021" relation="include">
        </childnode>
      </node>
      <node id="190106">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="190001">
        <label>map</label>
      </node>
      <node id="190107">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="190108" relation="include">
        </childnode>
      </node>
      <node id="190108">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="190007">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="190049">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="190139">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="190097">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="190092" relation="include">
        </childnode>
        <childnode refid="190020" relation="include">
        </childnode>
        <childnode refid="190018" relation="include">
        </childnode>
        <childnode refid="190098" relation="include">
        </childnode>
      </node>
      <node id="190175">
        <label>fstream</label>
      </node>
      <node id="190064">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="190156">
        <label>Math/Vector4D.h</label>
      </node>
      <node id="190046">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="190134">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="190135" relation="include">
        </childnode>
        <childnode refid="190148" relation="include">
        </childnode>
        <childnode refid="190130" relation="include">
        </childnode>
      </node>
      <node id="190093">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="190075" relation="include">
        </childnode>
        <childnode refid="190005" relation="include">
        </childnode>
        <childnode refid="190025" relation="include">
        </childnode>
        <childnode refid="190094" relation="include">
        </childnode>
      </node>
      <node id="190165">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="190012">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="190005">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="190006" relation="include">
        </childnode>
        <childnode refid="190007" relation="include">
        </childnode>
      </node>
      <node id="190062">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="190055">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="190133">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="190116">
        <label>xAODBTagging/BTaggingEnums.h</label>
        <link refid="dd/de5/BTaggingEnums_8h_source"/>
      </node>
      <node id="190091">
        <label>limits.h</label>
      </node>
      <node id="190085">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="190086" relation="include">
        </childnode>
      </node>
      <node id="190148">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190136" relation="include">
        </childnode>
      </node>
      <node id="190041">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="190042" relation="include">
        </childnode>
        <childnode refid="190023" relation="include">
        </childnode>
        <childnode refid="190003" relation="include">
        </childnode>
        <childnode refid="190044" relation="include">
        </childnode>
      </node>
      <node id="190014">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190016" relation="include">
        </childnode>
      </node>
      <node id="190004">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="190003" relation="include">
        </childnode>
      </node>
      <node id="190125">
        <label>Eigen/Dense</label>
      </node>
      <node id="190017">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="190018" relation="include">
        </childnode>
        <childnode refid="190019" relation="include">
        </childnode>
        <childnode refid="190020" relation="include">
        </childnode>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190021" relation="include">
        </childnode>
        <childnode refid="190022" relation="include">
        </childnode>
        <childnode refid="190023" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190024" relation="include">
        </childnode>
      </node>
      <node id="190078">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="190070" relation="include">
        </childnode>
      </node>
      <node id="190009">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="190010" relation="include">
        </childnode>
        <childnode refid="190011" relation="include">
        </childnode>
        <childnode refid="190071" relation="include">
        </childnode>
        <childnode refid="190029" relation="include">
        </childnode>
      </node>
      <node id="190071">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="190072" relation="include">
        </childnode>
      </node>
      <node id="190157">
        <label>xAODJet/JetAttributes.h</label>
        <link refid="d3/df8/JetAttributes_8h"/>
      </node>
      <node id="190094">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="190090" relation="include">
        </childnode>
        <childnode refid="190078" relation="include">
        </childnode>
      </node>
      <node id="190034">
        <label>typeinfo</label>
      </node>
      <node id="190121">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="190122" relation="include">
        </childnode>
      </node>
      <node id="190069">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="190063" relation="include">
        </childnode>
        <childnode refid="190070" relation="include">
        </childnode>
      </node>
      <node id="190074">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="190066" relation="include">
        </childnode>
        <childnode refid="190075" relation="include">
        </childnode>
        <childnode refid="190076" relation="include">
        </childnode>
        <childnode refid="190077" relation="include">
        </childnode>
        <childnode refid="190083" relation="include">
        </childnode>
        <childnode refid="190084" relation="include">
        </childnode>
        <childnode refid="190090" relation="include">
        </childnode>
        <childnode refid="190092" relation="include">
        </childnode>
        <childnode refid="190096" relation="include">
        </childnode>
        <childnode refid="190097" relation="include">
        </childnode>
        <childnode refid="190093" relation="include">
        </childnode>
        <childnode refid="190099" relation="include">
        </childnode>
        <childnode refid="190005" relation="include">
        </childnode>
        <childnode refid="190100" relation="include">
        </childnode>
        <childnode refid="190101" relation="include">
        </childnode>
        <childnode refid="190095" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
        <childnode refid="190026" relation="include">
        </childnode>
        <childnode refid="190102" relation="include">
        </childnode>
        <childnode refid="190018" relation="include">
        </childnode>
        <childnode refid="190068" relation="include">
        </childnode>
        <childnode refid="190020" relation="include">
        </childnode>
        <childnode refid="190029" relation="include">
        </childnode>
        <childnode refid="190103" relation="include">
        </childnode>
        <childnode refid="190105" relation="include">
        </childnode>
        <childnode refid="190109" relation="include">
        </childnode>
        <childnode refid="190110" relation="include">
        </childnode>
      </node>
      <node id="190141">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="190142" relation="include">
        </childnode>
        <childnode refid="190130" relation="include">
        </childnode>
      </node>
      <node id="190120">
        <label>bitset</label>
      </node>
      <node id="190044">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="190008">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="190061">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="190170">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="190161" relation="include">
        </childnode>
        <childnode refid="190164" relation="include">
        </childnode>
        <childnode refid="190171" relation="include">
        </childnode>
      </node>
      <node id="190031">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="190003" relation="include">
        </childnode>
      </node>
      <node id="190136">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190011" relation="include">
        </childnode>
        <childnode refid="190002" relation="include">
        </childnode>
        <childnode refid="190122" relation="include">
        </childnode>
        <childnode refid="190137" relation="include">
        </childnode>
        <childnode refid="190139" relation="include">
        </childnode>
        <childnode refid="190121" relation="include">
        </childnode>
        <childnode refid="190132" relation="include">
        </childnode>
        <childnode refid="190140" relation="include">
        </childnode>
        <childnode refid="190071" relation="include">
        </childnode>
        <childnode refid="190147" relation="include">
        </childnode>
      </node>
      <node id="190043">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="190048">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="190084">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="190085" relation="include">
        </childnode>
        <childnode refid="190077" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190024" relation="include">
        </childnode>
        <childnode refid="190087" relation="include">
        </childnode>
        <childnode refid="190047" relation="include">
        </childnode>
        <childnode refid="190088" relation="include">
        </childnode>
      </node>
      <node id="190027">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="190123">
        <label>unistd.h</label>
      </node>
      <node id="190103">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="190104" relation="include">
        </childnode>
      </node>
      <node id="190032">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="190014" relation="include">
        </childnode>
        <childnode refid="190033" relation="include">
        </childnode>
        <childnode refid="190035" relation="include">
        </childnode>
        <childnode refid="190036" relation="include">
        </childnode>
        <childnode refid="190050" relation="include">
        </childnode>
        <childnode refid="190052" relation="include">
        </childnode>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190058" relation="include">
        </childnode>
        <childnode refid="190059" relation="include">
        </childnode>
      </node>
      <node id="190172">
        <label>TSystem.h</label>
      </node>
      <node id="190039">
        <label>vector</label>
      </node>
      <node id="190073">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190009" relation="include">
        </childnode>
        <childnode refid="190027" relation="include">
        </childnode>
      </node>
      <node id="190111">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="190018" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
      </node>
      <node id="190173">
        <label>TFile.h</label>
      </node>
      <node id="190135">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="190136" relation="include">
        </childnode>
      </node>
      <node id="190144">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="190003" relation="include">
        </childnode>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190142" relation="include">
        </childnode>
        <childnode refid="190145" relation="include">
        </childnode>
      </node>
      <node id="190158">
        <label>xAODJet/JetContainerInfo.h</label>
        <link refid="d8/d2a/JetContainerInfo_8h_source"/>
        <childnode refid="189998" relation="include">
        </childnode>
      </node>
      <node id="190112">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="190113">
        <label>xAODBTagging/BTaggingContainer.h</label>
        <link refid="d8/d3b/BTaggingContainer_8h_source"/>
        <childnode refid="190114" relation="include">
        </childnode>
        <childnode refid="190153" relation="include">
        </childnode>
        <childnode refid="190130" relation="include">
        </childnode>
      </node>
      <node id="190019">
        <label>utility</label>
      </node>
      <node id="190109">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="190045">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="190163">
        <label>sstream</label>
      </node>
      <node id="190137">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="190123" relation="include">
        </childnode>
        <childnode refid="190138" relation="include">
        </childnode>
      </node>
      <node id="190127">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="190082">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="190053">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="190150">
        <label>xAODBTagging/BTagVertex.h</label>
        <link refid="d4/d51/BTagVertex_8h_source"/>
        <childnode refid="190151" relation="include">
        </childnode>
      </node>
      <node id="190037">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="190052">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="190053" relation="include">
        </childnode>
        <childnode refid="190054" relation="include">
        </childnode>
        <childnode refid="190055" relation="include">
        </childnode>
        <childnode refid="190056" relation="include">
        </childnode>
        <childnode refid="190057" relation="include">
        </childnode>
      </node>
      <node id="190072">
        <label>iosfwd</label>
      </node>
      <node id="190021">
        <label>cstdlib</label>
      </node>
      <node id="190118">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="190119" relation="include">
        </childnode>
        <childnode refid="190130" relation="include">
        </childnode>
      </node>
      <node id="190102">
        <label>iostream</label>
      </node>
      <node id="190067">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="190131">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="190003" relation="include">
        </childnode>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190119" relation="include">
        </childnode>
        <childnode refid="190132" relation="include">
        </childnode>
      </node>
      <node id="190013">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="190014" relation="include">
        </childnode>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190027" relation="include">
        </childnode>
      </node>
      <node id="190015">
        <label>cstddef</label>
      </node>
      <node id="190169">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="190162">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190163" relation="include">
        </childnode>
        <childnode refid="190161" relation="include">
        </childnode>
        <childnode refid="190164" relation="include">
        </childnode>
        <childnode refid="190166" relation="include">
        </childnode>
        <childnode refid="190169" relation="include">
        </childnode>
      </node>
      <node id="190065">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="190032" relation="include">
        </childnode>
        <childnode refid="190028" relation="include">
        </childnode>
        <childnode refid="190013" relation="include">
        </childnode>
        <childnode refid="190063" relation="include">
        </childnode>
        <childnode refid="190064" relation="include">
        </childnode>
      </node>
      <node id="190167">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="190147">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="190029" relation="include">
        </childnode>
      </node>
      <node id="190174">
        <label>TH2F.h</label>
      </node>
      <node id="190114">
        <label>xAODBTagging/BTagging.h</label>
        <link refid="d2/d81/BTagging_8h_source"/>
        <childnode refid="190115" relation="include">
        </childnode>
      </node>
      <node id="190155">
        <label>xAODJet/JetTypes.h</label>
        <link refid="d6/d2a/JetTypes_8h_source"/>
        <childnode refid="190156" relation="include">
        </childnode>
      </node>
      <node id="190154">
        <label>xAODJet/JetConstituentVector.h</label>
        <link refid="de/dd4/JetConstituentVector_8h_source"/>
        <childnode refid="190002" relation="include">
        </childnode>
        <childnode refid="190009" relation="include">
        </childnode>
        <childnode refid="190073" relation="include">
        </childnode>
        <childnode refid="190155" relation="include">
        </childnode>
      </node>
      <node id="190143">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="190088">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="190075" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190089" relation="include">
        </childnode>
        <childnode refid="190070" relation="include">
        </childnode>
        <childnode refid="190021" relation="include">
        </childnode>
        <childnode refid="190029" relation="include">
        </childnode>
      </node>
      <node id="190036">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="190033" relation="include">
        </childnode>
        <childnode refid="190037" relation="include">
        </childnode>
        <childnode refid="190038" relation="include">
        </childnode>
        <childnode refid="190040" relation="include">
        </childnode>
        <childnode refid="190045" relation="include">
        </childnode>
        <childnode refid="190034" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190018" relation="include">
        </childnode>
        <childnode refid="190003" relation="include">
        </childnode>
        <childnode refid="190047" relation="include">
        </childnode>
        <childnode refid="190048" relation="include">
        </childnode>
        <childnode refid="190049" relation="include">
        </childnode>
      </node>
      <node id="190128">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="190159">
        <label>PathResolver/PathResolver.h</label>
        <link refid="d3/d32/PathResolver_8h_source"/>
        <childnode refid="190160" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
      </node>
      <node id="190142">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="190002" relation="include">
        </childnode>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190009" relation="include">
        </childnode>
        <childnode refid="190121" relation="include">
        </childnode>
        <childnode refid="190126" relation="include">
        </childnode>
        <childnode refid="190120" relation="include">
        </childnode>
        <childnode refid="190003" relation="include">
        </childnode>
        <childnode refid="190143" relation="include">
        </childnode>
      </node>
      <node id="190160">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190161" relation="include">
        </childnode>
        <childnode refid="190162" relation="include">
        </childnode>
        <childnode refid="190170" relation="include">
        </childnode>
      </node>
      <node id="190146">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="189995">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetSubStructureUtils/Root/BosonTag.cxx</label>
        <link refid="BosonTag.cxx"/>
        <childnode refid="189996" relation="include">
        </childnode>
        <childnode refid="190102" relation="include">
        </childnode>
        <childnode refid="190159" relation="include">
        </childnode>
        <childnode refid="190172" relation="include">
        </childnode>
        <childnode refid="190173" relation="include">
        </childnode>
        <childnode refid="190174" relation="include">
        </childnode>
        <childnode refid="190163" relation="include">
        </childnode>
        <childnode refid="190175" relation="include">
        </childnode>
      </node>
      <node id="190047">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="190140">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="190141" relation="include">
        </childnode>
        <childnode refid="190144" relation="include">
        </childnode>
        <childnode refid="190130" relation="include">
        </childnode>
      </node>
      <node id="190077">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="190060" relation="include">
        </childnode>
        <childnode refid="190075" relation="include">
        </childnode>
        <childnode refid="190076" relation="include">
        </childnode>
        <childnode refid="190011" relation="include">
        </childnode>
        <childnode refid="190032" relation="include">
        </childnode>
        <childnode refid="190066" relation="include">
        </childnode>
        <childnode refid="190078" relation="include">
        </childnode>
        <childnode refid="190028" relation="include">
        </childnode>
        <childnode refid="190079" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190082" relation="include">
        </childnode>
      </node>
      <node id="189997">
        <label>set</label>
      </node>
      <node id="190130">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="190027" relation="include">
        </childnode>
      </node>
      <node id="190051">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="190040">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="190037" relation="include">
        </childnode>
        <childnode refid="190041" relation="include">
        </childnode>
        <childnode refid="190045" relation="include">
        </childnode>
        <childnode refid="190039" relation="include">
        </childnode>
        <childnode refid="190046" relation="include">
        </childnode>
      </node>
      <node id="190018">
        <label>algorithm</label>
      </node>
      <node id="190099">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="190129">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="190011">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="190012" relation="include">
        </childnode>
        <childnode refid="190013" relation="include">
        </childnode>
        <childnode refid="190028" relation="include">
        </childnode>
        <childnode refid="190030" relation="include">
        </childnode>
        <childnode refid="190032" relation="include">
        </childnode>
        <childnode refid="190060" relation="include">
        </childnode>
        <childnode refid="190038" relation="include">
        </childnode>
        <childnode refid="190066" relation="include">
        </childnode>
        <childnode refid="190063" relation="include">
        </childnode>
        <childnode refid="190015" relation="include">
        </childnode>
        <childnode refid="190069" relation="include">
        </childnode>
      </node>
      <node id="190030">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="190003" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190031" relation="include">
        </childnode>
        <childnode refid="190005" relation="include">
        </childnode>
      </node>
      <node id="190096">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="190092" relation="include">
        </childnode>
        <childnode refid="190078" relation="include">
        </childnode>
        <childnode refid="190020" relation="include">
        </childnode>
      </node>
      <node id="190075">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="190002">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="190003" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="190004" relation="include">
        </childnode>
        <childnode refid="190005" relation="include">
        </childnode>
        <childnode refid="190008" relation="include">
        </childnode>
      </node>
      <node id="190152">
        <label>xAODBTagging/versions/BTagVertexContainer_v1.h</label>
        <link refid="d1/d37/BTagVertexContainer__v1_8h_source"/>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190151" relation="include">
        </childnode>
      </node>
      <node id="190117">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="190118" relation="include">
        </childnode>
        <childnode refid="190131" relation="include">
        </childnode>
        <childnode refid="190130" relation="include">
        </childnode>
      </node>
      <node id="190086">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="190101">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="190025">
        <label>memory</label>
      </node>
      <node id="190145">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="190074" relation="include">
        </childnode>
        <childnode refid="190073" relation="include">
        </childnode>
        <childnode refid="190146" relation="include">
        </childnode>
      </node>
      <node id="190050">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="190035" relation="include">
        </childnode>
        <childnode refid="190036" relation="include">
        </childnode>
        <childnode refid="190051" relation="include">
        </childnode>
      </node>
      <node id="189996">
        <label>JetSubStructureUtils/BosonTag.h</label>
        <link refid="d1/dba/BosonTag_8h_source"/>
        <childnode refid="189997" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
        <childnode refid="189999" relation="include">
        </childnode>
      </node>
      <node id="190079">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="190012" relation="include">
        </childnode>
        <childnode refid="190028" relation="include">
        </childnode>
        <childnode refid="190013" relation="include">
        </childnode>
        <childnode refid="190047" relation="include">
        </childnode>
        <childnode refid="190080" relation="include">
        </childnode>
        <childnode refid="190081" relation="include">
        </childnode>
        <childnode refid="189998" relation="include">
        </childnode>
      </node>
      <node id="190149">
        <label>xAODBTagging/BTagVertexContainer.h</label>
        <link refid="d5/da2/BTagVertexContainer_8h_source"/>
        <childnode refid="190150" relation="include">
        </childnode>
        <childnode refid="190152" relation="include">
        </childnode>
        <childnode refid="190130" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d9/d5c/BosonTag_8cxx_1af0b5cfa4242ae7f98ba80fd23ef8afa9" prot="public" static="no">
        <name>APP_NAME</name>
        <initializer>&quot;BosonTag&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetSubStructureUtils/Root/BosonTag.cxx" line="18" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetSubStructureUtils/Root/BosonTag.cxx" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;JetSubStructureUtils/BosonTag.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;PathResolver/PathResolver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>root<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TSystem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH2F.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>c++<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APP_NAME<sp/>&quot;BosonTag&quot;</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">JetSubStructureUtils;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>make<sp/>all<sp/>static<sp/>accessors<sp/>static<sp/>to<sp/>this<sp/>file,<sp/>like<sp/>extern<sp/>but<sp/>hip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/>BosonTag::AlgorithmType<sp/>(</highlight><highlight class="stringliteral">&quot;AlgorithmType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::SizeParameter<sp/>(</highlight><highlight class="stringliteral">&quot;SizeParameter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/>BosonTag::InputType<sp/>(</highlight><highlight class="stringliteral">&quot;InputType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/>BosonTag::TransformType<sp/>(</highlight><highlight class="stringliteral">&quot;TransformType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::RClus<sp/>(</highlight><highlight class="stringliteral">&quot;RClus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::PtFrac<sp/>(</highlight><highlight class="stringliteral">&quot;PtFrac&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::RCut<sp/>(</highlight><highlight class="stringliteral">&quot;RCut&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::ZCut<sp/>(</highlight><highlight class="stringliteral">&quot;ZCut&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;char&gt;</ref><sp/><sp/><sp/><sp/><sp/>BosonTag::BDRS<sp/>(</highlight><highlight class="stringliteral">&quot;BDRS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::YMin<sp/>(</highlight><highlight class="stringliteral">&quot;YMin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::MuMax<sp/>(</highlight><highlight class="stringliteral">&quot;MuMax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::YFilt<sp/>(</highlight><highlight class="stringliteral">&quot;YFilt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::D2<sp/>(</highlight><highlight class="stringliteral">&quot;D2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::ECF1<sp/>(</highlight><highlight class="stringliteral">&quot;ECF1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::ECF2<sp/>(</highlight><highlight class="stringliteral">&quot;ECF2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;float&gt;</ref><sp/><sp/><sp/><sp/>BosonTag::ECF3<sp/>(</highlight><highlight class="stringliteral">&quot;ECF3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">BosonTag::CONFIG::CONFIG()<sp/>:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>m_mass_params(2,<sp/>-99.9),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>m_mass_window(0.01),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>m_d2_params(5,<sp/>-99.9),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>m_d2_cut_direction(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>m_isConfig(false)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BosonTag::CONFIG::setConfigs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>mass_params,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mass_window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>d2_params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>d2_cut_direction){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mass_params.size()<sp/>!=<sp/>m_mass_params.size()){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>mass_params.size()<sp/>is<sp/>incorrect.\r\n\tExpected:<sp/>%zu\r\n\tGiven:<sp/><sp/><sp/><sp/>%zu\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>m_mass_params.size(),<sp/>mass_params.size());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d2_params.size()<sp/>!=<sp/>m_d2_params.size()){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>d2_params.size()<sp/>is<sp/>incorrect.\r\n\tExpected:<sp/>%zu\r\n\tGiven:<sp/><sp/><sp/><sp/>%zu\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>m_d2_params.size(),<sp/>d2_params.size());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d2_cut_direction<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;LEFT&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>d2_cut_direction<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;RIGHT&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>d2_cut_direction<sp/>is<sp/>not<sp/>valid.\r\n\tExpected:<sp/>LEFT,<sp/>RIGHT\r\n\tGiven:<sp/><sp/><sp/><sp/>%s\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>d2_cut_direction.c_str());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_mass_params<sp/>=<sp/>mass_params;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>m_mass_window<sp/>=<sp/>mass_window;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>m_d2_params<sp/>=<sp/>d2_params;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>m_d2_cut_direction<sp/>=<sp/>d2_cut_direction;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_isConfig<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">BosonTag::BosonTag(<sp/>std::string<sp/>working_point,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tagger_alg,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>recommendations_file,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose)<sp/>:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>m_working_point(working_point),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>m_tagger_alg(tagger_alg),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>m_recommendations_file(recommendations_file),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>m_debug(debug),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>m_verbose(verbose),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>m_bad_configuration(false)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>configurations<sp/>passed<sp/>in,<sp/>use<sp/>m_bad_configuration<sp/>as<sp/>flag:</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>flag<sp/>it<sp/>to<sp/>true<sp/>if<sp/>something<sp/>is<sp/>badly<sp/>configured</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>otherwise,<sp/>it<sp/>should<sp/>be<sp/>false<sp/>if<sp/>everything<sp/>seems<sp/>ok</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Attempting<sp/>to<sp/>configure<sp/>with\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Working<sp/>Point<sp/><sp/><sp/><sp/><sp/>%s\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Tagger<sp/>Algorithm<sp/><sp/>%s\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Recommendations<sp/><sp/><sp/>%s\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>Output?<sp/><sp/><sp/><sp/><sp/>%s\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Verbose<sp/>Output?<sp/><sp/><sp/>%s\r\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;=========================================\r\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_NAME,<sp/>m_working_point.c_str(),<sp/>m_tagger_alg.c_str(),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_recommendations_file.c_str(),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_debug?</highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">,<sp/>m_verbose?</highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>std::set&lt;std::string&gt;<sp/>validWorkingPoints;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>validWorkingPoints.insert(</highlight><highlight class="stringliteral">&quot;tight&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>validWorkingPoints.insert(</highlight><highlight class="stringliteral">&quot;medium&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>validWorkingPoints.insert(</highlight><highlight class="stringliteral">&quot;loose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>validWorkingPoints.insert(</highlight><highlight class="stringliteral">&quot;veryloose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>validWorkingPoints.find(m_working_point)<sp/>==<sp/>validWorkingPoints.end()){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Unknown<sp/>working<sp/>point<sp/>requested.\r\n\tExpected:<sp/>veryloose,<sp/>loose,<sp/>medium,<sp/>tight\r\n\tGiven:<sp/><sp/><sp/><sp/>%s\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>m_working_point.c_str());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bad_configuration<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Valid<sp/>working<sp/>point<sp/>requested.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::set&lt;std::string&gt;<sp/>validTaggers;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>validTaggers.insert(</highlight><highlight class="stringliteral">&quot;smooth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>validTaggers.insert(</highlight><highlight class="stringliteral">&quot;run1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>validTaggers.find(m_tagger_alg)<sp/>==<sp/>validTaggers.end()){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Unknown<sp/>taggger<sp/>requested.\r\n\tExpected:<sp/>smooth,<sp/>run1\r\n\tGiven:<sp/><sp/><sp/><sp/>%s\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>m_tagger_alg.c_str());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bad_configuration<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Valid<sp/>tagger<sp/>algorithm<sp/>requested.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>care<sp/>about<sp/>recommendations<sp/>file<sp/>if<sp/>we<sp/>use<sp/>smooth<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>parse<sp/>a<sp/>file<sp/>if<sp/>we<sp/>use<sp/>the<sp/>Run-1<sp/>tagger<sp/>for<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_tagger_alg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smooth&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_recommendations_file.empty()<sp/>){</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>You<sp/>choose<sp/>the<sp/>&apos;smooth&apos;<sp/>tagger<sp/>but<sp/>did<sp/>not<sp/>provide<sp/>a<sp/>recommendations<sp/>file.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_bad_configuration<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Looking<sp/>for<sp/>the<sp/>recommendations<sp/>file<sp/>provided.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_recommendations_file<sp/>=<sp/>gSystem-&gt;ExpandPathName(m_recommendations_file.c_str());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_recommendations_file<sp/>=<sp/>PathResolverFindXMLFile(m_recommendations_file);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>https://root.cern.ch/root/roottalk/roottalk02/5332.html<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FileStat_t<sp/>fStats;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fSuccess<sp/>=<sp/>gSystem-&gt;GetPathInfo(m_recommendations_file.c_str(),<sp/>fStats);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fSuccess<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Recommendations<sp/>file<sp/>could<sp/>not<sp/>be<sp/>found.\r\n\tGiven:<sp/><sp/><sp/>%s\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>m_recommendations_file.c_str());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_bad_configuration<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Recommendations<sp/>file<sp/>was<sp/>found.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>made<sp/>it<sp/>here,<sp/>everything<sp/>appears<sp/>ok<sp/>with<sp/>our<sp/>file,<sp/>attempt<sp/>to<sp/>read<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>f_in;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_in.open(m_recommendations_file,<sp/>std::ios::in);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>f_in.fail()<sp/>){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Something<sp/>is<sp/>wrong<sp/>with<sp/>the<sp/>recommendations<sp/>file.<sp/>Could<sp/>not<sp/>open<sp/>for<sp/>reading.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_bad_configuration<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Recommendations<sp/>file<sp/>opened<sp/>for<sp/>reading.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>std::getline(f_in,<sp/>line)<sp/>){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>token<sp/>contains<sp/>the<sp/>current<sp/>splitted<sp/>text<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>token;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Reading<sp/>in<sp/>line\r\n\t&apos;%s&apos;\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>line.c_str());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>notes,<sp/>one<sp/>should<sp/>add<sp/>a<sp/>check<sp/>on<sp/>all<sp/>values<sp/>to<sp/>make<sp/>sure<sp/>they<sp/>are<sp/>valid!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>by<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>ss(line);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lineDetails<sp/>is<sp/>an<sp/>array<sp/>of<sp/>the<sp/>splits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>lineDetails{std::istream_iterator&lt;std::string&gt;{ss},<sp/>std::istream_iterator&lt;std::string&gt;{}};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>l_working_point<sp/>=<sp/>lineDetails[0];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>l_algorithm<sp/><sp/><sp/><sp/><sp/>=<sp/>lineDetails[1];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>l_mass_params(2,<sp/>0.0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_mass_params[i]<sp/>=<sp/>std::stof(lineDetails[i+2]);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>l_mass_window<sp/>=<sp/>std::stof(lineDetails[4]);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>l_d2_params(5,<sp/>0.0);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;5;<sp/>i++)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_d2_params[i]<sp/>=<sp/>std::stof(lineDetails[i+5]);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>l_d2_cut_direction<sp/>=<sp/>lineDetails[10];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>up<sp/>a<sp/>new<sp/>config<sp/>for<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/da5/structJetSubStructureUtils_1_1BosonTag_1_1CONFIG" kindref="compound">BosonTag::CONFIG</ref><sp/>new_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>new_config.setConfigs(l_mass_params,<sp/>l_mass_window,<sp/>l_d2_params,<sp/>l_d2_cut_direction);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!res){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Could<sp/>not<sp/>create<sp/>a<sp/>configuration<sp/>object<sp/>for<sp/>the<sp/>line<sp/>in<sp/>the<sp/>recommendations<sp/>file.\r\n\tLine:<sp/>%s\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>line.c_str());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_bad_configuration<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>it<sp/>to<sp/>all<sp/>configurations<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_configurations[l_working_point][l_algorithm]<sp/>=<sp/>new_config;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Parsed<sp/>line<sp/>as\r\n\t0:<sp/>%s\r\n\t1:<sp/>%s\r\n\t2:<sp/>%0.10f\r\n\t3:<sp/>%0.10f\r\n\t4:<sp/>%0.10f\r\n\t5:<sp/>%0.10f\r\n\t6:<sp/>%0.10f\r\n\t7:<sp/>%0.10f\r\n\t8:<sp/>%0.10f\r\n\t9:<sp/>%0.10f\r\n\t10:<sp/>%s\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_working_point.c_str(),<sp/>l_algorithm.c_str(),<sp/>l_mass_params[0],<sp/>l_mass_params[1],<sp/>l_mass_window,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_d2_params[0],<sp/>l_d2_params[1],<sp/>l_d2_params[2],<sp/>l_d2_params[3],<sp/>l_d2_params[4],<sp/>l_d2_cut_direction.c_str());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_configurations.count(m_working_point)<sp/>){</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Could<sp/>not<sp/>find<sp/>working<sp/>point<sp/>`%s`<sp/>in<sp/>recommendations<sp/>file!\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>m_working_point.c_str());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_bad_configuration<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Found<sp/>a<sp/>configuration<sp/>for<sp/>the<sp/>given<sp/>working<sp/>point<sp/>in<sp/>the<sp/>recommendations<sp/>file.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_bad_configuration){</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|=====================================================|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|-----------------------------------------------------|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BosonTagger<sp/>is<sp/>misconfigured!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|=====================================================|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>BosonTagger<sp/>is<sp/>configured<sp/>successfuly!<sp/>Congratulations<sp/>on<sp/>such<sp/>an<sp/>achievement.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">std::pair&lt;bool,<sp/>std::string&gt;<sp/>BosonTag::get_algorithm_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>&amp;<sp/>jet,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::JetAlgorithmType::ID<sp/>jet_algorithm,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size_parameter,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::JetInput::Type<sp/>jet_input,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::JetTransform::Type<sp/>jet_transform)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error_flag(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>http://acode-browser.usatlas.bnl.gov/lxr/source/atlas/Event/xAOD/xAODJet/xAODJet/JetContainerInfo.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>std::string&gt;<sp/>mapAlgorithmType<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetAlgorithmType::kt_algorithm,<sp/></highlight><highlight class="stringliteral">&quot;KT&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetAlgorithmType::cambridge_algorithm,<sp/></highlight><highlight class="stringliteral">&quot;CA&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetAlgorithmType::antikt_algorithm,<sp/></highlight><highlight class="stringliteral">&quot;AK&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>std::string&gt;<sp/>mapInputType<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetInput::LCTopo,<sp/></highlight><highlight class="stringliteral">&quot;LC&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetInput::EMTopo,<sp/></highlight><highlight class="stringliteral">&quot;EM&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetInput::Truth,<sp/></highlight><highlight class="stringliteral">&quot;TRU&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetInput::Track,<sp/></highlight><highlight class="stringliteral">&quot;TRA&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetInput::PFlow,<sp/></highlight><highlight class="stringliteral">&quot;PFL&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>std::string&gt;<sp/>mapTransformType<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetTransform::Trim,<sp/></highlight><highlight class="stringliteral">&quot;TRIM&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetTransform::Prune,<sp/></highlight><highlight class="stringliteral">&quot;PRUN&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{xAOD::JetTransform::MassDrop,<sp/></highlight><highlight class="stringliteral">&quot;BDRS&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>of<sp/>the<sp/>algorithm_name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>std::string<sp/>algorithm_name<sp/>=<sp/>mapAlgorithmType[jet_algorithm]</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(size_parameter*10))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>mapInputType[jet_input]</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>mapTransformType[jet_transform];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ending<sp/>of<sp/>algorithm_name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(jet_transform){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>xAOD::JetTransform::Trim:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!PtFrac.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>PtFrac<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>input<sp/>jet.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!RClus.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>RClus<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>input<sp/>jet.\r\n&quot;</highlight><highlight class="normal"><sp/>,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>PtFrac:<sp/>%0.2f\tRClus:<sp/>%0.2f\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>PtFrac(jet),<sp/>RClus(jet));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algorithm_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(PtFrac(jet)*100))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(RClus(jet)*100));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>xAOD::JetTransform::Prune:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!RCut.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>RCut<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>input<sp/>jet.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="d2/deb/classJetSubStructureUtils_1_1ZCut" kindref="compound">ZCut</ref>.isAvailable(jet)<sp/>){</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>ZCut<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>input<sp/>jet.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>RCut:<sp/>%0.2f\tZCut:<sp/>%0.2f\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>RCut(jet),<sp/><ref refid="d2/deb/classJetSubStructureUtils_1_1ZCut" kindref="compound">ZCut</ref>(jet));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algorithm_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(RCut(jet)*100))</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(<ref refid="d2/deb/classJetSubStructureUtils_1_1ZCut" kindref="compound">ZCut</ref>(jet)*100));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>xAOD::JetTransform::MassDrop:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!MuMax.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>MuMax<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>input<sp/>jet.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!RClus.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>RClus<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>input<sp/>jet.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!YMin.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>YMin<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>input<sp/>jet.\r\n&quot;</highlight><highlight class="normal"><sp/>,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!BDRS.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>BDRS<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>input<sp/>jet.\r\n&quot;</highlight><highlight class="normal"><sp/>,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>MuMax:<sp/>%0.2f\tRClus:<sp/>%0.2f\tYMin:<sp/>%0.2f\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>MuMax(jet),<sp/>RClus(jet),<sp/>YMin(jet));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algorithm_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(MuMax(jet)*100))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(RClus(jet)*100))</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(YMin(jet)*100));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Current<sp/>value<sp/>of<sp/>xAOD::JetTransform::Type<sp/>is<sp/>not<sp/>supported!\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error_flag<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;bool,<sp/>std::string&gt;(!error_flag,<sp/>algorithm_name);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">std::pair&lt;bool,<sp/>BosonTag::CONFIG&gt;<sp/>BosonTag::get_configuration(std::string<sp/>algorithm_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_configurations.at(m_working_point).count(algorithm_name)<sp/>){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Could<sp/>not<sp/>find<sp/>jet<sp/>algorithm<sp/>name<sp/>`%s`<sp/>in<sp/>recommendations<sp/>file!\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>algorithm_name.c_str());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;bool,<sp/>BosonTag::CONFIG&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Introspected<sp/>the<sp/>jet<sp/>to<sp/>be<sp/>of<sp/>type<sp/>`%s`.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>algorithm_name.c_str());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;bool,<sp/>BosonTag::CONFIG&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>m_configurations.at(m_working_point).at(algorithm_name));</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BosonTag::result(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>&amp;<sp/>jet)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="344"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bad<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_bad_configuration){</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>BosonTag<sp/>has<sp/>a<sp/>bad<sp/>configuration!&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>call<sp/>via<sp/>this<sp/>method,<sp/>we<sp/>need<sp/>these<sp/>4<sp/>things<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!AlgorithmType.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>AlgorithmType<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>jet.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!SizeParameter.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>SizeParameter<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>jet.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!InputType.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>)<sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>InputType<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>jet.\r\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!TransformType.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>){</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>TransformType<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>jet.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Jet<sp/>has<sp/>the<sp/>4<sp/>main<sp/>properties<sp/>set.\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AlgorithmType:<sp/><sp/>%d\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Size<sp/>Parameter:<sp/>%0.2f\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>Type:<sp/><sp/><sp/><sp/><sp/>%d\r\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Transform<sp/>Type:<sp/>%d\r\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>APP_NAME,<sp/>AlgorithmType(jet),<sp/>SizeParameter(jet),<sp/>InputType(jet),<sp/>TransformType(jet));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>algorithm<sp/>name<sp/>and<sp/>check<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>std::pair&lt;bool,<sp/>std::string&gt;<sp/>res<sp/>=<sp/>get_algorithm_name(jet,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;xAOD::JetAlgorithmType::ID&gt;(AlgorithmType(jet)),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeParameter(jet),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;xAOD::JetInput::Type&gt;(InputType(jet)),</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;xAOD::JetTransform::Type&gt;(TransformType(jet)));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>it<sp/>a<sp/>valid<sp/>result?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!res.first){</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Could<sp/>not<sp/>determine<sp/>what<sp/>jet<sp/>you<sp/>are<sp/>using.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Jet<sp/>introspection<sp/>successful.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result(jet,<sp/>res.second);</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BosonTag::result(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>&amp;<sp/>jet,<sp/>std::string<sp/>algorithm_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bad<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_bad_configuration){</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>BosonTag<sp/>has<sp/>a<sp/>bad<sp/>configuration!\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>basic<sp/>kinematic<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3<sp/>&lt;<sp/>200.0<sp/>||<sp/>std::fabs(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a7bd4f2d30cf4f03bddde891f90358f32" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>())<sp/>&gt;<sp/>2.0){</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Jet<sp/>does<sp/>not<sp/>pass<sp/>basic<sp/>kinematic<sp/>selection.<sp/>pT<sp/>&gt;<sp/>200<sp/>GeV,<sp/>|eta|<sp/>&lt;<sp/>2.0\r\n\tJet<sp/>Pt:<sp/>%0.6f<sp/>GeV\r\n\tJet<sp/>|eta|:<sp/>%0.6f\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3,<sp/>std::fabs(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a7bd4f2d30cf4f03bddde891f90358f32" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-5;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3<sp/>&gt;<sp/>2000.0){</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Warning,<sp/>jet<sp/>has<sp/>pT<sp/>&gt;<sp/>2<sp/>TeV!\r\nJet<sp/>Pt:<sp/>%0.6f<sp/>GeV&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-5;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>overall<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>passMass(0);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>passSub(0);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>holder<sp/>to<sp/>make<sp/>it<sp/>easier<sp/>to<sp/>print<sp/>messages<sp/>for<sp/>verbosity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>std::string<sp/>buffer;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_tagger_alg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smooth&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>not<sp/>find<sp/>a<sp/>configuration<sp/>for<sp/>the<sp/>particular<sp/>jet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;bool,<sp/>BosonTag::CONFIG&gt;<sp/>c<sp/>=<sp/>get_configuration(algorithm_name);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!c.first){</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(smooth)<sp/>The<sp/>given<sp/>jet<sp/>does<sp/>not<sp/>have<sp/>a<sp/>configuration<sp/>parameter.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>with<sp/>the<sp/>mass<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mean_mass_val<sp/>=<sp/>c.second.m_mass_params[0]<sp/>+<sp/>c.second.m_mass_params[1]<sp/>*<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>window_bottom<sp/>=<sp/>mean_mass_val<sp/>-<sp/>c.second.m_mass_window;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>window_top<sp/>=<sp/>mean_mass_val<sp/>+<sp/>c.second.m_mass_window;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(smooth)<sp/>Jet<sp/>pt:<sp/>%0.6f<sp/>GeV&quot;</highlight><highlight class="normal">,<sp/>APP_NAME,<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(smooth)<sp/>Jet<sp/>%s<sp/>the<sp/>mass<sp/>window<sp/>cut.\r\n\tMass:<sp/>%0.6f<sp/>GeV\r\n\tMean<sp/>Mass<sp/>Value:<sp/>%0.6f<sp/>GeV\r\n\tMass<sp/>Window:<sp/>[<sp/>%0.6f,<sp/>%0.6f<sp/>]<sp/>GeV<sp/>(note:<sp/>+/-<sp/>%0.2f<sp/>GeV)\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>((window_bottom<sp/>&lt;<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a48788fd33dd996b9a0b040d12336f3b9" kindref="member" tooltip="The invariant mass of the particle.">m</ref>()/1.e3)&amp;&amp;(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a48788fd33dd996b9a0b040d12336f3b9" kindref="member" tooltip="The invariant mass of the particle.">m</ref>()/1.e3<sp/>&lt;<sp/>window_top))<sp/>){</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(buffer.c_str(),<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">,<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a48788fd33dd996b9a0b040d12336f3b9" kindref="member" tooltip="The invariant mass of the particle.">m</ref>()/1.e3,<sp/>mean_mass_val,<sp/>window_bottom,<sp/>window_top,<sp/>c.second.m_mass_window);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passMass<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(buffer.c_str(),<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;passed&quot;</highlight><highlight class="normal">,<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a48788fd33dd996b9a0b040d12336f3b9" kindref="member" tooltip="The invariant mass of the particle.">m</ref>()/1.e3,<sp/>mean_mass_val,<sp/>window_bottom,<sp/>window_top,<sp/>c.second.m_mass_window);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passMass<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>calculate<sp/>d2<sp/>and<sp/>check<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cut_on_d2_val<sp/>=<sp/>c.second.m_d2_params[0]<sp/>+<sp/>c.second.m_d2_params[1]<sp/>*<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3<sp/>+<sp/>c.second.m_d2_params[2]<sp/>*<sp/>pow(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3,<sp/>2)<sp/>+<sp/>c.second.m_d2_params[3]<sp/>*<sp/>pow(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3,<sp/>3)<sp/>+<sp/>c.second.m_d2_params[4]<sp/>*<sp/>pow(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3,<sp/>4);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d2(0.0);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(D2.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)){</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>D2(jet);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((!ECF1.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>||<sp/>!ECF2.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)<sp/>||<sp/>!ECF3.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet))){</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(smooth)<sp/>D2<sp/>wasn&apos;t<sp/>calculated.<sp/>ECF#<sp/>variables<sp/>are<sp/>not<sp/>available.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d2<sp/>=<sp/>ECF3(jet)<sp/>*<sp/>pow(ECF1(jet),<sp/>3.0)<sp/>/<sp/>pow(ECF2(jet),<sp/>3.0);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>figure<sp/>out<sp/>if<sp/>we<sp/>tag<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>RIGHT:<sp/>pass<sp/>if<sp/>a<sp/>&lt;<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>LEFT:<sp/>pass<sp/>if<sp/>cut<sp/>&lt;<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(smooth)<sp/>Jet<sp/>%s<sp/>the<sp/>D2<sp/>cut<sp/>from<sp/>%s\r\n\tD2:<sp/>%0.6f\r\n\tCut:<sp/>%0.6f\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((d2<sp/>&lt;<sp/>cut_on_d2_val)&amp;&amp;(c.second.m_d2_cut_direction<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RIGHT&quot;</highlight><highlight class="normal">))<sp/>||</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((cut_on_d2_val<sp/>&lt;<sp/>d2)&amp;&amp;(c.second.m_d2_cut_direction<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LEFT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(buffer.c_str(),<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">,<sp/>c.second.m_d2_cut_direction.c_str(),<sp/>d2,<sp/>cut_on_d2_val);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passSub<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(buffer.c_str(),<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;passed&quot;</highlight><highlight class="normal">,<sp/>c.second.m_d2_cut_direction.c_str(),<sp/>d2,<sp/>cut_on_d2_val);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passSub<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_tagger_alg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;run1&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>use<sp/>CAMKT12BDRSMU100SMALLR30YCUT4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(algorithm_name<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;CA12BDRSM100R30Y4&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(Run-1)<sp/>You<sp/>can<sp/>only<sp/>use<sp/>Run-1<sp/>Tagger<sp/>on<sp/>CA12<sp/>BDRS<sp/>M100<sp/>R30<sp/>Y4<sp/>jets.\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>this<sp/>point,<sp/>we<sp/>know<sp/>the<sp/>jet<sp/>is<sp/>correct,<sp/>so<sp/>apply<sp/>a<sp/>mass<sp/>window<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(Run-1)<sp/>Jet<sp/>%s<sp/>the<sp/>mass<sp/>window<sp/>cut.\r\n\tMass:<sp/>%0.6f<sp/>GeV\r\n\tMass<sp/>Window:<sp/>[<sp/>69.00,<sp/>107.00<sp/>]<sp/>GeV\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>(69.<sp/>&lt;<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a48788fd33dd996b9a0b040d12336f3b9" kindref="member" tooltip="The invariant mass of the particle.">m</ref>()/1.e3<sp/>&amp;&amp;<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a48788fd33dd996b9a0b040d12336f3b9" kindref="member" tooltip="The invariant mass of the particle.">m</ref>()/1.e3<sp/>&lt;<sp/>107.)<sp/>){</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(buffer.c_str(),<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">,<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a48788fd33dd996b9a0b040d12336f3b9" kindref="member" tooltip="The invariant mass of the particle.">m</ref>()/1.e3);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passMass<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(buffer.c_str(),<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;passed&quot;</highlight><highlight class="normal">,<sp/>jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a48788fd33dd996b9a0b040d12336f3b9" kindref="member" tooltip="The invariant mass of the particle.">m</ref>()/1.e3);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passMass<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>and<sp/>a<sp/>\sqrt{y_S}<sp/>cut<sp/>(on<sp/>subjets<sp/>moment<sp/>balance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ys(0.0);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!YFilt.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(jet)){</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debug)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(Run-1)<sp/>Could<sp/>not<sp/>find<sp/>YFilt<sp/>on<sp/>jet<sp/>(subjets<sp/>moment<sp/>balance,<sp/>y_S)\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>YFilt(jet);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>(Run-1)<sp/>Jet<sp/>%s<sp/>the<sp/>sqrt{y_S}<sp/>cut.\r\n\tsqrt{y_S}:<sp/>%0.2f\r\n\tCut:<sp/>0.45\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>(sqrt(ys)<sp/>&gt;<sp/>0.45)<sp/>){</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(buffer.c_str(),<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">,<sp/>sqrt(ys));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passSub<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passSub<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(buffer.c_str(),<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;passed&quot;</highlight><highlight class="normal">,<sp/>sqrt(ys));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Err...<sp/>how<sp/>the<sp/>hell<sp/>did<sp/>you<sp/>get<sp/>here?\r\n&quot;</highlight><highlight class="normal">,<sp/>APP_NAME);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_verbose)<sp/>printf(</highlight><highlight class="stringliteral">&quot;&lt;%s&gt;:<sp/>Jet<sp/>has<sp/>passed<sp/>%s!\r\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_NAME,<sp/>(passMass<sp/>==<sp/>1)?((passSub<sp/>==<sp/>1)?</highlight><highlight class="stringliteral">&quot;a<sp/>mass<sp/>cut&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;both<sp/>cuts&quot;</highlight><highlight class="normal">):((passSub==1)?</highlight><highlight class="stringliteral">&quot;a<sp/>substructure<sp/>cut&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;neither<sp/>cuts&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(passMass<sp/>&lt;&lt;<sp/>1)|(passSub<sp/>&lt;&lt;<sp/>0);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetSubStructureUtils/Root/BosonTag.cxx"/>
  </compounddef>
</doxygen>
