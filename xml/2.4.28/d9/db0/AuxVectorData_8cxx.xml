<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/db0/AuxVectorData_8cxx" kind="file">
    <compoundname>AuxVectorData.cxx</compoundname>
    <includes refid="d9/df2/AuxVectorData_8h" local="yes">AthContainers/AuxVectorData.h</includes>
    <includes refid="d7/d3a/IConstAuxStore_8h" local="yes">AthContainersInterfaces/IConstAuxStore.h</includes>
    <includes refid="d6/d3e/IAuxStore_8h" local="yes">AthContainersInterfaces/IAuxStore.h</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes refid="d4/d03/exceptions_8h" local="yes">AthContainers/exceptions.h</includes>
    <includes refid="da/d41/error_8h" local="yes">AthContainers/tools/error.h</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="71517">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="71535">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="71485" relation="include">
        </childnode>
        <childnode refid="71487" relation="include">
        </childnode>
        <childnode refid="71494" relation="include">
        </childnode>
        <childnode refid="71495" relation="include">
        </childnode>
      </node>
      <node id="71537">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="71496" relation="include">
        </childnode>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71538" relation="include">
        </childnode>
        <childnode refid="71497" relation="include">
        </childnode>
      </node>
      <node id="71536">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="71493">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="71495">
        <label>functional</label>
      </node>
      <node id="71491">
        <label>limits</label>
      </node>
      <node id="71538">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="71515">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="71488">
        <label>iterator</label>
      </node>
      <node id="71498">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="71492" relation="include">
        </childnode>
        <childnode refid="71499" relation="include">
        </childnode>
      </node>
      <node id="71539">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="71482" relation="include">
        </childnode>
        <childnode refid="71540" relation="include">
        </childnode>
        <childnode refid="71541" relation="include">
        </childnode>
        <childnode refid="71522" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
      </node>
      <node id="71500">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="71501" relation="include">
        </childnode>
        <childnode refid="71489" relation="include">
        </childnode>
      </node>
      <node id="71503">
        <label>stdint.h</label>
      </node>
      <node id="71523">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71522" relation="include">
        </childnode>
      </node>
      <node id="71506">
        <label>RVersion.h</label>
      </node>
      <node id="71484">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="71485" relation="include">
        </childnode>
        <childnode refid="71494" relation="include">
        </childnode>
        <childnode refid="71495" relation="include">
        </childnode>
      </node>
      <node id="71490">
        <label>cmath</label>
      </node>
      <node id="71541">
        <label>stdexcept</label>
      </node>
      <node id="71518">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="71543">
        <label>AthenaKernel/errorcheck.h</label>
      </node>
      <node id="71492">
        <label>string</label>
      </node>
      <node id="71481">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="71482" relation="include">
        </childnode>
        <childnode refid="71496" relation="include">
        </childnode>
        <childnode refid="71498" relation="include">
        </childnode>
        <childnode refid="71500" relation="include">
        </childnode>
        <childnode refid="71502" relation="include">
        </childnode>
        <childnode refid="71508" relation="include">
        </childnode>
        <childnode refid="71509" relation="include">
        </childnode>
        <childnode refid="71510" relation="include">
        </childnode>
        <childnode refid="71501" relation="include">
        </childnode>
        <childnode refid="71487" relation="include">
        </childnode>
        <childnode refid="71489" relation="include">
        </childnode>
        <childnode refid="71511" relation="include">
        </childnode>
        <childnode refid="71512" relation="include">
        </childnode>
        <childnode refid="71513" relation="include">
        </childnode>
        <childnode refid="71519" relation="include">
        </childnode>
      </node>
      <node id="71521">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71522" relation="include">
        </childnode>
      </node>
      <node id="71511">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="71507">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="71532">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="71512">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="71529">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="71505">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="71506" relation="include">
        </childnode>
        <childnode refid="71507" relation="include">
        </childnode>
      </node>
      <node id="71509">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="71516">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="71527">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="71498" relation="include">
        </childnode>
        <childnode refid="71491" relation="include">
        </childnode>
        <childnode refid="71503" relation="include">
        </childnode>
        <childnode refid="71528" relation="include">
        </childnode>
      </node>
      <node id="71482">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71484" relation="include">
        </childnode>
      </node>
      <node id="71485">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="71486" relation="include">
        </childnode>
        <childnode refid="71487" relation="include">
        </childnode>
        <childnode refid="71488" relation="include">
        </childnode>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71489" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
        <childnode refid="71491" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
        <childnode refid="71493" relation="include">
        </childnode>
      </node>
      <node id="71542">
        <label>AthContainers/tools/error.h</label>
        <link refid="da/d41/error_8h"/>
        <childnode refid="71543" relation="include">
        </childnode>
        <childnode refid="71544" relation="include">
        </childnode>
      </node>
      <node id="71522">
        <label>typeinfo</label>
      </node>
      <node id="71528">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="71508">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="71504">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="71503" relation="include">
        </childnode>
      </node>
      <node id="71499">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="71531">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="71497">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="71520">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="71482" relation="include">
        </childnode>
        <childnode refid="71521" relation="include">
        </childnode>
        <childnode refid="71523" relation="include">
        </childnode>
        <childnode refid="71524" relation="include">
        </childnode>
        <childnode refid="71533" relation="include">
        </childnode>
        <childnode refid="71513" relation="include">
        </childnode>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71522" relation="include">
        </childnode>
        <childnode refid="71501" relation="include">
        </childnode>
        <childnode refid="71535" relation="include">
        </childnode>
        <childnode refid="71536" relation="include">
        </childnode>
      </node>
      <node id="71501">
        <label>vector</label>
      </node>
      <node id="71487">
        <label>utility</label>
      </node>
      <node id="71510">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="71545">
        <label>sstream</label>
      </node>
      <node id="71544">
        <label>GaudiKernel/System.h</label>
      </node>
      <node id="71514">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="71525">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="71513">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="71514" relation="include">
        </childnode>
        <childnode refid="71515" relation="include">
        </childnode>
        <childnode refid="71516" relation="include">
        </childnode>
        <childnode refid="71517" relation="include">
        </childnode>
        <childnode refid="71518" relation="include">
        </childnode>
      </node>
      <node id="71489">
        <label>cstdlib</label>
      </node>
      <node id="71540">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="71496">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="71482" relation="include">
        </childnode>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71497" relation="include">
        </childnode>
      </node>
      <node id="71483">
        <label>cstddef</label>
      </node>
      <node id="71519">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="71520" relation="include">
        </childnode>
        <childnode refid="71537" relation="include">
        </childnode>
        <childnode refid="71496" relation="include">
        </childnode>
        <childnode refid="71511" relation="include">
        </childnode>
        <childnode refid="71512" relation="include">
        </childnode>
      </node>
      <node id="71480">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx</label>
        <link refid="AuxVectorData.cxx"/>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71496" relation="include">
        </childnode>
        <childnode refid="71537" relation="include">
        </childnode>
        <childnode refid="71520" relation="include">
        </childnode>
        <childnode refid="71539" relation="include">
        </childnode>
        <childnode refid="71542" relation="include">
        </childnode>
        <childnode refid="71545" relation="include">
        </childnode>
      </node>
      <node id="71524">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="71521" relation="include">
        </childnode>
        <childnode refid="71525" relation="include">
        </childnode>
        <childnode refid="71500" relation="include">
        </childnode>
        <childnode refid="71526" relation="include">
        </childnode>
        <childnode refid="71510" relation="include">
        </childnode>
        <childnode refid="71522" relation="include">
        </childnode>
        <childnode refid="71501" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
        <childnode refid="71503" relation="include">
        </childnode>
        <childnode refid="71530" relation="include">
        </childnode>
        <childnode refid="71531" relation="include">
        </childnode>
        <childnode refid="71532" relation="include">
        </childnode>
      </node>
      <node id="71530">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="71534">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="71526">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="71525" relation="include">
        </childnode>
        <childnode refid="71527" relation="include">
        </childnode>
        <childnode refid="71510" relation="include">
        </childnode>
        <childnode refid="71501" relation="include">
        </childnode>
        <childnode refid="71529" relation="include">
        </childnode>
      </node>
      <node id="71486">
        <label>algorithm</label>
      </node>
      <node id="71502">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="71503" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
        <childnode refid="71504" relation="include">
        </childnode>
        <childnode refid="71505" relation="include">
        </childnode>
      </node>
      <node id="71494">
        <label>memory</label>
      </node>
      <node id="71533">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="71523" relation="include">
        </childnode>
        <childnode refid="71524" relation="include">
        </childnode>
        <childnode refid="71534" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d59/namespaceSG">SG</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="d9/db0/AuxVectorData_8cxx_1ad062e46af68e633b0588725c9b6e33da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode thinningHook</definition>
        <argsstring>(const SG::AuxVectorData *in, IThinningSvc *svc, const IThinningSvc::Filter_t &amp;filter, const IThinningSvc::Operator::Type op)</argsstring>
        <name>thinningHook</name>
        <param>
          <type>const <ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">SG::AuxVectorData</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>IThinningSvc *</type>
          <declname>svc</declname>
        </param>
        <param>
          <type>const IThinningSvc::Filter_t &amp;</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>const IThinningSvc::Operator::Type</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Propagate thinning. Called after applying thinning to <computeroutput>in</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The object that was thinned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>svc</parametername>
</parameternamelist>
<parameterdescription>
<para>The thinning service (for convenience). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Lists the elements to be kept. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>How to merge results: AND or OR.</para></parameterdescription>
</parameteritem>
</parameterlist>
This will be called whenever a request is made to thin a <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput>.</para><para>Otherwise, we pass the thinning request on to the aux store, provided that it exists and is in the event store. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx" line="581" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx" bodystart="577" bodyend="586"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/df2/AuxVectorData_8h" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AthContainers/AuxVectorData.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d3a/IConstAuxStore_8h" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">AthContainersInterfaces/IConstAuxStore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d3e/IAuxStore_8h" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">AthContainersInterfaces/IAuxStore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d03/exceptions_8h" kindref="compound" tooltip="Exceptions that can be thrown from AthContainers.">AthContainers/exceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d41/error_8h" kindref="compound" tooltip="Helper for emitting error messages.">AthContainers/tools/error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SG<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a95f42871b1d206674b8f49a8cd73ae55" kindref="member" tooltip="Minimum length to use for the cache vector.">AuxVectorData::s_minCacheLen</ref><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref><sp/>AuxVectorData::s_emptySet;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="db/dd6/classSG_1_1AuxVectorData_1ac03d380d92722ca597c92da17ed08972" kindref="member" tooltip="Constructor.">AuxVectorData::AuxVectorData</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>:<sp/>m_store(0),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constStore(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="db/dd6/classSG_1_1AuxVectorData_1ac03d380d92722ca597c92da17ed08972" kindref="member" tooltip="Constructor.">AuxVectorData::AuxVectorData</ref><sp/>(AuxVectorData&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>:<sp/>m_cache<sp/>(std::move<sp/>(rhs.m_cache)),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constCache<sp/>(std::move<sp/>(rhs.m_constCache)),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>m_decorCache<sp/>(std::move<sp/>(rhs.m_decorCache)),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>m_store<sp/>(rhs.m_store),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constStore<sp/>(rhs.m_constStore),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constStoreLink<sp/>(std::move<sp/>(rhs.m_constStoreLink))</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>rhs.m_store<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>rhs.m_constStore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>rhs.m_constStoreLink.clear();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">AuxVectorData&amp;<sp/>AuxVectorData::operator=<sp/>(AuxVectorData&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache<sp/>=<sp/>std::move<sp/>(rhs.m_cache);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constCache<sp/>=<sp/>std::move<sp/>(rhs.m_constCache);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>m_decorCache<sp/>=<sp/>std::move<sp/>(rhs.m_decorCache);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>m_store<sp/>=<sp/>rhs.m_store;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constStore<sp/>=<sp/>rhs.m_constStore;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constStoreLink<sp/>=<sp/>rhs.m_constStoreLink;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_store<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_constStore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_constStoreLink.<ref refid="dd/d9d/classDataLinkBase_1a6c40bbdf1515f6373ae0564c4ddf6b37" kindref="member" tooltip="Clear the link (make it null).">clear</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="db/dd6/classSG_1_1AuxVectorData_1ad2c4723c7dd4279ff096d77b4832eb99" kindref="member" tooltip="Destructor.">AuxVectorData::~AuxVectorData</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">AuxVectorData::setStore</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/>store)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>m_store<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>m_constStore<sp/>=<sp/>store;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>m_constStoreLink.<ref refid="dd/d9d/classDataLinkBase_1a6c40bbdf1515f6373ae0564c4ddf6b37" kindref="member" tooltip="Clear the link (make it null).">clear</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a5d6d9eefd8811b373b3eeda823e5c0ad" kindref="member" tooltip="Clear the cached aux data pointers.">clearCache</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">AuxVectorData::setStore</ref><sp/>(<ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">SG::IAuxStore</ref>*<sp/>store)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>m_store<sp/>=<sp/>store;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>m_constStore<sp/>=<sp/>store;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>m_constStoreLink.<ref refid="dd/d9d/classDataLinkBase_1a6c40bbdf1515f6373ae0564c4ddf6b37" kindref="member" tooltip="Clear the link (make it null).">clear</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a5d6d9eefd8811b373b3eeda823e5c0ad" kindref="member" tooltip="Clear the cached aux data pointers.">clearCache</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">AuxVectorData::setStore</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/da2/classDataLink" kindref="compound">DataLink&lt; SG::IConstAuxStore &gt;</ref>&amp;<sp/>store)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>m_store<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>m_constStore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>m_constStoreLink<sp/>=<sp/>store;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a5d6d9eefd8811b373b3eeda823e5c0ad" kindref="member" tooltip="Clear the cached aux data pointers.">clearCache</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">AuxVectorData::setOption</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AuxDataOption&amp;<sp/>option)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>null_auxid)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">SG::IAuxStore</ref>*<sp/>store<sp/>=<sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!store)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>store-&gt;<ref refid="dc/d05/classSG_1_1IAuxStore_1a371646fff1258a9f81b35d26eca3ac45" kindref="member" tooltip="Set an option for a given auxiliary variable.">setOption</ref><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>option);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">AuxVectorData::setOption</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AuxDataOption&amp;<sp/>option)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().findAuxID<sp/>(name);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>option);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">AuxVectorData::setOption</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>clsname,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AuxDataOption&amp;<sp/>option)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().findAuxID<sp/>(name,<sp/>clsname);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>option);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">AuxVectorData::getAuxIDs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="201"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>())</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()-&gt;<ref refid="d3/dd5/classSG_1_1IConstAuxStore_1a3be9ddcb2b1198c3cab03c7b94764a3d" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_emptySet;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a52d2ca97c7546abb52972902ff47a275" kindref="member" tooltip="Return a set of identifiers for writable data items in this store.">AuxVectorData::getWritableAuxIDs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_store)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_store-&gt;<ref refid="dc/d05/classSG_1_1IAuxStore_1a691e17d3a91d2733af73a4c5ae17e625" kindref="member" tooltip="Return a set of identifiers for writable data items in this store.">getWritableAuxIDs</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_emptySet;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AuxVectorData::isAvailableOol<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="229"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/>store<sp/>=<sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!store)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>rely<sp/>on<sp/>getAuxIDs()<sp/>---<sp/>the<sp/>store<sp/>can<sp/>lie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicitly<sp/>try<sp/>to<sp/>fetch<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>store-&gt;<ref refid="d3/dd5/classSG_1_1IConstAuxStore_1aa73e6e5474cdc0d38fe3367740876c59" kindref="member" tooltip="Return the data vector for one aux data item.">getData</ref><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constCache.store<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>const_cast&lt;void*&gt;<sp/>(ptr));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AuxVectorData::isAvailableWritableOol<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="249"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">SG::IAuxStore</ref>*<sp/>store<sp/>=<sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!store)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/>ids<sp/>=<sp/>store-&gt;<ref refid="dc/d05/classSG_1_1IAuxStore_1a691e17d3a91d2733af73a4c5ae17e625" kindref="member" tooltip="Return a set of identifiers for writable data items in this store.">getWritableAuxIDs</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>ids.find<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/>ids.end()<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AuxVectorData::isAvailableWritableAsDecorationOol<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="262"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isAvailableOol<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>nice,<sp/>but<sp/>not<sp/>sure<sp/>we<sp/>can<sp/>do<sp/>otherwise<sp/>without<sp/>changing<sp/>interfaces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>think<sp/>the<sp/>case<sp/>of<sp/>a<sp/>caught<sp/>exception<sp/>should<sp/>be<sp/>rare.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a42670ce61a36909d86c7cda581c38535" kindref="member" tooltip="Return a pointer to the start of an aux data vector for a decoration.">getDecorationArray</ref><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d41/classSG_1_1ExcStoreLocked" kindref="compound" tooltip="Exception --- Attempted to modify auxiliary data in a locked store.">SG::ExcStoreLocked</ref>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>AuxVectorData::getDataOol<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowMissing)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>the<sp/>pointer<sp/>from<sp/>the<sp/>store,<sp/>or<sp/>raise<sp/>an<sp/>exception<sp/>if<sp/>we<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>non-const<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_store)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>m_store-&gt;<ref refid="dc/d05/classSG_1_1IAuxStore_1a0a6b90ed812993712727c76b64953c48" kindref="member" tooltip="Return the data vector for one aux data item.">getData</ref><sp/>(auxid,<sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a72f56c76a3c92d48d8364723c0161af3" kindref="member" tooltip="Return the size of the container.">size_v</ref>(),<sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1aa05239b04a4e91b0bcc8da201f2cccaa" kindref="member" tooltip="Return the capacity of the container.">capacity_v</ref>());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>())</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref><sp/>(</highlight><highlight class="stringliteral">&quot;fetch<sp/>item&quot;</highlight><highlight class="normal">,<sp/>auxid);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we<sp/>got<sp/>a<sp/>good<sp/>pointer<sp/>back,<sp/>otherwise<sp/>throw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache.store<sp/>(auxid,<sp/>ptr);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>same<sp/>entry<sp/>in<sp/>the<sp/>other<sp/>caches<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constCache.store<sp/>(auxid,<sp/>ptr);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>m_decorCache.store<sp/>(auxid,<sp/>ptr);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allowMissing)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>AuxVectorData::getDataOol<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowMissing)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="328"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>the<sp/>pointer<sp/>from<sp/>the<sp/>store,<sp/>or<sp/>raise<sp/>an<sp/>exception<sp/>if<sp/>we<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>const<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>())</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()-&gt;<ref refid="d3/dd5/classSG_1_1IConstAuxStore_1aa73e6e5474cdc0d38fe3367740876c59" kindref="member" tooltip="Return the data vector for one aux data item.">getData</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we<sp/>got<sp/>a<sp/>good<sp/>pointer<sp/>back,<sp/>otherwise<sp/>throw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constCache.store<sp/>(auxid,<sp/>const_cast&lt;void*&gt;(ptr));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allowMissing)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>AuxVectorData::getDecorationOol<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="364"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>the<sp/>pointer<sp/>from<sp/>the<sp/>store,<sp/>or<sp/>raise<sp/>an<sp/>exception<sp/>if<sp/>we<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>non-const<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_store)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>m_store-&gt;<ref refid="d3/dd5/classSG_1_1IConstAuxStore_1a96728593e3bc1da60d3bdd28291969f0" kindref="member" tooltip="Return the data vector for one aux data decoration item.">getDecoration</ref><sp/>(auxid,<sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a72f56c76a3c92d48d8364723c0161af3" kindref="member" tooltip="Return the size of the container.">size_v</ref>(),<sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1aa05239b04a4e91b0bcc8da201f2cccaa" kindref="member" tooltip="Return the capacity of the container.">capacity_v</ref>());</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>whole<sp/>point<sp/>of<sp/>decorations<sp/>is<sp/>to<sp/>allow<sp/>adding<sp/>information<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>that&apos;s<sp/>otherwise<sp/>const.<sp/><sp/>So<sp/>we<sp/>have<sp/>the<sp/>const_cast<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>store<sp/>object<sp/>is<sp/>responsible<sp/>for<sp/>determining<sp/>whether<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modification<sp/>is<sp/>really<sp/>allowed<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>IConstAuxStore*<sp/>store<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">IConstAuxStore*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>());</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>store-&gt;<ref refid="d3/dd5/classSG_1_1IConstAuxStore_1a96728593e3bc1da60d3bdd28291969f0" kindref="member" tooltip="Return the data vector for one aux data decoration item.">getDecoration</ref><sp/>(auxid,<sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a72f56c76a3c92d48d8364723c0161af3" kindref="member" tooltip="Return the size of the container.">size_v</ref>(),<sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1aa05239b04a4e91b0bcc8da201f2cccaa" kindref="member" tooltip="Return the capacity of the container.">capacity_v</ref>());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we<sp/>got<sp/>a<sp/>good<sp/>pointer<sp/>back,<sp/>otherwise<sp/>throw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>m_decorCache.store<sp/>(auxid,<sp/>ptr);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>same<sp/>entry<sp/>in<sp/>the<sp/>const<sp/>cache<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>m_constCache.store<sp/>(auxid,<sp/>ptr);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal">AuxVectorData::Cache::Cache()</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>:<sp/>m_cache(),</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache_len(0)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">AuxVectorData::Cache::Cache<sp/>(Cache&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>:<sp/>m_cache_len<sp/>(rhs.m_cache_len),</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>m_allcache<sp/>(std::move<sp/>(rhs.m_allcache))</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>m_cache[0]<sp/>=<sp/>rhs.m_cache[0];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>m_cache[1]<sp/>=<sp/>rhs.m_cache[1];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>rhs.m_cache[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>rhs.m_cache[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>rhs.m_cache_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">AuxVectorData::Cache&amp;<sp/>AuxVectorData::Cache::operator=<sp/>(Cache&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache_len<sp/>=<sp/>rhs.m_cache_len;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>m_allcache<sp/>=<sp/>std::move<sp/>(rhs.m_allcache);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache[0]<sp/>=<sp/>rhs.m_cache[0];</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache[1]<sp/>=<sp/>rhs.m_cache[1];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_cache[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_cache[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_cache_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">AuxVectorData::Cache::~Cache()</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1aea4d64e4a85beda13d1243ece5d210e2" kindref="member" tooltip="Swap this instance with another.">AuxVectorData::Cache::swap</ref><sp/>(Cache&amp;<sp/>other)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>m_allcache.swap<sp/>(other.m_allcache);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1aea4d64e4a85beda13d1243ece5d210e2" kindref="member" tooltip="Swap this instance with another.">std::swap</ref><sp/>(m_cache,<sp/>other.m_cache);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1aea4d64e4a85beda13d1243ece5d210e2" kindref="member" tooltip="Swap this instance with another.">std::swap</ref><sp/>(m_cache_len,<sp/>other.m_cache_len);</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuxVectorData::Cache::clear()</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>m_allcache.size();<sp/>i++)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>m_allcache[i];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>m_allcache.clear();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>m_cache[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>m_cache[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>m_cache_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuxVectorData::Cache::store<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>be<sp/>holding<sp/>the<sp/>container<sp/>lock<sp/>m_mutex<sp/>to<sp/>call<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(auxid<sp/>&gt;=<sp/>m_cache_len)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>expand<sp/>the<sp/>cache<sp/>vector.<sp/><sp/><sp/>Allocate<sp/>a<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newlen<sp/>=</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::max<sp/>(static_cast&lt;SG::auxid_t&gt;(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a95f42871b1d206674b8f49a8cd73ae55" kindref="member" tooltip="Minimum length to use for the cache vector.">AuxVectorData::s_minCacheLen</ref>),</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(auxid+1)*3/2);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>newcache<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*[newlen];</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>m_allcache.push_back<sp/>(newcache);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>oldcache<sp/>=<sp/>m_cache[0];</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>old<sp/>vector<sp/>to<sp/>the<sp/>new<sp/>one<sp/>and<sp/>clear<sp/>the<sp/>remainder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy<sp/>(oldcache,<sp/>oldcache<sp/>+<sp/>m_cache_len,<sp/>newcache);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fill<sp/>(newcache<sp/>+<sp/>m_cache_len,<sp/>newcache<sp/>+<sp/>newlen,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;void*&gt;(0));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>so<sp/>that<sp/>other<sp/>threads<sp/>can<sp/>see<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>stores<sp/>to<sp/>m_cache<sp/>must<sp/>happen<sp/>before<sp/>the<sp/>store<sp/>to<sp/>m_cache_len;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>a<sp/>fence<sp/>to<sp/>ensure<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache[0]<sp/>=<sp/>newcache;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache[1]<sp/>=<sp/>newcache;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>AthContainers_detail::fence_seq_cst();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache_len<sp/>=<sp/>newlen;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>room<sp/>in<sp/>the<sp/>cache<sp/>vector<sp/>now.<sp/><sp/>Store<sp/>the<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>m_cache[0][auxid]<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a4379058b2eb0522291c4c20076ef7967" kindref="member" tooltip="Lock the container.">AuxVectorData::lock</ref>()</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_store)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>m_store-&gt;<ref refid="d3/dd5/classSG_1_1IConstAuxStore_1a6bf19cb8961665a0d4672e2d4f719aa5" kindref="member" tooltip="Lock the container.">lock</ref>();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a5d6d9eefd8811b373b3eeda823e5c0ad" kindref="member" tooltip="Clear the cached aux data pointers.">clearCache</ref>();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>error<sp/>if<sp/>no<sp/>store<sp/>or<sp/>no<sp/>writable<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a35c86d28fd74648ddae868dc5fa005d2" kindref="member" tooltip="Clear all decorations.">AuxVectorData::clearDecorations</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="539"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_store)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>m_store-&gt;<ref refid="d3/dd5/classSG_1_1IConstAuxStore_1ab3dec2e6bc75789344ec9d31c8b8a3c3" kindref="member" tooltip="Clear all decorations.">clearDecorations</ref>();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache.clear();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>m_constCache.clear();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>m_decorCache.clear();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>whole<sp/>point<sp/>of<sp/>decorations<sp/>is<sp/>to<sp/>allow<sp/>adding<sp/>information<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>that&apos;s<sp/>otherwise<sp/>const.<sp/><sp/>So<sp/>we<sp/>have<sp/>the<sp/>const_cast<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>store<sp/>object<sp/>is<sp/>responsible<sp/>for<sp/>determining<sp/>whether<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modification<sp/>is<sp/>really<sp/>allowed<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>IConstAuxStore*<sp/>store<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">IConstAuxStore*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>());</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>store-&gt;clearDecorations();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref><sp/>(</highlight><highlight class="stringliteral">&quot;lock&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="563"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">StatusCode<sp/><ref refid="d9/df2/AuxVectorData_8h_1ad062e46af68e633b0588725c9b6e33da" kindref="member" tooltip="Propagate thinning. Called after applying thinning to in.">thinningHook</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">SG::AuxVectorData</ref>*<sp/>in,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IThinningSvc*<sp/>svc,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IThinningSvc::Filter_t&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IThinningSvc::Operator::Type<sp/>op<sp/>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/>store<sp/>=<sp/>in-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store<sp/>&amp;&amp;<sp/>svc-&gt;deep_proxy<sp/>(store))</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>svc-&gt;typelessFilter<sp/>(store,<sp/>filter,<sp/>op);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>XAOD_STANDALONE</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx"/>
  </compounddef>
</doxygen>
