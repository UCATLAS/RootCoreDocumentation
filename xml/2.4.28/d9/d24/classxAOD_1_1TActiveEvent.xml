<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d24/classxAOD_1_1TActiveEvent" kind="class" prot="public">
    <compoundname>xAOD::TActiveEvent</compoundname>
    <includes refid="dd/d8e/TActiveEvent_8h" local="no">TActiveEvent.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d9/d24/classxAOD_1_1TActiveEvent_1a8c623db1a717712c7c4b6fa671f5f345" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TEvent</definition>
        <argsstring></argsstring>
        <name>TEvent</name>
        <briefdescription>
<para>Allow the <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">TEvent</ref> class to register itself at the right time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccessInterfaces/xAODRootAccessInterfaces/TActiveEvent.h" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccessInterfaces/xAODRootAccessInterfaces/TActiveEvent.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d9/d24/classxAOD_1_1TActiveEvent_1ac7fa3bf2dc068d3820a28e439240d323" prot="private" static="yes" mutable="no">
        <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">TVirtualEvent</ref> *</type>
        <definition>TVirtualEvent * xAOD::TActiveEvent::s_event</definition>
        <argsstring></argsstring>
        <name>s_event</name>
        <initializer> 0</initializer>
        <briefdescription>
<para>Pointer to the currently active <ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">TVirtualEvent</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccessInterfaces/xAODRootAccessInterfaces/TActiveEvent.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccessInterfaces/xAODRootAccessInterfaces/TActiveEvent.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d9/d24/classxAOD_1_1TActiveEvent_1acf82b8412c53246d2088c7d064c04654" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">TVirtualEvent</ref> *</type>
        <definition>TVirtualEvent * xAOD::TActiveEvent::event</definition>
        <argsstring>()</argsstring>
        <name>event</name>
        <briefdescription>
<para>Access the currently active <ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">TVirtualEvent</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccessInterfaces/xAODRootAccessInterfaces/TActiveEvent.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccessInterfaces/Root/TActiveEvent.cxx" bodystart="11" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class for finding the active <ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">TVirtualEvent</ref> object. </para>    </briefdescription>
    <detaileddescription>
<para>The idea here is very similar to the one in <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref>. Some code needs to access the currently &quot;active&quot; event, without receiving a pointer/reference to the event directly. This code always makes sure that the currently active <ref refid="de/daf/classxAOD_1_1TVirtualEvent" kindref="compound">TVirtualEvent</ref> object is returned to the user. (In case multiple <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">TEvent</ref> objects are being used to read multiple input files at the same time.)</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>594923 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-04-30 15:28:05 +0200 (Wed, 30 Apr 2014) </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="17948">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="17947">
        <label>xAOD::TActiveEvent</label>
        <link refid="d9/d24/classxAOD_1_1TActiveEvent"/>
        <childnode refid="17948" relation="usage">
          <edgelabel>s_event</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccessInterfaces/xAODRootAccessInterfaces/TActiveEvent.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccessInterfaces/xAODRootAccessInterfaces/TActiveEvent.h" bodystart="26" bodyend="39"/>
    <listofallmembers>
      <member refid="d9/d24/classxAOD_1_1TActiveEvent_1acf82b8412c53246d2088c7d064c04654" prot="public" virt="non-virtual"><scope>xAOD::TActiveEvent</scope><name>event</name></member>
      <member refid="d9/d24/classxAOD_1_1TActiveEvent_1ac7fa3bf2dc068d3820a28e439240d323" prot="private" virt="non-virtual"><scope>xAOD::TActiveEvent</scope><name>s_event</name></member>
      <member refid="d9/d24/classxAOD_1_1TActiveEvent_1a8c623db1a717712c7c4b6fa671f5f345" prot="private" virt="non-virtual"><scope>xAOD::TActiveEvent</scope><name>TEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
