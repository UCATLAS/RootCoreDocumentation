<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d14/classtesting_1_1SafeMatcherCastImpl" kind="class" prot="public">
    <compoundname>testing::SafeMatcherCastImpl</compoundname>
    <templateparamlist>
      <param>
        <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d9/d14/classtesting_1_1SafeMatcherCastImpl_1a33bbaca8527fbe4578c4d4f587c352c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d8/d55/structM" kindref="compound">M</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d9/d0a/classtesting_1_1Matcher" kindref="compound">Matcher</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;</type>
        <definition>static Matcher&lt;T&gt; testing::SafeMatcherCastImpl&lt; T &gt;::Cast</definition>
        <argsstring>(const M &amp;polymorphic_matcher_or_value)</argsstring>
        <name>Cast</name>
        <param>
          <type>const <ref refid="d8/d55/structM" kindref="compound">M</ref> &amp;</type>
          <declname>polymorphic_matcher_or_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-matchers.h" line="627" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-matchers.h" bodystart="627" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="d9/d14/classtesting_1_1SafeMatcherCastImpl_1ae1f5b080c029596926e73d0d5861981f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="d9/d0a/classtesting_1_1Matcher" kindref="compound">Matcher</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;</type>
        <definition>static Matcher&lt;T&gt; testing::SafeMatcherCastImpl&lt; T &gt;::Cast</definition>
        <argsstring>(const Matcher&lt; U &gt; &amp;matcher)</argsstring>
        <name>Cast</name>
        <param>
          <type>const <ref refid="d9/d0a/classtesting_1_1Matcher" kindref="compound">Matcher</ref>&lt; U &gt; &amp;</type>
          <declname>matcher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-matchers.h" line="641" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-matchers.h" bodystart="641" bodyend="661"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-matchers.h" line="622" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-matchers.h" bodystart="622" bodyend="662"/>
    <listofallmembers>
      <member refid="d9/d14/classtesting_1_1SafeMatcherCastImpl_1a33bbaca8527fbe4578c4d4f587c352c9" prot="public" virt="non-virtual"><scope>testing::SafeMatcherCastImpl</scope><name>Cast</name></member>
      <member refid="d9/d14/classtesting_1_1SafeMatcherCastImpl_1ae1f5b080c029596926e73d0d5861981f" prot="public" virt="non-virtual"><scope>testing::SafeMatcherCastImpl</scope><name>Cast</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
