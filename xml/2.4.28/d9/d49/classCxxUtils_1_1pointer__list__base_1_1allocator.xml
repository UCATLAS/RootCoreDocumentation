<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator" kind="class" prot="public">
    <compoundname>CxxUtils::pointer_list_base::allocator</compoundname>
    <derivedcompoundref refid="d2/dde/classCxxUtils_1_1pointer__list_1_1allocator" prot="public" virt="non-virtual">CxxUtils::pointer_list&lt; NELT &gt;::allocator</derivedcompoundref>
    <includes refid="df/d5b/pointer__list_8h" local="no">pointer_list.h</includes>
    <innerclass refid="de/d3c/structCxxUtils_1_1pointer__list__base_1_1allocator_1_1chunk" prot="private">CxxUtils::pointer_list_base::allocator::chunk</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1ab85945b1ae72c5ed2dd677d1e27ab71f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t CxxUtils::pointer_list_base::allocator::m_nelt</definition>
        <argsstring></argsstring>
        <name>m_nelt</name>
        <briefdescription>
<para>Number of elements per block (excluding the end-pointer). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="140" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a71c9bbf66fe6ff0a1419ae68f8b9832a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t CxxUtils::pointer_list_base::allocator::m_nblock</definition>
        <argsstring></argsstring>
        <name>m_nblock</name>
        <briefdescription>
<para>Number of blocks per chunk. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1aa23d0a7d5f2c7266d140781d8c2497ec" prot="private" static="no" mutable="no">
        <type>chunk *</type>
        <definition>chunk* CxxUtils::pointer_list_base::allocator::m_chunks</definition>
        <argsstring></argsstring>
        <name>m_chunks</name>
        <briefdescription>
<para>Most recent chunk allocated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="146" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1aef60591cd97360ff5b2720106efffbff" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t CxxUtils::pointer_list_base::allocator::m_nthis</definition>
        <argsstring></argsstring>
        <name>m_nthis</name>
        <briefdescription>
<para>Number of blocks allocated so far from that chunk. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="149" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1ad4d5487e3694cb0b404922a21c5a2220" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t CxxUtils::pointer_list_base::allocator::m_nchunks</definition>
        <argsstring></argsstring>
        <name>m_nchunks</name>
        <briefdescription>
<para>Current number of allocated chunks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="152" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a09217ee407a31cbd3a7aae1dd2a5da4e" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CxxUtils::pointer_list_base::allocator::m_end_mask</definition>
        <argsstring></argsstring>
        <name>m_end_mask</name>
        <briefdescription>
<para>Mask for testing for an end pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="155" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1ad8afc71d8b7ebab2eb053495f360c7eb" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CxxUtils::pointer_list_base::allocator::m_end_offs</definition>
        <argsstring></argsstring>
        <name>m_end_offs</name>
        <briefdescription>
<para>Offset for testing for an end pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="158" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a156f16467a071282081194b293dd43e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CxxUtils::pointer_list_base::allocator::allocator</definition>
        <argsstring>(size_t nelt, size_t nblock, unsigned long end_mask, unsigned long end_offs)</argsstring>
        <name>allocator</name>
        <param>
          <type>size_t</type>
          <declname>nelt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nblock</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>end_mask</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>end_offs</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nelt</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of pointers per block (excluding the end pointer). Must be one less than a power of two. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nblock</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to allocate per chunk. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask to use for end-of-block test. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to use for end-of-block test.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nelt</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of pointers per block. (excluding the end pointer). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nblock</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to allocate per chunk. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask to use for end-of-block test. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to use for end-of-block test. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="106" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/pointer_list.cxx" bodystart="25" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a9da8fcf7ab6ee39343629dd19d46b9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CxxUtils::pointer_list_base::allocator::~allocator</definition>
        <argsstring>()</argsstring>
        <name>~allocator</name>
        <briefdescription>
<para>Destructor. Deletes all blocks from this <ref refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator" kindref="compound">allocator</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="109" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/pointer_list.cxx" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a1c3a179a632545cbfca821603e35f594" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d02/structCxxUtils_1_1pointer__list__base_1_1list__block" kindref="compound">list_block</ref> *</type>
        <definition>pointer_list_base::list_block * CxxUtils::pointer_list_base::allocator::allocate</definition>
        <argsstring>()</argsstring>
        <name>allocate</name>
        <briefdescription>
<para>Allocate a new block. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="112" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.icc" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a66bf563d60cdcbbafdd1dcae18ecbb21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t CxxUtils::pointer_list_base::allocator::nelt</definition>
        <argsstring>() const </argsstring>
        <name>nelt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of pointers per block (excluding the end-pointer). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="116" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.icc" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a8fe3059d4e568e9cbff5cd49746fe52a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t CxxUtils::pointer_list_base::allocator::nchunks</definition>
        <argsstring>() const </argsstring>
        <name>nchunks</name>
        <briefdescription>
<para>Return the current number of allocated chunks. </para>        </briefdescription>
        <detaileddescription>
<para>Current number of allocated chunks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="119" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.icc" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1af4b432441532660a66c86a330f8e4da8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CxxUtils::pointer_list_base::allocator::at_end</definition>
        <argsstring>(const void *p) const </argsstring>
        <name>at_end</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Test if <ref refid="dc/dec/structP" kindref="compound">P</ref> is pointing at the end-pointer of a block. </para>        </briefdescription>
        <detaileddescription>
<para>Test to see if we&apos;re looking at the end of a block.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to test. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.icc" bodystart="74" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a549ab525d08e493b6eeaf58f20ca89b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CxxUtils::pointer_list_base::allocator::refill</definition>
        <argsstring>()</argsstring>
        <name>refill</name>
        <briefdescription>
<para>Allocate a new chunk of blocks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/pointer_list.cxx" bodystart="58" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Very simple <ref refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator" kindref="compound">allocator</ref> for use with <computeroutput><ref refid="d1/d88/classCxxUtils_1_1pointer__list" kindref="compound">pointer_list</ref></computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>We allocate large chunks and divide them up into <computeroutput>list_block&apos;s</computeroutput>. We don&apos;t support deleting individual elements; instead, everything is deleted when the <ref refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator" kindref="compound">allocator</ref> is. The chunks are chained together to allow for this.</para><para>The total size of a block should be a power of two, and blocks must be aligned to this boundary. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="392">
        <label>CxxUtils::pointer_list&lt; NELT &gt;::allocator</label>
        <link refid="d2/dde/classCxxUtils_1_1pointer__list_1_1allocator"/>
        <childnode refid="391" relation="public-inheritance">
        </childnode>
      </node>
      <node id="391">
        <label>CxxUtils::pointer_list_base::allocator</label>
        <link refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="393">
        <label>CxxUtils::pointer_list_base::allocator</label>
        <link refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator"/>
        <childnode refid="394" relation="usage">
          <edgelabel>m_chunks</edgelabel>
        </childnode>
      </node>
      <node id="395">
        <label>CxxUtils::pointer_list_base::list_block</label>
        <link refid="d8/d02/structCxxUtils_1_1pointer__list__base_1_1list__block"/>
        <childnode refid="396" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="394">
        <label>CxxUtils::pointer_list_base::allocator::chunk</label>
        <childnode refid="394" relation="usage">
          <edgelabel>m_next</edgelabel>
        </childnode>
        <childnode refid="395" relation="usage">
          <edgelabel>m_blocks</edgelabel>
        </childnode>
      </node>
      <node id="396">
        <label>void</label>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/pointer_list.h" bodystart="91" bodyend="159"/>
    <listofallmembers>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a1c3a179a632545cbfca821603e35f594" prot="public" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>allocate</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a156f16467a071282081194b293dd43e4" prot="public" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>allocator</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1af4b432441532660a66c86a330f8e4da8" prot="public" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>at_end</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1aa23d0a7d5f2c7266d140781d8c2497ec" prot="private" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>m_chunks</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a09217ee407a31cbd3a7aae1dd2a5da4e" prot="private" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>m_end_mask</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1ad8afc71d8b7ebab2eb053495f360c7eb" prot="private" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>m_end_offs</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a71c9bbf66fe6ff0a1419ae68f8b9832a" prot="private" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>m_nblock</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1ad4d5487e3694cb0b404922a21c5a2220" prot="private" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>m_nchunks</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1ab85945b1ae72c5ed2dd677d1e27ab71f" prot="private" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>m_nelt</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1aef60591cd97360ff5b2720106efffbff" prot="private" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>m_nthis</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a8fe3059d4e568e9cbff5cd49746fe52a" prot="public" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>nchunks</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a66bf563d60cdcbbafdd1dcae18ecbb21" prot="public" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>nelt</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a549ab525d08e493b6eeaf58f20ca89b1" prot="private" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>refill</name></member>
      <member refid="d9/d49/classCxxUtils_1_1pointer__list__base_1_1allocator_1a9da8fcf7ab6ee39343629dd19d46b9cf" prot="public" virt="non-virtual"><scope>CxxUtils::pointer_list_base::allocator</scope><name>~allocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
