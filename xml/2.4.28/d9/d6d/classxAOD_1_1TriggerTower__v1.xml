<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d6d/classxAOD_1_1TriggerTower__v1" kind="class" prot="public">
    <compoundname>xAOD::TriggerTower_v1</compoundname>
    <basecompoundref refid="dc/db0/classSG_1_1AuxElement" prot="public" virt="non-virtual">SG::AuxElement</basecompoundref>
    <includes refid="db/d92/TriggerTower__v1_8h" local="no">TriggerTower_v1.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a2c6d844f30d345cf18a7a097b1321e68" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int xAOD::TriggerTower_v1::m_saturation</definition>
        <argsstring></argsstring>
        <name>m_saturation</name>
        <initializer> 255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="158" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a8474bc944ba2c7a766e4b9385d0a5641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::TriggerTower_v1::TriggerTower_v1</definition>
        <argsstring>()</argsstring>
        <name>TriggerTower_v1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a9c2bab10bfdf9f7aaf138bd1d7127fc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::TriggerTower_v1::emLUT</definition>
        <argsstring>() const </argsstring>
        <name>emLUT</name>
        <briefdescription>
<para>get EM energy for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a806c49027dfdad65f64550645182afb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setEmLUT</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>setEmLUT</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>set EM energy for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ac6b50c84709d219b7c6783116f98ce0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::TriggerTower_v1::hadLUT</definition>
        <argsstring>() const </argsstring>
        <name>hadLUT</name>
        <briefdescription>
<para>get HAD energy for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a8274241cb166a761e3bb52099e3f9aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setHadLUT</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>setHadLUT</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>set HAD energy for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ad1d9d87f9bca45dae6654786af733e8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::TriggerTower_v1::emADC</definition>
        <argsstring>() const </argsstring>
        <name>emADC</name>
        <briefdescription>
<para>get EM ADC for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a46e20dfdff7281008c5d43811b0a1e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setEmADC</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>setEmADC</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>set EM ADC for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a5128767b95bf8f96bbf16434c5673b05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::TriggerTower_v1::hadADC</definition>
        <argsstring>() const </argsstring>
        <name>hadADC</name>
        <briefdescription>
<para>get HAD ADC for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a66c1e8e509601148f462330e327c3421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setHadADC</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>setHadADC</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>set HAD ADC for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1afa31a710450eec8628105867cee7f345" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::TriggerTower_v1::emBCIDvec</definition>
        <argsstring>() const </argsstring>
        <name>emBCIDvec</name>
        <briefdescription>
<para>get EM BCID for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1af8b643a30de8ed22df5d68234dd651d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setEmBCIDvec</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>setEmBCIDvec</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>set EM BCID for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="67"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a76b23ea7466b458b9a5f2f143921e703" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::TriggerTower_v1::hadBCIDvec</definition>
        <argsstring>() const </argsstring>
        <name>hadBCIDvec</name>
        <briefdescription>
<para>get HAD BCID for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a989396ea9ffeb2597a432cd08eb0a1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setHadBCIDvec</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>setHadBCIDvec</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>set HAD BCID for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="72"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ad58eb934caf4c2c1013230d1dd4fb623" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::TriggerTower_v1::emBCIDext</definition>
        <argsstring>() const </argsstring>
        <name>emBCIDext</name>
        <briefdescription>
<para>get EM extBCID for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1aa1b0cdf7dfc76184d9a3fdbfc2cd2edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setEmBCIDext</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>setEmBCIDext</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>set EM extBCID for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="77"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a412f4d0c2466680f21c34a48ab0b954b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::TriggerTower_v1::hadBCIDext</definition>
        <argsstring>() const </argsstring>
        <name>hadBCIDext</name>
        <briefdescription>
<para>get HAD extBCID for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a71ab5d75e0ceccaae00689940c916cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setHadBCIDext</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;)</argsstring>
        <name>setHadBCIDext</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
<para>set HAD extBCID for all time slices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ae79b7188013037c44f56ba8a2f8d941f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::TriggerTower_v1::phi</definition>
        <argsstring>() const </argsstring>
        <name>phi</name>
        <briefdescription>
<para>get phi (note that for L1Calo phi runs from 0 to 2pi) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a410210b1bac588092ac2d79d8e4c551c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setPhi</definition>
        <argsstring>(float)</argsstring>
        <name>setPhi</name>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
<para>set phi </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1aa6e261bde13cca13299794eb099d7ab6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::TriggerTower_v1::eta</definition>
        <argsstring>() const </argsstring>
        <name>eta</name>
        <briefdescription>
<para>get eta </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a45d82f73a965748436f65ee4ff02052e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setEta</definition>
        <argsstring>(float)</argsstring>
        <name>setEta</name>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
<para>set eta </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ae21c6b8e7a9efb05dfdc18a20ff5f816" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int xAOD::TriggerTower_v1::key</definition>
        <argsstring>() const </argsstring>
        <name>key</name>
        <briefdescription>
<para>get key of TT </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="95"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a8ea90b4aa299fb74913fe71efd3d45cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setKey</definition>
        <argsstring>(unsigned int)</argsstring>
        <name>setKey</name>
        <param>
          <type>unsigned</type>
          <declname>int</declname>
        </param>
        <briefdescription>
<para>set key of TT </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ace4a5d6932cb130d00fbadac4fa54985" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::emError</definition>
        <argsstring>() const </argsstring>
        <name>emError</name>
        <briefdescription>
<para>get EM error </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="100"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1acf542ea341a60e65ecb7595d13cc80f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setEmError</definition>
        <argsstring>(int)</argsstring>
        <name>setEmError</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>set EM error </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="102"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a97ba0392ad2f476e7b840ef30c6aeb25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::hadError</definition>
        <argsstring>() const </argsstring>
        <name>hadError</name>
        <briefdescription>
<para>get HAD error </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ade6aa7dc913a8847f31fa6d63ae90408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setHadError</definition>
        <argsstring>(int)</argsstring>
        <name>setHadError</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>set HAD error </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ab779b4dac4a8018d13c33441c4c116cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::emPeak</definition>
        <argsstring>() const </argsstring>
        <name>emPeak</name>
        <briefdescription>
<para>get EM peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a7862ed2541a652f4196a53f148d9cff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setEmPeak</definition>
        <argsstring>(int)</argsstring>
        <name>setEmPeak</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>set EM peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1aba64c9eccc63176975357a5624b20553" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::emADCPeak</definition>
        <argsstring>() const </argsstring>
        <name>emADCPeak</name>
        <briefdescription>
<para>get EM ADC peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a6d2a9965ac43d3c9acad3b9009e43f8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setEmADCPeak</definition>
        <argsstring>(int)</argsstring>
        <name>setEmADCPeak</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>set EM ADC peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a9785312f444eac151711181886867756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::hadPeak</definition>
        <argsstring>() const </argsstring>
        <name>hadPeak</name>
        <briefdescription>
<para>get HAD peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1af036a7b7e4bd96831af4c83b22a698c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setHadPeak</definition>
        <argsstring>(int)</argsstring>
        <name>setHadPeak</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>set HAD peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1aeab3ff2dca770bb2f1792fc7c0a2259d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::hadADCPeak</definition>
        <argsstring>() const </argsstring>
        <name>hadADCPeak</name>
        <briefdescription>
<para>get HAD ADC peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a033a54d08f73562862d26a61d94a5568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setHadADCPeak</definition>
        <argsstring>(int)</argsstring>
        <name>setHadADCPeak</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>set HAD ADC peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a8efcf1152d9e2e8cfcbc2af4a9e59824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::addEM</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;digits, const std::vector&lt; int &gt; &amp;et, const std::vector&lt; int &gt; &amp;digits_bcid, const std::vector&lt; int &gt; &amp;bcid, int error, int peak, int adc_peak)</argsstring>
        <name>addEM</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>digits</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>et</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>digits_bcid</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>peak</declname>
        </param>
        <param>
          <type>int</type>
          <declname>adc_peak</declname>
        </param>
        <briefdescription>
<para>Fill EM towers with digits, calibrated ET vectors and status flags. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="35" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a6b4c5f859d62ac577f42732e980872af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::addHad</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;digits, const std::vector&lt; int &gt; &amp;et, const std::vector&lt; int &gt; &amp;digits_bcid, const std::vector&lt; int &gt; &amp;bcid, int error, int peak, int adc_peak)</argsstring>
        <name>addHad</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>digits</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>et</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>digits_bcid</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>peak</declname>
        </param>
        <param>
          <type>int</type>
          <declname>adc_peak</declname>
        </param>
        <briefdescription>
<para>Fill HAD towers with digits, calibrated ET vectors and status flags. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="137" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="49" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1aa5c339012bf2de9f6c3ac0db6f79a462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TriggerTower_v1::setCoord</definition>
        <argsstring>(double eta, double phi)</argsstring>
        <name>setCoord</name>
        <param>
          <type>double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>Specify the location of tower. Internally calls <ref refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a45d82f73a965748436f65ee4ff02052e" kindref="member">setEta()</ref>;<ref refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a410210b1bac588092ac2d79d8e4c551c" kindref="member">setPhi()</ref>;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="140" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1adf9151032493adcadbd33057542037db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::emEnergy</definition>
        <argsstring>() const </argsstring>
        <name>emEnergy</name>
        <briefdescription>
<para>Final EM energy value used by the algorithms. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a4531cef375b065438496a621e27b6adb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::hadEnergy</definition>
        <argsstring>() const </argsstring>
        <name>hadEnergy</name>
        <briefdescription>
<para>Final HAD energy value used by the algorithms. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="145" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a1fd76612a5feb0733229ae4ce427546b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::emBCID</definition>
        <argsstring>() const </argsstring>
        <name>emBCID</name>
        <briefdescription>
<para>get EM BCID at peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="148" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="82" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1ac54c377d40ef1dcbb3ca67faf7192693" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::TriggerTower_v1::hadBCID</definition>
        <argsstring>() const </argsstring>
        <name>hadBCID</name>
        <briefdescription>
<para>get HAD BCID at peak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="150" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1adeb4d9cc2de6b52c333e2a71b335e63e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TriggerTower_v1::isEMSaturated</definition>
        <argsstring>() const </argsstring>
        <name>isEMSaturated</name>
        <briefdescription>
<para>Is EM saturated? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="153" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="104" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="d9/d6d/classxAOD_1_1TriggerTower__v1_1a144cea53266d55b6d3ffa1b7b830bbc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TriggerTower_v1::isHadSaturated</definition>
        <argsstring>() const </argsstring>
        <name>isHadSaturated</name>
        <briefdescription>
<para>Is HAD saturated? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="155" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx" bodystart="117" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Description of <ref refid="d9/d6d/classxAOD_1_1TriggerTower__v1" kindref="compound">TriggerTower_v1</ref></para><para><simplesect kind="author"><para>John Morris &lt;<ulink url="mailto:john.morris@cern.ch">john.morris@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>631127 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-11-26 10:54:48 +0100 (Wed, 26 Nov 2014) </para></simplesect>
</para><para>Trigger towers are the inputs to all other parts of the calorimeter trigger. They are formed by analogue summation of cells (represented in simulation by LArTTL1 and TileTTL1 objects). The L1Calo PreProcessor digitizes these, performs Bunch-Crossing IDentification, final calibration and reduction to 8 bit words.</para><para>The TriggerTower class represents the output of the PreProcessor. Each TriggerTower object actually contains information from a pair of trigger towers, one EM and one Hadronic, sharing the same eta, phi coordinates. This is convenient for algorithm emulation, though it does not represent the readout arrangement.</para><para>For each tower, the TriggerTower contains the final ET (LUT output) as well as a vector of ADC data (at 25ns intervals) from which it was formed, plus error flags and raw BCID output. As the PreProcessor readout can read variable numbers of slices of all of these data, the internal storage is in std::vectors, and methods exist to return all slices as well as just the data corresponding to the triggered crossing. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="21059">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="21057">
        <label>xAOD::TriggerTower_v1</label>
        <link refid="d9/d6d/classxAOD_1_1TriggerTower__v1"/>
        <childnode refid="21058" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21058">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="21059" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="21073">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="21074">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="21069">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="21078">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="21063" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21072">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="21073" relation="public-inheritance">
        </childnode>
        <childnode refid="21074" relation="public-inheritance">
        </childnode>
        <childnode refid="21075" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21067">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="21068">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="21062">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="21065">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="21066">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="21067" relation="public-inheritance">
        </childnode>
        <childnode refid="21068" relation="public-inheritance">
        </childnode>
        <childnode refid="21069" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="21065" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="21060">
        <label>xAOD::TriggerTower_v1</label>
        <link refid="d9/d6d/classxAOD_1_1TriggerTower__v1"/>
        <childnode refid="21061" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21064">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="21065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21071">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="21072" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21075">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="21076">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="21077" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="21070">
        <label>mutex</label>
      </node>
      <node id="21061">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="21062" relation="public-inheritance">
        </childnode>
        <childnode refid="21063" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="21078" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="21077">
        <label>void</label>
      </node>
      <node id="21063">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="21064" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="21066" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="21065" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="21070" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="21071" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="21076" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/xAODTrigL1Calo/versions/TriggerTower_v1.h" bodystart="39" bodyend="160"/>
    <listofallmembers>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a8efcf1152d9e2e8cfcbc2af4a9e59824" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>addEM</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a6b4c5f859d62ac577f42732e980872af" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>addHad</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a7aaa8e9eb54091ab7ee43bb7c73918e4" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5279e0349d690c26121f60b5a8778322" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>clearDecorations</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>container</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ad1d9d87f9bca45dae6654786af733e8f" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emADC</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1aba64c9eccc63176975357a5624b20553" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emADCPeak</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a1fd76612a5feb0733229ae4ce427546b" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emBCID</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ad58eb934caf4c2c1013230d1dd4fb623" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emBCIDext</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1afa31a710450eec8628105867cee7f345" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emBCIDvec</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1adf9151032493adcadbd33057542037db" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emEnergy</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ace4a5d6932cb130d00fbadac4fa54985" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emError</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a9c2bab10bfdf9f7aaf138bd1d7127fc3" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emLUT</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ab779b4dac4a8018d13c33441c4c116cc" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>emPeak</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1aa6e261bde13cca13299794eb099d7ab6" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>eta</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>getConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>getStore</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a5128767b95bf8f96bbf16434c5673b05" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadADC</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1aeab3ff2dca770bb2f1792fc7c0a2259d" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadADCPeak</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ac54c377d40ef1dcbb3ca67faf7192693" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadBCID</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a412f4d0c2466680f21c34a48ab0b954b" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadBCIDext</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a76b23ea7466b458b9a5f2f143921e703" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadBCIDvec</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a4531cef375b065438496a621e27b6adb" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadEnergy</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a97ba0392ad2f476e7b840ef30c6aeb25" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadError</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ac6b50c84709d219b7c6783116f98ce0f" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadLUT</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a9785312f444eac151711181886867756" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hadPeak</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>IAuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>index</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af727b22ab51f1d848fc3cf59065b99ea" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>isAvailable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a864fc1dab026cbcf20b2c7e3904b89a4" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1adeb4d9cc2de6b52c333e2a71b335e63e" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>isEMSaturated</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a144cea53266d55b6d3ffa1b7b830bbc3" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>isHadSaturated</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ae21c6b8e7a9efb05dfdc18a20ff5f816" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>key</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a2c6d844f30d345cf18a7a097b1321e68" prot="private" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>m_saturation</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>operator=</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ae79b7188013037c44f56ba8a2f8d941f" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>phi</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>releasePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setConstStore</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1aa5c339012bf2de9f6c3ac0db6f79a462" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setCoord</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a46e20dfdff7281008c5d43811b0a1e67" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setEmADC</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a6d2a9965ac43d3c9acad3b9009e43f8e" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setEmADCPeak</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1aa1b0cdf7dfc76184d9a3fdbfc2cd2edf" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setEmBCIDext</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1af8b643a30de8ed22df5d68234dd651d9" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setEmBCIDvec</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1acf542ea341a60e65ecb7595d13cc80f9" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setEmError</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a806c49027dfdad65f64550645182afb3" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setEmLUT</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a7862ed2541a652f4196a53f148d9cff4" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setEmPeak</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a45d82f73a965748436f65ee4ff02052e" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setEta</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a66c1e8e509601148f462330e327c3421" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setHadADC</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a033a54d08f73562862d26a61d94a5568" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setHadADCPeak</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a71ab5d75e0ceccaae00689940c916cab" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setHadBCIDext</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a989396ea9ffeb2597a432cd08eb0a1c9" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setHadBCIDvec</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1ade6aa7dc913a8847f31fa6d63ae90408" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setHadError</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a8274241cb166a761e3bb52099e3f9aae" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setHadLUT</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1af036a7b7e4bd96831af4c83b22a698c0" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setHadPeak</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a8ea90b4aa299fb74913fe71efd3d45cc" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setKey</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setNonConstStore</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a410210b1bac588092ac2d79d8e4c551c" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setPhi</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="d9/d6d/classxAOD_1_1TriggerTower__v1_1a8474bc944ba2c7a766e4b9385d0a5641" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>TriggerTower_v1</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::TriggerTower_v1</scope><name>~AuxElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
