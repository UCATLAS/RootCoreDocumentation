<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d00/TLumiBlockRange_8cxx" kind="file">
    <compoundname>TLumiBlockRange.cxx</compoundname>
    <includes refid="d9/df8/TLumiBlockRange_8h" local="yes">GoodRunsLists/TLumiBlockRange.h</includes>
    <includes refid="db/db8/TMsgLogger_8h" local="yes">GoodRunsLists/TMsgLogger.h</includes>
    <incdepgraph>
      <node id="135069">
        <label>string</label>
      </node>
      <node id="135071">
        <label>map</label>
      </node>
      <node id="135068">
        <label>GoodRunsLists/TMsgLogger.h</label>
        <link refid="db/db8/TMsgLogger_8h_source"/>
        <childnode refid="135069" relation="include">
        </childnode>
        <childnode refid="135070" relation="include">
        </childnode>
        <childnode refid="135071" relation="include">
        </childnode>
        <childnode refid="135066" relation="include">
        </childnode>
        <childnode refid="135072" relation="include">
        </childnode>
      </node>
      <node id="135065">
        <label>GoodRunsLists/TLumiBlockRange.h</label>
        <link refid="d9/df8/TLumiBlockRange_8h_source"/>
        <childnode refid="135066" relation="include">
        </childnode>
        <childnode refid="135067" relation="include">
        </childnode>
      </node>
      <node id="135066">
        <label>TObject.h</label>
      </node>
      <node id="135067">
        <label>vector</label>
      </node>
      <node id="135064">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TLumiBlockRange.cxx</label>
        <link refid="TLumiBlockRange.cxx"/>
        <childnode refid="135065" relation="include">
        </childnode>
        <childnode refid="135068" relation="include">
        </childnode>
      </node>
      <node id="135070">
        <label>sstream</label>
      </node>
      <node id="135072">
        <label>TString.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d9/d00/TLumiBlockRange_8cxx_1ac82e2300af020add042b3c96e0ef6f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(Root::TLumiBlockRange) Root</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TLumiBlockRange.cxx" line="12" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TLumiBlockRange.cxx" bodystart="5" bodyend="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TLumiBlockRange.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TMsgLogger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">ClassImp(<ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">Root::TLumiBlockRange::TLumiBlockRange()</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>:<sp/>TObject()</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>,<sp/>m_begin(0)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>,<sp/>m_end(2147483647)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">Root::TLumiBlockRange::TLumiBlockRange(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>end<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>:<sp/>TObject()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>,<sp/>m_begin(begin)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>,<sp/>m_end(end)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">Root::TLumiBlockRange::~TLumiBlockRange()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">Root::TLumiBlockRange::TLumiBlockRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>:<sp/>TObject(other)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>,<sp/>m_begin(other.m_begin)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>,<sp/>m_end(other.m_end)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>&amp;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">Root::TLumiBlockRange::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;other==</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this<sp/>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>m_begin<sp/>=<sp/>other.m_begin<sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>m_end<sp/>=<sp/>other.m_end<sp/>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this<sp/>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal">Root::TLumiBlockRange::GetOverlapWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLumiBlockRange&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>Int_t<sp/>begin<sp/>=<sp/>(<sp/>this-&gt;Begin()&gt;=other.Begin()<sp/>?<sp/>this-&gt;Begin()<sp/>:<sp/>other.Begin()<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>Int_t<sp/>end<sp/><sp/><sp/>=<sp/>(<sp/>this-&gt;End()&lt;=other.End()<sp/>?<sp/>this-&gt;End()<sp/>:<sp/>other.End()<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>(begin,end);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Root::TLumiBlockRange&gt;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">Root::TLumiBlockRange::GetPartOnlyIn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="61"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other.GetPartNotIn(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Root::TLumiBlockRange&gt;<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal">Root::TLumiBlockRange::GetPartNotIn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>std::vector&lt;Root::TLumiBlockRange&gt;<sp/>notinother;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>Int_t<sp/>begin(-1),<sp/>end(-1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other.Begin()&gt;this-&gt;Begin()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>this-&gt;Begin()<sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>(<sp/>other.Begin()&gt;this-&gt;End()<sp/>?<sp/>this-&gt;End()<sp/>:<sp/>other.Begin()-1<sp/>)<sp/>;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end&gt;=begin)<sp/>notinother.push_back(<sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>(begin,end)<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other.End()&lt;this-&gt;End()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>(<sp/>other.End()&gt;=this-&gt;Begin()<sp/>?<sp/>other.End()+1<sp/>:<sp/>this-&gt;Begin()<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>this-&gt;End();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end&gt;=begin)<sp/>notinother.push_back(<sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref>(begin,end)<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>notinother;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">Bool_t<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">Root::TLumiBlockRange::Contains(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>number<sp/>)</highlight><highlight class="keyword"><sp/><sp/>const</highlight></codeline>
<codeline lineno="91"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number&gt;=m_begin<sp/>&amp;&amp;<sp/>number&lt;=m_end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kTRUE;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kFALSE;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">Root::TLumiBlockRange::Summary()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="d1/daa/classRoot_1_1TMsgLogger" kindref="compound">Root::TMsgLogger</ref><sp/>m_logger(</highlight><highlight class="stringliteral">&quot;TLumiBlockRange&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kINFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Begin:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_begin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>End:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_end<sp/>&lt;&lt;<sp/>GEndl;<sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TLumiBlockRange.cxx"/>
  </compounddef>
</doxygen>
