<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/dc7/ut__stream__systematics_8cxx" kind="file">
    <compoundname>ut_stream_systematics.cxx</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">TObject.h</includes>
    <includes local="no">TSystem.h</includes>
    <includes local="no">TFile.h</includes>
    <includes refid="d1/def/SystematicVariation_8h" local="no">PATInterfaces/SystematicVariation.h</includes>
    <includes refid="d4/db8/SystematicSet_8h" local="no">PATInterfaces/SystematicSet.h</includes>
    <includes refid="df/d69/StreamTestWrapper_8h" local="no">PATInterfaces/StreamTestWrapper.h</includes>
    <incdepgraph>
      <node id="226094">
        <label>functional</label>
      </node>
      <node id="226092">
        <label>string</label>
      </node>
      <node id="226093">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="226089" relation="include">
        </childnode>
        <childnode refid="226091" relation="include">
        </childnode>
        <childnode refid="226084" relation="include">
        </childnode>
        <childnode refid="226092" relation="include">
        </childnode>
        <childnode refid="226094" relation="include">
        </childnode>
        <childnode refid="226095" relation="include">
        </childnode>
        <childnode refid="226088" relation="include">
        </childnode>
      </node>
      <node id="226088">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="226089" relation="include">
        </childnode>
        <childnode refid="226090" relation="include">
        </childnode>
        <childnode refid="226091" relation="include">
        </childnode>
        <childnode refid="226092" relation="include">
        </childnode>
      </node>
      <node id="226082">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/ut_stream_systematics.cxx</label>
        <link refid="ut_stream_systematics.cxx"/>
        <childnode refid="226083" relation="include">
        </childnode>
        <childnode refid="226084" relation="include">
        </childnode>
        <childnode refid="226085" relation="include">
        </childnode>
        <childnode refid="226086" relation="include">
        </childnode>
        <childnode refid="226087" relation="include">
        </childnode>
        <childnode refid="226088" relation="include">
        </childnode>
        <childnode refid="226093" relation="include">
        </childnode>
        <childnode refid="226096" relation="include">
        </childnode>
      </node>
      <node id="226089">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="226085">
        <label>TObject.h</label>
      </node>
      <node id="226086">
        <label>TSystem.h</label>
      </node>
      <node id="226084">
        <label>vector</label>
      </node>
      <node id="226087">
        <label>TFile.h</label>
      </node>
      <node id="226090">
        <label>iosfwd</label>
      </node>
      <node id="226083">
        <label>iostream</label>
      </node>
      <node id="226096">
        <label>PATInterfaces/StreamTestWrapper.h</label>
        <link refid="df/d69/StreamTestWrapper_8h_source"/>
        <childnode refid="226084" relation="include">
        </childnode>
        <childnode refid="226085" relation="include">
        </childnode>
        <childnode refid="226088" relation="include">
        </childnode>
        <childnode refid="226093" relation="include">
        </childnode>
      </node>
      <node id="226091">
        <label>set</label>
      </node>
      <node id="226095">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d9/dc7/ut__stream__systematics_8cxx_1a2c3f6775325c30275d11c6abee2db6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int, char **)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>char **</type>
        </param>
        <briefdescription>
<para>Main unit test function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/ut_stream_systematics.cxx" line="21" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/ut_stream_systematics.cxx" bodystart="20" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Author:<sp/>Steve<sp/>Farrell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unit<sp/>test<sp/>for<sp/>the<sp/>streaming<sp/>feature<sp/>of<sp/>the<sp/>Systematics<sp/>objects:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SystematicVariation,<sp/>SystematicSet,<sp/>and<sp/>std::vector&lt;SystematicSet&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TObject.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TSystem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;PATInterfaces/SystematicVariation.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;PATInterfaces/SystematicSet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;PATInterfaces/StreamTestWrapper.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*argc*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/></highlight><highlight class="comment">/*argv*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;running<sp/>ut_stream_systematics&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>std::string<sp/>fileDir<sp/>=</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>gSystem-&gt;ExpandPathName(</highlight><highlight class="stringliteral">&quot;/tmp/$USER/ut_stream_systematics/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::string<sp/>mkdirCommand<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fileDir;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>system(mkdirCommand.c_str());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::string<sp/>fileName<sp/>=<sp/>fileDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;sysStreamTest.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Instantiate<sp/>a<sp/>single<sp/>systematic<sp/>variation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref><sp/>sysVar(</highlight><highlight class="stringliteral">&quot;sys1&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Instantiate<sp/>a<sp/>systematic<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>sysSet;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>sysSet.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref>(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;sys2&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>sysSet.<ref refid="d4/d52/classCP_1_1SystematicSet_1a5c0754cb8a3ab4d64b316ba2ea4497a3" kindref="member" tooltip="description: insert a systematic into the set">insert</ref>(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;sys3&quot;</highlight><highlight class="normal">,<sp/>2));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Instantiate<sp/>a<sp/>list<sp/>of<sp/>systematic<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>std::vector&lt;CP::SystematicSet&gt;<sp/>sysList(3);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>sysList[1].insert(sysSet);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>sysList[2].insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;sys4&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>output<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile<sp/>f(fileName.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;recreate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df0/classSysStreamTest_1_1StreamTestWrapper" kindref="compound">SysStreamTest::StreamTestWrapper</ref><sp/>sysWrapper(sysVar,<sp/>sysSet,<sp/>sysList);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>&quot;Dumping<sp/>systematics<sp/>before<sp/>writing&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sysWrapper.print();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>wrapper<sp/>obj<sp/>to<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>sysWrapper.Write(</highlight><highlight class="stringliteral">&quot;sysWrapper&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>f.Close();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>open<sp/>the<sp/>file<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile<sp/>f(fileName.c_str());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>the<sp/>sys<sp/>obj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df0/classSysStreamTest_1_1StreamTestWrapper" kindref="compound">SysStreamTest::StreamTestWrapper</ref>*<sp/>sysWrapper<sp/>=<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="d7/df0/classSysStreamTest_1_1StreamTestWrapper" kindref="compound">SysStreamTest::StreamTestWrapper</ref>*)<sp/>f.Get(</highlight><highlight class="stringliteral">&quot;sysWrapper&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>&quot;Dumping<sp/>systematics<sp/>after<sp/>reading&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sysWrapper-&gt;print();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>initial<sp/>systematics<sp/>to<sp/>the<sp/>written/read<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sysVar.name()<sp/>!=<sp/>sysWrapper-&gt;sysVar().name()){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sysVar<sp/>names<sp/>don&apos;t<sp/>agree!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sysSet.<ref refid="d4/d52/classCP_1_1SystematicSet_1af01661875334428bad90eb29174a5ae8" kindref="member">name</ref>()<sp/>!=<sp/>sysWrapper-&gt;sysSet().name()){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sysSet<sp/>names<sp/>don&apos;t<sp/>agree!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sysList.size()<sp/>!=<sp/>sysWrapper-&gt;sysList().size()){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sysList<sp/>size<sp/>doesn&apos;t<sp/>agree!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sysList.size();<sp/>++i){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sysList[i].name()<sp/>!=<sp/>sysWrapper-&gt;sysList()[i].name()){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sysList<sp/>name<sp/>doesn&apos;t<sp/>agree!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>f.Close();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/test/ut_stream_systematics.cxx"/>
  </compounddef>
</doxygen>
