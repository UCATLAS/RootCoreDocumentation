<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/df5/TObjectManager_8cxx" kind="file">
    <compoundname>TObjectManager.cxx</compoundname>
    <includes local="no">TBranch.h</includes>
    <includes local="no">TError.h</includes>
    <includes refid="db/dfb/TObjectManager_8h" local="yes">xAODRootAccess/tools/TObjectManager.h</includes>
    <includes refid="d1/db1/THolder_8h" local="yes">xAODRootAccess/tools/THolder.h</includes>
    <incdepgraph>
      <node id="410923">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TObjectManager.cxx</label>
        <link refid="TObjectManager.cxx"/>
        <childnode refid="410924" relation="include">
        </childnode>
        <childnode refid="410925" relation="include">
        </childnode>
        <childnode refid="410926" relation="include">
        </childnode>
        <childnode refid="410929" relation="include">
        </childnode>
      </node>
      <node id="410930">
        <label>map</label>
      </node>
      <node id="410925">
        <label>TError.h</label>
      </node>
      <node id="410926">
        <label>xAODRootAccess/tools/TObjectManager.h</label>
        <link refid="db/dfb/TObjectManager_8h_source"/>
        <childnode refid="410927" relation="include">
        </childnode>
      </node>
      <node id="410928">
        <label>Rtypes.h</label>
      </node>
      <node id="410927">
        <label>TVirtualManager.h</label>
        <link refid="d5/d3d/TVirtualManager_8h_source"/>
        <childnode refid="410928" relation="include">
        </childnode>
      </node>
      <node id="410929">
        <label>xAODRootAccess/tools/THolder.h</label>
        <link refid="d1/db1/THolder_8h_source"/>
        <childnode refid="410930" relation="include">
        </childnode>
        <childnode refid="410928" relation="include">
        </childnode>
      </node>
      <node id="410924">
        <label>TBranch.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TObjectManager.cxx<sp/>731792<sp/>2016-03-23<sp/>10:27:41Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TBranch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TError.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/TObjectManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/THolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a1e0020878fd8a28f0bd5a7492e72b14d" kindref="member" tooltip="Constructor, getting hold of the created objects.">TObjectManager::TObjectManager</ref>(<sp/>::TBranch*<sp/>br,<sp/>THolder*<sp/>holder,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>renewOnRead<sp/>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_branch(<sp/>br<sp/>),<sp/>m_holder(<sp/>holder<sp/>),<sp/>m_entry(<sp/>-1<sp/>),<sp/>m_isSet(<sp/>kTRUE<sp/>),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renewOnRead(<sp/>renewOnRead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a1e0020878fd8a28f0bd5a7492e72b14d" kindref="member" tooltip="Constructor, getting hold of the created objects.">TObjectManager::TObjectManager</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TObjectManager&amp;<sp/>parent<sp/>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>TVirtualManager(),<sp/>m_branch(<sp/>parent.m_branch<sp/>),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_holder(<sp/>0<sp/>),<sp/>m_entry(<sp/>parent.m_entry<sp/>),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet(<sp/>parent.m_isSet<sp/>),<sp/>m_renewOnRead(<sp/>parent.m_renewOnRead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>parent.m_holder<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_holder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THolder(<sp/>*parent.m_holder<sp/>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a9422ceb6fa395644f9526df610caa57d" kindref="member" tooltip="Destructor.">TObjectManager::~TObjectManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>holder<sp/>object<sp/>if<sp/>we<sp/>have<sp/>one:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_holder<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_holder;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>TObjectManager&amp;<sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1ab943ed99e72f52c42b861a21f27a6ae6" kindref="member" tooltip="Assignment operator.">TObjectManager::operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TObjectManager&amp;<sp/>parent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>do<sp/>anything:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;parent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_branch<sp/>=<sp/>parent.m_branch;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_holder<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_holder;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_holder<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>parent.m_holder<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_holder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THolder(<sp/>*parent.m_holder<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_entry<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>parent.m_entry;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>parent.m_isSet;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_renewOnRead<sp/>=<sp/>parent.m_renewOnRead;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>::TBranch*<sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a9ffa775af109160b8a00c2d727d9a11c" kindref="member" tooltip="Accessor to the branch.">TObjectManager::branch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_branch;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>::TBranch**<sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a4b9ae720ae6f01058b4344f16fc4f1f0" kindref="member" tooltip="Pointer to the branch&amp;#39;s pointer.">TObjectManager::branchPtr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_branch;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>THolder*<sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a6e1513ce2a92227cdbe8ddde85623e8a" kindref="member" tooltip="Accessor to the Holder object.">TObjectManager::holder</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_holder;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>THolder*<sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a6e1513ce2a92227cdbe8ddde85623e8a" kindref="member" tooltip="Accessor to the Holder object.">TObjectManager::holder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_holder;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>::Int_t<sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1ae2deb72a9e1ee76f9005380e41d155cd" kindref="member" tooltip="Function for updating the object in memory if needed.">TObjectManager::getEntry</ref>(<sp/>::Long64_t<sp/>entry,<sp/>::Int_t<sp/>getall<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>anything<sp/>needs<sp/>to<sp/>be<sp/>done:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>entry<sp/>==<sp/>m_entry<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>which<sp/>entry<sp/>we&apos;re<sp/>loading<sp/>at<sp/>the<sp/>moment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_entry<sp/>=<sp/>entry;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>branch<sp/>is<sp/>not<sp/>in<sp/>&quot;MakeClass<sp/>mode&quot;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_branch-&gt;GetMakeClass()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_branch-&gt;SetMakeClass(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Renew<sp/>the<sp/>object<sp/>in<sp/>memory<sp/>if<sp/>we<sp/>are<sp/>in<sp/>such<sp/>a<sp/>mode:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_renewOnRead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_holder-&gt;renew();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>entry:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Int_t<sp/>bytes<sp/>=<sp/>m_branch-&gt;GetEntry(<sp/>entry,<sp/>getall<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>tricky<sp/>thing...<sp/>Parts<sp/>of<sp/>the<sp/>code<sp/>try<sp/>to<sp/>minimise<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operations<sp/>to<sp/>only<sp/>happen<sp/>when<sp/>an<sp/>object<sp/>is<sp/>getting<sp/>updated.<sp/>But</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>can<sp/>happen<sp/>that<sp/>an<sp/>interface<sp/>or<sp/>auxiliary<sp/>store<sp/>object<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>store<sp/>any<sp/>data<sp/>itself.<sp/>So<sp/>TBranch::GetEntry<sp/>will<sp/>return<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>still<sp/>need<sp/>to<sp/>tell<sp/>the<sp/>code<sp/>looking<sp/>at<sp/>this<sp/>return<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>we<sp/>did<sp/>go<sp/>to<sp/>a<sp/>new<sp/>event.<sp/>So<sp/>we<sp/>should<sp/>never<sp/>return<sp/>0<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>point...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bytes<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a5f986fc2495a7156e3aba94453a2670c" kindref="member" tooltip="Function getting a pointer to the object being handled.">TObjectManager::object</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_holder-&gt;get();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1ab84b544bb8e4291f72ceb800ba67c3c2" kindref="member" tooltip="Function replacing the object being handled.">TObjectManager::setObject</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>obj<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_holder-&gt;set(<sp/>obj<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet<sp/>=<sp/>kTRUE;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>::Bool_t<sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1ae6e70f1e738d01ff58df184944ad34fe" kindref="member" tooltip="Check if the object was set for the current event.">TObjectManager::isSet</ref>(<sp/>Bool_t<sp/></highlight><highlight class="comment">/*forceSet*/</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_isSet;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d8e/classxAOD_1_1TObjectManager_1a2070b9247c64bb94deb8b01baa05090f" kindref="member" tooltip="Reset the object at the end of processing of an event.">TObjectManager::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet<sp/>=<sp/>kFALSE;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TObjectManager.cxx"/>
  </compounddef>
</doxygen>
