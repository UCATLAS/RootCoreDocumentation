<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d9c/TrigT2MbtsBits__v1_8cxx" kind="file">
    <compoundname>TrigT2MbtsBits_v1.cxx</compoundname>
    <includes refid="d1/d0c/AuxStoreAccessorMacros_8h" local="yes">xAODCore/AuxStoreAccessorMacros.h</includes>
    <includes refid="d3/d9a/TrigT2MbtsBits__v1_8h" local="yes">xAODTrigMinBias/versions/TrigT2MbtsBits_v1.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="471368">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="471370">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="471324" relation="include">
        </childnode>
        <childnode refid="471326" relation="include">
        </childnode>
        <childnode refid="471333" relation="include">
        </childnode>
        <childnode refid="471334" relation="include">
        </childnode>
      </node>
      <node id="471371">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="471336">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="471320" relation="include">
        </childnode>
        <childnode refid="471322" relation="include">
        </childnode>
        <childnode refid="471337" relation="include">
        </childnode>
        <childnode refid="471335" relation="include">
        </childnode>
      </node>
      <node id="471332">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="471334">
        <label>functional</label>
      </node>
      <node id="471330">
        <label>limits</label>
      </node>
      <node id="471317">
        <label>xAODTrigMinBias/versions/TrigT2MbtsBits_v1.h</label>
        <link refid="d3/d9a/TrigT2MbtsBits__v1_8h_source"/>
        <childnode refid="471318" relation="include">
        </childnode>
      </node>
      <node id="471337">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="471366">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="471327">
        <label>iterator</label>
      </node>
      <node id="471354">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="471331" relation="include">
        </childnode>
        <childnode refid="471355" relation="include">
        </childnode>
      </node>
      <node id="471378">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="471321" relation="include">
        </childnode>
        <childnode refid="471379" relation="include">
        </childnode>
        <childnode refid="471380" relation="include">
        </childnode>
        <childnode refid="471346" relation="include">
        </childnode>
        <childnode refid="471331" relation="include">
        </childnode>
      </node>
      <node id="471350">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="471351" relation="include">
        </childnode>
        <childnode refid="471328" relation="include">
        </childnode>
      </node>
      <node id="471339">
        <label>stdint.h</label>
      </node>
      <node id="471347">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="471322" relation="include">
        </childnode>
        <childnode refid="471346" relation="include">
        </childnode>
      </node>
      <node id="471342">
        <label>RVersion.h</label>
      </node>
      <node id="471323">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="471324" relation="include">
        </childnode>
        <childnode refid="471333" relation="include">
        </childnode>
        <childnode refid="471334" relation="include">
        </childnode>
      </node>
      <node id="471329">
        <label>cmath</label>
      </node>
      <node id="471382">
        <label>cassert</label>
      </node>
      <node id="471380">
        <label>stdexcept</label>
      </node>
      <node id="471369">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="471331">
        <label>string</label>
      </node>
      <node id="471372">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="471321" relation="include">
        </childnode>
        <childnode refid="471320" relation="include">
        </childnode>
        <childnode refid="471354" relation="include">
        </childnode>
        <childnode refid="471350" relation="include">
        </childnode>
        <childnode refid="471338" relation="include">
        </childnode>
        <childnode refid="471373" relation="include">
        </childnode>
        <childnode refid="471374" relation="include">
        </childnode>
        <childnode refid="471357" relation="include">
        </childnode>
        <childnode refid="471351" relation="include">
        </childnode>
        <childnode refid="471326" relation="include">
        </childnode>
        <childnode refid="471328" relation="include">
        </childnode>
        <childnode refid="471375" relation="include">
        </childnode>
        <childnode refid="471376" relation="include">
        </childnode>
        <childnode refid="471364" relation="include">
        </childnode>
        <childnode refid="471377" relation="include">
        </childnode>
      </node>
      <node id="471345">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="471322" relation="include">
        </childnode>
        <childnode refid="471346" relation="include">
        </childnode>
      </node>
      <node id="471375">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="471343">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="471361">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="471376">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="471358">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="471319">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="471341">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="471342" relation="include">
        </childnode>
        <childnode refid="471343" relation="include">
        </childnode>
      </node>
      <node id="471374">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="471367">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="471353">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="471354" relation="include">
        </childnode>
        <childnode refid="471330" relation="include">
        </childnode>
        <childnode refid="471339" relation="include">
        </childnode>
        <childnode refid="471356" relation="include">
        </childnode>
      </node>
      <node id="471321">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="471322" relation="include">
        </childnode>
        <childnode refid="471323" relation="include">
        </childnode>
      </node>
      <node id="471324">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="471325" relation="include">
        </childnode>
        <childnode refid="471326" relation="include">
        </childnode>
        <childnode refid="471327" relation="include">
        </childnode>
        <childnode refid="471322" relation="include">
        </childnode>
        <childnode refid="471328" relation="include">
        </childnode>
        <childnode refid="471329" relation="include">
        </childnode>
        <childnode refid="471330" relation="include">
        </childnode>
        <childnode refid="471331" relation="include">
        </childnode>
        <childnode refid="471332" relation="include">
        </childnode>
      </node>
      <node id="471346">
        <label>typeinfo</label>
      </node>
      <node id="471381">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="471375" relation="include">
        </childnode>
        <childnode refid="471382" relation="include">
        </childnode>
      </node>
      <node id="471356">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="471373">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="471340">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="471339" relation="include">
        </childnode>
      </node>
      <node id="471355">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="471360">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="471335">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="471344">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="471321" relation="include">
        </childnode>
        <childnode refid="471345" relation="include">
        </childnode>
        <childnode refid="471347" relation="include">
        </childnode>
        <childnode refid="471348" relation="include">
        </childnode>
        <childnode refid="471362" relation="include">
        </childnode>
        <childnode refid="471364" relation="include">
        </childnode>
        <childnode refid="471322" relation="include">
        </childnode>
        <childnode refid="471346" relation="include">
        </childnode>
        <childnode refid="471351" relation="include">
        </childnode>
        <childnode refid="471370" relation="include">
        </childnode>
        <childnode refid="471371" relation="include">
        </childnode>
      </node>
      <node id="471351">
        <label>vector</label>
      </node>
      <node id="471326">
        <label>utility</label>
      </node>
      <node id="471357">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="471384">
        <label>sstream</label>
      </node>
      <node id="471365">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="471349">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="471364">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="471365" relation="include">
        </childnode>
        <childnode refid="471366" relation="include">
        </childnode>
        <childnode refid="471367" relation="include">
        </childnode>
        <childnode refid="471368" relation="include">
        </childnode>
        <childnode refid="471369" relation="include">
        </childnode>
      </node>
      <node id="471328">
        <label>cstdlib</label>
      </node>
      <node id="471383">
        <label>iostream</label>
      </node>
      <node id="471379">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="471320">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="471321" relation="include">
        </childnode>
        <childnode refid="471322" relation="include">
        </childnode>
        <childnode refid="471335" relation="include">
        </childnode>
      </node>
      <node id="471322">
        <label>cstddef</label>
      </node>
      <node id="471377">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="471344" relation="include">
        </childnode>
        <childnode refid="471336" relation="include">
        </childnode>
        <childnode refid="471320" relation="include">
        </childnode>
        <childnode refid="471375" relation="include">
        </childnode>
        <childnode refid="471376" relation="include">
        </childnode>
      </node>
      <node id="471316">
        <label>xAODCore/AuxStoreAccessorMacros.h</label>
        <link refid="d1/d0c/AuxStoreAccessorMacros_8h_source"/>
      </node>
      <node id="471348">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="471345" relation="include">
        </childnode>
        <childnode refid="471349" relation="include">
        </childnode>
        <childnode refid="471350" relation="include">
        </childnode>
        <childnode refid="471352" relation="include">
        </childnode>
        <childnode refid="471357" relation="include">
        </childnode>
        <childnode refid="471346" relation="include">
        </childnode>
        <childnode refid="471351" relation="include">
        </childnode>
        <childnode refid="471325" relation="include">
        </childnode>
        <childnode refid="471339" relation="include">
        </childnode>
        <childnode refid="471359" relation="include">
        </childnode>
        <childnode refid="471360" relation="include">
        </childnode>
        <childnode refid="471361" relation="include">
        </childnode>
      </node>
      <node id="471359">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="471315">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMinBias/Root/TrigT2MbtsBits_v1.cxx</label>
        <link refid="TrigT2MbtsBits_v1.cxx"/>
        <childnode refid="471316" relation="include">
        </childnode>
        <childnode refid="471317" relation="include">
        </childnode>
        <childnode refid="471383" relation="include">
        </childnode>
        <childnode refid="471384" relation="include">
        </childnode>
      </node>
      <node id="471363">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="471352">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="471349" relation="include">
        </childnode>
        <childnode refid="471353" relation="include">
        </childnode>
        <childnode refid="471357" relation="include">
        </childnode>
        <childnode refid="471351" relation="include">
        </childnode>
        <childnode refid="471358" relation="include">
        </childnode>
      </node>
      <node id="471325">
        <label>algorithm</label>
      </node>
      <node id="471318">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="471319" relation="include">
        </childnode>
        <childnode refid="471320" relation="include">
        </childnode>
        <childnode refid="471336" relation="include">
        </childnode>
        <childnode refid="471338" relation="include">
        </childnode>
        <childnode refid="471344" relation="include">
        </childnode>
        <childnode refid="471372" relation="include">
        </childnode>
        <childnode refid="471350" relation="include">
        </childnode>
        <childnode refid="471378" relation="include">
        </childnode>
        <childnode refid="471375" relation="include">
        </childnode>
        <childnode refid="471322" relation="include">
        </childnode>
        <childnode refid="471381" relation="include">
        </childnode>
      </node>
      <node id="471338">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="471339" relation="include">
        </childnode>
        <childnode refid="471331" relation="include">
        </childnode>
        <childnode refid="471340" relation="include">
        </childnode>
        <childnode refid="471341" relation="include">
        </childnode>
      </node>
      <node id="471333">
        <label>memory</label>
      </node>
      <node id="471362">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="471347" relation="include">
        </childnode>
        <childnode refid="471348" relation="include">
        </childnode>
        <childnode refid="471363" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxStoreAccessorMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigMinBias/versions/TrigT2MbtsBits_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;GaudiKernel/MsgStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="db/d50/classxAOD_1_1TrigT2MbtsBits__v1_1a7f96b20ef459b53b938eca1322ad04c2" kindref="member" tooltip="default ctor">TrigT2MbtsBits_v1::TrigT2MbtsBits_v1</ref>()</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>:<sp/>SG::AuxElement()<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>TrigT2MbtsBits_v1::~TrigT2MbtsBits_v1(){}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>debug<sp/>method<sp/>using<sp/>MsgStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigT2MbtsBits_v1::print(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>m_triggerEnergies(triggerEnergies());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>m_triggerTimes(triggerTimes());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;::const_iterator<sp/>itr;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;::const_iterator<sp/>itr_end;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>itr=m_triggerEnergies.begin();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>itr_end=m_triggerEnergies.end();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_triggerEnergies<sp/>=<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itr<sp/>!=<sp/>itr_end;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(*itr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>m_triggerTimes.begin();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itr_end<sp/>=<sp/>m_triggerTimes.end();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_triggerTimes<sp/>=<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itr<sp/>!=<sp/>itr_end;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(*itr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>debug<sp/>method<sp/>using<sp/>MsgStream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigT2MbtsBits_v1::print(MsgStream&amp;<sp/>log)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>m_triggerEnergies(triggerEnergies());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>m_triggerTimes(triggerTimes());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;::const_iterator<sp/>itr;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;::const_iterator<sp/>itr_end;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>itr=m_triggerEnergies.begin();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>itr_end=m_triggerEnergies.end();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_triggerEnergies<sp/>=<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itr<sp/>!=<sp/>itr_end;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::DEBUG<sp/>&lt;&lt;<sp/>(*itr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endreq;<sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>m_triggerTimes.begin();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itr_end<sp/>=<sp/>m_triggerTimes.end();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_triggerTimes<sp/>=<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itr<sp/>!=<sp/>itr_end;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::DEBUG<sp/>&lt;&lt;<sp/>(*itr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::DEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>0</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>string<sp/>conversion<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>std::string<sp/>str(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrigT2MbtsBits_v1&amp;<sp/>trigT2MbtsBits)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>sstream;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>counterValues;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;::const_iterator<sp/>itr;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;::const_iterator<sp/>itr_end;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>counterValues<sp/>=<sp/>trigT2MbtsBits.triggerEnergies();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>counterValues.begin();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>itr_end<sp/>=<sp/>counterValues.end();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>sstream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_triggerEnergies<sp/>=<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itr<sp/>!=<sp/>itr_end;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>sstream<sp/>&lt;&lt;<sp/>(*itr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sstream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>counterValues<sp/>=<sp/>trigT2MbtsBits.triggerTimes();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>counterValues.begin();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itr_end<sp/>=<sp/>counterValues.end();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sstream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m_triggerTimes<sp/>=<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;itr<sp/>!=<sp/>itr_end;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sstream<sp/>&lt;&lt;<sp/>(*itr)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>sstream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sstream.str();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>MsgStream&amp;<sp/>operator&lt;&lt;<sp/>(MsgStream&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrigT2MbtsBits_v1&amp;<sp/>trigT2MbtsBits)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m<sp/>&lt;&lt;<sp/>str(trigT2MbtsBits));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>0</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>accessor<sp/>functions<sp/>for<sp/>the<sp/>&quot;default<sp/>variable&quot;<sp/>access<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER<sp/>(TrigT2MbtsBits_v1,<sp/>std::vector&lt;float&gt;,<sp/>triggerEnergies,<sp/>setTriggerEnergies)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER<sp/>(TrigT2MbtsBits_v1,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;,<sp/>triggerTimes,<sp/>setTriggerTimes)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMinBias/Root/TrigT2MbtsBits_v1.cxx"/>
  </compounddef>
</doxygen>
