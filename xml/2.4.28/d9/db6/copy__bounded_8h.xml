<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/db6/copy__bounded_8h" kind="file">
    <compoundname>copy_bounded.h</compoundname>
    <includes local="no">iterator</includes>
    <includes local="no">algorithm</includes>
    <includes local="yes">boost/range/iterator.hpp</includes>
    <includes local="yes">boost/range/begin.hpp</includes>
    <includes local="yes">boost/range/end.hpp</includes>
    <includedby refid="da/d8c/copy__bounded__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/copy_bounded_test.cxx</includedby>
    <incdepgraph>
      <node id="106590">
        <label>iterator</label>
      </node>
      <node id="106594">
        <label>boost/range/end.hpp</label>
      </node>
      <node id="106592">
        <label>boost/range/iterator.hpp</label>
      </node>
      <node id="106593">
        <label>boost/range/begin.hpp</label>
      </node>
      <node id="106589">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/copy_bounded.h</label>
        <link refid="copy_bounded.h"/>
        <childnode refid="106590" relation="include">
        </childnode>
        <childnode refid="106591" relation="include">
        </childnode>
        <childnode refid="106592" relation="include">
        </childnode>
        <childnode refid="106593" relation="include">
        </childnode>
        <childnode refid="106594" relation="include">
        </childnode>
      </node>
      <node id="106591">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="106596">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/copy_bounded_test.cxx</label>
        <link refid="da/d8c/copy__bounded__test_8cxx"/>
      </node>
      <node id="106595">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/copy_bounded.h</label>
        <link refid="copy_bounded.h"/>
        <childnode refid="106596" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="de/d12/namespaceCxxUtils">CxxUtils</innernamespace>
    <briefdescription>
<para>Copy a range with bounds restriction. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Mar, 2013 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file&apos;s<sp/>extension<sp/>implies<sp/>that<sp/>it&apos;s<sp/>C,<sp/>but<sp/>it&apos;s<sp/>really<sp/>-*-<sp/>C++<sp/>-*-.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>CXXUTILS_COPY_BOUNDED_H</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CXXUTILS_COPY_BOUNDED_H</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/range/iterator.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/range/begin.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/range/end.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CxxUtils<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InputIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OutputIterator,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InputTag,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OutputTag&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">OutputIterator</highlight></codeline>
<codeline lineno="32" refid="de/d12/namespaceCxxUtils_1af16c85f6fe3658154a9b225609574726" refkind="member"><highlight class="normal"><ref refid="de/d12/namespaceCxxUtils_1af16c85f6fe3658154a9b225609574726" kindref="member" tooltip="Copy a range with bounds restriction; generic version.">copy_bounded1</ref><sp/>(InputIterator<sp/>begi,<sp/>InputIterator<sp/>endi,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputIterator<sp/>bego,<sp/>OutputIterator<sp/>endo,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputTag&amp;,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OutputTag&amp;)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(begi<sp/>!=<sp/>endi<sp/>&amp;&amp;<sp/>bego<sp/>!=<sp/>endo)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>*bego<sp/>=<sp/>*begi;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>++begi;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>++bego;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bego;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OutputIterator&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">OutputIterator</highlight></codeline>
<codeline lineno="52" refid="de/d12/namespaceCxxUtils_1a5ede98c8f13a1c221e932fe588f5d996" refkind="member"><highlight class="normal"><ref refid="de/d12/namespaceCxxUtils_1af16c85f6fe3658154a9b225609574726" kindref="member" tooltip="Copy a range with bounds restriction; generic version.">copy_bounded1</ref><sp/>(InputIterator<sp/>begi,<sp/>InputIterator<sp/>endi,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputIterator<sp/>bego,<sp/>OutputIterator<sp/>endo,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag&amp;,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag&amp;)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min<sp/>(endi-begi,<sp/>endo-bego);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::copy<sp/>(begi,<sp/>begi+n,<sp/>bego);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OutputIterator&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">OutputIterator</highlight></codeline>
<codeline lineno="79" refid="de/d12/namespaceCxxUtils_1a5049ecdf32f875ad81bca0377cd12bc3" refkind="member"><highlight class="normal"><ref refid="de/d12/namespaceCxxUtils_1a5049ecdf32f875ad81bca0377cd12bc3" kindref="member" tooltip="Copy a range with bounds restriction.">copy_bounded</ref><sp/>(InputIterator<sp/>begi,<sp/>InputIterator<sp/>endi,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputIterator<sp/>bego,<sp/>OutputIterator<sp/>endo)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d12/namespaceCxxUtils_1af16c85f6fe3658154a9b225609574726" kindref="member" tooltip="Copy a range with bounds restriction; generic version.">copy_bounded1</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>(begi,<sp/>endi,<sp/>bego,<sp/>endo,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;InputIterator&gt;::iterator_category(),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;OutputIterator&gt;::iterator_category());</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputRange,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OutputRange&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::range_iterator&lt;OutputRange&gt;::type</highlight></codeline>
<codeline lineno="99" refid="de/d12/namespaceCxxUtils_1a13bedce0dab0a2e825383e8f21ea37b2" refkind="member"><highlight class="normal"><ref refid="de/d12/namespaceCxxUtils_1a5049ecdf32f875ad81bca0377cd12bc3" kindref="member" tooltip="Copy a range with bounds restriction.">copy_bounded</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputRange&amp;<sp/>input,<sp/>OutputRange&amp;<sp/>output)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d12/namespaceCxxUtils_1a5049ecdf32f875ad81bca0377cd12bc3" kindref="member" tooltip="Copy a range with bounds restriction.">copy_bounded</ref></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>(boost::begin(input),<sp/><sp/>boost::end(input),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>boost::begin(output),<sp/>boost::end(output));</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>CxxUtils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>CXXUTILS_COPY_BOUNDED_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/copy_bounded.h"/>
  </compounddef>
</doxygen>
