<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/dc4/classEL_1_1AlgSelect" kind="class" prot="public">
    <compoundname>EL::AlgSelect</compoundname>
    <basecompoundref refid="de/ddb/classEL_1_1Algorithm" prot="public" virt="non-virtual">EL::Algorithm</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/dc4/classEL_1_1AlgSelect_1a42167463cf57ad29a3e8fffec616dab9" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string EL::AlgSelect::m_outputStream</definition>
        <argsstring></argsstring>
        <name>m_outputStream</name>
        <briefdescription>
<para>description: members directly corresponding to accessors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/dc4/classEL_1_1AlgSelect_1a43dd5fa5d31d503647a0750cf64b6c79" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; EL::AlgSelect::m_cuts</definition>
        <argsstring></argsstring>
        <name>m_cuts</name>
        <briefdescription>
<para>description: the list of formulas used </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="137" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/dc4/classEL_1_1AlgSelect_1a0e9fa779d429a0a3cb36061bce0429ac" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string EL::AlgSelect::m_histName</definition>
        <argsstring></argsstring>
        <name>m_histName</name>
        <briefdescription>
<para>description: the name of the cut-flow histogram </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/dc4/classEL_1_1AlgSelect_1acdb52fd8061f16390d1954e948b1b8eb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; const <ref refid="d8/d4e/classMD_1_1Formula" kindref="compound">MD::Formula</ref> * &gt;</type>
        <definition>std::vector&lt;const MD::Formula*&gt; EL::AlgSelect::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <briefdescription>
<para>description: the indices to the formulas </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="145" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/dc4/classEL_1_1AlgSelect_1a4b6ebb3f74cfa6e19a02faf10563b342" prot="private" static="no" mutable="no">
        <type>TH1 *</type>
        <definition>TH1* EL::AlgSelect::m_hist</definition>
        <argsstring></argsstring>
        <name>m_hist</name>
        <briefdescription>
<para>description: the histogram we are filling </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="149" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/dc4/classEL_1_1AlgSelect_1a287fea4907af345f87c4855cdda103ef" prot="private" static="no" mutable="no">
        <type><ref refid="d3/dae/classMD_1_1FormulaSvc" kindref="compound">MD::FormulaSvc</ref> *</type>
        <definition>MD::FormulaSvc* EL::AlgSelect::m_formSvc</definition>
        <argsstring></argsstring>
        <name>m_formSvc</name>
        <briefdescription>
<para>description: the formula service we are using </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="153" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/dc4/classEL_1_1AlgSelect_1a2f715d32e2349a37e2dd68fe8d721a53" prot="private" static="no" mutable="no">
        <type><ref refid="d5/d4e/classEL_1_1NTupleSvc" kindref="compound">NTupleSvc</ref> *</type>
        <definition>NTupleSvc* EL::AlgSelect::m_skim</definition>
        <argsstring></argsstring>
        <name>m_skim</name>
        <briefdescription>
<para>description: the skimming service we are using </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1a5be92b13ba072946324c4ecca1ef8a6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::AlgSelect::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1afa8999f46656a42d53df3731216f1296">testInvariant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: test the invariant of this object guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1aed45a91bfd0d4065c2406880e6b66d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::AlgSelect::AlgSelect</definition>
        <argsstring>(const std::string &amp;val_outputStream, const std::string &amp;cut=&quot;&quot;)</argsstring>
        <name>AlgSelect</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_outputStream</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>cut</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: create a new selector for the given output. if a cut it specified it will be the first cut in the list. guarantee: strong failures: out of memory II requires: !val_outputStream.empty() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1a0148d27de0994f02d7b47ed3faacb7c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; EL::AlgSelect::outputStream</definition>
        <argsstring>() const </argsstring>
        <name>outputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>description: the name of the output stream guarantee: no-fail invariant: !outputStream.empty() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1af446a218605fc86f306af410652af77c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; EL::AlgSelect::histName</definition>
        <argsstring>() const </argsstring>
        <name>histName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>description: the histogram name guarantee: no-fail / strong failures: out of memory II </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1ad3841481c8e72080390ff140450a18de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::AlgSelect::histName</definition>
        <argsstring>(const std::string &amp;val_histName)</argsstring>
        <name>histName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_histName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1adf167496511423d993c31ffd544fe321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::AlgSelect::addCut</definition>
        <argsstring>(const std::string &amp;cut)</argsstring>
        <name>addCut</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: add another cut guarantee: strong failures: out of memory II requires: !cut.empty() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="71"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1a3807ba4d94790916e1b4f149d682b2df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::AlgSelect::AlgSelect</definition>
        <argsstring>()</argsstring>
        <name>AlgSelect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard default constructor guarantee: strong failures: out of memory II rationale: this should only be called by serialization </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1a3c9dd507b27029e7cde76c3f4a938ae2" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::AlgSelect::setupJob</definition>
        <argsstring>(Job &amp;job)</argsstring>
        <name>setupJob</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a6bea54e06f41f386407aad066f051f59">setupJob</reimplements>
        <param>
          <type><ref refid="da/dbb/classEL_1_1Job" kindref="compound">Job</ref> &amp;</type>
          <declname>job</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: give the algorithm a chance to intialize the job with anything this algorithm needs. this method is automatically called before the algorithm is actually added to the job. guarantee: basic failures: algorithm dependent rationale: this is currently used to give algorithms a chance to register their output datasets, but can also be used for other stuff. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="101"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1a467674eeabb4f0ec12a6c0bf04f73e0b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::AlgSelect::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1ad880ac0eae790193a28d0ec063727f5e">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do everything that needs to be done before running the algorithm, e.g. create output n-tuples and histograms. this method is called only once right after changeInput(true) is called guarantee: basic failures: algorithm dependent rationale: in principle all this work could be done on changeInput(true). However, providing this method should make it easier for the user to set up all his outputs and to do so only once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1ab8f634ee57bc8b63c536bb98e16d4da1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::AlgSelect::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a2ca11106132eab43a10bba3be427ead8">execute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: process the next event guarantee: basic failures: algorithm dependent rationale: the virtual part of Algorithm::process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="d9/dc4/classEL_1_1AlgSelect_1a1e1af2fbb34a65d003f9587478a7f949" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::AlgSelect::ClassDef</definition>
        <argsstring>(AlgSelect, 1)</argsstring>
        <name>ClassDef</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1aaaf7e4b47c721a094449edc60a2ffe88">ClassDef</reimplements>
        <param>
          <type><ref refid="d9/dc4/classEL_1_1AlgSelect" kindref="compound">AlgSelect</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="382">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
      </node>
      <node id="381">
        <label>EL::AlgSelect</label>
        <link refid="d9/dc4/classEL_1_1AlgSelect"/>
        <childnode refid="382" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="384">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
        <childnode refid="385" relation="usage">
          <edgelabel>m_wk</edgelabel>
        </childnode>
      </node>
      <node id="385">
        <label>EL::Worker</label>
        <link refid="da/d12/classEL_1_1Worker"/>
        <childnode refid="386" relation="usage">
          <edgelabel>m_metaData</edgelabel>
        </childnode>
      </node>
      <node id="388">
        <label>string</label>
      </node>
      <node id="390">
        <label>EL::WhiteBoardSvc</label>
        <link refid="d5/dda/classEL_1_1WhiteBoardSvc"/>
        <childnode refid="384" relation="public-inheritance">
        </childnode>
      </node>
      <node id="383">
        <label>EL::AlgSelect</label>
        <link refid="d9/dc4/classEL_1_1AlgSelect"/>
        <childnode refid="384" relation="public-inheritance">
        </childnode>
        <childnode refid="387" relation="usage">
          <edgelabel>m_formSvc</edgelabel>
        </childnode>
        <childnode refid="388" relation="usage">
          <edgelabel>m_outputStream</edgelabel>
          <edgelabel>m_histName</edgelabel>
        </childnode>
        <childnode refid="389" relation="usage">
          <edgelabel>m_skim</edgelabel>
        </childnode>
      </node>
      <node id="386">
        <label>SH::MetaObject</label>
        <link refid="db/d3a/classSH_1_1MetaObject"/>
      </node>
      <node id="387">
        <label>MD::FormulaSvc</label>
        <link refid="d3/dae/classMD_1_1FormulaSvc"/>
        <childnode refid="384" relation="public-inheritance">
        </childnode>
      </node>
      <node id="389">
        <label>EL::NTupleSvc</label>
        <link refid="d5/d4e/classEL_1_1NTupleSvc"/>
        <childnode refid="384" relation="public-inheritance">
        </childnode>
        <childnode refid="390" relation="usage">
          <edgelabel>m_whiteboard</edgelabel>
        </childnode>
        <childnode refid="388" relation="usage">
          <edgelabel>m_treeName</edgelabel>
          <edgelabel>m_outputName</edgelabel>
          <edgelabel>m_tree_title</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/AlgSelect.h" bodystart="29" bodyend="160"/>
    <listofallmembers>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1adf167496511423d993c31ffd544fe321" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>addCut</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1abb182dee6741786ce59ddbd8a8fc4cc0" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>Algorithm</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1aed45a91bfd0d4065c2406880e6b66d06" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>AlgSelect</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a3807ba4d94790916e1b4f149d682b2df" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>AlgSelect</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a9e2072bd4fdda18ebc86f847b691d9b9" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>book</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a1e1af2fbb34a65d003f9587478a7f949" prot="private" virt="non-virtual"><scope>EL::AlgSelect</scope><name>ClassDef</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1ab8f634ee57bc8b63c536bb98e16d4da1" prot="private" virt="virtual"><scope>EL::AlgSelect</scope><name>execute</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a03872c24f8a637ba069b61d847ad557e" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>hist</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1af446a218605fc86f306af410652af77c" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>histName</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1ad3841481c8e72080390ff140450a18de" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>histName</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a467674eeabb4f0ec12a6c0bf04f73e0b" prot="private" virt="virtual"><scope>EL::AlgSelect</scope><name>initialize</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a43dd5fa5d31d503647a0750cf64b6c79" prot="private" virt="non-virtual"><scope>EL::AlgSelect</scope><name>m_cuts</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a287fea4907af345f87c4855cdda103ef" prot="private" virt="non-virtual"><scope>EL::AlgSelect</scope><name>m_formSvc</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a4b6ebb3f74cfa6e19a02faf10563b342" prot="private" virt="non-virtual"><scope>EL::AlgSelect</scope><name>m_hist</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a0e9fa779d429a0a3cb36061bce0429ac" prot="private" virt="non-virtual"><scope>EL::AlgSelect</scope><name>m_histName</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1acdb52fd8061f16390d1954e948b1b8eb" prot="private" virt="non-virtual"><scope>EL::AlgSelect</scope><name>m_index</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a42167463cf57ad29a3e8fffec616dab9" prot="private" virt="non-virtual"><scope>EL::AlgSelect</scope><name>m_outputStream</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a2f715d32e2349a37e2dd68fe8d721a53" prot="private" virt="non-virtual"><scope>EL::AlgSelect</scope><name>m_skim</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a468b0314089506f2c36445cfc84f673b" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d3345f2effc1ea5b8add736df764ca7" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1ad89c787f00a88c7b51a23a4a397f5c05" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>msgLvl</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a0148d27de0994f02d7b47ed3faacb7c4" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>outputStream</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a767c1725616f14d347b79002d755bf55" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>setMsgLevel</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a3c9dd507b27029e7cde76c3f4a938ae2" prot="private" virt="virtual"><scope>EL::AlgSelect</scope><name>setupJob</name></member>
      <member refid="d9/dc4/classEL_1_1AlgSelect_1a5be92b13ba072946324c4ecca1ef8a6d" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>testInvariant</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>wk</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d787a867dbe55af8241032c7b4aabf4" prot="public" virt="non-virtual"><scope>EL::AlgSelect</scope><name>~Algorithm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
