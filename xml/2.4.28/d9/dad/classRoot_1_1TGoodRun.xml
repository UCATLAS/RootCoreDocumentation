<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/dad/classRoot_1_1TGoodRun" kind="class" prot="public">
    <compoundname>Root::TGoodRun</compoundname>
    <innerclass refid="df/d56/structRoot_1_1TGoodRun_1_1SorterL2H" prot="private">Root::TGoodRun::SorterL2H</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/dad/classRoot_1_1TGoodRun_1a145200a5492cd2af069a4b2efd22ffd2" prot="private" static="no" mutable="no">
        <type>Int_t</type>
        <definition>Int_t Root::TGoodRun::m_runnr</definition>
        <argsstring></argsstring>
        <name>m_runnr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a0dc8336a307cca74258d2d75a2d3e5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Root::TGoodRun::TGoodRun</definition>
        <argsstring>()</argsstring>
        <name>TGoodRun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="22"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1ab7d37e714a99798bcbcbd4c9e030ae9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Root::TGoodRun::TGoodRun</definition>
        <argsstring>(const Int_t &amp;runnr)</argsstring>
        <name>TGoodRun</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>runnr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1acabb98dcc980d5d624a39cce7277c3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Root::TGoodRun::~TGoodRun</definition>
        <argsstring>()</argsstring>
        <name>~TGoodRun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="24" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a110186781d1e247b369a5a1de94e3c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Root::TGoodRun::TGoodRun</definition>
        <argsstring>(const Root::TGoodRun &amp;other)</argsstring>
        <name>TGoodRun</name>
        <param>
          <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a415bcae0dfd4b20014e4f6c345e09a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref> &amp;</type>
        <definition>Root::TGoodRun &amp; Root::TGoodRun::operator=</definition>
        <argsstring>(const TGoodRun &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="40" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a6f72ee62425d3b573c8843b4f48567ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref></type>
        <definition>const Root::TGoodRun Root::TGoodRun::GetOverlapWith</definition>
        <argsstring>(const TGoodRun &amp;other) const </argsstring>
        <name>GetOverlapWith</name>
        <param>
          <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="53" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a6762d3dee88a10ccdfea4971525d4d94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref></type>
        <definition>const Root::TGoodRun Root::TGoodRun::GetSumWith</definition>
        <argsstring>(const TGoodRun &amp;other) const </argsstring>
        <name>GetSumWith</name>
        <param>
          <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="75" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1ab58e2770afccd3c7d96bbdf6da6cd3cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref></type>
        <definition>const Root::TGoodRun Root::TGoodRun::GetPartOnlyIn</definition>
        <argsstring>(const TGoodRun &amp;other) const </argsstring>
        <name>GetPartOnlyIn</name>
        <param>
          <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a145995e7eb89f2c5ff3895dd7a274607" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref></type>
        <definition>const Root::TGoodRun Root::TGoodRun::GetPartNotIn</definition>
        <argsstring>(const TGoodRun &amp;other) const </argsstring>
        <name>GetPartNotIn</name>
        <param>
          <type>const <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="104" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a1ea92173c039ad5fbdfd43a4017fdb9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRun::IsEmpty</definition>
        <argsstring>() const </argsstring>
        <name>IsEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="247" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1af9b7b64187a1927172e64320aee1469c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRun::HasLB</definition>
        <argsstring>(const Int_t &amp;lumiblocknr) const </argsstring>
        <name>HasLB</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>lumiblocknr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="129" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1aa6ebc7cfc6f22f4b83cabf663af6cfa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref> &gt;::iterator</type>
        <definition>std::vector&lt; Root::TLumiBlockRange &gt;::iterator Root::TGoodRun::Find</definition>
        <argsstring>(const Int_t &amp;lumiblocknr)</argsstring>
        <name>Find</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>lumiblocknr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="145" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1ab3ee1690a74baf00ed303dabf202c672" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref> &gt;::const_iterator</type>
        <definition>std::vector&lt; Root::TLumiBlockRange &gt;::const_iterator Root::TGoodRun::Find</definition>
        <argsstring>(const Int_t &amp;lumiblocknr) const </argsstring>
        <name>Find</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>lumiblocknr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="160" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a450cc90c9412cc191b31f201b5b01c3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Int_t</type>
        <definition>Int_t Root::TGoodRun::GetRunNumber</definition>
        <argsstring>() const </argsstring>
        <name>GetRunNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1aad43f472cfeaf89eaf4594c710fed26a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRun::SetRunNumber</definition>
        <argsstring>(const Int_t &amp;runnr)</argsstring>
        <name>SetRunNumber</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>runnr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1ad263e2f516b4a554a5048954e8d0a416" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRun::Summary</definition>
        <argsstring>() const </argsstring>
        <name>Summary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="175" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1aaa99a6e36903ac9b14afd966af94b836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRun::Sort</definition>
        <argsstring>()</argsstring>
        <name>Sort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1afeea0c48a307e26baf182bfc5ca5a41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRun::Compress</definition>
        <argsstring>()</argsstring>
        <name>Compress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="196" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="d9/dad/classRoot_1_1TGoodRun_1a5db3739ab0c5e78469b7cc49892d76ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRun::AddLB</definition>
        <argsstring>(const Int_t &amp;lumiblocknr)</argsstring>
        <name>AddLB</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>lumiblocknr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx" bodystart="262" bodyend="285"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" line="18" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h" bodystart="18" bodyend="60"/>
    <listofallmembers>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a5db3739ab0c5e78469b7cc49892d76ba" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>AddLB</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1afeea0c48a307e26baf182bfc5ca5a41b" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>Compress</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1aa6ebc7cfc6f22f4b83cabf663af6cfa0" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>Find</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1ab3ee1690a74baf00ed303dabf202c672" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>Find</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a6f72ee62425d3b573c8843b4f48567ad" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>GetOverlapWith</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a145995e7eb89f2c5ff3895dd7a274607" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>GetPartNotIn</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1ab58e2770afccd3c7d96bbdf6da6cd3cb" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>GetPartOnlyIn</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a450cc90c9412cc191b31f201b5b01c3e" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>GetRunNumber</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a6762d3dee88a10ccdfea4971525d4d94" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>GetSumWith</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1af9b7b64187a1927172e64320aee1469c" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>HasLB</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a1ea92173c039ad5fbdfd43a4017fdb9b" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>IsEmpty</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a145200a5492cd2af069a4b2efd22ffd2" prot="private" virt="non-virtual"><scope>Root::TGoodRun</scope><name>m_runnr</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a415bcae0dfd4b20014e4f6c345e09a0c" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>operator=</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1aad43f472cfeaf89eaf4594c710fed26a" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>SetRunNumber</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1aaa99a6e36903ac9b14afd966af94b836" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>Sort</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1ad263e2f516b4a554a5048954e8d0a416" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>Summary</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a0dc8336a307cca74258d2d75a2d3e5d5" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>TGoodRun</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1ab7d37e714a99798bcbcbd4c9e030ae9e" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>TGoodRun</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1a110186781d1e247b369a5a1de94e3c1b" prot="public" virt="non-virtual"><scope>Root::TGoodRun</scope><name>TGoodRun</name></member>
      <member refid="d9/dad/classRoot_1_1TGoodRun_1acabb98dcc980d5d624a39cce7277c3b1" prot="public" virt="virtual"><scope>Root::TGoodRun</scope><name>~TGoodRun</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
