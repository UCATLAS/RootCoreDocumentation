<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d9/d12/SampleMeta_8cxx" kind="file">
    <compoundname>SampleMeta.cxx</compoundname>
    <includes refid="d0/d0c/SampleMeta_8h" local="no">SampleHandler/SampleMeta.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <includes refid="dd/db7/ThrowMsg_8h" local="no">RootCoreUtils/ThrowMsg.h</includes>
    <includes refid="d3/deb/SamplePtr_8h" local="no">SampleHandler/SamplePtr.h</includes>
    <incdepgraph>
      <node id="264241">
        <label>RootCoreUtils/Deprecated.h</label>
        <link refid="d1/d0f/RootCoreUtils_2RootCoreUtils_2Deprecated_8h_source"/>
        <childnode refid="264242" relation="include">
        </childnode>
      </node>
      <node id="264234">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/SampleMeta.cxx</label>
        <link refid="SampleMeta.cxx"/>
        <childnode refid="264235" relation="include">
        </childnode>
        <childnode refid="264245" relation="include">
        </childnode>
        <childnode refid="264246" relation="include">
        </childnode>
        <childnode refid="264249" relation="include">
        </childnode>
      </node>
      <node id="264238">
        <label>string</label>
      </node>
      <node id="264237">
        <label>SampleHandler/Sample.h</label>
        <link refid="df/d9d/Sample_8h_source"/>
        <childnode refid="264236" relation="include">
        </childnode>
        <childnode refid="264238" relation="include">
        </childnode>
        <childnode refid="264239" relation="include">
        </childnode>
        <childnode refid="264240" relation="include">
        </childnode>
        <childnode refid="264241" relation="include">
        </childnode>
        <childnode refid="264243" relation="include">
        </childnode>
      </node>
      <node id="264235">
        <label>SampleHandler/SampleMeta.h</label>
        <link refid="d0/d0c/SampleMeta_8h_source"/>
        <childnode refid="264236" relation="include">
        </childnode>
        <childnode refid="264237" relation="include">
        </childnode>
      </node>
      <node id="264240">
        <label>TObject.h</label>
      </node>
      <node id="264239">
        <label>vector</label>
      </node>
      <node id="264242">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="264248">
        <label>RootCoreUtils/MessageType.h</label>
        <link refid="dd/d02/MessageType_8h_source"/>
        <childnode refid="264242" relation="include">
        </childnode>
      </node>
      <node id="264243">
        <label>SampleHandler/TagList.h</label>
        <link refid="d2/de6/TagList_8h_source"/>
        <childnode refid="264236" relation="include">
        </childnode>
        <childnode refid="264244" relation="include">
        </childnode>
        <childnode refid="264238" relation="include">
        </childnode>
      </node>
      <node id="264249">
        <label>SampleHandler/SamplePtr.h</label>
        <link refid="d3/deb/SamplePtr_8h_source"/>
        <childnode refid="264236" relation="include">
        </childnode>
        <childnode refid="264250" relation="include">
        </childnode>
      </node>
      <node id="264247">
        <label>RootCoreUtils/PrintMsg.h</label>
        <link refid="d2/d5f/PrintMsg_8h_source"/>
        <childnode refid="264242" relation="include">
        </childnode>
        <childnode refid="264238" relation="include">
        </childnode>
        <childnode refid="264248" relation="include">
        </childnode>
      </node>
      <node id="264246">
        <label>RootCoreUtils/ThrowMsg.h</label>
        <link refid="dd/db7/ThrowMsg_8h_source"/>
        <childnode refid="264242" relation="include">
        </childnode>
        <childnode refid="264247" relation="include">
        </childnode>
      </node>
      <node id="264244">
        <label>set</label>
      </node>
      <node id="264245">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="264242" relation="include">
        </childnode>
      </node>
      <node id="264236">
        <label>SampleHandler/Global.h</label>
        <link refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h_source"/>
      </node>
      <node id="264250">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d9/d12/SampleMeta_8cxx_1ae029c793cecefab4175c83f8a83e2db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(SH::SampleMeta) namespace SH</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="dc/d78/classSH_1_1SampleMeta" kindref="compound">SH::SampleMeta</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/SampleMeta.cxx" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/SampleMeta.cxx" bodystart="24" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Nils<sp/>Krumnack<sp/>2012.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(krumnack@iastate.edu)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/SampleMeta.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/ThrowMsg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/SamplePtr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">ClassImp<sp/>(<ref refid="dc/d78/classSH_1_1SampleMeta" kindref="compound" tooltip="A Sample that consists only of Meta-Information.">SH::SampleMeta</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">namespace<sp/>SH</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SampleMeta<sp/>::<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>testInvariant<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="30"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>SampleMeta<sp/>::</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>SampleMeta<sp/>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Sample<sp/>(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>SampleMeta<sp/>::<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>SampleMeta<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Sample<sp/>(name)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>std::size_t<sp/>SampleMeta<sp/>::</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>getNumFiles<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rationale:<sp/>this<sp/>is<sp/>just<sp/>so<sp/>that<sp/>print()<sp/>will<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>std::string<sp/>SampleMeta<sp/>::</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>getFileName<sp/>(std::size_t<sp/></highlight><highlight class="comment">/*index*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;fileName()<sp/>should<sp/>not<sp/>be<sp/>called<sp/>on<sp/>SampleMeta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//compiler<sp/>dummy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>SamplePtr<sp/>SampleMeta<sp/>::</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>doMakeLocal<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;makeLocal()<sp/>should<sp/>not<sp/>be<sp/>called<sp/>on<sp/>SampleMeta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//compiler<sp/>dummy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>SampleMeta<sp/>::</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>doMakeFileList<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="86"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>result;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/SampleMeta.cxx"/>
  </compounddef>
</doxygen>
