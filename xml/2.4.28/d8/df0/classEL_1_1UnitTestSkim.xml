<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/df0/classEL_1_1UnitTestSkim" kind="class" prot="public">
    <compoundname>EL::UnitTestSkim</compoundname>
    <basecompoundref refid="de/ddb/classEL_1_1Algorithm" prot="public" virt="non-virtual">EL::Algorithm</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/df0/classEL_1_1UnitTestSkim_1a10875469bb495f204cf687cd27d9d5c5" prot="private" static="no" mutable="no">
        <type><ref refid="d5/d4e/classEL_1_1NTupleSvc" kindref="compound">NTupleSvc</ref> *</type>
        <definition>NTupleSvc* EL::UnitTestSkim::m_skim</definition>
        <argsstring></argsstring>
        <name>m_skim</name>
        <briefdescription>
<para>description: the output algorithm we use </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="88" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/df0/classEL_1_1UnitTestSkim_1a3542d964b4b14d04ee33cbddd2870b45" prot="private" static="no" mutable="no">
        <type>Int_t</type>
        <definition>Int_t EL::UnitTestSkim::el_n</definition>
        <argsstring></argsstring>
        <name>el_n</name>
        <briefdescription>
<para>description: the member we read into </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/df0/classEL_1_1UnitTestSkim_1ab0a94dad70d77a93e66de2d1d1375443" prot="private" static="no" mutable="no">
        <type>Int_t</type>
        <definition>Int_t EL::UnitTestSkim::el_n2</definition>
        <argsstring></argsstring>
        <name>el_n2</name>
        <briefdescription>
<para>description: the member we write from </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/df0/classEL_1_1UnitTestSkim_1a6ff13a7b7b4cf1303070d8a59b29da36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::UnitTestSkim::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1afa8999f46656a42d53df3731216f1296">testInvariant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: test the invariant of this object guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/Root/UnitTestSkim.cxx" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="d8/df0/classEL_1_1UnitTestSkim_1ad6570368099826e0f9dc6e33b10385a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::UnitTestSkim::UnitTestSkim</definition>
        <argsstring>()</argsstring>
        <name>UnitTestSkim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard default constructor guarantee: strong failures: out of memory I </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/Root/UnitTestSkim.cxx" bodystart="37" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/df0/classEL_1_1UnitTestSkim_1aac73b4fdd4e55c072f2964b02910b167" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>StatusCode EL::UnitTestSkim::changeInput</definition>
        <argsstring>(bool firstFile)</argsstring>
        <name>changeInput</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a555bf98d9d040bd8cca3cb55473fac0a">changeInput</reimplements>
        <param>
          <type>bool</type>
          <declname>firstFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do all changes to work with a new input file, e.g. set new branch addresses. if firstFile is set, this method is called just before init() is called guarantee: basic failures: algorithm dependent </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/Root/UnitTestSkim.cxx" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="d8/df0/classEL_1_1UnitTestSkim_1ada503a6e0ee0da28ba29a820037077c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>StatusCode EL::UnitTestSkim::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1ad880ac0eae790193a28d0ec063727f5e">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do everything that needs to be done before running the algorithm, e.g. create output n-tuples and histograms. this method is called only once right after changeInput(true) is called guarantee: basic failures: algorithm dependent rationale: in principle all this work could be done on changeInput(true). However, providing this method should make it easier for the user to set up all his outputs and to do so only once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/Root/UnitTestSkim.cxx" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="d8/df0/classEL_1_1UnitTestSkim_1a03602b02299d46ade71313ed39799965" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>StatusCode EL::UnitTestSkim::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a2ca11106132eab43a10bba3be427ead8">execute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: process the next event guarantee: basic failures: algorithm dependent rationale: the virtual part of Algorithm::process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="78" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/Root/UnitTestSkim.cxx" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="d8/df0/classEL_1_1UnitTestSkim_1ac3e98067540129397fc28a56f2a371ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::UnitTestSkim::ClassDef</definition>
        <argsstring>(UnitTestSkim, 1)</argsstring>
        <name>ClassDef</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1aaaf7e4b47c721a094449edc60a2ffe88">ClassDef</reimplements>
        <param>
          <type><ref refid="d8/df0/classEL_1_1UnitTestSkim" kindref="compound">UnitTestSkim</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="22678">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
      </node>
      <node id="22677">
        <label>EL::UnitTestSkim</label>
        <link refid="d8/df0/classEL_1_1UnitTestSkim"/>
        <childnode refid="22678" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="22680">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
        <childnode refid="22681" relation="usage">
          <edgelabel>m_wk</edgelabel>
        </childnode>
      </node>
      <node id="22681">
        <label>EL::Worker</label>
        <link refid="da/d12/classEL_1_1Worker"/>
        <childnode refid="22682" relation="usage">
          <edgelabel>m_metaData</edgelabel>
        </childnode>
      </node>
      <node id="22685">
        <label>string</label>
      </node>
      <node id="22684">
        <label>EL::WhiteBoardSvc</label>
        <link refid="d5/dda/classEL_1_1WhiteBoardSvc"/>
        <childnode refid="22680" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22679">
        <label>EL::UnitTestSkim</label>
        <link refid="d8/df0/classEL_1_1UnitTestSkim"/>
        <childnode refid="22680" relation="public-inheritance">
        </childnode>
        <childnode refid="22683" relation="usage">
          <edgelabel>m_skim</edgelabel>
        </childnode>
      </node>
      <node id="22682">
        <label>SH::MetaObject</label>
        <link refid="db/d3a/classSH_1_1MetaObject"/>
      </node>
      <node id="22683">
        <label>EL::NTupleSvc</label>
        <link refid="d5/d4e/classEL_1_1NTupleSvc"/>
        <childnode refid="22680" relation="public-inheritance">
        </childnode>
        <childnode refid="22684" relation="usage">
          <edgelabel>m_whiteboard</edgelabel>
        </childnode>
        <childnode refid="22685" relation="usage">
          <edgelabel>m_treeName</edgelabel>
          <edgelabel>m_outputName</edgelabel>
          <edgelabel>m_tree_title</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopAlgs/EventLoopAlgs/UnitTestSkim.h" bodystart="26" bodyend="99"/>
    <listofallmembers>
      <member refid="de/ddb/classEL_1_1Algorithm_1abb182dee6741786ce59ddbd8a8fc4cc0" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>Algorithm</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a9e2072bd4fdda18ebc86f847b691d9b9" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>book</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1aac73b4fdd4e55c072f2964b02910b167" prot="private" virt="virtual"><scope>EL::UnitTestSkim</scope><name>changeInput</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1ac3e98067540129397fc28a56f2a371ef" prot="private" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>ClassDef</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1a3542d964b4b14d04ee33cbddd2870b45" prot="private" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>el_n</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1ab0a94dad70d77a93e66de2d1d1375443" prot="private" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>el_n2</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1a03602b02299d46ade71313ed39799965" prot="private" virt="virtual"><scope>EL::UnitTestSkim</scope><name>execute</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a03872c24f8a637ba069b61d847ad557e" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>hist</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1ada503a6e0ee0da28ba29a820037077c2" prot="private" virt="virtual"><scope>EL::UnitTestSkim</scope><name>initialize</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1a10875469bb495f204cf687cd27d9d5c5" prot="private" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>m_skim</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a468b0314089506f2c36445cfc84f673b" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d3345f2effc1ea5b8add736df764ca7" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1ad89c787f00a88c7b51a23a4a397f5c05" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>msgLvl</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a767c1725616f14d347b79002d755bf55" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>setMsgLevel</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1a6ff13a7b7b4cf1303070d8a59b29da36" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>testInvariant</name></member>
      <member refid="d8/df0/classEL_1_1UnitTestSkim_1ad6570368099826e0f9dc6e33b10385a0" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>UnitTestSkim</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>wk</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d787a867dbe55af8241032c7b4aabf4" prot="public" virt="non-virtual"><scope>EL::UnitTestSkim</scope><name>~Algorithm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
