<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/dec/StandaloneNavigation_8cxx" kind="file">
    <compoundname>StandaloneNavigation.cxx</compoundname>
    <includes refid="da/dfe/StandaloneNavigation_8h" local="yes">TrigNavStructure/StandaloneNavigation.h</includes>
    <includes refid="df/d30/TypelessHolder_8h" local="yes">TrigNavStructure/TypelessHolder.h</includes>
    <incdepgraph>
      <node id="328359">
        <label>TrigNavStructure/TrigNavStructure.h</label>
        <link refid="d2/db8/TrigNavStructure_8h_source"/>
        <childnode refid="328360" relation="include">
        </childnode>
        <childnode refid="328361" relation="include">
        </childnode>
        <childnode refid="328368" relation="include">
        </childnode>
        <childnode refid="328369" relation="include">
        </childnode>
        <childnode refid="328370" relation="include">
        </childnode>
      </node>
      <node id="328377">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="328363" relation="include">
        </childnode>
        <childnode refid="328372" relation="include">
        </childnode>
        <childnode refid="328378" relation="include">
        </childnode>
        <childnode refid="328379" relation="include">
        </childnode>
      </node>
      <node id="328379">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="328369">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="328363" relation="include">
        </childnode>
        <childnode refid="328360" relation="include">
        </childnode>
        <childnode refid="328366" relation="include">
        </childnode>
      </node>
      <node id="328364">
        <label>stdint.h</label>
      </node>
      <node id="328382">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="328375">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="328363" relation="include">
        </childnode>
        <childnode refid="328372" relation="include">
        </childnode>
        <childnode refid="328376" relation="include">
        </childnode>
      </node>
      <node id="328372">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328368">
        <label>TrigNavStructure/TriggerElementFactory.h</label>
        <link refid="d1/dc0/TriggerElementFactory_8h_source"/>
        <childnode refid="328360" relation="include">
        </childnode>
        <childnode refid="328366" relation="include">
        </childnode>
        <childnode refid="328361" relation="include">
        </childnode>
      </node>
      <node id="328363">
        <label>string</label>
      </node>
      <node id="328362">
        <label>map</label>
      </node>
      <node id="328367">
        <label>boost/variant.hpp</label>
      </node>
      <node id="328357">
        <label>TrigNavStructure/StandaloneNavigation.h</label>
        <link refid="da/dfe/StandaloneNavigation_8h_source"/>
        <childnode refid="328358" relation="include">
        </childnode>
        <childnode refid="328359" relation="include">
        </childnode>
      </node>
      <node id="328376">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="328366">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="328364" relation="include">
        </childnode>
        <childnode refid="328367" relation="include">
        </childnode>
      </node>
      <node id="328370">
        <label>TrigNavStructure/TrigHolderStructure.h</label>
        <link refid="df/ded/TrigHolderStructure_8h_source"/>
        <childnode refid="328358" relation="include">
        </childnode>
        <childnode refid="328362" relation="include">
        </childnode>
        <childnode refid="328363" relation="include">
        </childnode>
        <childnode refid="328367" relation="include">
        </childnode>
        <childnode refid="328371" relation="include">
        </childnode>
        <childnode refid="328366" relation="include">
        </childnode>
        <childnode refid="328369" relation="include">
        </childnode>
        <childnode refid="328361" relation="include">
        </childnode>
      </node>
      <node id="328361">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="328362" relation="include">
        </childnode>
        <childnode refid="328360" relation="include">
        </childnode>
        <childnode refid="328363" relation="include">
        </childnode>
        <childnode refid="328364" relation="include">
        </childnode>
        <childnode refid="328365" relation="include">
        </childnode>
        <childnode refid="328366" relation="include">
        </childnode>
      </node>
      <node id="328381">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="328372" relation="include">
        </childnode>
        <childnode refid="328375" relation="include">
        </childnode>
        <childnode refid="328382" relation="include">
        </childnode>
      </node>
      <node id="328360">
        <label>vector</label>
      </node>
      <node id="328356">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/StandaloneNavigation.cxx</label>
        <link refid="StandaloneNavigation.cxx"/>
        <childnode refid="328357" relation="include">
        </childnode>
        <childnode refid="328383" relation="include">
        </childnode>
      </node>
      <node id="328374">
        <label>sstream</label>
      </node>
      <node id="328365">
        <label>iostream</label>
      </node>
      <node id="328383">
        <label>TrigNavStructure/TypelessHolder.h</label>
        <link refid="df/d30/TypelessHolder_8h_source"/>
        <childnode refid="328369" relation="include">
        </childnode>
      </node>
      <node id="328380">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="328373">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="328363" relation="include">
        </childnode>
        <childnode refid="328374" relation="include">
        </childnode>
        <childnode refid="328372" relation="include">
        </childnode>
        <childnode refid="328375" relation="include">
        </childnode>
        <childnode refid="328377" relation="include">
        </childnode>
        <childnode refid="328380" relation="include">
        </childnode>
      </node>
      <node id="328378">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328371">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="328363" relation="include">
        </childnode>
        <childnode refid="328372" relation="include">
        </childnode>
        <childnode refid="328373" relation="include">
        </childnode>
        <childnode refid="328381" relation="include">
        </childnode>
      </node>
      <node id="328358">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/StandaloneNavigation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TypelessHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">HLT::StandaloneNavigation::StandaloneNavigation(){</highlight></codeline>
<codeline lineno="5"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">HLT::StandaloneNavigation::~StandaloneNavigation(){</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation_1a3be015376a5a94c813abec1947133996" kindref="member" tooltip="method serizlizes the helper objects allowing use of FeatureAccessHelpers w/o CLID...">HLT::StandaloneNavigation::serializeHolders</ref>(<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>output<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holder:<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad5b7156154b1a4272cf7e9e4c3b174a2" kindref="member" tooltip="structure for feature holders">m_holderstorage</ref>.getAllHolders())<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>size<sp/>placeholder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>holderSizeIndex<sp/>=<sp/>output.size();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>output.push_back(0);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>holder-&gt;serialize(output);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>output[holderSizeIndex]<sp/>=<sp/>output.size()<sp/>-<sp/>holderSizeIndex<sp/>-1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HLT::StandaloneNavigation::deserializeHolders(std::vector&lt;uint32_t&gt;::const_iterator&amp;<sp/>start,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;::const_iterator&amp;<sp/>end)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>start<sp/>==<sp/>end<sp/>)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>holders<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>holderPayloadSize<sp/>=<sp/>*start;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>++start;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>class_id_type<sp/>clid;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>label;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>sub_index_type<sp/>sub;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;::const_iterator<sp/>oneBlobIt<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>couldRead<sp/>=<sp/>BaseHolder::enquireSerialized(oneBlobIt,<sp/>end,<sp/>clid,<sp/>label,<sp/>sub);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>couldRead<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="comment">//<sp/>to<sp/>few<sp/>data<sp/>words<sp/>essentially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>holder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holder<sp/>=<sp/>std::make_shared&lt;TypelessHolder&gt;(clid,<sp/>label,<sp/>sub);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>m_holderstorage.registerHolder(holder);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!status){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>registering<sp/>a<sp/>holder&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::advance(start,<sp/>holderPayloadSize);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation_1aa206a44ccf10cd94cd95a3018d0ab489" kindref="member" tooltip="method serizlizes entire navigation">HLT::StandaloneNavigation::serialize</ref>(<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>output<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version=3;<sp/></highlight><highlight class="comment">//GetBack<sp/>-<sp/>shall<sp/>we<sp/>change<sp/>it<sp/>to<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>output.push_back(version);<ref refid="d1/da9/structHLTNavDetails_1_1FillSize" kindref="compound"></ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="d1/da9/structHLTNavDetails_1_1FillSize" kindref="compound"></ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="d1/da9/structHLTNavDetails_1_1FillSize" kindref="compound">  ::HLTNavDetails::FillSize</ref><sp/>fs(output);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a5250b903e822670b8bfa72c8df2ffb15" kindref="member" tooltip="method serizlizes the navigation structure">serializeTEs</ref>(output)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation_1a3be015376a5a94c813abec1947133996" kindref="member" tooltip="method serizlizes the helper objects allowing use of FeatureAccessHelpers w/o CLID...">serializeHolders</ref>(output)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HLT::StandaloneNavigation::deserialize(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>input<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>using<sp/>namespace<sp/>std;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;deserializing<sp/>navigation<sp/>of<sp/>size:<sp/>&quot;<sp/>&lt;&lt;<sp/>input.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;::const_iterator<sp/>inputIt<sp/>=<sp/>input.begin();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version<sp/>=<sp/>*inputIt++;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;version<sp/>&quot;<sp/>&lt;&lt;<sp/>version<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>totalSize<sp/>=<sp/>*inputIt++;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//remove<sp/>unused<sp/>warning;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>(void)(version);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>(void)(totalSize);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!deserializeTEs(inputIt,input.size()))<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!deserializeHolders(inputIt,input.end()))<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/StandaloneNavigation.cxx"/>
  </compounddef>
</doxygen>
