<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/d1d/Muon__v1_8cxx" kind="file">
    <compoundname>Muon_v1.cxx</compoundname>
    <includes local="no">vector</includes>
    <includes refid="d1/d0c/AuxStoreAccessorMacros_8h" local="yes">xAODCore/AuxStoreAccessorMacros.h</includes>
    <includes refid="d1/d7c/getIsolationAccessor_8h" local="yes">xAODPrimitives/tools/getIsolationAccessor.h</includes>
    <includes refid="d2/d15/TrackParticle_8h" local="yes">xAODTracking/TrackParticle.h</includes>
    <includes refid="db/d27/TrackSummaryAccessors__v1_8h" local="yes">xAODTracking/TrackSummaryAccessors_v1.h</includes>
    <includes refid="df/d25/getIsolationCorrectionAccessor_8h" local="yes">xAODPrimitives/tools/getIsolationCorrectionAccessor.h</includes>
    <includes refid="da/dde/Muon__v1_8h" local="yes">xAODMuon/versions/Muon_v1.h</includes>
    <includes refid="d6/d0a/MuonAccessors__v1_8h" local="yes">MuonAccessors_v1.h</includes>
    <includes refid="d4/d92/MuonTrackSummaryAccessors__v1_8h" local="yes">MuonTrackSummaryAccessors_v1.h</includes>
    <incdepgraph>
      <node id="397750">
        <label>list</label>
      </node>
      <node id="397759">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="397744" relation="include">
        </childnode>
        <childnode refid="397751" relation="include">
        </childnode>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397740" relation="include">
        </childnode>
        <childnode refid="397671" relation="include">
        </childnode>
      </node>
      <node id="397660">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx</label>
        <link refid="Muon_v1.cxx"/>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397662" relation="include">
        </childnode>
        <childnode refid="397663" relation="include">
        </childnode>
        <childnode refid="397729" relation="include">
        </childnode>
        <childnode refid="397788" relation="include">
        </childnode>
        <childnode refid="397789" relation="include">
        </childnode>
        <childnode refid="397792" relation="include">
        </childnode>
        <childnode refid="397814" relation="include">
        </childnode>
        <childnode refid="397815" relation="include">
        </childnode>
      </node>
      <node id="397744">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="397713">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="397766">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="397767" relation="include">
        </childnode>
        <childnode refid="397745" relation="include">
        </childnode>
        <childnode refid="397679" relation="include">
        </childnode>
        <childnode refid="397768" relation="include">
        </childnode>
      </node>
      <node id="397715">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="397670" relation="include">
        </childnode>
        <childnode refid="397672" relation="include">
        </childnode>
        <childnode refid="397679" relation="include">
        </childnode>
        <childnode refid="397680" relation="include">
        </childnode>
      </node>
      <node id="397716">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="397682">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="397666" relation="include">
        </childnode>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397683" relation="include">
        </childnode>
        <childnode refid="397681" relation="include">
        </childnode>
      </node>
      <node id="397779">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="397780" relation="include">
        </childnode>
        <childnode refid="397781" relation="include">
        </childnode>
        <childnode refid="397782" relation="include">
        </childnode>
      </node>
      <node id="397678">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="397680">
        <label>functional</label>
      </node>
      <node id="397788">
        <label>xAODTracking/TrackSummaryAccessors_v1.h</label>
        <link refid="db/d27/TrackSummaryAccessors__v1_8h_source"/>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397778" relation="include">
        </childnode>
      </node>
      <node id="397741">
        <label>boost/version.hpp</label>
      </node>
      <node id="397676">
        <label>limits</label>
      </node>
      <node id="397815">
        <label>MuonTrackSummaryAccessors_v1.h</label>
        <link refid="d4/d92/MuonTrackSummaryAccessors__v1_8h_source"/>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397778" relation="include">
        </childnode>
      </node>
      <node id="397683">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="397711">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="397673">
        <label>iterator</label>
      </node>
      <node id="397804">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="397801" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
      </node>
      <node id="397699">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="397677" relation="include">
        </childnode>
        <childnode refid="397700" relation="include">
        </childnode>
      </node>
      <node id="397806">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="397765">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="397771">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="397772" relation="include">
        </childnode>
        <childnode refid="397739" relation="include">
        </childnode>
        <childnode refid="397676" relation="include">
        </childnode>
        <childnode refid="397680" relation="include">
        </childnode>
        <childnode refid="397773" relation="include">
        </childnode>
      </node>
      <node id="397723">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="397667" relation="include">
        </childnode>
        <childnode refid="397724" relation="include">
        </childnode>
        <childnode refid="397725" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
        <childnode refid="397677" relation="include">
        </childnode>
      </node>
      <node id="397696">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397674" relation="include">
        </childnode>
      </node>
      <node id="397685">
        <label>stdint.h</label>
      </node>
      <node id="397751">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="397676" relation="include">
        </childnode>
        <childnode refid="397752" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
        <childnode refid="397674" relation="include">
        </childnode>
        <childnode refid="397668" relation="include">
        </childnode>
      </node>
      <node id="397737">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="397693">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
      </node>
      <node id="397688">
        <label>RVersion.h</label>
      </node>
      <node id="397669">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="397670" relation="include">
        </childnode>
        <childnode refid="397679" relation="include">
        </childnode>
        <childnode refid="397680" relation="include">
        </childnode>
      </node>
      <node id="397807">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="397735" relation="include">
        </childnode>
        <childnode refid="397796" relation="include">
        </childnode>
        <childnode refid="397800" relation="include">
        </childnode>
      </node>
      <node id="397675">
        <label>cmath</label>
      </node>
      <node id="397727">
        <label>cassert</label>
      </node>
      <node id="397742">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="397761">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="397809">
        <label>xAODMuon/MuonSegment.h</label>
        <link refid="de/d5b/MuonSegment_8h_source"/>
        <childnode refid="397810" relation="include">
        </childnode>
      </node>
      <node id="397725">
        <label>stdexcept</label>
      </node>
      <node id="397714">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="397781">
        <label>Eigen/Core</label>
      </node>
      <node id="397748">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="397783">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="397735" relation="include">
        </childnode>
        <childnode refid="397784" relation="include">
        </childnode>
      </node>
      <node id="397795">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="397735" relation="include">
        </childnode>
        <childnode refid="397796" relation="include">
        </childnode>
        <childnode refid="397797" relation="include">
        </childnode>
      </node>
      <node id="397756">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="397775">
        <label>TLorentzVector.h</label>
      </node>
      <node id="397801">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="397677" relation="include">
        </childnode>
        <childnode refid="397802" relation="include">
        </childnode>
      </node>
      <node id="397677">
        <label>string</label>
      </node>
      <node id="397717">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="397667" relation="include">
        </childnode>
        <childnode refid="397666" relation="include">
        </childnode>
        <childnode refid="397699" relation="include">
        </childnode>
        <childnode refid="397696" relation="include">
        </childnode>
        <childnode refid="397684" relation="include">
        </childnode>
        <childnode refid="397718" relation="include">
        </childnode>
        <childnode refid="397719" relation="include">
        </childnode>
        <childnode refid="397702" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397672" relation="include">
        </childnode>
        <childnode refid="397674" relation="include">
        </childnode>
        <childnode refid="397720" relation="include">
        </childnode>
        <childnode refid="397721" relation="include">
        </childnode>
        <childnode refid="397709" relation="include">
        </childnode>
        <childnode refid="397722" relation="include">
        </childnode>
      </node>
      <node id="397691">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
      </node>
      <node id="397730">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="397731" relation="include">
        </childnode>
        <childnode refid="397685" relation="include">
        </childnode>
        <childnode refid="397732" relation="include">
        </childnode>
        <childnode refid="397735" relation="include">
        </childnode>
        <childnode refid="397774" relation="include">
        </childnode>
        <childnode refid="397778" relation="include">
        </childnode>
        <childnode refid="397783" relation="include">
        </childnode>
        <childnode refid="397785" relation="include">
        </childnode>
        <childnode refid="397786" relation="include">
        </childnode>
      </node>
      <node id="397663">
        <label>xAODPrimitives/tools/getIsolationAccessor.h</label>
        <link refid="d1/d7c/getIsolationAccessor_8h_source"/>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397728" relation="include">
        </childnode>
      </node>
      <node id="397720">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="397813">
        <label>xAODMuon/versions/MuonSegmentContainer_v1.h</label>
        <link refid="dd/dcd/MuonSegmentContainer__v1_8h_source"/>
        <childnode refid="397735" relation="include">
        </childnode>
        <childnode refid="397810" relation="include">
        </childnode>
      </node>
      <node id="397753">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="397736" relation="include">
        </childnode>
        <childnode refid="397751" relation="include">
        </childnode>
        <childnode refid="397754" relation="include">
        </childnode>
        <childnode refid="397756" relation="include">
        </childnode>
        <childnode refid="397741" relation="include">
        </childnode>
        <childnode refid="397673" relation="include">
        </childnode>
        <childnode refid="397674" relation="include">
        </childnode>
      </node>
      <node id="397767">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="397728">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="397768">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="397769" relation="include">
        </childnode>
      </node>
      <node id="397790">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="397731" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
      </node>
      <node id="397769">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="397689">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="397706">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="397758">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="397753" relation="include">
        </childnode>
        <childnode refid="397673" relation="include">
        </childnode>
        <childnode refid="397671" relation="include">
        </childnode>
        <childnode refid="397759" relation="include">
        </childnode>
      </node>
      <node id="397721">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="397810">
        <label>versions/MuonSegment_v1.h</label>
        <link refid="df/d0d/MuonSegment__v1_8h_source"/>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397732" relation="include">
        </childnode>
        <childnode refid="397811" relation="include">
        </childnode>
        <childnode refid="397812" relation="include">
        </childnode>
      </node>
      <node id="397703">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="397754">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="397736" relation="include">
        </childnode>
        <childnode refid="397687" relation="include">
        </childnode>
        <childnode refid="397679" relation="include">
        </childnode>
        <childnode refid="397755" relation="include">
        </childnode>
      </node>
      <node id="397665">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="397687">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="397688" relation="include">
        </childnode>
        <childnode refid="397689" relation="include">
        </childnode>
      </node>
      <node id="397719">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="397712">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="397811">
        <label>MuonIdHelpers/MuonStationIndex.h</label>
        <link refid="d5/d3f/MuonStationIndex_8h_source"/>
        <childnode refid="397677" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
      </node>
      <node id="397797">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="397752">
        <label>limits.h</label>
      </node>
      <node id="397808">
        <label>xAODMuon/MuonSegmentContainer.h</label>
        <link refid="d5/d26/MuonSegmentContainer_8h_source"/>
        <childnode refid="397809" relation="include">
        </childnode>
        <childnode refid="397813" relation="include">
        </childnode>
        <childnode refid="397787" relation="include">
        </childnode>
      </node>
      <node id="397746">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="397747" relation="include">
        </childnode>
      </node>
      <node id="397792">
        <label>xAODMuon/versions/Muon_v1.h</label>
        <link refid="da/dde/Muon__v1_8h_source"/>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397732" relation="include">
        </childnode>
        <childnode refid="397790" relation="include">
        </childnode>
        <childnode refid="397728" relation="include">
        </childnode>
        <childnode refid="397791" relation="include">
        </childnode>
        <childnode refid="397774" relation="include">
        </childnode>
        <childnode refid="397778" relation="include">
        </childnode>
        <childnode refid="397793" relation="include">
        </childnode>
        <childnode refid="397798" relation="include">
        </childnode>
        <childnode refid="397808" relation="include">
        </childnode>
        <childnode refid="397731" relation="include">
        </childnode>
        <childnode refid="397685" relation="include">
        </childnode>
        <childnode refid="397787" relation="include">
        </childnode>
        <childnode refid="397735" relation="include">
        </childnode>
      </node>
      <node id="397698">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="397699" relation="include">
        </childnode>
        <childnode refid="397676" relation="include">
        </childnode>
        <childnode refid="397685" relation="include">
        </childnode>
        <childnode refid="397701" relation="include">
        </childnode>
      </node>
      <node id="397667">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397669" relation="include">
        </childnode>
      </node>
      <node id="397733">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="397685" relation="include">
        </childnode>
      </node>
      <node id="397782">
        <label>Eigen/Dense</label>
      </node>
      <node id="397670">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="397671" relation="include">
        </childnode>
        <childnode refid="397672" relation="include">
        </childnode>
        <childnode refid="397673" relation="include">
        </childnode>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397674" relation="include">
        </childnode>
        <childnode refid="397675" relation="include">
        </childnode>
        <childnode refid="397676" relation="include">
        </childnode>
        <childnode refid="397677" relation="include">
        </childnode>
        <childnode refid="397678" relation="include">
        </childnode>
      </node>
      <node id="397739">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="397727" relation="include">
        </childnode>
      </node>
      <node id="397774">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="397775" relation="include">
        </childnode>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397776" relation="include">
        </childnode>
        <childnode refid="397683" relation="include">
        </childnode>
      </node>
      <node id="397776">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="397777" relation="include">
        </childnode>
      </node>
      <node id="397800">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="397685" relation="include">
        </childnode>
        <childnode refid="397731" relation="include">
        </childnode>
        <childnode refid="397774" relation="include">
        </childnode>
        <childnode refid="397801" relation="include">
        </childnode>
        <childnode refid="397803" relation="include">
        </childnode>
        <childnode refid="397732" relation="include">
        </childnode>
        <childnode refid="397805" relation="include">
        </childnode>
        <childnode refid="397806" relation="include">
        </childnode>
      </node>
      <node id="397755">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="397751" relation="include">
        </childnode>
        <childnode refid="397739" relation="include">
        </childnode>
      </node>
      <node id="397692">
        <label>typeinfo</label>
      </node>
      <node id="397778">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="397779" relation="include">
        </childnode>
      </node>
      <node id="397726">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="397720" relation="include">
        </childnode>
        <childnode refid="397727" relation="include">
        </childnode>
      </node>
      <node id="397799">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="397800" relation="include">
        </childnode>
        <childnode refid="397787" relation="include">
        </childnode>
      </node>
      <node id="397735">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="397723" relation="include">
        </childnode>
        <childnode refid="397736" relation="include">
        </childnode>
        <childnode refid="397737" relation="include">
        </childnode>
        <childnode refid="397738" relation="include">
        </childnode>
        <childnode refid="397744" relation="include">
        </childnode>
        <childnode refid="397745" relation="include">
        </childnode>
        <childnode refid="397751" relation="include">
        </childnode>
        <childnode refid="397753" relation="include">
        </childnode>
        <childnode refid="397757" relation="include">
        </childnode>
        <childnode refid="397758" relation="include">
        </childnode>
        <childnode refid="397754" relation="include">
        </childnode>
        <childnode refid="397760" relation="include">
        </childnode>
        <childnode refid="397687" relation="include">
        </childnode>
        <childnode refid="397761" relation="include">
        </childnode>
        <childnode refid="397762" relation="include">
        </childnode>
        <childnode refid="397756" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
        <childnode refid="397680" relation="include">
        </childnode>
        <childnode refid="397763" relation="include">
        </childnode>
        <childnode refid="397671" relation="include">
        </childnode>
        <childnode refid="397725" relation="include">
        </childnode>
        <childnode refid="397673" relation="include">
        </childnode>
        <childnode refid="397683" relation="include">
        </childnode>
        <childnode refid="397764" relation="include">
        </childnode>
        <childnode refid="397766" relation="include">
        </childnode>
        <childnode refid="397770" relation="include">
        </childnode>
        <childnode refid="397771" relation="include">
        </childnode>
      </node>
      <node id="397731">
        <label>bitset</label>
      </node>
      <node id="397701">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="397734">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="397718">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="397686">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="397685" relation="include">
        </childnode>
      </node>
      <node id="397700">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="397705">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="397745">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="397746" relation="include">
        </childnode>
        <childnode refid="397738" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397678" relation="include">
        </childnode>
        <childnode refid="397748" relation="include">
        </childnode>
        <childnode refid="397704" relation="include">
        </childnode>
        <childnode refid="397749" relation="include">
        </childnode>
      </node>
      <node id="397681">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="397780">
        <label>unistd.h</label>
      </node>
      <node id="397764">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="397765" relation="include">
        </childnode>
      </node>
      <node id="397690">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="397667" relation="include">
        </childnode>
        <childnode refid="397691" relation="include">
        </childnode>
        <childnode refid="397693" relation="include">
        </childnode>
        <childnode refid="397694" relation="include">
        </childnode>
        <childnode refid="397707" relation="include">
        </childnode>
        <childnode refid="397709" relation="include">
        </childnode>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397715" relation="include">
        </childnode>
        <childnode refid="397716" relation="include">
        </childnode>
      </node>
      <node id="397661">
        <label>vector</label>
      </node>
      <node id="397796">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="397735" relation="include">
        </childnode>
        <childnode refid="397774" relation="include">
        </childnode>
        <childnode refid="397681" relation="include">
        </childnode>
      </node>
      <node id="397772">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="397671" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
      </node>
      <node id="397773">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="397803">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="397804" relation="include">
        </childnode>
      </node>
      <node id="397672">
        <label>utility</label>
      </node>
      <node id="397770">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="397702">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="397798">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="397799" relation="include">
        </childnode>
        <childnode refid="397807" relation="include">
        </childnode>
        <childnode refid="397787" relation="include">
        </childnode>
      </node>
      <node id="397784">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="397743">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="397710">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="397814">
        <label>MuonAccessors_v1.h</label>
        <link refid="d6/d0a/MuonAccessors__v1_8h_source"/>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397792" relation="include">
        </childnode>
      </node>
      <node id="397695">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="397709">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="397710" relation="include">
        </childnode>
        <childnode refid="397711" relation="include">
        </childnode>
        <childnode refid="397712" relation="include">
        </childnode>
        <childnode refid="397713" relation="include">
        </childnode>
        <childnode refid="397714" relation="include">
        </childnode>
      </node>
      <node id="397802">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="397777">
        <label>iosfwd</label>
      </node>
      <node id="397674">
        <label>cstdlib</label>
      </node>
      <node id="397729">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="397730" relation="include">
        </childnode>
        <childnode refid="397787" relation="include">
        </childnode>
      </node>
      <node id="397763">
        <label>iostream</label>
      </node>
      <node id="397724">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="397794">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="397685" relation="include">
        </childnode>
        <childnode refid="397735" relation="include">
        </childnode>
        <childnode refid="397730" relation="include">
        </childnode>
        <childnode refid="397795" relation="include">
        </childnode>
      </node>
      <node id="397666">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="397667" relation="include">
        </childnode>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397681" relation="include">
        </childnode>
      </node>
      <node id="397668">
        <label>cstddef</label>
      </node>
      <node id="397789">
        <label>xAODPrimitives/tools/getIsolationCorrectionAccessor.h</label>
        <link refid="df/d25/getIsolationCorrectionAccessor_8h_source"/>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397790" relation="include">
        </childnode>
        <childnode refid="397728" relation="include">
        </childnode>
        <childnode refid="397791" relation="include">
        </childnode>
      </node>
      <node id="397722">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="397690" relation="include">
        </childnode>
        <childnode refid="397682" relation="include">
        </childnode>
        <childnode refid="397666" relation="include">
        </childnode>
        <childnode refid="397720" relation="include">
        </childnode>
        <childnode refid="397721" relation="include">
        </childnode>
      </node>
      <node id="397662">
        <label>xAODCore/AuxStoreAccessorMacros.h</label>
        <link refid="d1/d0c/AuxStoreAccessorMacros_8h_source"/>
      </node>
      <node id="397749">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="397736" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397750" relation="include">
        </childnode>
        <childnode refid="397727" relation="include">
        </childnode>
        <childnode refid="397674" relation="include">
        </childnode>
        <childnode refid="397683" relation="include">
        </childnode>
      </node>
      <node id="397694">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="397691" relation="include">
        </childnode>
        <childnode refid="397695" relation="include">
        </childnode>
        <childnode refid="397696" relation="include">
        </childnode>
        <childnode refid="397697" relation="include">
        </childnode>
        <childnode refid="397702" relation="include">
        </childnode>
        <childnode refid="397692" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397671" relation="include">
        </childnode>
        <childnode refid="397685" relation="include">
        </childnode>
        <childnode refid="397704" relation="include">
        </childnode>
        <childnode refid="397705" relation="include">
        </childnode>
        <childnode refid="397706" relation="include">
        </childnode>
      </node>
      <node id="397812">
        <label>TrkSegment/SegmentCollection.h</label>
      </node>
      <node id="397785">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="397704">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="397738">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="397717" relation="include">
        </childnode>
        <childnode refid="397736" relation="include">
        </childnode>
        <childnode refid="397737" relation="include">
        </childnode>
        <childnode refid="397664" relation="include">
        </childnode>
        <childnode refid="397690" relation="include">
        </childnode>
        <childnode refid="397723" relation="include">
        </childnode>
        <childnode refid="397739" relation="include">
        </childnode>
        <childnode refid="397682" relation="include">
        </childnode>
        <childnode refid="397740" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397743" relation="include">
        </childnode>
      </node>
      <node id="397791">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="397787">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="397681" relation="include">
        </childnode>
      </node>
      <node id="397708">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="397697">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="397695" relation="include">
        </childnode>
        <childnode refid="397698" relation="include">
        </childnode>
        <childnode refid="397702" relation="include">
        </childnode>
        <childnode refid="397661" relation="include">
        </childnode>
        <childnode refid="397703" relation="include">
        </childnode>
      </node>
      <node id="397671">
        <label>algorithm</label>
      </node>
      <node id="397805">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="397760">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="397786">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="397664">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="397665" relation="include">
        </childnode>
        <childnode refid="397666" relation="include">
        </childnode>
        <childnode refid="397682" relation="include">
        </childnode>
        <childnode refid="397684" relation="include">
        </childnode>
        <childnode refid="397690" relation="include">
        </childnode>
        <childnode refid="397717" relation="include">
        </childnode>
        <childnode refid="397696" relation="include">
        </childnode>
        <childnode refid="397723" relation="include">
        </childnode>
        <childnode refid="397720" relation="include">
        </childnode>
        <childnode refid="397668" relation="include">
        </childnode>
        <childnode refid="397726" relation="include">
        </childnode>
      </node>
      <node id="397684">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="397685" relation="include">
        </childnode>
        <childnode refid="397677" relation="include">
        </childnode>
        <childnode refid="397686" relation="include">
        </childnode>
        <childnode refid="397687" relation="include">
        </childnode>
      </node>
      <node id="397757">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="397753" relation="include">
        </childnode>
        <childnode refid="397739" relation="include">
        </childnode>
        <childnode refid="397673" relation="include">
        </childnode>
      </node>
      <node id="397736">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="397732">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="397685" relation="include">
        </childnode>
        <childnode refid="397677" relation="include">
        </childnode>
        <childnode refid="397733" relation="include">
        </childnode>
        <childnode refid="397687" relation="include">
        </childnode>
        <childnode refid="397734" relation="include">
        </childnode>
      </node>
      <node id="397793">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="397729" relation="include">
        </childnode>
        <childnode refid="397794" relation="include">
        </childnode>
        <childnode refid="397787" relation="include">
        </childnode>
      </node>
      <node id="397747">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="397762">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="397679">
        <label>memory</label>
      </node>
      <node id="397707">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="397693" relation="include">
        </childnode>
        <childnode refid="397694" relation="include">
        </childnode>
        <childnode refid="397708" relation="include">
        </childnode>
      </node>
      <node id="397740">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="397665" relation="include">
        </childnode>
        <childnode refid="397682" relation="include">
        </childnode>
        <childnode refid="397666" relation="include">
        </childnode>
        <childnode refid="397704" relation="include">
        </childnode>
        <childnode refid="397741" relation="include">
        </childnode>
        <childnode refid="397742" relation="include">
        </childnode>
        <childnode refid="397677" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>Muon_v1.cxx<sp/>733572<sp/>2016-04-04<sp/>01:00:14Z<sp/>wleight<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Misc<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxStoreAccessorMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODPrimitives/tools/getIsolationAccessor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/TrackParticle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/TrackSummaryAccessors_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODPrimitives/tools/getIsolationAccessor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODPrimitives/tools/getIsolationCorrectionAccessor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMuon/versions/Muon_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MuonAccessors_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MuonTrackSummaryAccessors_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Athena-only<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_ANALYSIS</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TrkParameters/MeasuredPerigee.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5996418d951dab377bee818244e0f35d" kindref="member" tooltip="Default constructor.">Muon_v1::Muon_v1</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>:<sp/>m_p4(),<sp/>m_p4Cached1(<sp/>false<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(<sp/>Muon_v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>pt)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(<sp/>Muon_v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>eta)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(<sp/>Muon_v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>phi)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>Muon_v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>charge,<sp/>setCharge<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(<sp/>Muon_v1,<sp/>float,<sp/>double,<sp/>e)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Muon_v1::e()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>-<sp/>optimise?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p4().E();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" kindref="member" tooltip="The invariant mass of the particle..">Muon_v1::m</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>105.6583715;</highlight><highlight class="comment">//FIXME<sp/>-<sp/>get<sp/>this<sp/>from<sp/>someplace<sp/>central?<sp/>How<sp/>heavy<sp/>is<sp/>TDatabasePDG::Instance()-&gt;GetParticle(pdg)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" kindref="member" tooltip="Set method for IParticle values.">Muon_v1::setP4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi)<sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc1(<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc2(<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc3(<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>acc1(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)=pt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>acc2(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)=eta;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>acc3(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)=phi;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4Cached1=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a20ae49e73c87258a6932a294a2bef4d2" kindref="member" tooltip="The true rapidity (y) of the particle.">Muon_v1::rapidity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae5a3bb9d9614df29d73dff8cb7a8475d" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>().Rapidity();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3a09d24c04e7d3fbad4bf2fb48b294b6" kindref="member" tooltip="Definition of the 4-momentum type.">Muon_v1::FourMom_t</ref>&amp;<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae5a3bb9d9614df29d73dff8cb7a8475d" kindref="member" tooltip="The full 4-momentum of the particle.">Muon_v1::p4</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>reset<sp/>the<sp/>cached<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_p4Cached1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p4.SetPtEtaPhiM(<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>(),<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>(),<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a10606744f788b78c1af47391bf7744d6" kindref="member" tooltip="The azimuthal angle () of the particle.">phi</ref>(),<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" kindref="member" tooltip="The invariant mass of the particle..">m</ref>()<sp/>);<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p4Cached1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>cached<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_p4;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>float<sp/>Muon_v1::charge()<sp/>const<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(primaryTrackParticle())<sp/>return<sp/>primaryTrackParticle()-&gt;charge();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>something<sp/>has<sp/>gone<sp/>wrong!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>throw<sp/>std::runtime_error(&quot;No<sp/>link<sp/>to<sp/>primary<sp/>TrackParticle!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434" kindref="member">Type::ObjectType</ref><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a987079b3f81af0b3766f7b3a40614dd5" kindref="member" tooltip="The type of the object as a simple enumeration.">Muon_v1::type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434af612e5722903badfe4fd0fd721fc4b13" kindref="member" tooltip="The object is a muon.">Type::Muon</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(<sp/>Muon_v1,<sp/>uint16_t,<sp/>Muon_v1::Author,<sp/>author)<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_WITH_CAST(<sp/>Muon_v1,<sp/>uint16_t,<sp/>Muon_v1::Author,<sp/>author,<sp/>setAuthor)<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>Muon_v1,<sp/>uint16_t,<sp/>allAuthors,<sp/>setAllAuthors)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Muon_v1::addAllAuthor<sp/>(<sp/>const<sp/>Author<sp/>author<sp/>){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint16_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;allAuthors&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>|=<sp/>1&lt;&lt;</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(author);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1aa4ae256d37f65d753f696256dd1d8ba2" kindref="member" tooltip="Returns &amp;#39;true&amp;#39; if &amp;#39;author&amp;#39; is the an author of this muon.">Muon_v1::isAuthor</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Author<sp/>author<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint16_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;allAuthors&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(acc(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)&amp;<sp/>(1&lt;&lt;static_cast&lt;unsigned<sp/>int&gt;(author)));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(<sp/>Muon_v1,<sp/>uint16_t,<sp/>Muon_v1::MuonType,<sp/>muonType)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_WITH_CAST(<sp/>Muon_v1,<sp/>uint16_t,<sp/>Muon_v1::MuonType,<sp/>muonType,<sp/>setMuonType)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Muon_v1::summaryValue(uint8_t&amp;<sp/>value,<sp/>const<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>want<sp/>to<sp/>check<sp/>if<sp/>this<sp/>information<sp/>has<sp/>been<sp/>added<sp/>to<sp/>the<sp/>Muon,<sp/>and<sp/>use<sp/>this<sp/>first<sp/>if<sp/>so.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo<sp/>?Could<sp/>further<sp/>optimise<sp/>the<sp/>below,<sp/>to<sp/>see<sp/>first<sp/>if<sp/>the<sp/>SummaryType<sp/>value<sp/>is<sp/>one<sp/>of<sp/>the<sp/>ones<sp/>we<sp/>write<sp/>to<sp/>Muons?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo<sp/>?Is<sp/>there<sp/>a<sp/>better<sp/>way<sp/>than<sp/>catching<sp/>the<sp/>exception?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Muon_v1::Accessor&lt;<sp/>uint8_t<sp/>&gt;*<sp/>acc<sp/>=<sp/>trackSummaryAccessorV1&lt;uint8_t&gt;(<sp/>information<sp/>);<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref>&amp;<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Okay<sp/>-<sp/>fallback:<sp/>try<sp/>to<sp/>get<sp/>from<sp/>TrackParticle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>el=<sp/>primaryTrackParticleLink();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!el.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*el)-&gt;summaryValue(value,information);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1affd32fc1ebb820034b9e075652b41a77" kindref="member" tooltip="Set method for storing TrackSummary SummaryType information on the Muon (see Aux...">Muon_v1::setSummaryValue</ref>(<sp/>uint8_t<sp/><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref><sp/><sp/>information<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Muon_v1::Accessor&lt;<sp/>uint8_t<sp/>&gt;*<sp/>acc<sp/>=<sp/>trackSummaryAccessorV1&lt;uint8_t&gt;(<sp/>information<sp/>);<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>set<sp/>method<sp/>for<sp/>&apos;float&apos;<sp/>values<sp/>as<sp/>not<sp/>expected<sp/>to<sp/>be<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae8b2a42201894df83702e750e37105d1" kindref="member">Muon_v1::summaryValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>el=<sp/>primaryTrackParticleLink();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!el.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*el)-&gt;summaryValue(value,information);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae4e7724e098dc146048a550feb563f31" kindref="member">Muon_v1::floatSummaryValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref><sp/>information)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>Muon_v1::Accessor&lt;<sp/>float<sp/>&gt;*<sp/>acc<sp/>=<sp/>trackSummaryAccessorV1&lt;<sp/>float<sp/>&gt;(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a6fe7cee0c47b4f5982e25edd02a4a103" kindref="member">Muon_v1::uint8SummaryValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref><sp/>information)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>Muon_v1::Accessor&lt;<sp/>uint8_t<sp/>&gt;*<sp/>acc<sp/>=<sp/>trackSummaryAccessorV1&lt;<sp/>uint8_t<sp/>&gt;(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae8b2a42201894df83702e750e37105d1" kindref="member">Muon_v1::summaryValue</ref>(uint8_t&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1afe1aa7030d6a8b6ec3b9bc62a903c702" kindref="member">MuonSummaryType</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>Muon_v1::Accessor&lt;<sp/>uint8_t<sp/>&gt;*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1aa542050f93a1581fd5e9d69d995793d2" kindref="member">muonTrackSummaryAccessorV1</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc-&gt;isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5957729420800bd4e9783c0b56180bf8" kindref="member">Muon_v1::uint8MuonSummaryValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1afe1aa7030d6a8b6ec3b9bc62a903c702" kindref="member">MuonSummaryType</ref><sp/>information)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Muon_v1::Accessor&lt;<sp/>uint8_t<sp/>&gt;*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1aa542050f93a1581fd5e9d69d995793d2" kindref="member">muonTrackSummaryAccessorV1</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1affd32fc1ebb820034b9e075652b41a77" kindref="member" tooltip="Set method for storing TrackSummary SummaryType information on the Muon (see Aux...">Muon_v1::setSummaryValue</ref>(uint8_t<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1afe1aa7030d6a8b6ec3b9bc62a903c702" kindref="member">MuonSummaryType</ref><sp/>information)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>Muon_v1::Accessor&lt;<sp/>uint8_t<sp/>&gt;*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1aa542050f93a1581fd5e9d69d995793d2" kindref="member">muonTrackSummaryAccessorV1</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/><sp/>value;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1afbca0a7c8e3ad29973552fbc23c9ed70" kindref="member">Muon_v1::parameter</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member" tooltip="Enum for parameter indexes.">Muon_v1::ParamDef</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Muon_v1::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>parameterAccessorV1&lt;float&gt;(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1afd5b989635ac4f367b7360e51f7f4e25" kindref="member">xAOD::Muon_v1::floatParameter</ref>(<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member" tooltip="Enum for parameter indexes.">xAOD::Muon_v1::ParamDef</ref><sp/>information)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Muon_v1::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>parameterAccessorV1&lt;float&gt;(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a65f56c91b09fe76c345bcb32d79470bf" kindref="member" tooltip="Set method for parameter values.">Muon_v1::setParameter</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member" tooltip="Enum for parameter indexes.">Muon_v1::ParamDef</ref><sp/>information){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Muon_v1::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>parameterAccessorV1&lt;float&gt;(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Muon_v1::setParameter<sp/>-<sp/>no<sp/>float<sp/>accessor<sp/>for<sp/>paramdef<sp/>number:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(information));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1afbca0a7c8e3ad29973552fbc23c9ed70" kindref="member">Muon_v1::parameter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member" tooltip="Enum for parameter indexes.">Muon_v1::ParamDef</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Muon_v1::Accessor&lt; int &gt;</ref>*<sp/>acc<sp/>=<sp/>parameterAccessorV1&lt;int&gt;(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1aa5aa1c8718a6109f52e74b02f33fb3f8" kindref="member">xAOD::Muon_v1::intParameter</ref>(<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member" tooltip="Enum for parameter indexes.">xAOD::Muon_v1::ParamDef</ref><sp/>information)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Muon_v1::Accessor&lt; int &gt;</ref>*<sp/>acc<sp/>=<sp/>parameterAccessorV1&lt;int&gt;(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a65f56c91b09fe76c345bcb32d79470bf" kindref="member" tooltip="Set method for parameter values.">Muon_v1::setParameter</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member" tooltip="Enum for parameter indexes.">Muon_v1::ParamDef</ref><sp/>information){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Muon_v1::Accessor&lt; int &gt;</ref>*<sp/>acc<sp/>=<sp/>parameterAccessorV1&lt;int&gt;(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Muon_v1::setParameter<sp/>-<sp/>no<sp/>int<sp/>accessor<sp/>for<sp/>paramdef<sp/>number:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(information));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8" kindref="member">xAOD::Muon_v1::Quality</ref><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a28e0c8821654aca0b6d71a0b25e6f0fe" kindref="member" tooltip="Low purity.">Muon_v1::quality</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint8_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;quality&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8" kindref="member">Quality</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(temp&amp;3);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Muon_v1::setQuality(<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8" kindref="member">xAOD::Muon_v1::Quality</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint8_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;quality&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>&amp;<sp/>~(0x7);<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>first<sp/>3<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>|=<sp/>temp;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a0226a091aabc064041fbb941c9b186d6" kindref="member">Muon_v1::passesIDCuts</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint8_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;quality&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>4th<sp/>bit<sp/>for<sp/>&apos;passesIDCuts&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp&amp;8;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a0f1a196ad5394c0d313ecc9b5ea91ce0" kindref="member" tooltip="Set whether passes the MCP ID hit cuts.">Muon_v1::setPassesIDCuts</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint8_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;quality&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>4th<sp/>bit<sp/>for<sp/>&apos;passesIDCuts&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>|=<sp/>8;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>&amp;=<sp/>247;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2a73bba4cdefafd7d0174bf060a4d5ec" kindref="member">Muon_v1::passesHighPtCuts</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint8_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;quality&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>5th<sp/>bit<sp/>for<sp/>&apos;passesHighPtCuts&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp&amp;16;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5415c57234a7893cddbde96a8ae4235d" kindref="member" tooltip="Set whether passes the MCP ID hit cuts.">Muon_v1::setPassesHighPtCuts</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint8_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;quality&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>5th<sp/>bit<sp/>for<sp/>&apos;passesHighPtCuts&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>|=<sp/>16;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>&amp;=<sp/>239;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(<sp/>Muon_v1,<sp/>uint8_t,<sp/>Muon_v1::Quality,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AUXSTORE_PRIMITIVE_SETTER_WITH_CAST(<sp/>Muon_v1,<sp/>uint8_t,<sp/>Muon_v1::Quality,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality,<sp/>setQuality<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>Muon_v1,<sp/>bool,<sp/>passesIDCuts,<sp/><sp/><sp/><sp/><sp/><sp/>setPassesIDCuts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>Muon_v1,<sp/>bool,<sp/>passesHighPtCuts,<sp/><sp/>setPassesHighPtCuts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a0f955a0deee65306b56220533b4d7cd9" kindref="member" tooltip="Accessor for Isolation values. If &amp;#39;information&amp;#39; is stored in this xAOD::Muon...">Muon_v1::isolation</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a97b0164b8842a623c5539294a8837b55" kindref="member">getIsolationAccessor</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a0f955a0deee65306b56220533b4d7cd9" kindref="member" tooltip="Accessor for Isolation values. If &amp;#39;information&amp;#39; is stored in this xAOD::Muon...">Muon_v1::isolation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a97b0164b8842a623c5539294a8837b55" kindref="member">getIsolationAccessor</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>type<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1adabfd97fae0cf16e412f32802d2f838e" kindref="member" tooltip="Set method for Isolation values.">Muon_v1::setIsolation</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>information){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a97b0164b8842a623c5539294a8837b55" kindref="member">getIsolationAccessor</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ac7a276c8b1256186edc0cdad6c2a9ea9" kindref="member" tooltip="Accessor for Isolation Calo correction. If &amp;#39;information&amp;#39; is stored in this...">Muon_v1::isolationCaloCorrection</ref>(<sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>type,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref><sp/>param)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,type,param);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ac7a276c8b1256186edc0cdad6c2a9ea9" kindref="member" tooltip="Accessor for Isolation Calo correction. If &amp;#39;information&amp;#39; is stored in this...">Muon_v1::isolationCaloCorrection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>type,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref><sp/>param)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,type,param);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>correction<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2af44e2633cdc2d2a4c87d6bcf644bd1" kindref="member" tooltip="set method for Isolation Calo Corrections.">Muon_v1::setIsolationCaloCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>type,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref><sp/>param){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,type,param);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a53d87d478a96d09cd29dbc1f52d5eb5d" kindref="member" tooltip="Accessor for Isolation Track correction.">Muon_v1::isolationTrackCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref><sp/>type)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,type);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a53d87d478a96d09cd29dbc1f52d5eb5d" kindref="member" tooltip="Accessor for Isolation Track correction.">Muon_v1::isolationTrackCorrection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref><sp/>type)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,type);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>correction<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae8f5e9e2583ed6c6960daa527ca95687" kindref="member" tooltip="Set method for Isolation Track Corrections.">Muon_v1::setIsolationTrackCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref><sp/>type){</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,type);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae9114e4ccb99d4e2aea576070ccd1869" kindref="member" tooltip="Accessor for Isolation corection Bitset.">Muon_v1::isolationCorrectionBitset</ref>(std::bitset&lt;32&gt;&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; uint32_t &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ac4ba9f85aaec751ba09889d3490a112c" kindref="member">getIsolationCorrectionBitsetAccessor</ref>(<sp/>flavour<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>std::bitset&lt;32&gt;((<sp/>*acc<sp/>)(<sp/>*this<sp/>));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>std::bitset&lt;32&gt;<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae9114e4ccb99d4e2aea576070ccd1869" kindref="member" tooltip="Accessor for Isolation corection Bitset.">Muon_v1::isolationCorrectionBitset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; uint32_t &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ac4ba9f85aaec751ba09889d3490a112c" kindref="member">getIsolationCorrectionBitsetAccessor</ref>(<sp/>flavour<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>BitSet<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>std::bitset&lt;32&gt;(<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a0346afec53edc64259c2583fdfbd921b" kindref="member" tooltip="Set method for Isolation corection Bitset.">Muon_v1::setIsolationCorrectionBitset</ref>(uint32_t<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; uint32_t &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ac4ba9f85aaec751ba09889d3490a112c" kindref="member">getIsolationCorrectionBitsetAccessor</ref>(<sp/>flavour<sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_GETTER(<sp/>Muon_v1,<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>,<sp/>inDetTrackParticleLink)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_GETTER(<sp/>Muon_v1,<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink</ref>&lt;<sp/><ref refid="dd/d44/namespacexAOD_1aacaf125e409a52db5dac156356bb5a99" kindref="member" tooltip="Definition of the current &amp;quot;TrackParticle container version&amp;quot;.">TrackParticleContainer</ref><sp/>&gt;,<sp/>muonSpectrometerTrackParticleLink)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_GETTER(<sp/>Muon_v1,<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink</ref>&lt;<sp/>TrackParticleContainer<sp/>&gt;,<sp/>extrapolatedMuonSpectrometerTrackParticleLink)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_GETTER(<sp/>Muon_v1,<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink</ref>&lt;<sp/>TrackParticleContainer<sp/>&gt;,<sp/>combinedTrackParticleLink)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>const<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink</ref>&lt;<sp/>TrackParticleContainer<sp/>&gt;&amp;<sp/>Muon_v1::primaryTrackParticleLink()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>MuonType<sp/>type<sp/>=<sp/>muonType();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>type<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Combined<sp/>:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SiliconAssociatedForwardMuon<sp/>:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combinedTrackParticleLink();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SegmentTagged<sp/>:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CaloTagged<sp/>:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inDetTrackParticleLink();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MuonStandAlone<sp/>:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>checking<sp/>if<sp/>links<sp/>are<sp/>valid<sp/>here<sp/>-<sp/>this<sp/>is<sp/>the<sp/>job<sp/>of<sp/>the<sp/>client<sp/>(as<sp/>per<sp/>the<sp/>cases<sp/>above).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>DO<sp/>check<sp/>that<sp/>the<sp/>link<sp/>is<sp/>available,<sp/>so<sp/>we<sp/>can<sp/>check<sp/>for<sp/>both<sp/>types<sp/>of<sp/>links.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc1(<sp/></highlight><highlight class="stringliteral">&quot;extrapolatedMuonSpectrometerTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>acc1.isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>acc1(<sp/>*this<sp/>).isValid()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc1(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc2(<sp/></highlight><highlight class="stringliteral">&quot;muonSpectrometerTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>acc2.isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>acc2(<sp/>*this<sp/>).isValid())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc2(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>also<sp/>just<sp/>return<sp/>a<sp/>dummy<sp/>EL<sp/>here,<sp/>but<sp/>the<sp/>link<sp/>is<sp/>part<sp/>of<sp/>the<sp/>aux<sp/>store,<sp/>and<sp/>so<sp/>it<sp/>might<sp/>be<sp/>that<sp/>something<sp/>bad<sp/>has<sp/>happened...?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Type<sp/>is<sp/>MuonStandAlone<sp/>but<sp/>no<sp/>available<sp/>link<sp/>to<sp/>return!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>primary<sp/>type<sp/>-<sp/>not<sp/>sure<sp/>which<sp/>track<sp/>particle<sp/>to<sp/>return!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>dummy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>dummy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1b7244dbb300c878e1c63998a35c3a56" kindref="member" tooltip="Returns a pointer (which should not usually be NULL, but might be if the muon has...">Muon_v1::primaryTrackParticle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>MuonType<sp/>type<sp/>=<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ada4059382e0f2ad3f6c3ed3293165275" kindref="member" tooltip="Generic accessor to type information.">muonType</ref>();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>type<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Combined:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SiliconAssociatedForwardMuon<sp/>:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;combinedTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>link<sp/>=<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>link.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*link;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SegmentTagged:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CaloTagged<sp/>:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;inDetTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>link<sp/>=<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>link.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*link;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MuonStandAlone<sp/>:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Want<sp/>to<sp/>return<sp/>link<sp/>to<sp/>extrapolated<sp/>MS<sp/>track<sp/>particle<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc1(<sp/></highlight><highlight class="stringliteral">&quot;extrapolatedMuonSpectrometerTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>acc1.isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>link<sp/>=<sp/>acc1(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>link.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*link;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>fallback<sp/>(non-extrapolated<sp/>MS<sp/>track<sp/>particle)...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc2(<sp/></highlight><highlight class="stringliteral">&quot;muonSpectrometerTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>acc2.isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>link<sp/>=<sp/>acc2(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>link.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*link;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>valid<sp/>link.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1acdeb48622347dc4a88deb05f16897e18" kindref="member" tooltip="Returns an ElementLink to the TrackParticle used in identification of this muon.">Muon_v1::trackParticleLink</ref>(<sp/>Muon_v1::TrackParticleType<sp/>type)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>type<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Primary<sp/>:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>primaryTrackParticleLink();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CombinedTrackParticle<sp/>:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">combinedTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>InnerDetectorTrackParticle<sp/>:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MuonSpectrometerTrackParticle<sp/>:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a579267a41224ca26e3cd655ce0ff9bb9" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">muonSpectrometerTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ExtrapolatedMuonSpectrometerTrackParticle<sp/>:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>TrackParticleType<sp/>-<sp/>not<sp/>sure<sp/>which<sp/>track<sp/>particle<sp/>to<sp/>return!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>dummy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>dummy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1abcdc246b3fdb40008c18e5a797c132af" kindref="member" tooltip="Returns a pointer (which can be NULL) to the TrackParticle used in identification...">Muon_v1::trackParticle</ref>(<sp/>Muon_v1::TrackParticleType<sp/>type)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>perhaps<sp/>we<sp/>can<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>try/catch<sp/>clause?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>ElementLink<sp/>pointing<sp/>to<sp/>the<sp/>requested<sp/>track<sp/>particle:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>el<sp/>=</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1acdeb48622347dc4a88deb05f16897e18" kindref="member" tooltip="Returns an ElementLink to the TrackParticle used in identification of this muon.">trackParticleLink</ref>(<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>invalid,<sp/>return<sp/>a<sp/>null<sp/>pointer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>el.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>valid,<sp/>let&apos;s<sp/>de-reference<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*el;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref>&amp;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2a58e82b1fb8d6b08bda537d9228b39e" kindref="member" tooltip="Set method for TrackParticle links.">Muon_v1::setTrackParticleLink</ref>(TrackParticleType<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>link){</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>type<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>InnerDetectorTrackParticle<sp/>:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc1(<sp/></highlight><highlight class="stringliteral">&quot;inDetTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc1(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)=link;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MuonSpectrometerTrackParticle<sp/>:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc2(<sp/></highlight><highlight class="stringliteral">&quot;muonSpectrometerTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc2(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)=link;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CombinedTrackParticle<sp/>:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc3(<sp/></highlight><highlight class="stringliteral">&quot;combinedTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc3(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)=link;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ExtrapolatedMuonSpectrometerTrackParticle<sp/>:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc4(<sp/></highlight><highlight class="stringliteral">&quot;extrapolatedMuonSpectrometerTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc4(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)=link;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Primary<sp/>:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>or<sp/>Primary<sp/>TrackParticleType<sp/>-<sp/>not<sp/>sure<sp/>which<sp/>track<sp/>particle<sp/>to<sp/>set!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>Muon_v1,<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt;CaloClusterContainer&gt;</ref>,<sp/>clusterLink,<sp/>setClusterLink)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>const<sp/><ref refid="dd/d44/namespacexAOD_1a48cb7e4f34a3ea892ee409c7d6a292ea" kindref="member" tooltip="Define the latest version of the calorimeter cluster class.">CaloCluster</ref>*<sp/>Muon_v1::cluster()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>ElementLink&lt;<sp/>TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;inDetTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>acc.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; TrackParticleContainer &gt;</ref>&amp;<sp/>link<sp/>=<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>link.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>ElementLink<sp/>pointing<sp/>to<sp/>the<sp/>calo<sp/>cluster:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; CaloClusterContainer &gt;</ref>&amp;<sp/>el<sp/>=<sp/>clusterLink();<sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>invalid,<sp/>return<sp/>a<sp/>null<sp/>pointer:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>el.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>valid,<sp/>let&apos;s<sp/>de-reference<sp/>it:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*el;<sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(<sp/>Muon_v1,<sp/>uint8_t,<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772" kindref="member" tooltip="Defines how the energy loss was handled for this muon.">Muon_v1::EnergyLossType</ref>,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energyLossType<sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_WITH_CAST(<sp/>Muon_v1,<sp/>uint8_t,<sp/>Muon_v1::EnergyLossType,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energyLossType,<sp/>setEnergyLossType<sp/>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>Muon_v1,<sp/>std::vector&lt;<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink</ref>&lt;<sp/>xAOD::<ref refid="dd/d44/namespacexAOD_1a5f18b86bb785bc3b1bb7e0d4711bc81f" kindref="member" tooltip="Definition of the current &amp;quot;MuonSegment container version&amp;quot;.">MuonSegmentContainer</ref><sp/>&gt;<sp/>&gt;,<sp/>muonSegmentLinks,<sp/>setMuonSegmentLinks)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>static<sp/>SG::AuxElement::Accessor&lt;<sp/>std::vector&lt;<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink</ref>&lt;<sp/>MuonSegmentContainer<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>muonSegmentsAcc(<sp/>&quot;muonSegmentLinks&quot;<sp/>);<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Muon_v1::nMuonSegments()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>link<sp/>was<sp/>not<sp/>set<sp/>(yet),<sp/>return<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>muonSegmentsAcc.isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>muonSegmentsAcc(*this).size();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; MuonSegmentContainer &gt;</ref>&amp;<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1abbcaa6be91e238b54b3fd3587ef4cc69" kindref="member" tooltip="Returns a link to the specified MuonSegment.">Muon_v1::muonSegmentLink</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>Trk::Track<sp/>link<sp/>was<sp/>not<sp/>set<sp/>(yet),<sp/>return<sp/>a<sp/>dummy<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>-<sp/>maybe<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>muonSegmentsAcc.isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; MuonSegmentContainer &gt;</ref><sp/>dummy;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>muonSegmentsAcc(*this).at(i);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1add18d815d78b626877ba7d18bf9fbe9b" kindref="member" tooltip="Reference the current persistent version:.">MuonSegment</ref>*<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a118d1dadbc7dc02e2404572acc66791d" kindref="member" tooltip="Returns a pointer to the specified MuonSegment.">Muon_v1::muonSegment</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>ElementLink<sp/>pointing<sp/>to<sp/>the<sp/>requested<sp/>muon<sp/>segment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; MuonSegmentContainer &gt;</ref>&amp;<sp/>el<sp/>=</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1abbcaa6be91e238b54b3fd3587ef4cc69" kindref="member" tooltip="Returns a link to the specified MuonSegment.">muonSegmentLink</ref>(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>invalid,<sp/>return<sp/>a<sp/>null<sp/>pointer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>el.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>valid,<sp/>let&apos;s<sp/>de-reference<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*el;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx"/>
  </compounddef>
</doxygen>
