<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/da3/classxAOD_1_1TAuxManager" kind="class" prot="public">
    <compoundname>xAOD::TAuxManager</compoundname>
    <basecompoundref refid="d1/db4/classxAOD_1_1TVirtualManager" prot="public" virt="non-virtual">xAOD::TVirtualManager</basecompoundref>
    <includes refid="d1/d53/TAuxManager_8h" local="no">TAuxManager.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/da3/classxAOD_1_1TAuxManager_1ad8100f85e1cc749d656f10e0143c1222" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound">TAuxStore</ref> &gt;</type>
        <definition>std::shared_ptr&lt; TAuxStore &gt; xAOD::TAuxManager::m_store</definition>
        <argsstring></argsstring>
        <name>m_store</name>
        <briefdescription>
<para>The auxiliary store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/da3/classxAOD_1_1TAuxManager_1a820f994eb3c35db7805213fcecbe27f9" prot="private" static="no" mutable="no">
        <type><ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound">TAuxStore</ref> *</type>
        <definition>TAuxStore* xAOD::TAuxManager::m_storePtr</definition>
        <argsstring></argsstring>
        <name>m_storePtr</name>
        <briefdescription>
<para>Pointer to the auxiliary store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1a689a0791b8803ef56fed226b646c344a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::TAuxManager::TAuxManager</definition>
        <argsstring>(TAuxStore *store,::Bool_t sharedOwner=kTRUE)</argsstring>
        <name>TAuxManager</name>
        <param>
          <type><ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound">TAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <param>
          <type>::Bool_t</type>
          <declname>sharedOwner</declname>
          <defval>kTRUE</defval>
        </param>
        <briefdescription>
<para>Constructor getting hold of an auxiliary store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="13" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1a9800572645a5f35926ddb6f552101505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::TAuxManager::TAuxManager</definition>
        <argsstring>(const TAuxManager &amp;parent)</argsstring>
        <name>TAuxManager</name>
        <param>
          <type>const <ref refid="d8/da3/classxAOD_1_1TAuxManager" kindref="compound">TAuxManager</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1ac64d1931856a6589389d25b9c99db0af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/da3/classxAOD_1_1TAuxManager" kindref="compound">TAuxManager</ref> &amp;</type>
        <definition>TAuxManager &amp; xAOD::TAuxManager::operator=</definition>
        <argsstring>(const TAuxManager &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d8/da3/classxAOD_1_1TAuxManager" kindref="compound">TAuxManager</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="26" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1ab39cb58cfb31a4893e1a914a5828438c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>::Int_t</type>
        <definition>Int_t xAOD::TAuxManager::getEntry</definition>
        <argsstring>(::Long64_t entry,::Int_t getall=0)</argsstring>
        <name>getEntry</name>
        <reimplements refid="d1/db4/classxAOD_1_1TVirtualManager_1a73d0c9cb312247a9d5d9b1092b3acbc0">getEntry</reimplements>
        <param>
          <type>::Long64_t</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>::Int_t</type>
          <declname>getall</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Function for updating the object in memory if needed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1a52488fd01a750c67b8d122d190d8d73d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * xAOD::TAuxManager::object</definition>
        <argsstring>() const </argsstring>
        <name>object</name>
        <reimplements refid="d1/db4/classxAOD_1_1TVirtualManager_1a51499c2497e07e157eae61b592099c90">object</reimplements>
        <briefdescription>
<para>Function getting a pointer to the object being handled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1a6df02b87454d516cb5065a8400e19bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::TAuxManager::setObject</definition>
        <argsstring>(void *obj)</argsstring>
        <name>setObject</name>
        <reimplements refid="d1/db4/classxAOD_1_1TVirtualManager_1a513bfd0c1a67a01005d936371431e5dd">setObject</reimplements>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Function replacing the object being handled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1aa155b96a467b102f8bddd9c613a16dd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>::Bool_t</type>
        <definition>Bool_t xAOD::TAuxManager::isSet</definition>
        <argsstring>(::Bool_t forceSet=kTRUE) const </argsstring>
        <name>isSet</name>
        <reimplements refid="d1/db4/classxAOD_1_1TVirtualManager_1ab3dbb9bede1a8da50b907a6fe92177dd">isSet</reimplements>
        <param>
          <type>::Bool_t</type>
          <declname>forceSet</declname>
          <defval>kTRUE</defval>
        </param>
        <briefdescription>
<para>Check if the object was set for the current event. </para>        </briefdescription>
        <detaileddescription>
<para>The state of a <ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound">TAuxStore</ref> object is always &quot;set&quot;. So this interface unfortunately doesn&apos;t make much sense for this manager class...</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>forceSet</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored as it does not apply </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>kTRUE</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1af305ff39abb5211301ba3a5ed842e315" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::TAuxManager::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="d1/db4/classxAOD_1_1TVirtualManager_1a756e742060b4c5e95f21a10cdf26a33a">reset</reimplements>
        <briefdescription>
<para>Reset the object at the end of processing of an event. </para>        </briefdescription>
        <detaileddescription>
<para>Resetting an auxiliary store needs to be done in a smart way. Container stores need to be emptied, while object stores don&apos;t need to be touched. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="76" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1a232a1e670f6ac4d09e93cd45a3dbc8c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound">TAuxStore</ref> *</type>
        <definition>TAuxStore * xAOD::TAuxManager::getStore</definition>
        <argsstring>() const </argsstring>
        <name>getStore</name>
        <briefdescription>
<para>Get a type-specific pointer to the managed object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="d8/da3/classxAOD_1_1TAuxManager_1a55db9513325c214eedd5b72eb8c00093" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound">SG::IConstAuxStore</ref> *</type>
        <definition>const SG::IConstAuxStore * xAOD::TAuxManager::getConstStore</definition>
        <argsstring>() const </argsstring>
        <name>getConstStore</name>
        <briefdescription>
<para>Get a convenience pointer to the managed object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx" bodystart="92" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manager for <ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound">TAuxStore</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>This class is used when connecting <ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound">TAuxStore</ref> objects to the input tree as the auxiliary store of a <ref refid="d3/d78/structDV" kindref="compound">DV</ref> container.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>607344 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-07-18 15:27:49 +0200 (Fri, 18 Jul 2014) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="19379">
        <label>xAOD::TAuxManager</label>
        <link refid="d8/da3/classxAOD_1_1TAuxManager"/>
        <childnode refid="19380" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19380">
        <label>xAOD::TVirtualManager</label>
        <link refid="d1/db4/classxAOD_1_1TVirtualManager"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="19398">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="19399">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="19391">
        <label>Internal::hash_code_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="19383">
        <label>xAOD::TAuxStore</label>
        <link refid="d7/d77/classxAOD_1_1TAuxStore"/>
        <childnode refid="19384" relation="public-inheritance">
        </childnode>
        <childnode refid="19386" relation="public-inheritance">
        </childnode>
        <childnode refid="19387" relation="usage">
          <edgelabel>m_selection</edgelabel>
        </childnode>
        <childnode refid="19393" relation="usage">
          <edgelabel>m_mutex1</edgelabel>
          <edgelabel>m_mutex2</edgelabel>
        </childnode>
        <childnode refid="19394" relation="usage">
          <edgelabel>m_dynPrefix</edgelabel>
          <edgelabel>m_prefix</edgelabel>
        </childnode>
        <childnode refid="19395" relation="usage">
          <edgelabel>m_transientStore</edgelabel>
        </childnode>
        <childnode refid="19396" relation="usage">
          <edgelabel>m_auxIDs</edgelabel>
        </childnode>
      </node>
      <node id="19397">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="19398" relation="public-inheritance">
        </childnode>
        <childnode refid="19399" relation="public-inheritance">
        </childnode>
        <childnode refid="19400" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19394">
        <label>string</label>
      </node>
      <node id="19392">
        <label>Internal::map_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , unique_keys, hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="19387">
        <label>xAOD::AuxSelection</label>
        <link refid="d6/dd6/classxAOD_1_1AuxSelection"/>
        <childnode refid="19388" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="19385">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="19386">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="19389">
        <label>SG::hashtable&lt; size_t, size_t, std::allocator&lt; size_t &gt;, Internal::identity&lt; size_t &gt;, std::equal_to&lt; size_t &gt;, hash&lt; size_t &gt;, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, false, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="19390" relation="public-inheritance">
        </childnode>
        <childnode refid="19391" relation="public-inheritance">
        </childnode>
        <childnode refid="19392" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19381">
        <label>xAOD::TAuxManager</label>
        <link refid="d8/da3/classxAOD_1_1TAuxManager"/>
        <childnode refid="19382" relation="public-inheritance">
        </childnode>
        <childnode refid="19383" relation="usage">
          <edgelabel>m_storePtr</edgelabel>
        </childnode>
      </node>
      <node id="19384">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="19385" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19396">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="19397" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19400">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="19395">
        <label>SG::AuxStoreInternal</label>
        <link refid="d1/d1c/classSG_1_1AuxStoreInternal"/>
        <childnode refid="19384" relation="public-inheritance">
        </childnode>
        <childnode refid="19386" relation="public-inheritance">
        </childnode>
        <childnode refid="19388" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
        <childnode refid="19393" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
      </node>
      <node id="19390">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="19393">
        <label>mutex</label>
      </node>
      <node id="19382">
        <label>xAOD::TVirtualManager</label>
        <link refid="d1/db4/classxAOD_1_1TVirtualManager"/>
      </node>
      <node id="19388">
        <label>SG::unordered_set&lt; size_t &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="19389" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TAuxManager.h" bodystart="32" bodyend="67"/>
    <listofallmembers>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1a55db9513325c214eedd5b72eb8c00093" prot="public" virt="non-virtual"><scope>xAOD::TAuxManager</scope><name>getConstStore</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1ab39cb58cfb31a4893e1a914a5828438c" prot="public" virt="virtual"><scope>xAOD::TAuxManager</scope><name>getEntry</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1a232a1e670f6ac4d09e93cd45a3dbc8c3" prot="public" virt="non-virtual"><scope>xAOD::TAuxManager</scope><name>getStore</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1aa155b96a467b102f8bddd9c613a16dd9" prot="public" virt="virtual"><scope>xAOD::TAuxManager</scope><name>isSet</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1ad8100f85e1cc749d656f10e0143c1222" prot="private" virt="non-virtual"><scope>xAOD::TAuxManager</scope><name>m_store</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1a820f994eb3c35db7805213fcecbe27f9" prot="private" virt="non-virtual"><scope>xAOD::TAuxManager</scope><name>m_storePtr</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1a52488fd01a750c67b8d122d190d8d73d" prot="public" virt="virtual"><scope>xAOD::TAuxManager</scope><name>object</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1ac64d1931856a6589389d25b9c99db0af" prot="public" virt="non-virtual"><scope>xAOD::TAuxManager</scope><name>operator=</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1af305ff39abb5211301ba3a5ed842e315" prot="public" virt="virtual"><scope>xAOD::TAuxManager</scope><name>reset</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1a6df02b87454d516cb5065a8400e19bf4" prot="public" virt="virtual"><scope>xAOD::TAuxManager</scope><name>setObject</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1a689a0791b8803ef56fed226b646c344a" prot="public" virt="non-virtual"><scope>xAOD::TAuxManager</scope><name>TAuxManager</name></member>
      <member refid="d8/da3/classxAOD_1_1TAuxManager_1a9800572645a5f35926ddb6f552101505" prot="public" virt="non-virtual"><scope>xAOD::TAuxManager</scope><name>TAuxManager</name></member>
      <member refid="d1/db4/classxAOD_1_1TVirtualManager_1a7eaee5c13dc295ef89d1adebeab94165" prot="public" virt="virtual"><scope>xAOD::TAuxManager</scope><name>~TVirtualManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
