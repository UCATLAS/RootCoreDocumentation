<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/d5e/classSH_1_1DiskListXRD" kind="class" prot="public">
    <compoundname>SH::DiskListXRD</compoundname>
    <basecompoundref refid="d1/d5b/classSH_1_1DiskList" prot="public" virt="non-virtual">SH::DiskList</basecompoundref>
    <includes refid="db/d53/DiskListXRD_8h" local="no">DiskListXRD.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d5e/classSH_1_1DiskListXRD_1a36a84f590c5789f1e5b00e055922bf14" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListXRD::m_server</definition>
        <argsstring></argsstring>
        <name>m_server</name>
        <briefdescription>
<para>the server from which we are reading </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="88" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d5e/classSH_1_1DiskListXRD_1a85c7f9503d8c6379fac43b4324510e1b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListXRD::m_directory</definition>
        <argsstring></argsstring>
        <name>m_directory</name>
        <briefdescription>
<para>the directory we are reading </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d5e/classSH_1_1DiskListXRD_1a52f39bcd8886740bcdd6eba647af721b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SH::DiskListXRD::m_laxParser</definition>
        <argsstring></argsstring>
        <name>m_laxParser</name>
        <briefdescription>
<para>whether we employ lax parsing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d5e/classSH_1_1DiskListXRD_1a3793184f03341a92b672d12a7e3e658c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListXRD::m_context</definition>
        <argsstring></argsstring>
        <name>m_context</name>
        <briefdescription>
<para>the context (for error reporting) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="100" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d5e/classSH_1_1DiskListXRD_1a90698f22e3219cc1316081dcb0417982" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListXRD::m_list</definition>
        <argsstring></argsstring>
        <name>m_list</name>
        <briefdescription>
<para>the result of the directory listing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="104" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d5e/classSH_1_1DiskListXRD_1af976bd098929eff45af3843a8bee47fd" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListXRD::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <briefdescription>
<para>the last file we read </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d5e/classSH_1_1DiskListXRD_1af4e75719313a88172b001289c1e3a1da" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SH::DiskListXRD::m_isDir</definition>
        <argsstring></argsstring>
        <name>m_isDir</name>
        <briefdescription>
<para>whether this is a directory </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="112" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d5e/classSH_1_1DiskListXRD_1ae6efb8aeb457dbe216db4b5296083cab" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SH::DiskListXRD::m_isRead</definition>
        <argsstring></argsstring>
        <name>m_isRead</name>
        <briefdescription>
<para>whether the directory has been read </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="116" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d5e/classSH_1_1DiskListXRD_1abdd7d01fb0fb05e6b69424909d8c7e90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SH::DiskListXRD::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1afe1f3b7accb6b9f2b3536956daf72d0f">testInvariant</reimplements>
        <briefdescription>
<para>test the invariant of this object </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListXRD.cxx" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="d8/d5e/classSH_1_1DiskListXRD_1ae9b38e8e7477937e1ec321aa6204791f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SH::DiskListXRD::DiskListXRD</definition>
        <argsstring>(const std::string &amp;val_server, const std::string &amp;val_dir, bool val_laxParsing=false)</argsstring>
        <name>DiskListXRD</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_server</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_dir</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>val_laxParsing</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>make the listing for the given directory, but replacing the directory with prefix for the path </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory to list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>the prefix with which val_dir will be replaced in the reported paths </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val_laxParsing</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>true</computeroutput>, graciously skip over any error messages. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Guarantee</title><para>strong<linebreak/>
 </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II<linebreak/>
 </para></simplesect>
<simplesect kind="par"><title>Rationale</title><para>this mechanism is meant to allow scanning file servers using one protocol, but then accessing them using another </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListXRD.cxx" bodystart="39" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d8/d5e/classSH_1_1DiskListXRD_1a40a8bfa760fc01de022cce65ed335668" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SH::DiskListXRD::getNext</definition>
        <argsstring>()</argsstring>
        <name>getNext</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1abdeb673c1a9e9c0db6719d888247130f">getNext</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getNext()"><para><copydoc link="next()"><para>get the next list entry </para><para><simplesect kind="return"><para>whether we found another entry </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>i/o errors </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">DiskList::next()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListXRD.cxx" bodystart="50" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="d8/d5e/classSH_1_1DiskListXRD_1a31ae85c52fbbbbaff891c6923ad51705" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string SH::DiskListXRD::getPath</definition>
        <argsstring>() const </argsstring>
        <name>getPath</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1abdd1551b406aad8a16ad3a06e5b50dad">getPath</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getPath()"><para><copydoc link="path()"><para>the path for the current entry. </para><para><simplesect kind="return"><para>the path for the current entry </para></simplesect>
<simplesect kind="pre"><para>(soft) <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">next()</ref> has been called successfully </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>strong failures: out of memory III </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1a260a5bf756383588dadee7b6dfe67138" kindref="member">DiskList::path()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListXRD.cxx" bodystart="99" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="d8/d5e/classSH_1_1DiskListXRD_1a75cec3eb643f2b9dab322e1afa910a70" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d1/d5b/classSH_1_1DiskList" kindref="compound">DiskList</ref> *</type>
        <definition>DiskList * SH::DiskListXRD::doOpenDir</definition>
        <argsstring>() const </argsstring>
        <name>doOpenDir</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1a93f295d8f42dbdab1dbb8a7e03004a32">doOpenDir</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::doOpenDir()"><para><copydoc link="openDir()"><para>make a new list object for the sub-directory </para><para><simplesect kind="return"><para>a new list object for the sub-directory, or <computeroutput>NULL</computeroutput> if it is not a directory </para></simplesect>
<simplesect kind="pre"><para>(soft) <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">next()</ref> has been called successfully </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory III </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1af847547a93cff6e6e27c75c8a84dd2f3" kindref="member">DiskList::openDir()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListXRD.cxx" bodystart="108" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="d8/d5e/classSH_1_1DiskListXRD_1aac86f2137eb4ae7074d2f438c7d951b5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string SH::DiskListXRD::getDirname</definition>
        <argsstring>() const </argsstring>
        <name>getDirname</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1a55ab282c7345c5c4e6acafa9b5972fd6">getDirname</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getDirname()"><para><copydoc link="dirname()"><para>the base path for the directory listed </para><para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1a663385469f51471d4cd3053f7671f741" kindref="member">DiskList::dirname()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="78" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListXRD.cxx" bodystart="121" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a <ref refid="d1/d5b/classSH_1_1DiskList" kindref="compound">DiskList</ref> implementation for the XRD protocol </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5142">
        <label>SH::DiskList</label>
        <link refid="d1/d5b/classSH_1_1DiskList"/>
      </node>
      <node id="5141">
        <label>SH::DiskListXRD</label>
        <link refid="d8/d5e/classSH_1_1DiskListXRD"/>
        <childnode refid="5142" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5144">
        <label>SH::DiskList</label>
        <link refid="d1/d5b/classSH_1_1DiskList"/>
      </node>
      <node id="5145">
        <label>string</label>
      </node>
      <node id="5143">
        <label>SH::DiskListXRD</label>
        <link refid="d8/d5e/classSH_1_1DiskListXRD"/>
        <childnode refid="5144" relation="public-inheritance">
        </childnode>
        <childnode refid="5145" relation="usage">
          <edgelabel>m_list</edgelabel>
          <edgelabel>m_directory</edgelabel>
          <edgelabel>m_context</edgelabel>
          <edgelabel>m_server</edgelabel>
          <edgelabel>m_file</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListXRD.h" bodystart="21" bodyend="117"/>
    <listofallmembers>
      <member refid="d1/d5b/classSH_1_1DiskList_1a663385469f51471d4cd3053f7671f741" prot="public" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>dirname</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1ae4be65474961b630fec4158f7ce3185e" prot="protected" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>DiskList</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1ae9b38e8e7477937e1ec321aa6204791f" prot="public" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>DiskListXRD</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1a75cec3eb643f2b9dab322e1afa910a70" prot="protected" virt="virtual"><scope>SH::DiskListXRD</scope><name>doOpenDir</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1a17d746155a8cacb20f97fd34bd11e427" prot="public" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>fileName</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1aac86f2137eb4ae7074d2f438c7d951b5" prot="protected" virt="virtual"><scope>SH::DiskListXRD</scope><name>getDirname</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1a40a8bfa760fc01de022cce65ed335668" prot="protected" virt="virtual"><scope>SH::DiskListXRD</scope><name>getNext</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1a31ae85c52fbbbbaff891c6923ad51705" prot="protected" virt="virtual"><scope>SH::DiskListXRD</scope><name>getPath</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1a3793184f03341a92b672d12a7e3e658c" prot="private" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>m_context</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1a85c7f9503d8c6379fac43b4324510e1b" prot="private" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>m_directory</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1af976bd098929eff45af3843a8bee47fd" prot="private" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>m_file</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1af4e75719313a88172b001289c1e3a1da" prot="private" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>m_isDir</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1ae6efb8aeb457dbe216db4b5296083cab" prot="private" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>m_isRead</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1a52f39bcd8886740bcdd6eba647af721b" prot="private" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>m_laxParser</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1a90698f22e3219cc1316081dcb0417982" prot="private" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>m_list</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1a36a84f590c5789f1e5b00e055922bf14" prot="private" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>m_server</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" prot="public" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>next</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1af847547a93cff6e6e27c75c8a84dd2f3" prot="public" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>openDir</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1a260a5bf756383588dadee7b6dfe67138" prot="public" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>path</name></member>
      <member refid="d8/d5e/classSH_1_1DiskListXRD_1abdd7d01fb0fb05e6b69424909d8c7e90" prot="public" virt="non-virtual"><scope>SH::DiskListXRD</scope><name>testInvariant</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1aba03cd19b877c25e63b78c5fd27da7c5" prot="public" virt="virtual"><scope>SH::DiskListXRD</scope><name>~DiskList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
