<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/df3/TrigPassBits__v1_8cxx" kind="file">
    <compoundname>TrigPassBits_v1.cxx</compoundname>
    <includes refid="d1/d0c/AuxStoreAccessorMacros_8h" local="yes">xAODCore/AuxStoreAccessorMacros.h</includes>
    <includes refid="de/d58/TrigPassBits__v1_8h" local="yes">xAODTrigger/versions/TrigPassBits_v1.h</includes>
    <incdepgraph>
      <node id="445473">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="445475">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="445432" relation="include">
        </childnode>
        <childnode refid="445434" relation="include">
        </childnode>
        <childnode refid="445425" relation="include">
        </childnode>
        <childnode refid="445441" relation="include">
        </childnode>
      </node>
      <node id="445476">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="445443">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="445428" relation="include">
        </childnode>
        <childnode refid="445430" relation="include">
        </childnode>
        <childnode refid="445444" relation="include">
        </childnode>
        <childnode refid="445442" relation="include">
        </childnode>
      </node>
      <node id="445440">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="445441">
        <label>functional</label>
      </node>
      <node id="445438">
        <label>limits</label>
      </node>
      <node id="445444">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="445471">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="445435">
        <label>iterator</label>
      </node>
      <node id="445459">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="445439" relation="include">
        </childnode>
        <childnode refid="445460" relation="include">
        </childnode>
      </node>
      <node id="445483">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="445429" relation="include">
        </childnode>
        <childnode refid="445484" relation="include">
        </childnode>
        <childnode refid="445485" relation="include">
        </childnode>
        <childnode refid="445452" relation="include">
        </childnode>
        <childnode refid="445439" relation="include">
        </childnode>
      </node>
      <node id="445456">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="445424" relation="include">
        </childnode>
        <childnode refid="445436" relation="include">
        </childnode>
      </node>
      <node id="445423">
        <label>stdint.h</label>
      </node>
      <node id="445453">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="445430" relation="include">
        </childnode>
        <childnode refid="445452" relation="include">
        </childnode>
      </node>
      <node id="445448">
        <label>RVersion.h</label>
      </node>
      <node id="445431">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="445432" relation="include">
        </childnode>
        <childnode refid="445425" relation="include">
        </childnode>
        <childnode refid="445441" relation="include">
        </childnode>
      </node>
      <node id="445437">
        <label>cmath</label>
      </node>
      <node id="445487">
        <label>cassert</label>
      </node>
      <node id="445485">
        <label>stdexcept</label>
      </node>
      <node id="445474">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="445439">
        <label>string</label>
      </node>
      <node id="445477">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="445429" relation="include">
        </childnode>
        <childnode refid="445428" relation="include">
        </childnode>
        <childnode refid="445459" relation="include">
        </childnode>
        <childnode refid="445456" relation="include">
        </childnode>
        <childnode refid="445445" relation="include">
        </childnode>
        <childnode refid="445478" relation="include">
        </childnode>
        <childnode refid="445479" relation="include">
        </childnode>
        <childnode refid="445462" relation="include">
        </childnode>
        <childnode refid="445424" relation="include">
        </childnode>
        <childnode refid="445434" relation="include">
        </childnode>
        <childnode refid="445436" relation="include">
        </childnode>
        <childnode refid="445480" relation="include">
        </childnode>
        <childnode refid="445481" relation="include">
        </childnode>
        <childnode refid="445469" relation="include">
        </childnode>
        <childnode refid="445482" relation="include">
        </childnode>
      </node>
      <node id="445451">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="445430" relation="include">
        </childnode>
        <childnode refid="445452" relation="include">
        </childnode>
      </node>
      <node id="445420">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/TrigPassBits_v1.cxx</label>
        <link refid="TrigPassBits_v1.cxx"/>
        <childnode refid="445421" relation="include">
        </childnode>
        <childnode refid="445422" relation="include">
        </childnode>
      </node>
      <node id="445480">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="445449">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="445466">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="445481">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="445422">
        <label>xAODTrigger/versions/TrigPassBits_v1.h</label>
        <link refid="de/d58/TrigPassBits__v1_8h_source"/>
        <childnode refid="445423" relation="include">
        </childnode>
        <childnode refid="445424" relation="include">
        </childnode>
        <childnode refid="445425" relation="include">
        </childnode>
        <childnode refid="445426" relation="include">
        </childnode>
        <childnode refid="445445" relation="include">
        </childnode>
      </node>
      <node id="445463">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="445427">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="445447">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="445448" relation="include">
        </childnode>
        <childnode refid="445449" relation="include">
        </childnode>
      </node>
      <node id="445479">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="445472">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="445458">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="445459" relation="include">
        </childnode>
        <childnode refid="445438" relation="include">
        </childnode>
        <childnode refid="445423" relation="include">
        </childnode>
        <childnode refid="445461" relation="include">
        </childnode>
      </node>
      <node id="445429">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="445430" relation="include">
        </childnode>
        <childnode refid="445431" relation="include">
        </childnode>
      </node>
      <node id="445432">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="445433" relation="include">
        </childnode>
        <childnode refid="445434" relation="include">
        </childnode>
        <childnode refid="445435" relation="include">
        </childnode>
        <childnode refid="445430" relation="include">
        </childnode>
        <childnode refid="445436" relation="include">
        </childnode>
        <childnode refid="445437" relation="include">
        </childnode>
        <childnode refid="445438" relation="include">
        </childnode>
        <childnode refid="445439" relation="include">
        </childnode>
        <childnode refid="445440" relation="include">
        </childnode>
      </node>
      <node id="445452">
        <label>typeinfo</label>
      </node>
      <node id="445486">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="445480" relation="include">
        </childnode>
        <childnode refid="445487" relation="include">
        </childnode>
      </node>
      <node id="445461">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="445478">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="445446">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="445423" relation="include">
        </childnode>
      </node>
      <node id="445460">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="445465">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="445442">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="445450">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="445429" relation="include">
        </childnode>
        <childnode refid="445451" relation="include">
        </childnode>
        <childnode refid="445453" relation="include">
        </childnode>
        <childnode refid="445454" relation="include">
        </childnode>
        <childnode refid="445467" relation="include">
        </childnode>
        <childnode refid="445469" relation="include">
        </childnode>
        <childnode refid="445430" relation="include">
        </childnode>
        <childnode refid="445452" relation="include">
        </childnode>
        <childnode refid="445424" relation="include">
        </childnode>
        <childnode refid="445475" relation="include">
        </childnode>
        <childnode refid="445476" relation="include">
        </childnode>
      </node>
      <node id="445424">
        <label>vector</label>
      </node>
      <node id="445434">
        <label>utility</label>
      </node>
      <node id="445462">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="445470">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="445455">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="445469">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="445470" relation="include">
        </childnode>
        <childnode refid="445471" relation="include">
        </childnode>
        <childnode refid="445472" relation="include">
        </childnode>
        <childnode refid="445473" relation="include">
        </childnode>
        <childnode refid="445474" relation="include">
        </childnode>
      </node>
      <node id="445436">
        <label>cstdlib</label>
      </node>
      <node id="445484">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="445428">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="445429" relation="include">
        </childnode>
        <childnode refid="445430" relation="include">
        </childnode>
        <childnode refid="445442" relation="include">
        </childnode>
      </node>
      <node id="445430">
        <label>cstddef</label>
      </node>
      <node id="445482">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="445450" relation="include">
        </childnode>
        <childnode refid="445443" relation="include">
        </childnode>
        <childnode refid="445428" relation="include">
        </childnode>
        <childnode refid="445480" relation="include">
        </childnode>
        <childnode refid="445481" relation="include">
        </childnode>
      </node>
      <node id="445421">
        <label>xAODCore/AuxStoreAccessorMacros.h</label>
        <link refid="d1/d0c/AuxStoreAccessorMacros_8h_source"/>
      </node>
      <node id="445454">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="445451" relation="include">
        </childnode>
        <childnode refid="445455" relation="include">
        </childnode>
        <childnode refid="445456" relation="include">
        </childnode>
        <childnode refid="445457" relation="include">
        </childnode>
        <childnode refid="445462" relation="include">
        </childnode>
        <childnode refid="445452" relation="include">
        </childnode>
        <childnode refid="445424" relation="include">
        </childnode>
        <childnode refid="445433" relation="include">
        </childnode>
        <childnode refid="445423" relation="include">
        </childnode>
        <childnode refid="445464" relation="include">
        </childnode>
        <childnode refid="445465" relation="include">
        </childnode>
        <childnode refid="445466" relation="include">
        </childnode>
      </node>
      <node id="445464">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="445468">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="445457">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="445455" relation="include">
        </childnode>
        <childnode refid="445458" relation="include">
        </childnode>
        <childnode refid="445462" relation="include">
        </childnode>
        <childnode refid="445424" relation="include">
        </childnode>
        <childnode refid="445463" relation="include">
        </childnode>
      </node>
      <node id="445433">
        <label>algorithm</label>
      </node>
      <node id="445426">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="445427" relation="include">
        </childnode>
        <childnode refid="445428" relation="include">
        </childnode>
        <childnode refid="445443" relation="include">
        </childnode>
        <childnode refid="445445" relation="include">
        </childnode>
        <childnode refid="445450" relation="include">
        </childnode>
        <childnode refid="445477" relation="include">
        </childnode>
        <childnode refid="445456" relation="include">
        </childnode>
        <childnode refid="445483" relation="include">
        </childnode>
        <childnode refid="445480" relation="include">
        </childnode>
        <childnode refid="445430" relation="include">
        </childnode>
        <childnode refid="445486" relation="include">
        </childnode>
      </node>
      <node id="445445">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="445423" relation="include">
        </childnode>
        <childnode refid="445439" relation="include">
        </childnode>
        <childnode refid="445446" relation="include">
        </childnode>
        <childnode refid="445447" relation="include">
        </childnode>
      </node>
      <node id="445425">
        <label>memory</label>
      </node>
      <node id="445467">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="445453" relation="include">
        </childnode>
        <childnode refid="445454" relation="include">
        </childnode>
        <childnode refid="445468" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TrigPassBits_v1.cxx<sp/>703368<sp/>2015-10-27<sp/>08:45:13Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>xAOD<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxStoreAccessorMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigger/versions/TrigPassBits_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1aee2dfec74b0f55d94aaa3d0b6ccc8bd7" kindref="member" tooltip="Default constructor.">TrigPassBits_v1::TrigPassBits_v1</ref>()</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SG::AuxElement(),<sp/>m_container(<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigPassBits_v1::markPassing(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>sanity<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>index<sp/>&gt;=<sp/>size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>the<sp/>serialised<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; std::vector&lt; uint32_t &gt;</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accBits(<sp/></highlight><highlight class="stringliteral">&quot;passBits&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;&amp;<sp/>bits<sp/>=<sp/>accBits(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>which<sp/>bit<sp/>to<sp/>modify:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vec_element<sp/>=<sp/>index<sp/>/<sp/>32;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vec_index<sp/><sp/><sp/>=<sp/>index<sp/>%<sp/>32;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Another<sp/>sanity<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>vec_element<sp/>&gt;=<sp/>bits.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>object<sp/>is<sp/>in<sp/>an<sp/>inconsistent<sp/>state&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>bit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>bit<sp/>=<sp/>(<sp/>0x1<sp/>&lt;&lt;<sp/>vec_index<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask<sp/>=<sp/>bits[<sp/>vec_element<sp/>];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>passed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/>bit;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&amp;=<sp/>~bit;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bits[<sp/>vec_element<sp/>]<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TrigPassBits_v1::isPassing(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>sanity<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>index<sp/>&gt;=<sp/>size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>the<sp/>serialised<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;&amp;<sp/>bits<sp/>=<sp/>passBits();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>bit<sp/>to<sp/>extract:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vec_element<sp/>=<sp/>index<sp/>/<sp/>32;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vec_index<sp/><sp/><sp/>=<sp/>index<sp/>%<sp/>32;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Another<sp/>sanity<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>vec_element<sp/>&gt;=<sp/>bits.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>object<sp/>is<sp/>in<sp/>an<sp/>inconsistent<sp/>state&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>bit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>bit<sp/>=<sp/>(<sp/>0x1<sp/>&lt;&lt;<sp/>vec_index<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>mask<sp/>=<sp/>bits[<sp/>vec_element<sp/>];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>mask<sp/>&amp;<sp/>bit<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>the<sp/>raw<sp/>accessor<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TrigPassBits_v1,<sp/>uint32_t,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,<sp/>setSize<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TrigPassBits_v1,<sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passBits,<sp/>setPassBits<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TrigPassBits_v1,<sp/>uint32_t,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>containerKey,<sp/>setContainerKey<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TrigPassBits_v1,<sp/>uint32_t,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>containerClid,<sp/>setContainerClid<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/TrigPassBits_v1.cxx"/>
  </compounddef>
</doxygen>
