<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/d46/AnaToolSequence_8cxx" kind="file">
    <compoundname>AnaToolSequence.cxx</compoundname>
    <includes refid="d7/d5c/AnaToolSequence_8h" local="no">QuickAna/AnaToolSequence.h</includes>
    <includes refid="d8/d28/AnaTool_8h" local="no">QuickAna/AnaTool.h</includes>
    <includes refid="d4/d85/DefinitionArgs_8h" local="no">QuickAna/DefinitionArgs.h</includes>
    <includes refid="d9/da5/DefinitionConf_8h" local="no">QuickAna/DefinitionConf.h</includes>
    <includes refid="d5/dba/QuickAna_2QuickAna_2MessageCheck_8h" local="no">QuickAna/MessageCheck.h</includes>
    <includes refid="d2/d0a/ObjectTypeInfo_8h" local="no">QuickAna/ObjectTypeInfo.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <incdepgraph>
      <node id="245130">
        <label>list</label>
      </node>
      <node id="245136">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="245137" relation="include">
        </childnode>
        <childnode refid="245135" relation="include">
        </childnode>
        <childnode refid="245138" relation="include">
        </childnode>
        <childnode refid="245139" relation="include">
        </childnode>
      </node>
      <node id="245151">
        <label>functional</label>
      </node>
      <node id="245144">
        <label>PATInterfaces/ISystematicsTool.h</label>
        <link refid="d6/db3/ISystematicsTool_8h_source"/>
        <childnode refid="245136" relation="include">
        </childnode>
        <childnode refid="245145" relation="include">
        </childnode>
        <childnode refid="245146" relation="include">
        </childnode>
        <childnode refid="245150" relation="include">
        </childnode>
      </node>
      <node id="245139">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="245129">
        <label>QuickAna/Global.h</label>
        <link refid="d4/d7e/QuickAna_2QuickAna_2Global_8h_source"/>
      </node>
      <node id="245157">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="245152">
        <label>QuickAna/DefinitionArgs.h</label>
        <link refid="d4/d85/DefinitionArgs_8h_source"/>
        <childnode refid="245129" relation="include">
        </childnode>
        <childnode refid="245128" relation="include">
        </childnode>
        <childnode refid="245130" relation="include">
        </childnode>
        <childnode refid="245131" relation="include">
        </childnode>
        <childnode refid="245137" relation="include">
        </childnode>
      </node>
      <node id="245140">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="245137" relation="include">
        </childnode>
        <childnode refid="245135" relation="include">
        </childnode>
        <childnode refid="245141" relation="include">
        </childnode>
      </node>
      <node id="245135">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="245137">
        <label>string</label>
      </node>
      <node id="245158">
        <label>AthenaBaseComps/AthMessaging.h</label>
      </node>
      <node id="245141">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="245143">
        <label>QuickAna/IAnaTool.h</label>
        <link refid="d6/df3/IAnaTool_8h_source"/>
        <childnode refid="245129" relation="include">
        </childnode>
        <childnode refid="245144" relation="include">
        </childnode>
      </node>
      <node id="245150">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="245147" relation="include">
        </childnode>
        <childnode refid="245149" relation="include">
        </childnode>
        <childnode refid="245132" relation="include">
        </childnode>
        <childnode refid="245137" relation="include">
        </childnode>
        <childnode refid="245151" relation="include">
        </childnode>
        <childnode refid="245145" relation="include">
        </childnode>
        <childnode refid="245146" relation="include">
        </childnode>
      </node>
      <node id="245128">
        <label>QuickAna/AnaToolSequence.h</label>
        <link refid="d7/d5c/AnaToolSequence_8h_source"/>
        <childnode refid="245129" relation="include">
        </childnode>
        <childnode refid="245130" relation="include">
        </childnode>
        <childnode refid="245131" relation="include">
        </childnode>
        <childnode refid="245132" relation="include">
        </childnode>
      </node>
      <node id="245146">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="245147" relation="include">
        </childnode>
        <childnode refid="245148" relation="include">
        </childnode>
        <childnode refid="245149" relation="include">
        </childnode>
        <childnode refid="245137" relation="include">
        </childnode>
      </node>
      <node id="245155">
        <label>AsgTools/MessageCheck.h</label>
        <link refid="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_source"/>
        <childnode refid="245156" relation="include">
        </childnode>
        <childnode refid="245157" relation="include">
        </childnode>
        <childnode refid="245158" relation="include">
        </childnode>
      </node>
      <node id="245147">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="245132">
        <label>vector</label>
      </node>
      <node id="245127">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/AnaToolSequence.cxx</label>
        <link refid="AnaToolSequence.cxx"/>
        <childnode refid="245128" relation="include">
        </childnode>
        <childnode refid="245133" relation="include">
        </childnode>
        <childnode refid="245152" relation="include">
        </childnode>
        <childnode refid="245153" relation="include">
        </childnode>
        <childnode refid="245154" relation="include">
        </childnode>
        <childnode refid="245159" relation="include">
        </childnode>
        <childnode refid="245160" relation="include">
        </childnode>
      </node>
      <node id="245161">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="245159">
        <label>QuickAna/ObjectTypeInfo.h</label>
        <link refid="d2/d0a/ObjectTypeInfo_8h_source"/>
        <childnode refid="245129" relation="include">
        </childnode>
        <childnode refid="245137" relation="include">
        </childnode>
      </node>
      <node id="245148">
        <label>iosfwd</label>
      </node>
      <node id="245138">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="245133">
        <label>QuickAna/AnaTool.h</label>
        <link refid="d8/d28/AnaTool_8h_source"/>
        <childnode refid="245129" relation="include">
        </childnode>
        <childnode refid="245134" relation="include">
        </childnode>
        <childnode refid="245143" relation="include">
        </childnode>
      </node>
      <node id="245156">
        <label>type_traits</label>
      </node>
      <node id="245149">
        <label>set</label>
      </node>
      <node id="245160">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="245161" relation="include">
        </childnode>
      </node>
      <node id="245154">
        <label>QuickAna/MessageCheck.h</label>
        <link refid="d5/dba/QuickAna_2QuickAna_2MessageCheck_8h_source"/>
        <childnode refid="245129" relation="include">
        </childnode>
        <childnode refid="245155" relation="include">
        </childnode>
      </node>
      <node id="245134">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="245135" relation="include">
        </childnode>
        <childnode refid="245136" relation="include">
        </childnode>
        <childnode refid="245140" relation="include">
        </childnode>
        <childnode refid="245142" relation="include">
        </childnode>
      </node>
      <node id="245153">
        <label>QuickAna/DefinitionConf.h</label>
        <link refid="d9/da5/DefinitionConf_8h_source"/>
        <childnode refid="245129" relation="include">
        </childnode>
        <childnode refid="245137" relation="include">
        </childnode>
        <childnode refid="245132" relation="include">
        </childnode>
      </node>
      <node id="245142">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="245145">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
      <node id="245131">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d7/d63/namespaceana">ana</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2015.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/AnaToolSequence.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/AnaTool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/DefinitionArgs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/DefinitionConf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/MessageCheck.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/ObjectTypeInfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ana</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>needs<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>StatusCode<sp/>addDefWP_internal<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DefinitionArgs&amp;<sp/>masterArgs,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolSequence&amp;<sp/>tools,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DefinitionConf&gt;&amp;<sp/>confList)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">msgConfiguration;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>conf<sp/>:<sp/>confList)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>DefinitionArgs<sp/>args<sp/>=<sp/>masterArgs.cloneConf();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ask<sp/>the<sp/>DefinitionConf<sp/>to<sp/>make<sp/>the<sp/>tools.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolSequence<sp/>list;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(conf.makeTools<sp/>(args,<sp/>list));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>tools<sp/>to<sp/>fill<sp/>the<sp/>output<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tool<sp/>:<sp/>list)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool.first)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools.addTool<sp/>(std::unique_ptr&lt;IAnaTool&gt;(tool.first));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>tool<sp/>doesn&apos;t<sp/>exist,<sp/>we<sp/>just<sp/>add<sp/>the<sp/>label...?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>What&apos;s<sp/>going<sp/>on<sp/>here?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools.addLabel<sp/>(tool.second);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>StatusCode<sp/>addDefWP<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DefinitionArgs&amp;<sp/>masterArgs,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolSequence&amp;<sp/>tools,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member" tooltip="the various object types we have to deal with">ObjectType</ref><sp/>type,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DefinitionConf&gt;&amp;<sp/>confList)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">msgConfiguration;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE<sp/>(masterArgs.type()<sp/>==<sp/>type);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>confs<sp/>to<sp/>fill<sp/>the<sp/>list<sp/>of<sp/>names<sp/>and<sp/>check<sp/>for<sp/>duplicates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>seems<sp/>like<sp/>this<sp/>could<sp/>be<sp/>simplified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>mynames;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>conf<sp/>:<sp/>confList)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>wpName<sp/>=<sp/>conf.wpName();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Under<sp/>what<sp/>condition<sp/>would<sp/>the<sp/>name<sp/>be<sp/>empty???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wpName.empty())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>WP<sp/>name<sp/>is<sp/>already<sp/>in<sp/>our<sp/>list<sp/>of<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>use<sp/>std::find<sp/>here<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>other<sp/>:<sp/>mynames)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other<sp/>==<sp/>wpName)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;duplicate<sp/>object<sp/>definition<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>wpName<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="dc/d2d/structana_1_1ObjectTypeInfo_1ae2cd3c7dcb3cacb61317564876f0a3c0" kindref="member" tooltip="the string name of the type">ObjectTypeInfo::name</ref>[type]);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mynames.push_back<sp/>(wpName);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>some<sp/>reason,<sp/>every<sp/>conf<sp/>needs<sp/>to<sp/>know<sp/>whether<sp/>it<sp/>is<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>whether<sp/>it<sp/>is<sp/>part<sp/>of<sp/>a<sp/>multi-working<sp/>point<sp/>definition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>conf<sp/>:<sp/>confList)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT<sp/>(conf.defType()<sp/>==<sp/>type);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setFirstWP<sp/>(first);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.setMultiWP<sp/>(mynames.size()<sp/>&gt;<sp/>1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dc/d2d/structana_1_1ObjectTypeInfo_1afe1996cf0cab93544b516265e7ac0b0b" kindref="member" tooltip="whether this object type supports an IParticle interface">ObjectTypeInfo::supportsIParticle</ref><sp/>(type))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>DefinitionConf<sp/>conf</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d6/de9/structana_1_1DefinitionConf_1af3b64383b05cd59f5eb0d7fb9cc6322d" kindref="member" tooltip="make the configuration object for the IParticle common">DefinitionConf::makeIParticleCommonConf</ref><sp/>(type,<sp/>mynames);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>confList.push_back<sp/>(conf);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(addDefWP_internal<sp/>(masterArgs,<sp/>tools,<sp/>confList));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>StatusCode</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="d7/d63/namespaceana_1a9f8557162bfe152b8c5b810d3fd4d6ae" kindref="member" tooltip="make all definitions from the configuration">makeToolSequence</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DefinitionConf&gt;&amp;<sp/>confList,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DefinitionArgs&amp;<sp/>masterArgs,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolSequence&amp;<sp/>tools)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">msgConfiguration;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>incoming<sp/>confList<sp/>contains<sp/>all<sp/>definition<sp/>info<sp/>for<sp/>all<sp/>object<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>organize<sp/>them<sp/>by<sp/>object<sp/>type<sp/>in<sp/>a<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;ObjectType,std::vector&lt;DefinitionConf&gt;&gt;<sp/>confMap;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>conf<sp/>:<sp/>confList)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>confMap[conf.defType()].push_back<sp/>(conf);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>can<sp/>loop<sp/>over<sp/>the<sp/>object<sp/>types<sp/>and<sp/>create<sp/>the<sp/>tools<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iter<sp/>:<sp/>confMap)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DefinitionArgs<sp/>args<sp/>=<sp/>masterArgs.cloneConf();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args.setType<sp/>(iter.first);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(addDefWP<sp/>(args,<sp/>tools,<sp/>iter.first,<sp/>iter.second));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a62d69ff5da0328df1478aa8128b59a28" kindref="member" tooltip="test the invariant of this object">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a62d69ff5da0328df1478aa8128b59a28" kindref="member" tooltip="test the invariant of this object">  testInvariant</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="153"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1aab30b10ebc7093acb1b85ea653266e05" kindref="member" tooltip="standard constructor">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1aab30b10ebc7093acb1b85ea653266e05" kindref="member" tooltip="standard constructor">  AnaToolSequence</ref><sp/>()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1aab30b10ebc7093acb1b85ea653266e05" kindref="member" tooltip="standard constructor">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1aab30b10ebc7093acb1b85ea653266e05" kindref="member" tooltip="standard constructor">  AnaToolSequence</ref><sp/>(AnaToolSequence&amp;&amp;<sp/>that)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_tools<sp/>(std::move<sp/>(that.m_tools))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>AnaToolSequence&amp;<sp/>AnaToolSequence<sp/>::</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>operator<sp/>=<sp/>(AnaToolSequence&amp;&amp;<sp/>that)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>invariant<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>that.swap<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a11253d51bb8b65e2779df899ab4605a1" kindref="member" tooltip="standard swap function">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a11253d51bb8b65e2779df899ab4605a1" kindref="member" tooltip="standard swap function">  swap</ref><sp/>(AnaToolSequence&amp;<sp/>that)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(&amp;that);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tools.swap<sp/>(that.m_tools);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a217ccb3308504938139d588706ad61e9" kindref="member" tooltip="add a new tool to the sequence">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a217ccb3308504938139d588706ad61e9" kindref="member" tooltip="add a new tool to the sequence">  addTool</ref><sp/>(std::unique_ptr&lt;IAnaTool&gt;<sp/>val_definition)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tools.push_back<sp/>(std::pair&lt;IAnaTool*,std::string&gt;(val_definition.release(),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a78c72f1409926f1eaba650078a02c974" kindref="member" tooltip="add a new label to the sequence">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a78c72f1409926f1eaba650078a02c974" kindref="member" tooltip="add a new label to the sequence">  addLabel</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val_label)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tools.push_back<sp/>(std::pair&lt;IAnaTool*,std::string&gt;(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>val_label));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1aab084cab57a1d3e970e5e0fdcbb4b30c" kindref="member" tooltip="STL-empty function.">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1aab084cab57a1d3e970e5e0fdcbb4b30c" kindref="member" tooltip="STL-empty function.">  empty</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="216"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tools.empty();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1ab187a0d3c84e13ebfd80a6d2012136fe" kindref="member" tooltip="STL-iterator.">AnaToolSequence::iterator</ref><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a9e95ba4f2270b63c6401d637ccf15819" kindref="member" tooltip="STL-begin function.">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a9e95ba4f2270b63c6401d637ccf15819" kindref="member" tooltip="STL-begin function.">  begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="225"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tools.begin();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1ab187a0d3c84e13ebfd80a6d2012136fe" kindref="member" tooltip="STL-iterator.">AnaToolSequence::iterator</ref><sp/><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a4c4d6c6c80cde9c1888eb008d2ab2db4" kindref="member" tooltip="STL-end function.">AnaToolSequence ::</ref></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="d0/d7c/classana_1_1AnaToolSequence_1a4c4d6c6c80cde9c1888eb008d2ab2db4" kindref="member" tooltip="STL-end function.">  end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="234"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tools.end();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/AnaToolSequence.cxx"/>
  </compounddef>
</doxygen>
