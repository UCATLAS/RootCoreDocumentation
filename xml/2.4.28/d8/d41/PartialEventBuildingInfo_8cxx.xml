<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/d41/PartialEventBuildingInfo_8cxx" kind="file">
    <compoundname>PartialEventBuildingInfo.cxx</compoundname>
    <includes refid="d6/d75/PartialEventBuildingInfo_8h" local="yes">TrigSteeringEvent/PartialEventBuildingInfo.h</includes>
    <incdepgraph>
      <node id="330384">
        <label>CLIDSvc/CLASS_DEF.h</label>
      </node>
      <node id="330381">
        <label>TrigSteeringEvent/PartialEventBuildingInfo.h</label>
        <link refid="d6/d75/PartialEventBuildingInfo_8h_source"/>
        <childnode refid="330382" relation="include">
        </childnode>
        <childnode refid="330383" relation="include">
        </childnode>
        <childnode refid="330384" relation="include">
        </childnode>
        <childnode refid="330385" relation="include">
        </childnode>
      </node>
      <node id="330383">
        <label>vector</label>
      </node>
      <node id="330385">
        <label>eformat/SourceIdentifier.h</label>
      </node>
      <node id="330382">
        <label>set</label>
      </node>
      <node id="330380">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/PartialEventBuildingInfo.cxx</label>
        <link refid="PartialEventBuildingInfo.cxx"/>
        <childnode refid="330381" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>XAOD_ANALYSIS</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/PartialEventBuildingInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">PartialEventBuildingInfo::PartialEventBuildingInfo()<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7"><highlight class="normal">PartialEventBuildingInfo::~PartialEventBuildingInfo()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1ac5fc683c898966d5421b161d40290778" kindref="member" tooltip="adds ROB to be added to partially built event">PartialEventBuildingInfo::add</ref>(<sp/>uint32_t<sp/>rob_id<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1ab856ffdbe7dfb513a89381c8d63d9606" kindref="member" tooltip="adds ROB to be added to partially built event">addROB</ref>(rob_id);</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1ab856ffdbe7dfb513a89381c8d63d9606" kindref="member" tooltip="adds ROB to be added to partially built event">PartialEventBuildingInfo::addROB</ref>(<sp/>uint32_t<sp/>rob_id<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>m_robs.insert(rob_id);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1ac5fc683c898966d5421b161d40290778" kindref="member" tooltip="adds ROB to be added to partially built event">PartialEventBuildingInfo::add</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>rob_ids<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a9c123b63b997e8eef28e3df453b9b818" kindref="member" tooltip="adds collection of robs to partially built event">addROBs</ref>(rob_ids);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a9c123b63b997e8eef28e3df453b9b818" kindref="member" tooltip="adds collection of robs to partially built event">PartialEventBuildingInfo::addROBs</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>rob_ids<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;uint32_t&gt;::const_iterator<sp/>i<sp/>=<sp/>rob_ids.begin();<sp/>i<sp/>!=<sp/>rob_ids.end();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>m_robs.insert(*i);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a6f4adea116645f82b2a4a6dab0602431" kindref="member" tooltip="gets back all ROBs added (fills up rob_ids vector given by reference)">PartialEventBuildingInfo::get</ref>(<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>rob_ids<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1ae0bfa9242810555c6fd1168430631bdb" kindref="member" tooltip="gets back all ROBs added">getROBs</ref>(rob_ids);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1ae0bfa9242810555c6fd1168430631bdb" kindref="member" tooltip="gets back all ROBs added">PartialEventBuildingInfo::getROBs</ref>(<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>rob_ids<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>rob_ids.reserve(rob_ids.size()+m_robs.size());<sp/></highlight><highlight class="comment">//<sp/>optimization,<sp/>it<sp/>is<sp/>believed<sp/>that<sp/>m_robs<sp/>can<sp/>be<sp/>big</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::set&lt;uint32_t&gt;::const_iterator<sp/>i<sp/>=<sp/>m_robs.begin();<sp/>i<sp/>!=<sp/>m_robs.end();<sp/>++i<sp/>)<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>rob_ids.push_back(*i);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;uint32_t&gt;&amp;<sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1ae0bfa9242810555c6fd1168430631bdb" kindref="member" tooltip="gets back all ROBs added">PartialEventBuildingInfo::getROBs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_robs;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a054e7cba84eb79207cee0b5db9be62c0" kindref="member" tooltip="add detector to be in partially built event">PartialEventBuildingInfo::addSubDetector</ref>(<sp/>eformat::SubDetector<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>m_subDetectors.insert(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a054e7cba84eb79207cee0b5db9be62c0" kindref="member" tooltip="add detector to be in partially built event">PartialEventBuildingInfo::addSubDetector</ref>(<sp/>std::vector&lt;eformat::SubDetector&gt;<sp/>ids<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;eformat::SubDetector&gt;::const_iterator<sp/>i<sp/>=<sp/>ids.begin();<sp/>i<sp/>!=<sp/>ids.end();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(*i);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a054e7cba84eb79207cee0b5db9be62c0" kindref="member" tooltip="add detector to be in partially built event">PartialEventBuildingInfo::addSubDetector</ref>(<sp/>eformat::SubDetectorGroup<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">eformat;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PIXEL:<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(PIXEL_BARREL);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(PIXEL_DISK);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(PIXEL_B_LAYER);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCT:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(SCT_BARREL_A_SIDE);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(SCT_BARREL_C_SIDE);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(SCT_ENDCAP_A_SIDE);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(SCT_ENDCAP_C_SIDE);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TRT:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TRT_ANCILLARY_CRATE);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TRT_BARREL_A_SIDE);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TRT_BARREL_C_SIDE);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TRT_ENDCAP_A_SIDE);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TRT_ENDCAP_C_SIDE);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LAR:<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(LAR_EM_BARREL_A_SIDE);<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(LAR_EM_BARREL_C_SIDE);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(LAR_EM_ENDCAP_A_SIDE);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(LAR_EM_ENDCAP_C_SIDE);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(LAR_HAD_ENDCAP_A_SIDE);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(LAR_HAD_ENDCAP_C_SIDE);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(LAR_FCAL_A_SIDE);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(LAR_FCAL_C_SIDE);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TILECAL:<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TILECAL_LASER_CRATE);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TILECAL_BARREL_A_SIDE);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TILECAL_BARREL_C_SIDE);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TILECAL_EXT_A_SIDE);<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TILECAL_EXT_C_SIDE);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MUON:<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_ANCILLARY_CRATE);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_MDT_BARREL_A_SIDE);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_MDT_BARREL_C_SIDE);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_MDT_ENDCAP_A_SIDE);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_MDT_ENDCAP_C_SIDE);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_RPC_BARREL_A_SIDE);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_RPC_BARREL_C_SIDE);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_TGC_ENDCAP_A_SIDE);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_TGC_ENDCAP_C_SIDE);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_CSC_ENDCAP_A_SIDE);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(MUON_CSC_ENDCAP_C_SIDE);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TDAQ:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_BEAM_CRATE);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_CALO_PREPROC);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_CALO_CLUSTER_PROC_DAQ);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_CALO_CLUSTER_PROC_ROI);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_CALO_JET_PROC_DAQ);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_CALO_JET_PROC_ROI);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_MUON_CTP_INTERFACE);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_CTP);<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_L2SV);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_SFI);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_SFO);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_LVL2);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(TDAQ_EVENT_FILTER);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FORWARD:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(FORWARD_BCM);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(FORWARD_LUCID);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(FORWARD_ZDC);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subDetectors.insert(FORWARD_ALPHA);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a8424e8d7527acd9678613db1df16849c" kindref="member" tooltip="gets back all SubDetectorss added">PartialEventBuildingInfo::getSubDetectors</ref>(<sp/>std::vector&lt;eformat::SubDetector&gt;&amp;<sp/>ids<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::set&lt;uint32_t&gt;::const_iterator<sp/>i<sp/>=<sp/>m_subDetectors.begin();<sp/>i<sp/>!=<sp/>m_subDetectors.end();<sp/>++i<sp/>)<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>ids.push_back(<sp/>eformat::helper::SourceIdentifier(*i).subdetector_id()<sp/>);<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;uint32_t&gt;&amp;<sp/><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a8424e8d7527acd9678613db1df16849c" kindref="member" tooltip="gets back all SubDetectorss added">PartialEventBuildingInfo::getSubDetectors</ref>(<sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_subDetectors;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1a9c5cd86791f02344cc1fad07634802ba" kindref="member" tooltip="clears the list of ROBs and Dets">PartialEventBuildingInfo::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>m_robs.clear();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>m_subDetectors.clear();</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo_1aca3ec1282c46c8e63abae926a50836c1" kindref="member" tooltip="merges two PEBI objects I.e. it the subject of the method invocation will have ROBs...">PartialEventBuildingInfo::merge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d0c/classPartialEventBuildingInfo" kindref="compound">PartialEventBuildingInfo</ref>&amp;<sp/>peb)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>m_robs.insert(peb.m_robs.begin(),<sp/>peb.m_robs.end());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>m_subDetectors.insert(peb.m_subDetectors.begin(),<sp/>peb.m_subDetectors.end());</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//XAOD_ANALYSIS</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/PartialEventBuildingInfo.cxx"/>
  </compounddef>
</doxygen>
