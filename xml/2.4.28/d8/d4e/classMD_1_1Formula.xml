<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d8/d4e/classMD_1_1Formula" kind="class" prot="public">
    <compoundname>MD::Formula</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1a965eedfc3314c90ce28e315cc9d717c2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MD::Formula::m_formula</definition>
        <argsstring></argsstring>
        <name>m_formula</name>
        <briefdescription>
<para>description: members directly corresponding to accessors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1a36146ffb08602987aad2921d9e8def36" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MD::Formula::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>description: the name we use for the formula </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="121" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1a3f24d7e940928a2c7ad84277e5c80afb" prot="private" static="no" mutable="no">
        <type>TTree *</type>
        <definition>TTree* MD::Formula::m_tree</definition>
        <argsstring></argsstring>
        <name>m_tree</name>
        <briefdescription>
<para>description: the tree we are connected to </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="125" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1a33c38ef5a35a25639ea5dee3917453bf" prot="private" static="no" mutable="no">
        <type>TTreeFormula *</type>
        <definition>TTreeFormula* MD::Formula::m_form</definition>
        <argsstring></argsstring>
        <name>m_form</name>
        <briefdescription>
<para>description the formula used </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="129" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1a2b040e97014184137db960416a4edaee" prot="private" static="no" mutable="no">
        <type>TTreeFormulaManager *</type>
        <definition>TTreeFormulaManager* MD::Formula::m_manager</definition>
        <argsstring></argsstring>
        <name>m_manager</name>
        <briefdescription>
<para>description: the manager used </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1a62bc9650e98b6763e0e2c2ab44047298" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int MD::Formula::m_ndim</definition>
        <argsstring></argsstring>
        <name>m_ndim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>description: the number of array dimensions we need to loop over, or -1 if we are in error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="138" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1a174337c4ac98d26a7994184de91c1e20" prot="private" static="no" mutable="yes">
        <type>Long64_t</type>
        <definition>Long64_t MD::Formula::m_entry</definition>
        <argsstring></argsstring>
        <name>m_entry</name>
        <briefdescription>
<para>description: the last entry we read </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="142" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1ae9391117064db2b1acc2479d1c5d4f4f" prot="private" static="no" mutable="yes">
        <type>Int_t</type>
        <definition>Int_t MD::Formula::m_ndata</definition>
        <argsstring></argsstring>
        <name>m_ndata</name>
        <briefdescription>
<para>description: the number of data entries </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="146" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1a8ae762de96def874349369fb1fca5a5c" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; Double_t &gt;</type>
        <definition>std::vector&lt;Double_t&gt; MD::Formula::m_cache</definition>
        <argsstring></argsstring>
        <name>m_cache</name>
        <briefdescription>
<para>description: the cache of data entries </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="150" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d4e/classMD_1_1Formula_1af2fba13aebc3947d364b754f2268099f" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; MD::Formula::m_read</definition>
        <argsstring></argsstring>
        <name>m_read</name>
        <briefdescription>
<para>description: whether we read the given data entry </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="154" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1ac6b666474d519489659feca75cb6942c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MD::Formula::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: test the invariant of this object guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="33" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1ab931eb9521424f78a61bbc5f50951a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MD::Formula::Formula</definition>
        <argsstring>()</argsstring>
        <name>Formula</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard default constructor guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1a2634d2469d4dd2e96819789e769f7a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MD::Formula::Formula</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;formula, TTree *tree)</argsstring>
        <name>Formula</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>formula</declname>
        </param>
        <param>
          <type>TTree *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard constructor guarantee: strong failures: out of memory II </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1a4b8717effb6230d518d54a2da02a77eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MD::Formula::~Formula</definition>
        <argsstring>()</argsstring>
        <name>~Formula</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard destructor guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1ade5727226f9655581691708170ded5d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MD::Formula::reset</definition>
        <argsstring>(TTree *tree)</argsstring>
        <name>reset</name>
        <param>
          <type>TTree *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: reset this formula to a new tree guarantee: strong failures: out of memory II failures: TTreeFormula error requires: !formula().empty() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="99" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1a41f1d3e3eae474d08f5b0214199e4b4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; MD::Formula::formula</definition>
        <argsstring>() const </argsstring>
        <name>formula</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>description: the formula used guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1a3789f7a7bdd269b2e0f0c7a01e7f895f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MD::Formula::valid</definition>
        <argsstring>() const </argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns: whether the formula is valid guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1a50c5e79435227b4498fcd786f0ae54eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MD::Formula::ndim</definition>
        <argsstring>() const </argsstring>
        <name>ndim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns: the number of unspecified array dimensions for the given formula guarantee: no-fail requires: <ref refid="d8/d4e/classMD_1_1Formula_1a3789f7a7bdd269b2e0f0c7a01e7f895f" kindref="member">valid()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="88" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="155" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1ae90fd26d2cfe17f8b1207d7aa16a4d3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t MD::Formula::ndata</definition>
        <argsstring>() const </argsstring>
        <name>ndata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns: the number of data entries for the formula with the given index guarantee: strong failures: TTreeFormula errors requires: <ref refid="d8/d4e/classMD_1_1Formula_1a3789f7a7bdd269b2e0f0c7a01e7f895f" kindref="member">valid()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="165" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1a7a22b3715ac5dbd7a355cee0886c8e53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Double_t</type>
        <definition>Double_t MD::Formula::value</definition>
        <argsstring>(std::size_t data) const </argsstring>
        <name>value</name>
        <param>
          <type>std::size_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns: the result of evaluating the formula with the given index for the given data entry guarantee: strong failures: TTreeFormula errors requires: <ref refid="d8/d4e/classMD_1_1Formula_1a3789f7a7bdd269b2e0f0c7a01e7f895f" kindref="member">valid()</ref> requires: data &lt; getNData() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="107" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/Root/Formula.cxx" bodystart="198" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1a613e81a4985ea589f78a7e355c5e10a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MD::Formula::Formula</definition>
        <argsstring>(const Formula &amp;that)</argsstring>
        <name>Formula</name>
        <param>
          <type>const <ref refid="d8/d4e/classMD_1_1Formula" kindref="compound">Formula</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>rationale: to avoid broken objects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4e/classMD_1_1Formula_1a083e5d30d2ab6f5ac555ee1d5464065f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4e/classMD_1_1Formula" kindref="compound">Formula</ref> &amp;</type>
        <definition>Formula&amp; MD::Formula::operator=</definition>
        <argsstring>(const Formula &amp;that)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d8/d4e/classMD_1_1Formula" kindref="compound">Formula</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6972">
        <label>string</label>
      </node>
      <node id="6971">
        <label>MD::Formula</label>
        <link refid="d8/d4e/classMD_1_1Formula"/>
        <childnode refid="6972" relation="usage">
          <edgelabel>m_name</edgelabel>
          <edgelabel>m_formula</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/Formula.h" bodystart="31" bodyend="161"/>
    <listofallmembers>
      <member refid="d8/d4e/classMD_1_1Formula_1ab931eb9521424f78a61bbc5f50951a70" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>Formula</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a2634d2469d4dd2e96819789e769f7a13" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>Formula</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a613e81a4985ea589f78a7e355c5e10a5" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>Formula</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a41f1d3e3eae474d08f5b0214199e4b4e" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>formula</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a8ae762de96def874349369fb1fca5a5c" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_cache</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a174337c4ac98d26a7994184de91c1e20" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_entry</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a33c38ef5a35a25639ea5dee3917453bf" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_form</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a965eedfc3314c90ce28e315cc9d717c2" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_formula</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a2b040e97014184137db960416a4edaee" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_manager</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a36146ffb08602987aad2921d9e8def36" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_name</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1ae9391117064db2b1acc2479d1c5d4f4f" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_ndata</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a62bc9650e98b6763e0e2c2ab44047298" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_ndim</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1af2fba13aebc3947d364b754f2268099f" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_read</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a3f24d7e940928a2c7ad84277e5c80afb" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>m_tree</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1ae90fd26d2cfe17f8b1207d7aa16a4d3d" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>ndata</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a50c5e79435227b4498fcd786f0ae54eb" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>ndim</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a083e5d30d2ab6f5ac555ee1d5464065f" prot="private" virt="non-virtual"><scope>MD::Formula</scope><name>operator=</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1ade5727226f9655581691708170ded5d6" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>reset</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1ac6b666474d519489659feca75cb6942c" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>testInvariant</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a3789f7a7bdd269b2e0f0c7a01e7f895f" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>valid</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a7a22b3715ac5dbd7a355cee0886c8e53" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>value</name></member>
      <member refid="d8/d4e/classMD_1_1Formula_1a4b8717effb6230d518d54a2da02a77eb" prot="public" virt="non-virtual"><scope>MD::Formula</scope><name>~Formula</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
