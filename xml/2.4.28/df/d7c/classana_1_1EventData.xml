<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d7c/classana_1_1EventData" kind="class" prot="public">
    <compoundname>ana::EventData</compoundname>
    <includes refid="dd/df3/EventData_8h" local="no">EventData.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d7c/classana_1_1EventData_1a4b6c6a36f8e707e0aa012d720da22b53" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member">ObjectType</ref> &gt;</type>
        <definition>std::set&lt;ObjectType&gt; ana::EventData::m_objectTypes</definition>
        <argsstring></argsstring>
        <name>m_objectTypes</name>
        <briefdescription>
<para>the value of <ref refid="df/d7c/classana_1_1EventData_1aa8bfae79693050ab1e292c868870d066" kindref="member">getObjectTypes</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="170" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d7c/classana_1_1EventData_1a05cf3fb806b340135286727fdd36ba70" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref> &gt;</type>
        <definition>std::set&lt;CP::SystematicSet&gt; ana::EventData::m_systematics</definition>
        <argsstring></argsstring>
        <name>m_systematics</name>
        <briefdescription>
<para>the value of <ref refid="df/d7c/classana_1_1EventData_1aba579aaea01593c08ba82abd03c11a93" kindref="member">getSystematics</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="174" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d7c/classana_1_1EventData_1a4c7d8cffd58d6d7c095b25f4ae713443" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref>, std::string &gt;</type>
        <definition>std::unordered_map&lt;CP::SystematicSet,std::string&gt; ana::EventData::m_names[EnumSize&lt; ObjectType &gt;::dataSize]</definition>
        <argsstring>[EnumSize&lt; ObjectType &gt;::dataSize]</argsstring>
        <name>m_names</name>
        <briefdescription>
<para>the value of <ref refid="df/d7c/classana_1_1EventData_1af47fb80e8a6fc403ea6ed246a0026c0a" kindref="member">getName</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="178" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d7c/classana_1_1EventData_1ab2301ac02b8c5a41406061f5edb92a61" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref>, std::string &gt;</type>
        <definition>std::unordered_map&lt;CP::SystematicSet,std::string&gt; ana::EventData::m_sourceNames[EnumSize&lt; ObjectType &gt;::dataSize]</definition>
        <argsstring>[EnumSize&lt; ObjectType &gt;::dataSize]</argsstring>
        <name>m_sourceNames</name>
        <briefdescription>
<para>the value of <ref refid="df/d7c/classana_1_1EventData_1ad90db5c4f58a37ffeb7ff7b03f76a36c" kindref="member">getSourceName</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="182" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1a885b259b00a591a3378fda858d3090f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ana::EventData::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <briefdescription>
<para>test the invariant of this object </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1a48b4b63776193608c5e42e6b65c42e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ana::EventData::EventData</definition>
        <argsstring>()</argsstring>
        <name>EventData</name>
        <briefdescription>
<para>standard constructor </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="72" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1aa8bfae79693050ab1e292c868870d066" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::set&lt; <ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member">ObjectType</ref> &gt; &amp;</type>
        <definition>const std::set&lt; ObjectType &gt; &amp; ana::EventData::getObjectTypes</definition>
        <argsstring>() const </argsstring>
        <name>getObjectTypes</name>
        <briefdescription>
<para>get the list of object types available </para>        </briefdescription>
        <detaileddescription>
<para>This is a set instead of a bit-map to make it easier to migrate from ObjectType to std::string in the future. <simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="82" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1aba579aaea01593c08ba82abd03c11a93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::set&lt; <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref> &gt; &amp;</type>
        <definition>const std::set&lt; CP::SystematicSet &gt; &amp; ana::EventData::getSystematics</definition>
        <argsstring>() const </argsstring>
        <name>getSystematics</name>
        <briefdescription>
<para>get the list of systematics configured </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="89" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1af47fb80e8a6fc403ea6ed246a0026c0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; ana::EventData::getName</definition>
        <argsstring>(ObjectType type, const CP::SystematicSet &amp;sys) const </argsstring>
        <name>getName</name>
        <param>
          <type><ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member">ObjectType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref> &amp;</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
<para>get the name of the given collection for the given systematic, or the empty string if that collection is not defined. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II<linebreak/>
 unknown systematic for the given collection </para></simplesect>
<simplesect kind="pre"><para>unsigned (type) &lt; <ref refid="de/d8b/structana_1_1EnumSize_3_01ObjectType_01_4_1a0bfea7b53c1dc68d7658c668562f0460" kindref="member">EnumSize&lt;ObjectType&gt;::dataSize</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="103" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="62" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1ac99dd2a523f9c755fc4521eec7b7a9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ana::EventData::setName</definition>
        <argsstring>(ObjectType type, const CP::SystematicSet &amp;sys, const std::string &amp;val_name)</argsstring>
        <name>setName</name>
        <param>
          <type><ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member">ObjectType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref> &amp;</type>
          <declname>sys</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_name</declname>
        </param>
        <briefdescription>
<para>set the name returned by <ref refid="df/d7c/classana_1_1EventData_1af47fb80e8a6fc403ea6ed246a0026c0a" kindref="member">getName</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
<simplesect kind="pre"><para>unsigned (type) &lt; <ref refid="de/d8b/structana_1_1EnumSize_3_01ObjectType_01_4_1a0bfea7b53c1dc68d7658c668562f0460" kindref="member">EnumSize&lt;ObjectType&gt;::dataSize</ref> </para><simplesectsep/><para>!val_name.empty() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="115" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1a2e3bfd8aee1859256ab979c928953887" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; ana::EventData::getNames</definition>
        <argsstring>(ObjectType type) const </argsstring>
        <name>getNames</name>
        <param>
          <type><ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member">ObjectType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get the list of all unique names for one object type </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>unsigned (type) &lt; <ref refid="de/d8b/structana_1_1EnumSize_3_01ObjectType_01_4_1a0bfea7b53c1dc68d7658c668562f0460" kindref="member">EnumSize&lt;ObjectType&gt;::dataSize</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="121" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="97" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1ad90db5c4f58a37ffeb7ff7b03f76a36c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; ana::EventData::getSourceName</definition>
        <argsstring>(ObjectType type, const CP::SystematicSet &amp;sys) const </argsstring>
        <name>getSourceName</name>
        <param>
          <type><ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member">ObjectType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref> &amp;</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
<para>get the name of the original collection from which the collection returned by <ref refid="df/d7c/classana_1_1EventData_1af47fb80e8a6fc403ea6ed246a0026c0a" kindref="member">getName</ref> was copied </para>        </briefdescription>
        <detaileddescription>
<para>This is for shallow copies only. This is just an empty string if the given collection was not obtained by shallow-copying an input container.</para><para>This is meant solely for providing the output tool with all the information it needs. ordinary users should not need to access this information at all. <simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II<linebreak/>
 unknown systematic for the given collection </para></simplesect>
<simplesect kind="pre"><para>unsigned (type) &lt; <ref refid="de/d8b/structana_1_1EnumSize_3_01ObjectType_01_4_1a0bfea7b53c1dc68d7658c668562f0460" kindref="member">EnumSize&lt;ObjectType&gt;::dataSize</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="142" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="112" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1a14af6fecc21f585468521698cf985367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ana::EventData::setSourceName</definition>
        <argsstring>(ObjectType type, const CP::SystematicSet &amp;sys, const std::string &amp;val_sourceName)</argsstring>
        <name>setSourceName</name>
        <param>
          <type><ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member">ObjectType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref> &amp;</type>
          <declname>sys</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_sourceName</declname>
        </param>
        <briefdescription>
<para>set the name returned by <ref refid="df/d7c/classana_1_1EventData_1af47fb80e8a6fc403ea6ed246a0026c0a" kindref="member">getName</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
<simplesect kind="pre"><para>unsigned (type) &lt; <ref refid="de/d8b/structana_1_1EnumSize_3_01ObjectType_01_4_1a0bfea7b53c1dc68d7658c668562f0460" kindref="member">EnumSize&lt;ObjectType&gt;::dataSize</ref> </para><simplesectsep/><para>!val_name.empty() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="154" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="132" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/classana_1_1EventData_1a392c2fe1a10845d995c478521a129313" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; ana::EventData::getSourceNames</definition>
        <argsstring>(ObjectType type) const </argsstring>
        <name>getSourceNames</name>
        <param>
          <type><ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member">ObjectType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get the list of all unique source names for one object type </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>unsigned (type) &lt; <ref refid="de/d8b/structana_1_1EnumSize_3_01ObjectType_01_4_1a0bfea7b53c1dc68d7658c668562f0460" kindref="member">EnumSize&lt;ObjectType&gt;::dataSize</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="160" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/EventData.cxx" bodystart="147" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>the list of all container names we put into the event </para>    </briefdescription>
    <detaileddescription>
<para>This is meant to be used in several places:<itemizedlist>
<listitem><para>The output tool can use this to determine which containers it has to write out</para></listitem><listitem><para>If this structure is written out as part of the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> meta-data, the user can use it to determine the content of a file when reading it back, i.e. which object types and systematics are contained and what containers to retrieve for each.</para></listitem><listitem><para>In a similar manner to reading a fully corrected <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> file, this would also allow users to run <ref refid="d4/d83/classana_1_1QuickAna" kindref="compound">QuickAna</ref> in one algorithm and then retrieve the <ref refid="d4/d83/classana_1_1QuickAna" kindref="compound">QuickAna</ref> output from another algorithm.</para></listitem></itemizedlist>
</para><para>The interface here is probably going to change: For one thing I want to phase out the ObjectType enum, so this will have to be changed from ObjectType to string at some point in the future. For another, it might be nice to provide a retrieve function as well. Also, I probably need some functions to check which containers and systematics are actually defined. And there may be some changes as well to make this consistent with how <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> meta-data is used.</para><para>For now this is just bolted on to the rest of the <ref refid="d4/d83/classana_1_1QuickAna" kindref="compound">QuickAna</ref> implementation, but the hope is that I can eventually integrate this more closely into the rest of the implementation, which may require some further changes. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/EventData.h" bodystart="55" bodyend="183"/>
    <listofallmembers>
      <member refid="df/d7c/classana_1_1EventData_1a48b4b63776193608c5e42e6b65c42e19" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>EventData</name></member>
      <member refid="df/d7c/classana_1_1EventData_1af47fb80e8a6fc403ea6ed246a0026c0a" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>getName</name></member>
      <member refid="df/d7c/classana_1_1EventData_1a2e3bfd8aee1859256ab979c928953887" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>getNames</name></member>
      <member refid="df/d7c/classana_1_1EventData_1aa8bfae79693050ab1e292c868870d066" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>getObjectTypes</name></member>
      <member refid="df/d7c/classana_1_1EventData_1ad90db5c4f58a37ffeb7ff7b03f76a36c" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>getSourceName</name></member>
      <member refid="df/d7c/classana_1_1EventData_1a392c2fe1a10845d995c478521a129313" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>getSourceNames</name></member>
      <member refid="df/d7c/classana_1_1EventData_1aba579aaea01593c08ba82abd03c11a93" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>getSystematics</name></member>
      <member refid="df/d7c/classana_1_1EventData_1a4c7d8cffd58d6d7c095b25f4ae713443" prot="private" virt="non-virtual"><scope>ana::EventData</scope><name>m_names</name></member>
      <member refid="df/d7c/classana_1_1EventData_1a4b6c6a36f8e707e0aa012d720da22b53" prot="private" virt="non-virtual"><scope>ana::EventData</scope><name>m_objectTypes</name></member>
      <member refid="df/d7c/classana_1_1EventData_1ab2301ac02b8c5a41406061f5edb92a61" prot="private" virt="non-virtual"><scope>ana::EventData</scope><name>m_sourceNames</name></member>
      <member refid="df/d7c/classana_1_1EventData_1a05cf3fb806b340135286727fdd36ba70" prot="private" virt="non-virtual"><scope>ana::EventData</scope><name>m_systematics</name></member>
      <member refid="df/d7c/classana_1_1EventData_1ac99dd2a523f9c755fc4521eec7b7a9db" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>setName</name></member>
      <member refid="df/d7c/classana_1_1EventData_1a14af6fecc21f585468521698cf985367" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>setSourceName</name></member>
      <member refid="df/d7c/classana_1_1EventData_1a885b259b00a591a3378fda858d3090f6" prot="public" virt="non-virtual"><scope>ana::EventData</scope><name>testInvariant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
