<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d2c/CommonSF_8h" kind="file">
    <compoundname>CommonSF.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">typeinfo</includes>
    <includes local="yes">TROOT.h</includes>
    <includes local="yes">TClass.h</includes>
    <includes local="yes">TFile.h</includes>
    <includes local="yes">TGraph.h</includes>
    <includes local="yes">TH1F.h</includes>
    <includes local="yes">TH1D.h</includes>
    <includes local="yes">TObject.h</includes>
    <includes local="yes">TLorentzVector.h</includes>
    <includes local="yes">TKey.h</includes>
    <includes local="yes">TParameter.h</includes>
    <includedby refid="d2/d8f/CommonSF_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/CommonSF.cxx</includedby>
    <includedby refid="d5/da2/BDTSF_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/TauCorrUncert/BDTSF.h</includedby>
    <includedby refid="d9/d2b/TauSF_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/TauCorrUncert/TauSF.h</includedby>
    <incdepgraph>
      <node id="284810">
        <label>assert.h</label>
      </node>
      <node id="284818">
        <label>TH1D.h</label>
      </node>
      <node id="284820">
        <label>TLorentzVector.h</label>
      </node>
      <node id="284807">
        <label>string</label>
      </node>
      <node id="284809">
        <label>map</label>
      </node>
      <node id="284813">
        <label>TROOT.h</label>
      </node>
      <node id="284812">
        <label>typeinfo</label>
      </node>
      <node id="284819">
        <label>TObject.h</label>
      </node>
      <node id="284808">
        <label>vector</label>
      </node>
      <node id="284815">
        <label>TFile.h</label>
      </node>
      <node id="284821">
        <label>TKey.h</label>
      </node>
      <node id="284822">
        <label>TParameter.h</label>
      </node>
      <node id="284806">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/TauCorrUncert/CommonSF.h</label>
        <link refid="CommonSF.h"/>
        <childnode refid="284807" relation="include">
        </childnode>
        <childnode refid="284808" relation="include">
        </childnode>
        <childnode refid="284809" relation="include">
        </childnode>
        <childnode refid="284810" relation="include">
        </childnode>
        <childnode refid="284811" relation="include">
        </childnode>
        <childnode refid="284812" relation="include">
        </childnode>
        <childnode refid="284813" relation="include">
        </childnode>
        <childnode refid="284814" relation="include">
        </childnode>
        <childnode refid="284815" relation="include">
        </childnode>
        <childnode refid="284816" relation="include">
        </childnode>
        <childnode refid="284817" relation="include">
        </childnode>
        <childnode refid="284818" relation="include">
        </childnode>
        <childnode refid="284819" relation="include">
        </childnode>
        <childnode refid="284820" relation="include">
        </childnode>
        <childnode refid="284821" relation="include">
        </childnode>
        <childnode refid="284822" relation="include">
        </childnode>
      </node>
      <node id="284817">
        <label>TH1F.h</label>
      </node>
      <node id="284811">
        <label>iostream</label>
      </node>
      <node id="284814">
        <label>TClass.h</label>
      </node>
      <node id="284816">
        <label>TGraph.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="284825">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/TauCorrUncert/TauSF.h</label>
        <link refid="d9/d2b/TauSF_8h_source"/>
      </node>
      <node id="284824">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/TauCorrUncert/BDTSF.h</label>
        <link refid="d5/da2/BDTSF_8h_source"/>
      </node>
      <node id="284823">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/TauCorrUncert/CommonSF.h</label>
        <link refid="CommonSF.h"/>
        <childnode refid="284824" relation="include">
        </childnode>
        <childnode refid="284825" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d3/d91/classTauCorrUncert_1_1CommonSF" prot="public">TauCorrUncert::CommonSF</innerclass>
    <innernamespace refid="d2/d75/namespaceTauCorrUncert">TauCorrUncert</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>COMMONSF_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>COMMONSF_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TROOT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TClass.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TGraph.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH1F.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH1D.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TLorentzVector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TKey.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TParameter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">TauCorrUncert<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="d3/d91/classTauCorrUncert_1_1CommonSF" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d91/classTauCorrUncert_1_1CommonSF" kindref="compound">CommonSF</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TObject</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d91/classTauCorrUncert_1_1CommonSF" kindref="compound">CommonSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sharepath,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sSFFileName,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="d3/d91/classTauCorrUncert_1_1CommonSF" kindref="compound">CommonSF</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ConvertProngToString(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prongness);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>ConvertEtaToString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>fEta)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>TH1F*&gt;<sp/>SFMAP;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>SFMAP*<sp/>m_mSF;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_debug;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReadInputs(TFile*<sp/>f,<sp/>std::map&lt;std::string,<sp/>T&gt;*<sp/>map)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!f<sp/>||<sp/>!f-&gt;IsOpen())</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fatal(</highlight><highlight class="stringliteral">&quot;ReadInputs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>f-&gt;GetName());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(f-&gt;IsOpen());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TKey<sp/>*key;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIter<sp/>next(f-&gt;GetListOfKeys());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((key<sp/>=<sp/>(TKey*)next()))</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TClass<sp/>*cl<sp/>=<sp/>gROOT-&gt;GetClass(key-&gt;GetClassName());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cl-&gt;InheritsFrom(</highlight><highlight class="stringliteral">&quot;TH1&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>obj<sp/>=<sp/>(<ref refid="d1/def/classT" kindref="compound">T</ref>)key-&gt;ReadObj();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*map)[std::string(obj-&gt;GetName())]<sp/>=<sp/>obj;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;ReadInputs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>loaded<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>f-&gt;GetName());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ClassDef(<ref refid="d3/d91/classTauCorrUncert_1_1CommonSF" kindref="compound">CommonSF</ref>,<sp/>1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>TauCorrUncert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>COMMONSF_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/TauCorrUncert/CommonSF.h"/>
  </compounddef>
</doxygen>
