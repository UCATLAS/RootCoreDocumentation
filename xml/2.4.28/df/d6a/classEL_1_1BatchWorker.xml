<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d6a/classEL_1_1BatchWorker" kind="class" prot="public">
    <compoundname>EL::BatchWorker</compoundname>
    <basecompoundref refid="da/d12/classEL_1_1Worker" prot="public" virt="non-virtual">EL::Worker</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d6a/classEL_1_1BatchWorker_1a1d5c2bca4a1a4e4e0b0eadde3762ca21" prot="private" static="no" mutable="no">
        <type>const <ref refid="dd/dda/structEL_1_1BatchJob" kindref="compound">BatchJob</ref> *</type>
        <definition>const BatchJob* EL::BatchWorker::m_job</definition>
        <argsstring></argsstring>
        <name>m_job</name>
        <briefdescription>
<para>description: constructor arguments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d6a/classEL_1_1BatchWorker_1ac2209ae404fbbefd5d3e3090ff9b46cd" prot="private" static="no" mutable="no">
        <type>const <ref refid="d0/d1a/structEL_1_1BatchSample" kindref="compound">BatchSample</ref> *</type>
        <definition>const BatchSample* EL::BatchWorker::m_sample</definition>
        <argsstring></argsstring>
        <name>m_sample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" line="83" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d6a/classEL_1_1BatchWorker_1a49a1ca5a65af3f8bf0c10e4f23863497" prot="private" static="no" mutable="no">
        <type>const <ref refid="d2/d8b/structEL_1_1BatchSegment" kindref="compound">BatchSegment</ref> *</type>
        <definition>const BatchSegment* EL::BatchWorker::m_segment</definition>
        <argsstring></argsstring>
        <name>m_segment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d6a/classEL_1_1BatchWorker_1a4cf119a7c3a00d4edf6e84fb8105337c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::BatchWorker::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="da/d12/classEL_1_1Worker_1a64f78ba7f80703b68569d244dffad75c">testInvariant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: test the invariant of this object guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/BatchWorker.cxx" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="df/d6a/classEL_1_1BatchWorker_1aefa8e63981fd4d25f93bc6f0a8502f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::BatchWorker::BatchWorker</definition>
        <argsstring>(const BatchJob *val_job, const BatchSample *val_sample, const BatchSegment *val_segment, TList *output)</argsstring>
        <name>BatchWorker</name>
        <param>
          <type>const <ref refid="dd/dda/structEL_1_1BatchJob" kindref="compound">BatchJob</ref> *</type>
          <declname>val_job</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d1a/structEL_1_1BatchSample" kindref="compound">BatchSample</ref> *</type>
          <declname>val_sample</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d8b/structEL_1_1BatchSegment" kindref="compound">BatchSegment</ref> *</type>
          <declname>val_segment</declname>
        </param>
        <param>
          <type>TList *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard constructor guarantee: strong failures: low level errors I requires: val_job != 0 requires: val_sample != 0 requires: val_segment != 0 requires: output != 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/BatchWorker.cxx" bodystart="53" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="df/d6a/classEL_1_1BatchWorker_1ab52a76423b09128cb0c441bd641349d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::BatchWorker::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: run the job guarantee: strong failures: out of memory II failures: job failures </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/BatchWorker.cxx" bodystart="80" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="df/d6a/classEL_1_1BatchWorker_1af7c22477d1d87442c8852797ad0b27f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::BatchWorker::execute</definition>
        <argsstring>(unsigned job_id, const char *confFile)</argsstring>
        <name>execute</name>
        <param>
          <type>unsigned</type>
          <declname>job_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>confFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do what is needed to execute the given job segment guarantee: basic failures: job specific </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/BatchWorker.cxx" bodystart="120" bodyend="155"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2271">
        <label>EL::BatchWorker</label>
        <link refid="df/d6a/classEL_1_1BatchWorker"/>
        <childnode refid="2272" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2272">
        <label>EL::Worker</label>
        <link refid="da/d12/classEL_1_1Worker"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2273">
        <label>EL::BatchWorker</label>
        <link refid="df/d6a/classEL_1_1BatchWorker"/>
        <childnode refid="2274" relation="public-inheritance">
        </childnode>
        <childnode refid="2276" relation="usage">
          <edgelabel>m_job</edgelabel>
        </childnode>
        <childnode refid="2280" relation="usage">
          <edgelabel>m_segment</edgelabel>
        </childnode>
        <childnode refid="2281" relation="usage">
          <edgelabel>m_sample</edgelabel>
        </childnode>
      </node>
      <node id="2280">
        <label>EL::BatchSegment</label>
        <link refid="d2/d8b/structEL_1_1BatchSegment"/>
        <childnode refid="2277" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="2274">
        <label>EL::Worker</label>
        <link refid="da/d12/classEL_1_1Worker"/>
        <childnode refid="2275" relation="usage">
          <edgelabel>m_metaData</edgelabel>
        </childnode>
      </node>
      <node id="2277">
        <label>string</label>
      </node>
      <node id="2276">
        <label>EL::BatchJob</label>
        <link refid="dd/dda/structEL_1_1BatchJob"/>
        <childnode refid="2277" relation="usage">
          <edgelabel>location</edgelabel>
        </childnode>
        <childnode refid="2278" relation="usage">
          <edgelabel>job</edgelabel>
        </childnode>
      </node>
      <node id="2279">
        <label>SH::SampleHandler</label>
        <link refid="d1/d56/classSH_1_1SampleHandler"/>
      </node>
      <node id="2275">
        <label>SH::MetaObject</label>
        <link refid="db/d3a/classSH_1_1MetaObject"/>
      </node>
      <node id="2281">
        <label>EL::BatchSample</label>
        <link refid="d0/d1a/structEL_1_1BatchSample"/>
        <childnode refid="2277" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="2275" relation="usage">
          <edgelabel>meta</edgelabel>
        </childnode>
      </node>
      <node id="2278">
        <label>EL::Job</label>
        <link refid="da/dbb/classEL_1_1Job"/>
        <childnode refid="2279" relation="usage">
          <edgelabel>m_sampleHandler</edgelabel>
        </childnode>
        <childnode refid="2275" relation="usage">
          <edgelabel>m_options</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/BatchWorker.h" bodystart="27" bodyend="90"/>
    <listofallmembers>
      <member refid="da/d12/classEL_1_1Worker_1aca936d72198faafde477941f61ffeed4" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>addAlg</name></member>
      <member refid="da/d12/classEL_1_1Worker_1aff16c75575802fa0f8402fe8b0f9eb3f" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>addOutput</name></member>
      <member refid="da/d12/classEL_1_1Worker_1acc7df673f6aa991a408b43e98283952e" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>addOutputFile</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a5ee33c4aa9150b08eb7020153ccb0b26" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>addOutputList</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a1bc18ab2b0c3f4d27fdac1ef3aba805f" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>addOutputWriter</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a551253c77c0fbeaf9c4eb30f5d78db6e" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>algsChangeInput</name></member>
      <member refid="da/d12/classEL_1_1Worker_1adabfb74ecb5f5313331f463f3cb3c677" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>algsEndOfFile</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a51d9eea50fe32a30805d40938c44a0ff" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>algsExecute</name></member>
      <member refid="da/d12/classEL_1_1Worker_1aca4f6f0e6aa4702331963ca168d540a4" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>algsFinalize</name></member>
      <member refid="df/d6a/classEL_1_1BatchWorker_1aefa8e63981fd4d25f93bc6f0a8502f0a" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>BatchWorker</name></member>
      <member refid="da/d12/classEL_1_1Worker_1ad9513943a0f00baaa5f20adef007481c" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>d3pdreader</name></member>
      <member refid="df/d6a/classEL_1_1BatchWorker_1af7c22477d1d87442c8852797ad0b27f7" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>execute</name></member>
      <member refid="da/d12/classEL_1_1Worker_1acad573dfc141fde9408617ed1637bcc2" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>getAlg</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a65939f2fcf944b0417586f87d6c2d8d1" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>getOutputFile</name></member>
      <member refid="da/d12/classEL_1_1Worker_1ab08f2b1ef331dbe53e3ca5f09c499346" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>getOutputFileNull</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a84447d3932620b92f8f81ce54260d22b" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>getOutputHist</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a8ca73bf715218c951793aebad3df88dd" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>hasD3pdreader</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a3af6d6032f1adac04bec5a169807eafb" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>inputFile</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a500b4636942e9d4dc4e6d4777134b928" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>inputFileName</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a73f9bca159d9fd97d7052dd860d04350" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>inputFileNumEntries</name></member>
      <member refid="df/d6a/classEL_1_1BatchWorker_1a1d5c2bca4a1a4e4e0b0eadde3762ca21" prot="private" virt="non-virtual"><scope>EL::BatchWorker</scope><name>m_job</name></member>
      <member refid="df/d6a/classEL_1_1BatchWorker_1ac2209ae404fbbefd5d3e3090ff9b46cd" prot="private" virt="non-virtual"><scope>EL::BatchWorker</scope><name>m_sample</name></member>
      <member refid="df/d6a/classEL_1_1BatchWorker_1a49a1ca5a65af3f8bf0c10e4f23863497" prot="private" virt="non-virtual"><scope>EL::BatchWorker</scope><name>m_segment</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a53da237f8ee9f81f202729414af16bd5" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>metaData</name></member>
      <member refid="df/d6a/classEL_1_1BatchWorker_1ab52a76423b09128cb0c441bd641349d5" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>run</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a967f58afb058264f474cca98d77350b9" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>setInputFile</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a1aa9932cb415b18a2b680ca733755751" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>setTreeProofOnly</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a5155e7ddbcee2de9ecc177ffb7fec674" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>skipEvent</name></member>
      <member refid="df/d6a/classEL_1_1BatchWorker_1a4cf119a7c3a00d4edf6e84fb8105337c" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>testInvariant</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a61fcc322c35032ff655c5fef8e6da48d" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>tree</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a5822faaac316f06b0b74b60a59d132c3" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>treeEntry</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a215d8e053292e068311083e2791469d0" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>treeEntry</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a08fcf2e906ab203aa4701e416c2552bd" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>triggerConfig</name></member>
      <member refid="da/d12/classEL_1_1Worker_1acc441920b5219ccda0fb42fe94a28c46" prot="protected" virt="non-virtual"><scope>EL::BatchWorker</scope><name>Worker</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a36ae2dee5cc97f9691055be659c7691b" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>xaodEvent</name></member>
      <member refid="da/d12/classEL_1_1Worker_1a268b297f7a5f6626268e83a079ad1b1c" prot="public" virt="non-virtual"><scope>EL::BatchWorker</scope><name>xaodStore</name></member>
      <member refid="da/d12/classEL_1_1Worker_1ab3b260403c28ffffb508d178db56e69a" prot="public" virt="virtual"><scope>EL::BatchWorker</scope><name>~Worker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
