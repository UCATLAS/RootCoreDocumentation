<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors" kind="class" prot="public">
    <compoundname>CP::IMuonEfficiencyScaleFactors</compoundname>
    <basecompoundref refid="d4/d20/classasg_1_1IAsgTool" prot="public" virt="virtual">asg::IAsgTool</basecompoundref>
    <basecompoundref refid="d4/d5c/classCP_1_1ISystematicsTool" prot="public" virt="virtual">CP::ISystematicsTool</basecompoundref>
    <derivedcompoundref refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors" prot="public" virt="non-virtual">CP::MuonEfficiencyScaleFactors</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1aca5a416458939b512178c8fce151d7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>StatusCode</type>
        <definition>virtual StatusCode CP::IMuonEfficiencyScaleFactors::initialize</definition>
        <argsstring>()=0</argsstring>
        <name>initialize</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1a07578821c96bf7fdea34773d508cfb64">initialize</reimplementedby>
        <briefdescription>
<para>initialize the tool. Call once all properties are set up to your liking </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1ab85da149c0761fc12864515d07bf1946" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IMuonEfficiencyScaleFactors::getEfficiencyScaleFactor</definition>
        <argsstring>(const xAOD::Muon &amp;mu, float &amp;sf, const xAOD::EventInfo *info=0) const =0</argsstring>
        <name>getEfficiencyScaleFactor</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1a1c3738aa4713ef82a5c98294403b16e7">getEfficiencyScaleFactor</reimplementedby>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>sf</declname>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>info</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Retrieve the Scale factor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1ad8989e90c23d423b6673ef86e72af08c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IMuonEfficiencyScaleFactors::applyEfficiencyScaleFactor</definition>
        <argsstring>(const xAOD::Muon &amp;mu, const xAOD::EventInfo *info=0) const =0</argsstring>
        <name>applyEfficiencyScaleFactor</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1a70a6e0a85f43e0d18231c5d3ee244d14">applyEfficiencyScaleFactor</reimplementedby>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>info</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>decorate the muon with scale factor information </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1a5fddb46343f97e30a814eedca35ec0c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IMuonEfficiencyScaleFactors::getEfficiencyScaleFactorReplicas</definition>
        <argsstring>(const xAOD::Muon &amp;mu, std::vector&lt; float &gt; &amp;sf_err, const xAOD::EventInfo *info=0) const =0</argsstring>
        <name>getEfficiencyScaleFactorReplicas</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1aca520dcf3282c3c01cd5b568a96a36bd">getEfficiencyScaleFactorReplicas</reimplementedby>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>std::vector&lt; float &gt; &amp;</type>
          <declname>sf_err</declname>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>info</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>BONUS functionality. </para>        </briefdescription>
        <detaileddescription>
<para>An optional, less conservative way of treating the SF stat error. Here, we generate a set of SF replicas, each by smearing the SF bin by bin with a gaussian with the width of the SF error in that bin the SF stat systematic is then the variation of the final observable within the replicas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1ac526c6b91b164324b573a3d741c7ff58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IMuonEfficiencyScaleFactors::applyEfficiencyScaleFactorReplicas</definition>
        <argsstring>(const xAOD::Muon &amp;mu, int nreplicas=50, const xAOD::EventInfo *info=0) const =0</argsstring>
        <name>applyEfficiencyScaleFactorReplicas</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1a7f5d1719fb9c71c58f46e156fcf53b06">applyEfficiencyScaleFactorReplicas</reimplementedby>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nreplicas</declname>
          <defval>50</defval>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>info</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>decorate the muon with a set of SF replica weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="130"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1adb8f01d9047f3d5e2703ed734d1fb62f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IMuonEfficiencyScaleFactors::getDataEfficiency</definition>
        <argsstring>(const xAOD::Muon &amp;mu, float &amp;eff, const xAOD::EventInfo *info=0) const =0</argsstring>
        <name>getDataEfficiency</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1a2617afe6cf6fdf805428739a311adc6d">getDataEfficiency</reimplementedby>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>eff</declname>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>info</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Obtain the muon efficiency measured using the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1aa34b70663bf16ee84df1ac8e5255fccf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IMuonEfficiencyScaleFactors::applyDataEfficiency</definition>
        <argsstring>(const xAOD::Muon &amp;mu, const xAOD::EventInfo *info=0) const =0</argsstring>
        <name>applyDataEfficiency</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1a5d428a1155dfe58952da71b12399cfc2">applyDataEfficiency</reimplementedby>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>info</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>decorate a muon with the efficiency information </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1a93a969c2631f2fb07130157c8a723a47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IMuonEfficiencyScaleFactors::getMCEfficiency</definition>
        <argsstring>(const xAOD::Muon &amp;mu, float &amp;eff, const xAOD::EventInfo *info=0) const =0</argsstring>
        <name>getMCEfficiency</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1aca48f81fef1e7e4bbda43efedce9db92">getMCEfficiency</reimplementedby>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>eff</declname>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>info</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Obtain the muon efficiency measured using the MonteCarlo. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="139"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1ab582e83b7e4ba7372dc3a7d3cfc7a846" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IMuonEfficiencyScaleFactors::applyMCEfficiency</definition>
        <argsstring>(const xAOD::Muon &amp;mu, const xAOD::EventInfo *info=0) const =0</argsstring>
        <name>applyMCEfficiency</name>
        <reimplementedby refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors_1aec76db3d3dd78d3c714807cda162d8e4">applyMCEfficiency</reimplementedby>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>info</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1a3d9e20a1a5f486a8b6f52aabdbbfc827" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CP::IMuonEfficiencyScaleFactors::~IMuonEfficiencyScaleFactors</definition>
        <argsstring>()</argsstring>
        <name>~IMuonEfficiencyScaleFactors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" bodystart="143" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10006">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="10008">
        <label>CP::MuonEfficiencyScaleFactors</label>
        <link refid="d6/df7/classCP_1_1MuonEfficiencyScaleFactors"/>
        <childnode refid="10005" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10005">
        <label>CP::IMuonEfficiencyScaleFactors</label>
        <link refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors"/>
        <childnode refid="10006" relation="public-inheritance">
        </childnode>
        <childnode refid="10007" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10007">
        <label>CP::ISystematicsTool</label>
        <link refid="d4/d5c/classCP_1_1ISystematicsTool"/>
        <childnode refid="10006" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10010">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="10009">
        <label>CP::IMuonEfficiencyScaleFactors</label>
        <link refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors"/>
        <childnode refid="10010" relation="public-inheritance">
        </childnode>
        <childnode refid="10011" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10011">
        <label>CP::ISystematicsTool</label>
        <link refid="d4/d5c/classCP_1_1ISystematicsTool"/>
        <childnode refid="10010" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" line="103" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/MuonEfficiencyCorrections/IMuonEfficiencyScaleFactors.h" bodystart="103" bodyend="146"/>
    <listofallmembers>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1abc7cfc4bece0b5aaf372e75c33ba2122" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>affectingSystematics</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1aa34b70663bf16ee84df1ac8e5255fccf" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>applyDataEfficiency</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1ad8989e90c23d423b6673ef86e72af08c" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>applyEfficiencyScaleFactor</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1ac526c6b91b164324b573a3d741c7ff58" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>applyEfficiencyScaleFactorReplicas</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1ab582e83b7e4ba7372dc3a7d3cfc7a846" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>applyMCEfficiency</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a73f35f85955411a7e14cb208721a242d" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>applySystematicVariation</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1adb8f01d9047f3d5e2703ed734d1fb62f" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>getDataEfficiency</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1ab85da149c0761fc12864515d07bf1946" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>getEfficiencyScaleFactor</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1a5fddb46343f97e30a814eedca35ec0c6" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>getEfficiencyScaleFactorReplicas</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1a93a969c2631f2fb07130157c8a723a47" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>getMCEfficiency</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1aca5a416458939b512178c8fce151d7fd" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>initialize</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a04aa5fb3e693dc6536b27354c7b2c71e" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>isAffectedBySystematic</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1af1aac990b958e92bf38123318d926e67" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>print</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a6d2b283af1c21f9d40588ef87eb6c4b3" prot="public" virt="pure-virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>recommendedSystematics</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>~IAsgTool</name></member>
      <member refid="df/d73/classCP_1_1IMuonEfficiencyScaleFactors_1a3d9e20a1a5f486a8b6f52aabdbbfc827" prot="public" virt="virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>~IMuonEfficiencyScaleFactors</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a18391a9c9b1789aa9045082bcd65c6ee" prot="public" virt="virtual"><scope>CP::IMuonEfficiencyScaleFactors</scope><name>~ISystematicsTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
