<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d88/classCxxUtils_1_1Array_3_010_01_4" kind="class" prot="public">
    <compoundname>CxxUtils::Array&lt; 0 &gt;</compoundname>
    <derivedcompoundref refid="d0/da2/classCxxUtils_1_1WritableArray_3_010_01_4" prot="public" virt="non-virtual">CxxUtils::WritableArray&lt; 0 &gt;</derivedcompoundref>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a472bd5344f6df5e85996f8513f54201e" prot="public" static="no">
        <name>@7</name>
        <enumvalue id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a472bd5344f6df5e85996f8513f54201ea93997ec307c72c7edc11a48355d44935" prot="public">
          <name>NDIM</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The number of dimensions of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="258" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" bodystart="258" bodyend="258"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a4247de781a25d157d040ceb7927b6b1d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Array&lt; 1 &gt;</definition>
        <argsstring></argsstring>
        <name>Array&lt; 1 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="335" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a2bd7eabd9c9d53c93983d0bacd72b0e1" prot="protected" static="no" mutable="no">
        <type>const Arrayelt *</type>
        <definition>const Arrayelt* CxxUtils::Array&lt; 0 &gt;::m_elt</definition>
        <argsstring></argsstring>
        <name>m_elt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to this array&apos;s single element. Null if this instance was created using the default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="339" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a398c7f190e164eb24c20a0aaa658ae94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CxxUtils::Array&lt; 0 &gt;::Array</definition>
        <argsstring>()</argsstring>
        <name>Array</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This produces an invalid <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array" kindref="compound">Array</ref></computeroutput> that is not associated with an <computeroutput>Arrayrep</computeroutput>. <computeroutput><ref refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1acedf777c4a1d2af9be324b743ecf69c6" kindref="member">valid()</ref></computeroutput> will return <computeroutput>false</computeroutput> for such an array. The only other thing that it is legal to do with an invalid array is to assign to it (which may make it valid). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="268" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1ad73c938c858e14eb59eb5ac2d6f34ca7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CxxUtils::Array&lt; 0 &gt;::Array</definition>
        <argsstring>(const Arrayrep &amp;rep)</argsstring>
        <name>Array</name>
        <param>
          <type>const <ref refid="d4/dc1/structCaloRec_1_1Arrayrep" kindref="compound">Arrayrep</ref> &amp;</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>Arrayrep</computeroutput> from which to initialize the array.</para></parameterdescription>
</parameteritem>
</parameterlist>
Initialize an array from an <computeroutput>Arrayrep</computeroutput>. The new array will represent the entire <computeroutput>Arrayrep</computeroutput>. The dimension <computeroutput><ref refid="da/deb/structN" kindref="compound">N</ref></computeroutput> must match the length of the <computeroutput>Arrayrep&apos;s</computeroutput> shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="278" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="231" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1acedf777c4a1d2af9be324b743ecf69c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CxxUtils::Array&lt; 0 &gt;::valid</definition>
        <argsstring>() const </argsstring>
        <name>valid</name>
        <briefdescription>
<para>Test for validity. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array" kindref="compound">Array</ref></computeroutput> is associated with an <computeroutput>Arrayrep</computeroutput>, false if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="285" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a72ede3a1e896f8f1830a7ea19c2a5c6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt; unsigned int &gt; CxxUtils::Array&lt; 0 &gt;::shape</definition>
        <argsstring>() const </argsstring>
        <name>shape</name>
        <briefdescription>
<para>Return the array shape. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The array shape.</para></simplesect>
The array shape is vector with one element for each array dimension, giving the size of the array along that dimension. For <computeroutput><ref refid="df/d88/classCxxUtils_1_1Array_3_010_01_4" kindref="compound">Array&lt;0&gt;</ref></computeroutput>, this will always be an empty array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="295" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="260" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1afda6fb53b8e7675c77f874e765f85a0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CxxUtils::Array&lt; 0 &gt;::size</definition>
        <argsstring>(unsigned int dim=0) const </argsstring>
        <name>size</name>
        <param>
          <type>unsigned int</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the size of the array along one dimension. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the size to retrieve. Must be less than the number of dimensions. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The array size along dimension .</para></simplesect>
For <computeroutput><ref refid="df/d88/classCxxUtils_1_1Array_3_010_01_4" kindref="compound">Array&lt;0&gt;</ref></computeroutput>, <emphasis>dim</emphasis> must be 0, and the function will always return 0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="306"/>
      </memberdef>
      <memberdef kind="function" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a2b5d848250c95ad8eca9c78a1f90da70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CxxUtils::Array&lt; 0 &gt;::operator Arrayelt</definition>
        <argsstring>() const </argsstring>
        <name>operator Arrayelt</name>
        <briefdescription>
<para>Convert to a number. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <computeroutput><ref refid="df/d88/classCxxUtils_1_1Array_3_010_01_4" kindref="compound">Array&lt;0&gt;</ref></computeroutput> contents as a number. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="312" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1aa45b1387aebfbccd752a1befb293b92a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CxxUtils::Array&lt; 0 &gt;::asint</definition>
        <argsstring>() const </argsstring>
        <name>asint</name>
        <briefdescription>
<para>Convert to an integer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <computeroutput><ref refid="df/d88/classCxxUtils_1_1Array_3_010_01_4" kindref="compound">Array&lt;0&gt;</ref></computeroutput> contents as an integer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="318" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="299" bodyend="302"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="df/d88/classCxxUtils_1_1Array_3_010_01_4_1acdeda198fbec3e2b116156c9dc4814f1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CxxUtils::Array&lt; 0 &gt;::Array</definition>
        <argsstring>(const Arrayrep &amp;rep, unsigned int offs)</argsstring>
        <name>Array</name>
        <param>
          <type>const <ref refid="d4/dc1/structCaloRec_1_1Arrayrep" kindref="compound">Arrayrep</ref> &amp;</type>
          <declname>rep</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Private constructor for array indexing. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>Arrayrep</computeroutput> from which to initialize the array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of the first element of the new array within <emphasis>rep</emphasis>.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is a private constructor used to make the <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array" kindref="compound">Array</ref></computeroutput> instances returned from an indexing operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="332" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="315" bodyend="318"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="834">
        <label>CxxUtils::Array&lt; 0 &gt;</label>
        <link refid="df/d88/classCxxUtils_1_1Array_3_010_01_4"/>
      </node>
      <node id="835">
        <label>CxxUtils::WritableArray&lt; 0 &gt;</label>
        <link refid="d0/da2/classCxxUtils_1_1WritableArray_3_010_01_4"/>
        <childnode refid="834" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="836">
        <label>CxxUtils::Array&lt; 0 &gt;</label>
        <link refid="df/d88/classCxxUtils_1_1Array_3_010_01_4"/>
        <childnode refid="837" relation="usage">
          <edgelabel>m_elt</edgelabel>
        </childnode>
      </node>
      <node id="837">
        <label>Arrayelt</label>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="255" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" bodystart="254" bodyend="340"/>
    <listofallmembers>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a398c7f190e164eb24c20a0aaa658ae94" prot="public" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>Array</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1ad73c938c858e14eb59eb5ac2d6f34ca7" prot="public" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>Array</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1acdeda198fbec3e2b116156c9dc4814f1" prot="protected" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>Array</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a4247de781a25d157d040ceb7927b6b1d" prot="protected" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>Array&lt; 1 &gt;</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1aa45b1387aebfbccd752a1befb293b92a" prot="public" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>asint</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a2bd7eabd9c9d53c93983d0bacd72b0e1" prot="protected" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>m_elt</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a472bd5344f6df5e85996f8513f54201ea93997ec307c72c7edc11a48355d44935" prot="public" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>NDIM</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a2b5d848250c95ad8eca9c78a1f90da70" prot="public" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>operator Arrayelt</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a72ede3a1e896f8f1830a7ea19c2a5c6c" prot="public" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>shape</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1afda6fb53b8e7675c77f874e765f85a0f" prot="public" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>size</name></member>
      <member refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1acedf777c4a1d2af9be324b743ecf69c6" prot="public" virt="non-virtual"><scope>CxxUtils::Array&lt; 0 &gt;</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
