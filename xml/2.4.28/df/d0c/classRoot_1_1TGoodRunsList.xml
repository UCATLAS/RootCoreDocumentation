<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d0c/classRoot_1_1TGoodRunsList" kind="class" prot="public">
    <compoundname>Root::TGoodRunsList</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d0c/classRoot_1_1TGoodRunsList_1a20ab10db11f80793989a211929fdd83a" prot="private" static="no" mutable="no">
        <type>TString</type>
        <definition>TString Root::TGoodRunsList::m_version</definition>
        <argsstring></argsstring>
        <name>m_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d0c/classRoot_1_1TGoodRunsList_1ae771010ddb4ff7d50d4fd825dcf8adb7" prot="private" static="no" mutable="no">
        <type>std::map&lt; TString, TString &gt;</type>
        <definition>std::map&lt;TString,TString&gt; Root::TGoodRunsList::m_metadata</definition>
        <argsstring></argsstring>
        <name>m_metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="69" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d0c/classRoot_1_1TGoodRunsList_1a87fafd48709a298a04afb842b2560a56" prot="private" static="no" mutable="no">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::m_checkGRLInfo</definition>
        <argsstring></argsstring>
        <name>m_checkGRLInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d0c/classRoot_1_1TGoodRunsList_1a1c8f4b0afcdebd5f0346b8cb8caaa796" prot="private" static="no" mutable="yes">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::m_hasRun</definition>
        <argsstring></argsstring>
        <name>m_hasRun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="72" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d0c/classRoot_1_1TGoodRunsList_1adfdefd360c390c14305ec82f835e880d" prot="private" static="no" mutable="yes">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::m_hasLB</definition>
        <argsstring></argsstring>
        <name>m_hasLB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d0c/classRoot_1_1TGoodRunsList_1a66c02b30af00ff93b0a0380db1900a42" prot="private" static="no" mutable="yes">
        <type>Int_t</type>
        <definition>Int_t Root::TGoodRunsList::m_prevRun</definition>
        <argsstring></argsstring>
        <name>m_prevRun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d0c/classRoot_1_1TGoodRunsList_1ac7991bca76619a7870a7535c35f36902" prot="private" static="no" mutable="yes">
        <type>Int_t</type>
        <definition>Int_t Root::TGoodRunsList::m_prevLB</definition>
        <argsstring></argsstring>
        <name>m_prevLB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="75" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a5337a4af7cbbc76556ed10c91b8de1db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Root::TGoodRunsList::TGoodRunsList</definition>
        <argsstring>()</argsstring>
        <name>TGoodRunsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="25"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a4f6f54832cb70eafe7db3d6515a39a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Root::TGoodRunsList::TGoodRunsList</definition>
        <argsstring>(const char *name)</argsstring>
        <name>TGoodRunsList</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="22" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1aa7441fd7bfb0ff7a5269f26332eaae85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Root::TGoodRunsList::~TGoodRunsList</definition>
        <argsstring>()</argsstring>
        <name>~TGoodRunsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a51f43da3a11456ab685b4486555e2efb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Root::TGoodRunsList::TGoodRunsList</definition>
        <argsstring>(const Root::TGoodRunsList &amp;other)</argsstring>
        <name>TGoodRunsList</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="39" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1aac702b636b9e025345056569c6967c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
        <definition>Root::TGoodRunsList &amp; Root::TGoodRunsList::operator=</definition>
        <argsstring>(const TGoodRunsList &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="54" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1ad43fc7ddac5b0719afdd85a99e709326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRunsList::AddGRL</definition>
        <argsstring>(const TGoodRunsList &amp;other)</argsstring>
        <name>AddGRL</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="73" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1af0656b1ca9cfac411d58c9ab000a2aa6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref></type>
        <definition>const Root::TGoodRunsList Root::TGoodRunsList::GetOverlapWith</definition>
        <argsstring>(const TGoodRunsList &amp;other) const </argsstring>
        <name>GetOverlapWith</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="105" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1ada7b553865b4e256a9814d2cb4ec594f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref></type>
        <definition>const Root::TGoodRunsList Root::TGoodRunsList::GetSumWith</definition>
        <argsstring>(const TGoodRunsList &amp;other) const </argsstring>
        <name>GetSumWith</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="145" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a2183ae196ba58f1ba2ac9f11b983abd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref></type>
        <definition>const Root::TGoodRunsList Root::TGoodRunsList::GetPartOnlyIn</definition>
        <argsstring>(const TGoodRunsList &amp;other) const </argsstring>
        <name>GetPartOnlyIn</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a6e7019f4e536e6ccd3aab32feab7ca3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref></type>
        <definition>const Root::TGoodRunsList Root::TGoodRunsList::GetPartNotIn</definition>
        <argsstring>(const TGoodRunsList &amp;other) const </argsstring>
        <name>GetPartNotIn</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="197" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a1b962a9214949769a6afe084b18fb076" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::HasTriggerInfo</definition>
        <argsstring>() const </argsstring>
        <name>HasTriggerInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="276" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1ad36235828f58e98c4fd6faf3c75b9326" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::HasRun</definition>
        <argsstring>(const Int_t &amp;runnr) const </argsstring>
        <name>HasRun</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>runnr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="236" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a98fd0d100a0bef62a93ebf2f6f68cb90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::HasRunLumiBlock</definition>
        <argsstring>(const Int_t &amp;runnr, const Int_t &amp;lumiblocknr) const </argsstring>
        <name>HasRunLumiBlock</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>runnr</declname>
        </param>
        <param>
          <type>const Int_t &amp;</type>
          <declname>lumiblocknr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="254" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1ad57ffc3186e8782b8e44184b4daecdc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::HasSameGRLInfo</definition>
        <argsstring>(const TGoodRunsList &amp;other) const </argsstring>
        <name>HasSameGRLInfo</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>check names</para><para>check versions</para><para>check RQ version &lt;Metadata name=&quot;RQTSVNVersion&quot;&gt;CoolRunQuery-unknown&lt;/Metadata&gt; </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="380" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a6b522d0ca33630a9c24d839534d84de2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::HasOverlapWith</definition>
        <argsstring>(const TGoodRunsList &amp;other, bool verb=false) const </argsstring>
        <name>HasOverlapWith</name>
        <param>
          <type>const <ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verb</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="289" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a04b3d65857b951f83b765b4a6acdd62c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRunsList::AddRunLumiBlock</definition>
        <argsstring>(const Int_t &amp;runnr, const Int_t &amp;lumiblocknr)</argsstring>
        <name>AddRunLumiBlock</name>
        <param>
          <type>const Int_t &amp;</type>
          <declname>runnr</declname>
        </param>
        <param>
          <type>const Int_t &amp;</type>
          <declname>lumiblocknr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="468" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a3a62722120e201f1854af7cfc0c10536" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRunsList::SetVersion</definition>
        <argsstring>(const TString &amp;version)</argsstring>
        <name>SetVersion</name>
        <param>
          <type>const TString &amp;</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a42f9de63c15e3126fb2f8de8f1e2914d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRunsList::AddMetaData</definition>
        <argsstring>(const TString &amp;key, const TString &amp;value)</argsstring>
        <name>AddMetaData</name>
        <param>
          <type>const TString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const TString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1ac296f8deca223827ceb708a6f57aeb00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRunsList::SetMetaData</definition>
        <argsstring>(const std::map&lt; TString, TString &gt; &amp;metadata)</argsstring>
        <name>SetMetaData</name>
        <param>
          <type>const std::map&lt; TString, TString &gt; &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a3b7d15419051f510af8b71eda20daaf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRunsList::SetCheckGRLInfo</definition>
        <argsstring>(Bool_t check=kTRUE)</argsstring>
        <name>SetCheckGRLInfo</name>
        <param>
          <type>Bool_t</type>
          <declname>check</declname>
          <defval>kTRUE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a29bb356a95801525fb4590d6c5bbafee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Bool_t &amp;</type>
        <definition>const Bool_t&amp; Root::TGoodRunsList::GetCheckGRLInfo</definition>
        <argsstring>() const </argsstring>
        <name>GetCheckGRLInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a35fad3c586c7151a50c700c45f735191" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const TString &amp;</type>
        <definition>const TString&amp; Root::TGoodRunsList::GetVersion</definition>
        <argsstring>() const </argsstring>
        <name>GetVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a4be9fd25d2c78b8b5a5a3038d1335f61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::map&lt; TString, TString &gt; &amp;</type>
        <definition>const std::map&lt;TString,TString&gt;&amp; Root::TGoodRunsList::GetMetaData</definition>
        <argsstring>() const </argsstring>
        <name>GetMetaData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a588b1c01c03201bca3f2c46dc50e56b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Root::TGoodRunsList::GetMetaDataSize</definition>
        <argsstring>() const </argsstring>
        <name>GetMetaDataSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a92adbd52d746ba8e0f0c9f262c95f855" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRunsList::Summary</definition>
        <argsstring>(Bool_t verbose=kFALSE) const </argsstring>
        <name>Summary</name>
        <param>
          <type>Bool_t</type>
          <declname>verbose</declname>
          <defval>kFALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="300" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a549c1e8f4143e5d98239f8f2b90aacb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bool_t</type>
        <definition>Bool_t Root::TGoodRunsList::IsEmpty</definition>
        <argsstring>() const </argsstring>
        <name>IsEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="431" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a45023976125a049c84f7d6a723df9352" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt;</type>
        <definition>const std::vector&lt; int &gt; Root::TGoodRunsList::GetRunlist</definition>
        <argsstring>() const </argsstring>
        <name>GetRunlist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="324" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a72fec50c0b3fc9a7deeb26d7a414857f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref> &gt;</type>
        <definition>const std::vector&lt; Root::TGoodRun &gt; Root::TGoodRunsList::GetGoodRuns</definition>
        <argsstring>() const </argsstring>
        <name>GetGoodRuns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="337" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a900ba03f822fcf200e3ca16c115eeb54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt;</type>
        <definition>const std::vector&lt; std::string &gt; Root::TGoodRunsList::GetTriggerList</definition>
        <argsstring>() const </argsstring>
        <name>GetTriggerList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="60" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="350" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a48b6d8b3dbcae1e02af0ffdc58db5353" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt;</type>
        <definition>const std::vector&lt; std::string &gt; Root::TGoodRunsList::GetStreamList</definition>
        <argsstring>() const </argsstring>
        <name>GetStreamList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="365" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1a1969751086e4d95551a8e25b77015eb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const TString</type>
        <definition>const TString Root::TGoodRunsList::GetSuggestedName</definition>
        <argsstring>() const </argsstring>
        <name>GetSuggestedName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="445" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="df/d0c/classRoot_1_1TGoodRunsList_1aa289882cc66dbd690bacb6353001929c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TGoodRunsList::Compress</definition>
        <argsstring>()</argsstring>
        <name>Compress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx" bodystart="484" bodyend="489"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" line="21" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h" bodystart="21" bodyend="78"/>
    <listofallmembers>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1ad43fc7ddac5b0719afdd85a99e709326" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>AddGRL</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a42f9de63c15e3126fb2f8de8f1e2914d" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>AddMetaData</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a04b3d65857b951f83b765b4a6acdd62c" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>AddRunLumiBlock</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1aa289882cc66dbd690bacb6353001929c" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>Compress</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a29bb356a95801525fb4590d6c5bbafee" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetCheckGRLInfo</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a72fec50c0b3fc9a7deeb26d7a414857f" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetGoodRuns</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a4be9fd25d2c78b8b5a5a3038d1335f61" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetMetaData</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a588b1c01c03201bca3f2c46dc50e56b5" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetMetaDataSize</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1af0656b1ca9cfac411d58c9ab000a2aa6" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetOverlapWith</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a6e7019f4e536e6ccd3aab32feab7ca3a" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetPartNotIn</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a2183ae196ba58f1ba2ac9f11b983abd2" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetPartOnlyIn</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a45023976125a049c84f7d6a723df9352" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetRunlist</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a48b6d8b3dbcae1e02af0ffdc58db5353" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetStreamList</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a1969751086e4d95551a8e25b77015eb5" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetSuggestedName</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1ada7b553865b4e256a9814d2cb4ec594f" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetSumWith</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a900ba03f822fcf200e3ca16c115eeb54" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetTriggerList</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a35fad3c586c7151a50c700c45f735191" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>GetVersion</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a6b522d0ca33630a9c24d839534d84de2" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>HasOverlapWith</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1ad36235828f58e98c4fd6faf3c75b9326" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>HasRun</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a98fd0d100a0bef62a93ebf2f6f68cb90" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>HasRunLumiBlock</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1ad57ffc3186e8782b8e44184b4daecdc3" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>HasSameGRLInfo</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a1b962a9214949769a6afe084b18fb076" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>HasTriggerInfo</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a549c1e8f4143e5d98239f8f2b90aacb9" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>IsEmpty</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a87fafd48709a298a04afb842b2560a56" prot="private" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>m_checkGRLInfo</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1adfdefd360c390c14305ec82f835e880d" prot="private" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>m_hasLB</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a1c8f4b0afcdebd5f0346b8cb8caaa796" prot="private" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>m_hasRun</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1ae771010ddb4ff7d50d4fd825dcf8adb7" prot="private" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>m_metadata</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1ac7991bca76619a7870a7535c35f36902" prot="private" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>m_prevLB</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a66c02b30af00ff93b0a0380db1900a42" prot="private" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>m_prevRun</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a20ab10db11f80793989a211929fdd83a" prot="private" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>m_version</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1aac702b636b9e025345056569c6967c46" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>operator=</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a3b7d15419051f510af8b71eda20daaf3" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>SetCheckGRLInfo</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1ac296f8deca223827ceb708a6f57aeb00" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>SetMetaData</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a3a62722120e201f1854af7cfc0c10536" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>SetVersion</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a92adbd52d746ba8e0f0c9f262c95f855" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>Summary</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a5337a4af7cbbc76556ed10c91b8de1db" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>TGoodRunsList</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a4f6f54832cb70eafe7db3d6515a39a67" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>TGoodRunsList</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1a51f43da3a11456ab685b4486555e2efb" prot="public" virt="non-virtual"><scope>Root::TGoodRunsList</scope><name>TGoodRunsList</name></member>
      <member refid="df/d0c/classRoot_1_1TGoodRunsList_1aa7441fd7bfb0ff7a5269f26332eaae85" prot="public" virt="virtual"><scope>Root::TGoodRunsList</scope><name>~TGoodRunsList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
