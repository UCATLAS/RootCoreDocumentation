<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d14/Job_8cxx" kind="file">
    <compoundname>Job.cxx</compoundname>
    <includes refid="d5/d80/Job_8h" local="no">EventLoop/Job.h</includes>
    <includes local="no">memory</includes>
    <includes refid="d7/d36/Algorithm_8h" local="no">EventLoop/Algorithm.h</includes>
    <includes refid="df/d49/D3PDReaderSvc_8h" local="no">EventLoop/D3PDReaderSvc.h</includes>
    <includes refid="da/d9f/OutputStream_8h" local="no">EventLoop/OutputStream.h</includes>
    <includes refid="d8/df5/TEventSvc_8h" local="no">EventLoop/TEventSvc.h</includes>
    <includes local="no">RootCore/Packages.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <includes refid="d8/d5d/CheckRootVersion_8h" local="no">RootCoreUtils/CheckRootVersion.h</includes>
    <includes refid="dd/db7/ThrowMsg_8h" local="no">RootCoreUtils/ThrowMsg.h</includes>
    <includes refid="d2/d7b/MetaFields_8h" local="no">SampleHandler/MetaFields.h</includes>
    <includes refid="d3/de7/MetaNames_8h" local="no">SampleHandler/MetaNames.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="128240">
        <label>RootCore/Packages.h</label>
      </node>
      <node id="128224">
        <label>SampleHandler/SampleHandler.h</label>
        <link refid="d2/da1/SampleHandler_8h_source"/>
        <childnode refid="128225" relation="include">
        </childnode>
        <childnode refid="128226" relation="include">
        </childnode>
        <childnode refid="128227" relation="include">
        </childnode>
        <childnode refid="128228" relation="include">
        </childnode>
        <childnode refid="128223" relation="include">
        </childnode>
        <childnode refid="128229" relation="include">
        </childnode>
      </node>
      <node id="128221">
        <label>EventLoop/Job.h</label>
        <link refid="d5/d80/Job_8h_source"/>
        <childnode refid="128222" relation="include">
        </childnode>
        <childnode refid="128223" relation="include">
        </childnode>
        <childnode refid="128224" relation="include">
        </childnode>
        <childnode refid="128230" relation="include">
        </childnode>
      </node>
      <node id="128238">
        <label>EventLoop/StatusCode.h</label>
        <link refid="d0/d16/EventLoop_2EventLoop_2StatusCode_8h_source"/>
        <childnode refid="128222" relation="include">
        </childnode>
      </node>
      <node id="128220">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/Job.cxx</label>
        <link refid="Job.cxx"/>
        <childnode refid="128221" relation="include">
        </childnode>
        <childnode refid="128226" relation="include">
        </childnode>
        <childnode refid="128236" relation="include">
        </childnode>
        <childnode refid="128239" relation="include">
        </childnode>
        <childnode refid="128241" relation="include">
        </childnode>
        <childnode refid="128242" relation="include">
        </childnode>
        <childnode refid="128240" relation="include">
        </childnode>
        <childnode refid="128231" relation="include">
        </childnode>
        <childnode refid="128243" relation="include">
        </childnode>
        <childnode refid="128244" relation="include">
        </childnode>
        <childnode refid="128247" relation="include">
        </childnode>
        <childnode refid="128248" relation="include">
        </childnode>
        <childnode refid="128249" relation="include">
        </childnode>
      </node>
      <node id="128233">
        <label>RootCoreUtils/Deprecated.h</label>
        <link refid="d1/d0f/RootCoreUtils_2RootCoreUtils_2Deprecated_8h_source"/>
        <childnode refid="128232" relation="include">
        </childnode>
      </node>
      <node id="128234">
        <label>string</label>
      </node>
      <node id="128228">
        <label>map</label>
      </node>
      <node id="128230">
        <label>SampleHandler/MetaObject.h</label>
        <link refid="d7/d50/MetaObject_8h_source"/>
        <childnode refid="128225" relation="include">
        </childnode>
        <childnode refid="128231" relation="include">
        </childnode>
        <childnode refid="128233" relation="include">
        </childnode>
        <childnode refid="128234" relation="include">
        </childnode>
        <childnode refid="128235" relation="include">
        </childnode>
      </node>
      <node id="128222">
        <label>EventLoop/Global.h</label>
        <link refid="d1/daf/EventLoop_2EventLoop_2Global_8h_source"/>
      </node>
      <node id="128247">
        <label>SampleHandler/MetaFields.h</label>
        <link refid="d2/d7b/MetaFields_8h_source"/>
        <childnode refid="128225" relation="include">
        </childnode>
        <childnode refid="128234" relation="include">
        </childnode>
      </node>
      <node id="128229">
        <label>TObject.h</label>
      </node>
      <node id="128223">
        <label>vector</label>
      </node>
      <node id="128242">
        <label>EventLoop/TEventSvc.h</label>
        <link refid="d8/df5/TEventSvc_8h_source"/>
        <childnode refid="128222" relation="include">
        </childnode>
        <childnode refid="128240" relation="include">
        </childnode>
      </node>
      <node id="128243">
        <label>RootCoreUtils/CheckRootVersion.h</label>
        <link refid="d8/d5d/CheckRootVersion_8h_source"/>
        <childnode refid="128232" relation="include">
        </childnode>
      </node>
      <node id="128232">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="128246">
        <label>RootCoreUtils/MessageType.h</label>
        <link refid="dd/d02/MessageType_8h_source"/>
        <childnode refid="128232" relation="include">
        </childnode>
      </node>
      <node id="128248">
        <label>SampleHandler/MetaNames.h</label>
        <link refid="d3/de7/MetaNames_8h_source"/>
        <childnode refid="128225" relation="include">
        </childnode>
        <childnode refid="128234" relation="include">
        </childnode>
      </node>
      <node id="128227">
        <label>iosfwd</label>
      </node>
      <node id="128249">
        <label>iostream</label>
      </node>
      <node id="128239">
        <label>EventLoop/D3PDReaderSvc.h</label>
        <link refid="df/d49/D3PDReaderSvc_8h_source"/>
        <childnode refid="128222" relation="include">
        </childnode>
        <childnode refid="128240" relation="include">
        </childnode>
      </node>
      <node id="128236">
        <label>EventLoop/Algorithm.h</label>
        <link refid="d7/d36/Algorithm_8h_source"/>
        <childnode refid="128222" relation="include">
        </childnode>
        <childnode refid="128237" relation="include">
        </childnode>
        <childnode refid="128238" relation="include">
        </childnode>
      </node>
      <node id="128237">
        <label>TNamed.h</label>
      </node>
      <node id="128245">
        <label>RootCoreUtils/PrintMsg.h</label>
        <link refid="d2/d5f/PrintMsg_8h_source"/>
        <childnode refid="128232" relation="include">
        </childnode>
        <childnode refid="128234" relation="include">
        </childnode>
        <childnode refid="128246" relation="include">
        </childnode>
      </node>
      <node id="128244">
        <label>RootCoreUtils/ThrowMsg.h</label>
        <link refid="dd/db7/ThrowMsg_8h_source"/>
        <childnode refid="128232" relation="include">
        </childnode>
        <childnode refid="128245" relation="include">
        </childnode>
      </node>
      <node id="128231">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="128232" relation="include">
        </childnode>
      </node>
      <node id="128225">
        <label>SampleHandler/Global.h</label>
        <link refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h_source"/>
      </node>
      <node id="128226">
        <label>memory</label>
      </node>
      <node id="128241">
        <label>EventLoop/OutputStream.h</label>
        <link refid="da/d9f/OutputStream_8h_source"/>
        <childnode refid="128222" relation="include">
        </childnode>
        <childnode refid="128223" relation="include">
        </childnode>
        <childnode refid="128229" relation="include">
        </childnode>
        <childnode refid="128230" relation="include">
        </childnode>
        <childnode refid="128224" relation="include">
        </childnode>
      </node>
      <node id="128235">
        <label>TCollection.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d9f/namespaceEL">EL</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Nils<sp/>Krumnack<sp/>2011.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(krumnack@iastate.edu)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Job.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Algorithm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/D3PDReaderSvc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/OutputStream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/TEventSvc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCore/Packages.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/CheckRootVersion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/ThrowMsg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/MetaFields.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/MetaNames.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">EL</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1afce7ed50e8fac3594837b09e7b6b659b" kindref="member">Job::optRemoveSubmitDir</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_RemoveSubmitDir&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a2d1dde35c522bbf7d35027f0dfdccc97" kindref="member">Job::optMaxEvents</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_MaxEvents&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1ab08d4d8fb8f7f639b1bf755399687d77" kindref="member">Job::optSkipEvents</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_SkipEvents&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a73aa9362cc3cc206e3a645a42bccfee7" kindref="member">Job::optFilesPerWorker</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_FilesPerWorker&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a154553a7807dfe0b39f6c4ab2d58d1c3" kindref="member">Job::optEventsPerWorker</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_EventsPerWorker&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a6f8bac5fcde2e85c239a60068445be00" kindref="member">Job::optSubmitFlags</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_SubmitFlags&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a600d802dce5c5faa2997420abc45dae2" kindref="member">Job::optCondorConf</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_CondorConf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a6a5bdad992abf36bbb0afcf37ebca332" kindref="member">Job::optCacheLearnEntries</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_CacheLearnEntries&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a7789d161d685005f03fe2de003491196" kindref="member">Job::optD3PDPerfStats</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_D3PDPerfStats&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a3aec030143b629d78675de57990b3257" kindref="member">Job::optD3PDReadStats</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_D3PDReadStats&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a576847191d09879c700bdae6330c3cbb" kindref="member">Job::optXAODPerfStats</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_XAODPerfStats&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a5c7eba40b3ebc3879ba0ad5beb13c3de" kindref="member">Job::optXAODReadStats</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_XAODReadStats&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a59102ed00cf2758ef4a754d294975d8d" kindref="member">Job::optD3PDCacheMinEvent</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_D3PDCacheMinEvent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optD3PDCacheMinEventFraction<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_D3PDCacheMinEventFraction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optD3PDCacheMinByte<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_D3PDCacheMinByte&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optD3PDCacheMinByteFraction<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_D3PDCacheMinByteFraction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1af4fc46001aaaf18d1c2d98d5d7b49ea3" kindref="member">Job::optPerfTree</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_PerfTree&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a66cde8b91f8957ac5296722480bbeb07" kindref="member">Job::optXaodAccessMode</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_EventLoop_XaodAccessMode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optXaodAccessMode_branch<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;branch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optXaodAccessMode_class<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optXaodAccessMode_athena<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;athena&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a61e753cf829aed6a8c818d474e51e610" kindref="member" tooltip="the option to turn on/off the xAOD summary reporting at the end of the job">Job::optXAODSummaryReport</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_xaod_summary_report&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a00db303aeaccfe15cf2cef2f4b613966" kindref="member">Job::optPrintPerFileStats</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_print_per_file_stats&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1adb8f92321453868941ad2f9fbb8e0529" kindref="member" tooltip="description: the option to turn off collection of performance data">Job::optDisableMetrics</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_disable_metrics&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a83a9b20b093a0c95c193f0628843aabb" kindref="member">Job::optResetShell</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_reset_shell&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1ae00c0e87cc71efbd3c08cb8cc5a19278" kindref="member" tooltip="the option not to unsetup the environment in LocalDriver">Job::optLocalNoUnsetup</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_local_no_unsetup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1ad81793cbf27572688a3b03e3954356d3" kindref="member" tooltip="the option to do processing in a background process in PROOF">Job::optBackgroundProcess</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_background_process&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1afdfe395240d60b36d63bcc5dbda5830e" kindref="member">Job::optGridDestSE</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_destSE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridSite<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_site&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridCloud<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_cloud&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridExcludedSite<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_excludedSite&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridNGBPerJob<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_nGBPerJob&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridMemory<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_memory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridMaxCpuCount<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_maxCpuCount&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridNFiles<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_nFiles&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridNFilesPerJob<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_nFilesPerJob&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridNJobs<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_nJobs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridMaxFileSize<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_maxFileSize&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridMaxNFilesPerJob<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_maxNFilesPerJob&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridUseChirpServer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_useChirpServer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridExpress<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_express&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridNoSubmit<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_noSubmit&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridMergeOutput<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_mergeOutput&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a1457dbca4a9784e4bd1b7504c7b4de31" kindref="member">Job::optBatchSharedFileSystem</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_sharedFileSystem&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optTmpDir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_tmpDir&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optRootVer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_rootVer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optCmtConfig<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_cmtConfig&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optGridDisableAutoRetry<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_disableAutoRetry&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optOfficial<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_official&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optVoms<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_voms&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1a6bcfd21a0dfb459752e8807aaac46f11" kindref="member">Job::optCacheSize</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nc_cache_size&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="da/dbb/classEL_1_1Job_1ac005d45b4c107d108b1e23da3877737a" kindref="member">Job::optRetries</ref><sp/>=<sp/><ref refid="d2/d8c/structSH_1_1MetaNames_1a02124ff3df072047080118bfeb9ee93e" kindref="member" tooltip="the number of retries for opening a file">SH::MetaNames::openRetries</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>Job::optRetriesWait<sp/>=<sp/><ref refid="d2/d8c/structSH_1_1MetaNames_1a987582e32ab60af21b7378f09a72fed8" kindref="member" tooltip="the amount of time (in seconds) to wait when doing retries">SH::MetaNames::openRetriesWait</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d9f/namespaceEL_1a93a00e079ee65057050040c24a1df35c" kindref="member">swap</ref><sp/>(Job&amp;<sp/>a,<sp/>Job&amp;<sp/>b)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d9f/namespaceEL_1a93a00e079ee65057050040c24a1df35c" kindref="member">swap</ref><sp/>(a.m_sampleHandler,<sp/>b.m_sampleHandler);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d9f/namespaceEL_1a93a00e079ee65057050040c24a1df35c" kindref="member">swap</ref><sp/>(a.m_algs,<sp/>b.m_algs);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d9f/namespaceEL_1a93a00e079ee65057050040c24a1df35c" kindref="member">swap</ref><sp/>(a.m_output,<sp/>b.m_output);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dbb/classEL_1_1Job_1a39af1f6f1b73a4ca5f96ecf18175a8e6" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1a39af1f6f1b73a4ca5f96ecf18175a8e6" kindref="member">  testInvariant</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>iter<sp/>=<sp/>0,<sp/>end<sp/>=<sp/>m_algs.size();<sp/>iter<sp/>!=<sp/>end;<sp/>++<sp/>iter)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(m_algs[iter]<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="da/dbb/classEL_1_1Job_1abeacb0709369f8752328e240a1084bf5" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1abeacb0709369f8752328e240a1084bf5" kindref="member">  Job</ref><sp/>()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d83/namespaceRCU_1a33d1aab649b47e38f72a19729a0ccbe7" kindref="member">RCU::check_root_version</ref><sp/>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="da/dbb/classEL_1_1Job_1abeacb0709369f8752328e240a1084bf5" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1abeacb0709369f8752328e240a1084bf5" kindref="member">  Job</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Job&amp;<sp/>that)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_sampleHandler<sp/>((RCU_READ_INVARIANT<sp/>(&amp;that),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that.m_sampleHandler)),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_output<sp/>(that.m_output),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_options<sp/>(that.m_options)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>m_algs.reserve<sp/>(that.m_algs.size());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(algsIter<sp/>alg<sp/>=<sp/>that.m_algs.begin(),<sp/>end<sp/>=<sp/>that.m_algs.end();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>alg<sp/>!=<sp/>end;<sp/>++<sp/>alg)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_algs.push_back<sp/>(dynamic_cast&lt;Algorithm*&gt;((*alg)-&gt;Clone()));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_ASSERT<sp/>(m_algs.back()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="da/dbb/classEL_1_1Job_1a1aa1f6a9d534c7839440a0fda6f13d63" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1a1aa1f6a9d534c7839440a0fda6f13d63" kindref="member">  ~Job</ref><sp/>()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_DESTROY_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>iter<sp/>=<sp/>0,<sp/>end<sp/>=<sp/>m_algs.size();<sp/>iter<sp/>!=<sp/>end;<sp/>++<sp/>iter)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_algs[iter];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>Job&amp;<sp/><ref refid="da/dbb/classEL_1_1Job_1a261680d039d7da37c63af888fb8a9906" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1a261680d039d7da37c63af888fb8a9906" kindref="member">  operator = </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Job&amp;<sp/>that)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>invariant<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dbb/classEL_1_1Job_1abeacb0709369f8752328e240a1084bf5" kindref="member">Job</ref><sp/>tmp<sp/>(that);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>swap<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>tmp);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d56/classSH_1_1SampleHandler" kindref="compound" tooltip="A class that manages a list of Sample objects.">SH::SampleHandler</ref>&amp;<sp/><ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">  sampleHandler</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="170"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_sampleHandler;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">  sampleHandler</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d56/classSH_1_1SampleHandler" kindref="compound" tooltip="A class that manages a list of Sample objects.">SH::SampleHandler</ref>&amp;<sp/>val_sampleHandler)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sampleHandler<sp/>=<sp/>val_sampleHandler;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="da/dbb/classEL_1_1Job_1ad7079dc212a4da1a5e6bf43940e91bba" kindref="member">Job::algsIter</ref><sp/>Job<sp/>::</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>algsBegin<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="188"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_algs.begin();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="da/dbb/classEL_1_1Job_1ad7079dc212a4da1a5e6bf43940e91bba" kindref="member">Job::algsIter</ref><sp/>Job<sp/>::</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>algsEnd<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="197"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_algs.end();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Job<sp/>::</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>algsAdd<sp/>(Algorithm<sp/>*alg_swallow)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Algorithm&gt;<sp/>alg<sp/>(alg_swallow);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_REQUIRE_SOFT<sp/>(alg_swallow<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>alg-&gt;sysSetupJob<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>m_algs.push_back<sp/>(alg.get());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>alg.release();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dbb/classEL_1_1Job_1ac5b22d3e3c0851f9b726b270712ef384" kindref="member" tooltip="add a clone of the given algorithm">Job ::</ref></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1ac5b22d3e3c0851f9b726b270712ef384" kindref="member" tooltip="add a clone of the given algorithm">  algsAddClone</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Algorithm&amp;<sp/>alg)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>invariant<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>algsAdd<sp/>(dynamic_cast&lt;Algorithm*&gt;(alg.Clone()));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/dbb/classEL_1_1Job_1ada28ba21e914d4dc9f0668b793d8816a" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1ada28ba21e914d4dc9f0668b793d8816a" kindref="member">  algsHas</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="230"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="da/dbb/classEL_1_1Job_1ad7079dc212a4da1a5e6bf43940e91bba" kindref="member">algsIter</ref><sp/>alg<sp/>=<sp/>algsBegin(),<sp/>end<sp/>=<sp/>algsEnd();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>alg<sp/>!=<sp/>end;<sp/>++<sp/>alg)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*alg)-&gt;GetName()<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="da/dbb/classEL_1_1Job_1a6b7da0153a514987c8fc5691cc7fd9a2" kindref="member">Job::outputMIter</ref><sp/>Job<sp/>::</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>outputBegin<sp/>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_output[0];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>Job::outputIter<sp/>Job<sp/>::</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>outputBegin<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="254"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_output[0];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><ref refid="da/dbb/classEL_1_1Job_1a6b7da0153a514987c8fc5691cc7fd9a2" kindref="member">Job::outputMIter</ref><sp/>Job<sp/>::</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>outputEnd<sp/>()</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_output[m_output.size()];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>Job::outputIter<sp/>Job<sp/>::</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>outputEnd<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="272"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_output[m_output.size()];</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Job<sp/>::</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>outputAdd<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OutputStream&amp;<sp/>val_output)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_REQUIRE2_SOFT<sp/>(!<ref refid="da/dbb/classEL_1_1Job_1a2890a6cd7be860ecdf4330ece6b34ad9" kindref="member">outputHas</ref><sp/>(val_output.label()),<sp/>(</highlight><highlight class="stringliteral">&quot;trying<sp/>to<sp/>create<sp/>two<sp/>output<sp/>streams<sp/>with<sp/>the<sp/>label<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>val_output.label()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\nplease<sp/>make<sp/>sure<sp/>that<sp/>every<sp/>output<sp/>stream<sp/>has<sp/>a<sp/>unique<sp/>label&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output.push_back<sp/>(val_output);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/dbb/classEL_1_1Job_1a2890a6cd7be860ecdf4330ece6b34ad9" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1a2890a6cd7be860ecdf4330ece6b34ad9" kindref="member">  outputHas</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="291"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outputIter<sp/>iter<sp/>=<sp/>outputBegin(),</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>outputEnd();<sp/>iter<sp/>!=<sp/>end;<sp/>++<sp/>iter)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;label()<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dbb/classEL_1_1Job_1aa5833b4d2f54f734ca01dec169e7eea6" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1aa5833b4d2f54f734ca01dec169e7eea6" kindref="member">  useD3PDReader</ref><sp/>()</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE_PACKAGE_D3PDReader</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="da/dbb/classEL_1_1Job_1ada28ba21e914d4dc9f0668b793d8816a" kindref="member">algsHas</ref><sp/>(D3PDReaderSvc::name))</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algsAdd<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>D3PDReaderSvc);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;D3PDReaderSvc<sp/>not<sp/>configured&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dbb/classEL_1_1Job_1a52d21f848a949d1f7af0803aff4680e0" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1a52d21f848a949d1f7af0803aff4680e0" kindref="member">  useXAOD</ref><sp/>()</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE_PACKAGE_xAODRootAccess</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="da/dbb/classEL_1_1Job_1ada28ba21e914d4dc9f0668b793d8816a" kindref="member">algsHas</ref><sp/>(TEventSvc::name))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algsAdd<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TEventSvc);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;TEventSvc<sp/>not<sp/>configured&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound" tooltip="A class that manages meta-data to be associated with an object.">SH::MetaObject</ref><sp/>*<ref refid="da/dbb/classEL_1_1Job_1a26060474b2602f91ef3d220c415c2005" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1a26060474b2602f91ef3d220c415c2005" kindref="member">  options</ref><sp/>()</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_options;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound" tooltip="A class that manages meta-data to be associated with an object.">SH::MetaObject</ref><sp/>*<ref refid="da/dbb/classEL_1_1Job_1a26060474b2602f91ef3d220c415c2005" kindref="member">Job ::</ref></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><ref refid="da/dbb/classEL_1_1Job_1a26060474b2602f91ef3d220c415c2005" kindref="member">  options</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="345"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_options;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/Job.cxx"/>
  </compounddef>
</doxygen>
