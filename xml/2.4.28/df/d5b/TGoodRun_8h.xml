<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d5b/TGoodRun_8h" kind="file">
    <compoundname>TGoodRun.h</compoundname>
    <includes refid="d9/df8/TLumiBlockRange_8h" local="yes">GoodRunsLists/TLumiBlockRange.h</includes>
    <includes local="yes">TObject.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="d0/db2/TGoodRunsList_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h</includedby>
    <includedby refid="d2/df9/TGoodRun_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRun.cxx</includedby>
    <includedby refid="dd/dac/TGoodRunsListReader_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsListReader.cxx</includedby>
    <includedby refid="db/d28/TGoodRunsListWriter_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsListWriter.cxx</includedby>
    <incdepgraph>
      <node id="134683">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h</label>
        <link refid="TGoodRun.h"/>
        <childnode refid="134684" relation="include">
        </childnode>
        <childnode refid="134685" relation="include">
        </childnode>
        <childnode refid="134686" relation="include">
        </childnode>
      </node>
      <node id="134684">
        <label>GoodRunsLists/TLumiBlockRange.h</label>
        <link refid="d9/df8/TLumiBlockRange_8h_source"/>
        <childnode refid="134685" relation="include">
        </childnode>
        <childnode refid="134686" relation="include">
        </childnode>
      </node>
      <node id="134685">
        <label>TObject.h</label>
      </node>
      <node id="134686">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="134689">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/DQHelperFunctions.h</label>
        <link refid="d1/d2a/DQHelperFunctions_8h_source"/>
      </node>
      <node id="134694">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsListReader.h</label>
        <link refid="d7/d46/TGoodRunsListReader_8h_source"/>
      </node>
      <node id="134688">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h</label>
        <link refid="d0/db2/TGoodRunsList_8h_source"/>
        <childnode refid="134689" relation="include">
        </childnode>
        <childnode refid="134690" relation="include">
        </childnode>
        <childnode refid="134691" relation="include">
        </childnode>
      </node>
      <node id="134687">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h</label>
        <link refid="TGoodRun.h"/>
        <childnode refid="134688" relation="include">
        </childnode>
      </node>
      <node id="134691">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGRLCollection.h</label>
        <link refid="d7/dd9/TGRLCollection_8h_source"/>
        <childnode refid="134692" relation="include">
        </childnode>
        <childnode refid="134694" relation="include">
        </childnode>
        <childnode refid="134690" relation="include">
        </childnode>
      </node>
      <node id="134692">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/GoodRunsListSelectionTool.h</label>
        <link refid="d3/dc1/GoodRunsListSelectionTool_8h_source"/>
        <childnode refid="134693" relation="include">
        </childnode>
      </node>
      <node id="134693">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/GoodRunsListsDict.h</label>
        <link refid="dc/d9a/GoodRunsListsDict_8h_source"/>
      </node>
      <node id="134690">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsListWriter.h</label>
        <link refid="d3/dca/TGoodRunsListWriter_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d9/dad/classRoot_1_1TGoodRun" prot="public">Root::TGoodRun</innerclass>
    <innerclass refid="df/d56/structRoot_1_1TGoodRun_1_1SorterL2H" prot="private">Root::TGoodRun::SorterL2H</innerclass>
    <innernamespace refid="d2/d60/namespaceRoot">Root</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Class<sp/><sp/>:<sp/>TGoodRun<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Authors<sp/>(alphabetical):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/>Baak<sp/>&lt;mbaak@cern.ch&gt;<sp/>-<sp/>CERN,<sp/>Switzerland<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__TGoodRun__</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__TGoodRun__</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TLumiBlockRange.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Root<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="d9/dad/classRoot_1_1TGoodRun" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>TLumiBlockRange<sp/>&gt;,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TObject<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>()<sp/>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>runnr<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref>&amp;<sp/>other)<sp/>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>&amp;<sp/>other)<sp/>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref><sp/>GetOverlapWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref><sp/>GetSumWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref><sp/>GetPartOnlyIn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref><sp/>GetPartNotIn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>IsEmpty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>HasLB(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>lumiblocknr<sp/>)<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Root::TLumiBlockRange&gt;::iterator<sp/>Find(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>lumiblocknr<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>Root::TLumiBlockRange<sp/>&gt;::const_iterator<sp/>Find(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>lumiblocknr<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Int_t<sp/>GetRunNumber()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_runnr;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRunNumber(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>runnr<sp/>)<sp/>{<sp/>m_runnr=runnr;<sp/>}<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Summary()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sort();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Compress();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddLB(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>lumiblocknr<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>m_runnr;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sorter<sp/>function<sp/>for<sp/>lumiblock<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SorterL2H<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SorterL2H<sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">TLumiBlockRange</ref>&amp;<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">TLumiBlockRange</ref>&amp;<sp/>p2)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p1.Begin()&lt;p2.Begin());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClassDef(<ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">TGoodRun</ref>,1)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRun.h"/>
  </compounddef>
</doxygen>
