<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/ded/TrigHolderStructure_8h" kind="file">
    <compoundname>TrigHolderStructure.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">boost/variant.hpp</includes>
    <includes refid="d3/d61/AsgMessaging_8h" local="yes">AsgTools/AsgMessaging.h</includes>
    <includes refid="d5/d81/TrigNavStructure_2Types_8h" local="yes">TrigNavStructure/Types.h</includes>
    <includes refid="df/d37/BaseHolder_8h" local="yes">TrigNavStructure/BaseHolder.h</includes>
    <includes refid="d7/d71/TriggerElement_8h" local="yes">TrigNavStructure/TriggerElement.h</includes>
    <includedby refid="db/df9/TrigHolderStructure_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/TrigHolderStructure.cxx</includedby>
    <includedby refid="d2/db8/TrigNavStructure_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TrigNavStructure.h</includedby>
    <incdepgraph>
      <node id="328881">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="328873" relation="include">
        </childnode>
        <childnode refid="328876" relation="include">
        </childnode>
        <childnode refid="328882" relation="include">
        </childnode>
        <childnode refid="328883" relation="include">
        </childnode>
      </node>
      <node id="328883">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="328889">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="328873" relation="include">
        </childnode>
        <childnode refid="328890" relation="include">
        </childnode>
        <childnode refid="328887" relation="include">
        </childnode>
      </node>
      <node id="328888">
        <label>stdint.h</label>
      </node>
      <node id="328886">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="328879">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="328873" relation="include">
        </childnode>
        <childnode refid="328876" relation="include">
        </childnode>
        <childnode refid="328880" relation="include">
        </childnode>
      </node>
      <node id="328876">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328873">
        <label>string</label>
      </node>
      <node id="328872">
        <label>map</label>
      </node>
      <node id="328874">
        <label>boost/variant.hpp</label>
      </node>
      <node id="328880">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="328887">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="328888" relation="include">
        </childnode>
        <childnode refid="328874" relation="include">
        </childnode>
      </node>
      <node id="328870">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TrigHolderStructure.h</label>
        <link refid="TrigHolderStructure.h"/>
        <childnode refid="328871" relation="include">
        </childnode>
        <childnode refid="328872" relation="include">
        </childnode>
        <childnode refid="328873" relation="include">
        </childnode>
        <childnode refid="328874" relation="include">
        </childnode>
        <childnode refid="328875" relation="include">
        </childnode>
        <childnode refid="328887" relation="include">
        </childnode>
        <childnode refid="328889" relation="include">
        </childnode>
        <childnode refid="328891" relation="include">
        </childnode>
      </node>
      <node id="328891">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="328872" relation="include">
        </childnode>
        <childnode refid="328890" relation="include">
        </childnode>
        <childnode refid="328873" relation="include">
        </childnode>
        <childnode refid="328888" relation="include">
        </childnode>
        <childnode refid="328892" relation="include">
        </childnode>
        <childnode refid="328887" relation="include">
        </childnode>
      </node>
      <node id="328885">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="328876" relation="include">
        </childnode>
        <childnode refid="328879" relation="include">
        </childnode>
        <childnode refid="328886" relation="include">
        </childnode>
      </node>
      <node id="328890">
        <label>vector</label>
      </node>
      <node id="328878">
        <label>sstream</label>
      </node>
      <node id="328892">
        <label>iostream</label>
      </node>
      <node id="328884">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="328877">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="328873" relation="include">
        </childnode>
        <childnode refid="328878" relation="include">
        </childnode>
        <childnode refid="328876" relation="include">
        </childnode>
        <childnode refid="328879" relation="include">
        </childnode>
        <childnode refid="328881" relation="include">
        </childnode>
        <childnode refid="328884" relation="include">
        </childnode>
      </node>
      <node id="328882">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328875">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="328873" relation="include">
        </childnode>
        <childnode refid="328876" relation="include">
        </childnode>
        <childnode refid="328877" relation="include">
        </childnode>
        <childnode refid="328885" relation="include">
        </childnode>
      </node>
      <node id="328871">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="328895">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h</label>
        <link refid="dd/daf/Combination_8h_source"/>
        <childnode refid="328896" relation="include">
        </childnode>
        <childnode refid="328913" relation="include">
        </childnode>
        <childnode refid="328914" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
        <childnode refid="328907" relation="include">
        </childnode>
      </node>
      <node id="328894">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TrigNavStructure.h</label>
        <link refid="d2/db8/TrigNavStructure_8h_source"/>
        <childnode refid="328895" relation="include">
        </childnode>
        <childnode refid="328923" relation="include">
        </childnode>
        <childnode refid="328914" relation="include">
        </childnode>
        <childnode refid="328924" relation="include">
        </childnode>
      </node>
      <node id="328899">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/ToolExamplesAlg.h</label>
        <link refid="d4/d75/ToolExamplesAlg_8h_source"/>
      </node>
      <node id="328914">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureContainer.h</label>
        <link refid="d5/de8/FeatureContainer_8h_source"/>
        <childnode refid="328915" relation="include">
        </childnode>
        <childnode refid="328896" relation="include">
        </childnode>
        <childnode refid="328913" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
      </node>
      <node id="328920">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYToolsDict.h</label>
        <link refid="dc/ded/SUSYToolsDict_8h_source"/>
      </node>
      <node id="328919">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYObjDef_xAOD.h</label>
        <link refid="d0/daf/SUSYObjDef__xAOD_8h_source"/>
        <childnode refid="328920" relation="include">
        </childnode>
      </node>
      <node id="328897">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolCore.h</label>
        <link refid="de/d03/TrigDecisionToolCore_8h_source"/>
        <childnode refid="328898" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
      </node>
      <node id="328901">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/ITest.h</label>
        <link refid="dd/d82/ITest_8h_source"/>
        <childnode refid="328900" relation="include">
        </childnode>
        <childnode refid="328902" relation="include">
        </childnode>
        <childnode refid="328903" relation="include">
        </childnode>
        <childnode refid="328904" relation="include">
        </childnode>
      </node>
      <node id="328909">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/TriggerMatchingToolDict.h</label>
        <link refid="de/db3/TriggerMatchingToolDict_8h_source"/>
      </node>
      <node id="328898">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionTool.h</label>
        <link refid="d7/df7/TrigDecisionTool_8h_source"/>
        <childnode refid="328899" relation="include">
        </childnode>
        <childnode refid="328900" relation="include">
        </childnode>
        <childnode refid="328901" relation="include">
        </childnode>
        <childnode refid="328905" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
        <childnode refid="328907" relation="include">
        </childnode>
        <childnode refid="328910" relation="include">
        </childnode>
        <childnode refid="328911" relation="include">
        </childnode>
      </node>
      <node id="328924">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/StandaloneNavigation.h</label>
        <link refid="da/dfe/StandaloneNavigation_8h_source"/>
      </node>
      <node id="328921">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroupFunctions.h</label>
        <link refid="d3/d14/ChainGroupFunctions_8h_source"/>
        <childnode refid="328897" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
      </node>
      <node id="328916">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h</label>
        <link refid="d1/d7a/ISUSYObjDef__xAODTool_8h_source"/>
        <childnode refid="328917" relation="include">
        </childnode>
        <childnode refid="328918" relation="include">
        </childnode>
        <childnode refid="328919" relation="include">
        </childnode>
      </node>
      <node id="328893">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TrigHolderStructure.h</label>
        <link refid="TrigHolderStructure.h"/>
        <childnode refid="328894" relation="include">
        </childnode>
      </node>
      <node id="328904">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TestFactory.h</label>
        <link refid="d7/d5f/TestFactory_8h_source"/>
      </node>
      <node id="328905">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TriggersFiredTest.h</label>
        <link refid="da/d06/TriggersFiredTest_8h_source"/>
      </node>
      <node id="328912">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatchingDict.h</label>
        <link refid="dc/d01/TrigTauMatchingDict_8h_source"/>
      </node>
      <node id="328917">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/ApplySUSYTools.h</label>
        <link refid="dd/dcc/ApplySUSYTools_8h_source"/>
      </node>
      <node id="328902">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/BasicTriggerFired.h</label>
        <link refid="d5/dd0/BasicTriggerFired_8h_source"/>
      </node>
      <node id="328923">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h</label>
        <link refid="d9/d17/FeatureCollectStandalone_8h_source"/>
        <childnode refid="328895" relation="include">
        </childnode>
        <childnode refid="328914" relation="include">
        </childnode>
      </node>
      <node id="328915">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroup.h</label>
        <link refid="d2/dd8/ChainGroup_8h_source"/>
        <childnode refid="328916" relation="include">
        </childnode>
        <childnode refid="328921" relation="include">
        </childnode>
        <childnode refid="328922" relation="include">
        </childnode>
        <childnode refid="328896" relation="include">
        </childnode>
        <childnode refid="328913" relation="include">
        </childnode>
        <childnode refid="328897" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
      </node>
      <node id="328913">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ExpertMethods.h</label>
        <link refid="dd/d57/ExpertMethods_8h_source"/>
        <childnode refid="328897" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
      </node>
      <node id="328918">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/SUSYToolsAlg.h</label>
        <link refid="d4/dd2/SUSYToolsAlg_8h_source"/>
      </node>
      <node id="328903">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/Run1BStoxAODTrigger.h</label>
        <link refid="dd/d41/Run1BStoxAODTrigger_8h_source"/>
      </node>
      <node id="328900">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/AthenaTestHarness.h</label>
        <link refid="d5/d93/AthenaTestHarness_8h_source"/>
      </node>
      <node id="328908">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingImplementation.h</label>
        <link refid="d1/d9b/MatchingImplementation_8h_source"/>
      </node>
      <node id="328922">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ConfigurationAccess.h</label>
        <link refid="df/d4d/ConfigurationAccess_8h_source"/>
        <childnode refid="328897" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
      </node>
      <node id="328911">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatching.h</label>
        <link refid="dc/d5a/TrigTauMatching_8h_source"/>
        <childnode refid="328912" relation="include">
        </childnode>
      </node>
      <node id="328906">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolDict.h</label>
        <link refid="d4/df1/TrigDecisionToolDict_8h_source"/>
      </node>
      <node id="328910">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/src/TrigTauMatching_example.h</label>
        <link refid="d7/d96/TrigTauMatching__example_8h_source"/>
      </node>
      <node id="328896">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h</label>
        <link refid="d7/d07/DecisionAccess_8h_source"/>
        <childnode refid="328897" relation="include">
        </childnode>
        <childnode refid="328906" relation="include">
        </childnode>
      </node>
      <node id="328907">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingTool.h</label>
        <link refid="df/d10/MatchingTool_8h_source"/>
        <childnode refid="328908" relation="include">
        </childnode>
        <childnode refid="328909" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="da/d94/classHLT_1_1TrigHolderStructure" prot="public">HLT::TrigHolderStructure</innerclass>
    <innernamespace refid="dc/d8d/namespaceHLT">HLT</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Emacs<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRIGNAVSTRUCTURE_TRIGHOLDERSTRUCTURE</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRIGNAVSTRUCTURE_TRIGHOLDERSTRUCTURE</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/variant.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AsgTools/AsgMessaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/Types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/BaseHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TriggerElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HLT{</highlight></codeline>
<codeline lineno="16" refid="da/d94/classHLT_1_1TrigHolderStructure" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d94/classHLT_1_1TrigHolderStructure" kindref="compound">TrigHolderStructure</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>asg::AsgMessaging<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d94/classHLT_1_1TrigHolderStructure" kindref="compound">TrigHolderStructure</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>registerHolder(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;BaseHolder&gt;&amp;<sp/>holder);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HolderType<sp/>=<sp/>BaseHolder&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>HolderType*<sp/>getHolder(class_id_type<sp/>clid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::variant&lt;sub_index_type,std::string&gt;&amp;<sp/>stiOrLabel)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCastHolder&lt;HolderType&gt;(getBaseHolder(clid,getSubTypeIndex(clid,stiOrLabel)));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HolderType<sp/>=<sp/>BaseHolder&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>HolderType*<sp/>getHolderForFeature(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper" kindref="compound" tooltip="the FeatureAccessHelper is a class used to keep track of features attached to this...">TriggerElement::FeatureAccessHelper</ref>&amp;<sp/>fea)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCastHolder&lt;HolderType&gt;(getBaseHolder(fea.<ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper_1ac7c82a5161490126e1b08b334cc360f6" kindref="member" tooltip="Class ID of object.">getCLID</ref>(),fea.<ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper_1a0913495e5649fb557666ab8a460aa839" kindref="member" tooltip="index in the external ojects array">getIndex</ref>().subTypeIndex()));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HolderType<sp/>=<sp/>BaseHolder&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;HolderType*&gt;<sp/>getAllHolders()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;HolderType*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>clid_indexmap<sp/>:<sp/>m_holderByClidAndIndex){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>index_holder<sp/>:<sp/>clid_indexmap.second){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(getCastHolder&lt;HolderType&gt;(index_holder.second.get()));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HolderType<sp/>=<sp/>BaseHolder&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;HolderType*&gt;<sp/>getHoldersOfClid(class_id_type<sp/>clid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;HolderType*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lookup_it<sp/>=<sp/>m_holderByClidAndIndex.find(clid);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lookup_it<sp/>==<sp/>m_holderByClidAndIndex.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>index_holder<sp/>:<sp/>lookup_it-&gt;second){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(getCastHolder&lt;HolderType&gt;(index_holder.second.get()));<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>sub_index_type<sp/>getSubTypeIndex(class_id_type<sp/>clid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>stiOrLabel)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//short<sp/>circuit<sp/>for<sp/>sub_index_type<sp/>because<sp/>that<sp/>case<sp/>is<sp/>valid<sp/>whether<sp/>we<sp/>have<sp/>a<sp/>map<sp/>or<sp/>not.<sp/>(visitor<sp/>only<sp/>works<sp/>with<sp/>map)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stiOrLabel.which()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::get&lt;sub_index_type&gt;(stiOrLabel);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lookup_it<sp/>=<sp/>m_lookupSubIndex.find(clid);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lookup_it<sp/>==<sp/>m_lookupSubIndex.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalid_sub_index;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>lookup_it-&gt;second.find(boost::get&lt;std::string&gt;(stiOrLabel));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it==lookup_it-&gt;second.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalid_sub_index;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>getLabel(class_id_type<sp/>clid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>stiOrLabel)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//short<sp/>circuit<sp/>for<sp/>sub_index_type<sp/>because<sp/>that<sp/>case<sp/>is<sp/>valid<sp/>whether<sp/>we<sp/>have<sp/>a<sp/>map<sp/>or<sp/>not.<sp/>(visitor<sp/>only<sp/>works<sp/>with<sp/>map)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stiOrLabel.which()<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::get&lt;std::string&gt;(stiOrLabel);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>invalid_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;inavalid_label&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lookup_it<sp/>=<sp/>m_lookupLabels.find(clid);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lookup_it<sp/>==<sp/>m_lookupLabels.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalid_label;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>lookup_it-&gt;second.find(boost::get&lt;sub_index_type&gt;(stiOrLabel));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it==lookup_it-&gt;second.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalid_label;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref>*<sp/>getBaseHolder(class_id_type<sp/>clid,sub_index_type<sp/>sti)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>getCastHolder(<ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref>*<sp/>holder)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!holder){</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cast_holder<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d1/def/classT" kindref="compound">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(holder);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cast_holder){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;cast<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cast_holder;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;sub_index_type,<sp/>std::shared_ptr&lt;BaseHolder&gt;<sp/>&gt;<sp/>IndexToHolderMap;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,sub_index_type&gt;<sp/>LabelToSubIndexMap;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;sub_index_type,std::string&gt;<sp/>SubIndexToLabelMap;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;class_id_type,<sp/>IndexToHolderMap&gt;<sp/>m_holderByClidAndIndex;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;class_id_type,<sp/>SubIndexToLabelMap<sp/>&gt;<sp/>m_lookupLabels;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;class_id_type,<sp/>LabelToSubIndexMap<sp/>&gt;<sp/>m_lookupSubIndex;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight><highlight class="comment">//end<sp/>namespace<sp/>HLT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TrigHolderStructure.h"/>
  </compounddef>
</doxygen>
