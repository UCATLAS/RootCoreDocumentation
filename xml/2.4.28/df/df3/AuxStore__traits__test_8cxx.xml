<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/df3/AuxStore__traits__test_8cxx" kind="file">
    <compoundname>AuxStore_traits_test.cxx</compoundname>
    <includes refid="dd/d70/AuxStore__traits_8h" local="yes">AthContainersInterfaces/AuxStore_traits.h</includes>
    <includes refid="d4/dcb/CLASS__AUXSTORE_8h" local="yes">AthContainersInterfaces/CLASS_AUXSTORE.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="87743">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="87744" relation="include">
        </childnode>
        <childnode refid="87746" relation="include">
        </childnode>
        <childnode refid="87760" relation="include">
        </childnode>
        <childnode refid="87759" relation="include">
        </childnode>
      </node>
      <node id="87756">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="87758">
        <label>functional</label>
      </node>
      <node id="87762">
        <label>boost/version.hpp</label>
      </node>
      <node id="87754">
        <label>limits</label>
      </node>
      <node id="87760">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="87751">
        <label>iterator</label>
      </node>
      <node id="87764">
        <label>AthContainersInterfaces/CLASS_AUXSTORE.h</label>
        <link refid="d4/dcb/CLASS__AUXSTORE_8h_source"/>
        <childnode refid="87741" relation="include">
        </childnode>
        <childnode refid="87743" relation="include">
        </childnode>
        <childnode refid="87744" relation="include">
        </childnode>
      </node>
      <node id="87747">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="87748" relation="include">
        </childnode>
        <childnode refid="87757" relation="include">
        </childnode>
        <childnode refid="87758" relation="include">
        </childnode>
      </node>
      <node id="87753">
        <label>cmath</label>
      </node>
      <node id="87763">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="87755">
        <label>string</label>
      </node>
      <node id="87742">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="87745">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="87746" relation="include">
        </childnode>
        <childnode refid="87747" relation="include">
        </childnode>
      </node>
      <node id="87748">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="87749" relation="include">
        </childnode>
        <childnode refid="87750" relation="include">
        </childnode>
        <childnode refid="87751" relation="include">
        </childnode>
        <childnode refid="87746" relation="include">
        </childnode>
        <childnode refid="87752" relation="include">
        </childnode>
        <childnode refid="87753" relation="include">
        </childnode>
        <childnode refid="87754" relation="include">
        </childnode>
        <childnode refid="87755" relation="include">
        </childnode>
        <childnode refid="87756" relation="include">
        </childnode>
      </node>
      <node id="87759">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="87766">
        <label>vector</label>
      </node>
      <node id="87750">
        <label>utility</label>
      </node>
      <node id="87740">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx</label>
        <link refid="AuxStore_traits_test.cxx"/>
        <childnode refid="87741" relation="include">
        </childnode>
        <childnode refid="87764" relation="include">
        </childnode>
        <childnode refid="87765" relation="include">
        </childnode>
        <childnode refid="87766" relation="include">
        </childnode>
      </node>
      <node id="87752">
        <label>cstdlib</label>
      </node>
      <node id="87765">
        <label>iostream</label>
      </node>
      <node id="87744">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="87745" relation="include">
        </childnode>
        <childnode refid="87746" relation="include">
        </childnode>
        <childnode refid="87759" relation="include">
        </childnode>
      </node>
      <node id="87746">
        <label>cstddef</label>
      </node>
      <node id="87761">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="87749">
        <label>algorithm</label>
      </node>
      <node id="87757">
        <label>memory</label>
      </node>
      <node id="87741">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="87742" relation="include">
        </childnode>
        <childnode refid="87743" relation="include">
        </childnode>
        <childnode refid="87744" relation="include">
        </childnode>
        <childnode refid="87761" relation="include">
        </childnode>
        <childnode refid="87762" relation="include">
        </childnode>
        <childnode refid="87763" relation="include">
        </childnode>
        <childnode refid="87755" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d3/d78/structDV" prot="public">DV</innerclass>
    <innerclass refid="d7/db3/structD" prot="public">D</innerclass>
    <innerclass refid="db/d2c/structW" prot="public">W</innerclass>
    <innerclass refid="d3/d24/structX" prot="public">X</innerclass>
    <innerclass refid="de/d29/structY" prot="public">Y</innerclass>
    <innerclass refid="de/d0e/structZ" prot="public">Z</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/df3/AuxStore__traits__test_8cxx_1a900a8cb5a501a32fbeefa389e7ad59c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void whichClass</definition>
        <argsstring>(const SG::NoAuxStore *)</argsstring>
        <name>whichClass</name>
        <param>
          <type>const <ref refid="d1/da5/classSG_1_1NoAuxStore" kindref="compound">SG::NoAuxStore</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="df/df3/AuxStore__traits__test_8cxx_1a4ca0f46701193ad5eaa06ef3d437b5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void whichClass</definition>
        <argsstring>(const SG::IAuxStore *)</argsstring>
        <name>whichClass</name>
        <param>
          <type>const <ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" line="18" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="df/df3/AuxStore__traits__test_8cxx_1af0728f53fe743962f949ea41fde628a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void whichClass</definition>
        <argsstring>(const SG::IConstAuxStore *)</argsstring>
        <name>whichClass</name>
        <param>
          <type>const <ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound">SG::IConstAuxStore</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="df/df3/AuxStore__traits__test_8cxx_1ac3c3b717e30a5044079c76a1f42130f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DOBJ</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testit</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>testit</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" line="25" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" bodystart="24" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="df/df3/AuxStore__traits__test_8cxx_1a73f67db310a22ecda5da7cd3362c6ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void whichClass</definition>
        <argsstring>(const Y *)</argsstring>
        <name>whichClass</name>
        <param>
          <type>const <ref refid="de/d29/structY" kindref="compound">Y</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="df/df3/AuxStore__traits__test_8cxx_1a13934e6641fdbf275a4a88b332822d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void whichClass</definition>
        <argsstring>(const Z *)</argsstring>
        <name>whichClass</name>
        <param>
          <type>const <ref refid="de/d0e/structZ" kindref="compound">Z</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="df/df3/AuxStore__traits__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx" bodystart="57" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regression test for AuxStore_traits. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Sep, 2013 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>AuxStore_traits_test.cxx<sp/>627017<sp/>2014-11-07<sp/>21:46:42Z<sp/>ssnyder<sp/>$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d70/AuxStore__traits_8h" kindref="compound" tooltip="Associate AuxStore classes with EDM container classes.">AthContainersInterfaces/AuxStore_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthContainersInterfaces/CLASS_AUXSTORE.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>whichClass<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/da5/classSG_1_1NoAuxStore" kindref="compound" tooltip="Mark that there&amp;#39;s no associated AuxStore class.">SG::NoAuxStore</ref>*)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SG::NoAuxStore<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>whichClass<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">SG::IAuxStore</ref>*)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SG::IAuxStore<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>whichClass<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SG::IConstAuxStore<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DOBJ&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testit<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="db/da6/structSG_1_1AuxStore__traits" kindref="compound" tooltip="Associate AuxStore classes with EDM container classes (default implementation).">SG::AuxStore_traits&lt;DOBJ&gt;</ref><sp/>traits;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>whichClass<sp/>((</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits::type*)0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>whichClass<sp/>((</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits::const_type*)0);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>traits::typeName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>traits::const_typeName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35" refid="d3/d78/structDV" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/d78/structDV" kindref="compound">DV</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/><ref refid="d1/def/classT" kindref="compound">base_value_type</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/db3/structD" kindref="compound">D</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SG::IAuxElement<sp/>{};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="db/d2c/structW" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="db/d2c/structW" kindref="compound">W</ref><sp/>{};</highlight></codeline>
<codeline lineno="45"><highlight class="normal">CLASS_AUXSTORE(<ref refid="db/d2c/structW" kindref="compound">W</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="d3/d24/structX" refkind="compound"><highlight class="normal">struct<sp/><ref refid="d3/d24/structX" kindref="compound">X</ref><sp/>{};</highlight></codeline>
<codeline lineno="48" refid="de/d29/structY" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d29/structY" kindref="compound">Y</ref><sp/>{};</highlight></codeline>
<codeline lineno="49" refid="de/d0e/structZ" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d0e/structZ" kindref="compound">Z</ref><sp/>{};</highlight></codeline>
<codeline lineno="50"><highlight class="normal">CLASS_AUXSTORE3(<ref refid="d3/d24/structX" kindref="compound">X</ref>,<sp/><ref refid="de/d29/structY" kindref="compound">Y</ref>,<sp/><ref refid="de/d0e/structZ" kindref="compound">Z</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">void<sp/>whichClass<sp/>(const<sp/><ref refid="de/d29/structY" kindref="compound">Y</ref>*)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Y<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>whichClass<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d0e/structZ" kindref="compound">Z</ref>*)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Z<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>testit&lt;int&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>testit&lt;std::vector&lt;int&gt;<sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;vector&lt;int&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>testit&lt;DV&lt;int&gt;<sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;DV&lt;int&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>testit&lt;D&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>testit&lt;DV&lt;D&gt;<sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;DV&lt;D&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>testit&lt;W&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;W&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>testit&lt;X&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>testit&lt;W*&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;W*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>testit&lt;X*&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;X*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainersInterfaces/test/AuxStore_traits_test.cxx"/>
  </compounddef>
</doxygen>
