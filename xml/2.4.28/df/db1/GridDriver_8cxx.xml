<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/db1/GridDriver_8cxx" kind="file">
    <compoundname>GridDriver.cxx</compoundname>
    <includes refid="d8/d11/GridDriver_8h" local="yes">EventLoopGrid/GridDriver.h</includes>
    <includes refid="d3/d16/GridWorker_8h" local="yes">EventLoopGrid/GridWorker.h</includes>
    <includes refid="d7/d36/Algorithm_8h" local="yes">EventLoop/Algorithm.h</includes>
    <includes refid="d5/d80/Job_8h" local="yes">EventLoop/Job.h</includes>
    <includes refid="da/d9f/OutputStream_8h" local="yes">EventLoop/OutputStream.h</includes>
    <includes refid="d3/dac/Assert_8h" local="yes">RootCoreUtils/Assert.h</includes>
    <includes refid="d2/d69/StringUtil_8h" local="yes">RootCoreUtils/StringUtil.h</includes>
    <includes refid="dd/db7/ThrowMsg_8h" local="no">RootCoreUtils/ThrowMsg.h</includes>
    <includes refid="db/dbe/hadd_8h" local="yes">RootCoreUtils/hadd.h</includes>
    <includes refid="d2/d7b/MetaFields_8h" local="yes">SampleHandler/MetaFields.h</includes>
    <includes refid="d7/d50/MetaObject_8h" local="yes">SampleHandler/MetaObject.h</includes>
    <includes refid="df/d9d/Sample_8h" local="yes">SampleHandler/Sample.h</includes>
    <includes refid="d7/d20/SampleGrid_8h" local="yes">SampleHandler/SampleGrid.h</includes>
    <includes refid="d2/da1/SampleHandler_8h" local="yes">SampleHandler/SampleHandler.h</includes>
    <includes local="yes">TList.h</includes>
    <includes local="yes">TRegexp.h</includes>
    <includes local="yes">TSystem.h</includes>
    <includes local="yes">TTree.h</includes>
    <includes local="yes">TObjString.h</includes>
    <includes local="yes">TObjArray.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">iterator</includes>
    <includes local="no">list</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="130097">
        <label>list</label>
      </node>
      <node id="130095">
        <label>iomanip</label>
      </node>
      <node id="130096">
        <label>iterator</label>
      </node>
      <node id="130047">
        <label>EventLoop/Driver.h</label>
        <link refid="dd/d3c/Driver_8h_source"/>
        <childnode refid="130048" relation="include">
        </childnode>
        <childnode refid="130049" relation="include">
        </childnode>
        <childnode refid="130050" relation="include">
        </childnode>
      </node>
      <node id="130093">
        <label>TObjArray.h</label>
      </node>
      <node id="130076">
        <label>SampleHandler/SampleHandler.h</label>
        <link refid="d2/da1/SampleHandler_8h_source"/>
        <childnode refid="130051" relation="include">
        </childnode>
        <childnode refid="130061" relation="include">
        </childnode>
        <childnode refid="130077" relation="include">
        </childnode>
        <childnode refid="130060" relation="include">
        </childnode>
        <childnode refid="130062" relation="include">
        </childnode>
        <childnode refid="130049" relation="include">
        </childnode>
      </node>
      <node id="130075">
        <label>EventLoop/Job.h</label>
        <link refid="d5/d80/Job_8h_source"/>
        <childnode refid="130048" relation="include">
        </childnode>
        <childnode refid="130062" relation="include">
        </childnode>
        <childnode refid="130076" relation="include">
        </childnode>
        <childnode refid="130050" relation="include">
        </childnode>
      </node>
      <node id="130057">
        <label>EventLoopGrid/GridWorker.h</label>
        <link refid="d3/d16/GridWorker_8h_source"/>
        <childnode refid="130055" relation="include">
        </childnode>
        <childnode refid="130058" relation="include">
        </childnode>
        <childnode refid="130050" relation="include">
        </childnode>
        <childnode refid="130059" relation="include">
        </childnode>
        <childnode refid="130048" relation="include">
        </childnode>
        <childnode refid="130064" relation="include">
        </childnode>
      </node>
      <node id="130058">
        <label>TList.h</label>
      </node>
      <node id="130074">
        <label>EventLoop/StatusCode.h</label>
        <link refid="d0/d16/EventLoop_2EventLoop_2StatusCode_8h_source"/>
        <childnode refid="130048" relation="include">
        </childnode>
      </node>
      <node id="130054">
        <label>RootCoreUtils/Deprecated.h</label>
        <link refid="d1/d0f/RootCoreUtils_2RootCoreUtils_2Deprecated_8h_source"/>
        <childnode refid="130053" relation="include">
        </childnode>
      </node>
      <node id="130045">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopGrid/Root/GridDriver.cxx</label>
        <link refid="GridDriver.cxx"/>
        <childnode refid="130046" relation="include">
        </childnode>
        <childnode refid="130057" relation="include">
        </childnode>
        <childnode refid="130072" relation="include">
        </childnode>
        <childnode refid="130075" relation="include">
        </childnode>
        <childnode refid="130078" relation="include">
        </childnode>
        <childnode refid="130052" relation="include">
        </childnode>
        <childnode refid="130079" relation="include">
        </childnode>
        <childnode refid="130081" relation="include">
        </childnode>
        <childnode refid="130084" relation="include">
        </childnode>
        <childnode refid="130085" relation="include">
        </childnode>
        <childnode refid="130050" relation="include">
        </childnode>
        <childnode refid="130086" relation="include">
        </childnode>
        <childnode refid="130089" relation="include">
        </childnode>
        <childnode refid="130076" relation="include">
        </childnode>
        <childnode refid="130058" relation="include">
        </childnode>
        <childnode refid="130090" relation="include">
        </childnode>
        <childnode refid="130069" relation="include">
        </childnode>
        <childnode refid="130091" relation="include">
        </childnode>
        <childnode refid="130092" relation="include">
        </childnode>
        <childnode refid="130093" relation="include">
        </childnode>
        <childnode refid="130094" relation="include">
        </childnode>
        <childnode refid="130066" relation="include">
        </childnode>
        <childnode refid="130095" relation="include">
        </childnode>
        <childnode refid="130096" relation="include">
        </childnode>
        <childnode refid="130097" relation="include">
        </childnode>
        <childnode refid="130060" relation="include">
        </childnode>
        <childnode refid="130061" relation="include">
        </childnode>
        <childnode refid="130067" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
        <childnode refid="130062" relation="include">
        </childnode>
      </node>
      <node id="130046">
        <label>EventLoopGrid/GridDriver.h</label>
        <link refid="d8/d11/GridDriver_8h_source"/>
        <childnode refid="130047" relation="include">
        </childnode>
      </node>
      <node id="130055">
        <label>string</label>
      </node>
      <node id="130060">
        <label>map</label>
      </node>
      <node id="130089">
        <label>SampleHandler/SampleGrid.h</label>
        <link refid="d7/d20/SampleGrid_8h_source"/>
        <childnode refid="130051" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
        <childnode refid="130062" relation="include">
        </childnode>
        <childnode refid="130086" relation="include">
        </childnode>
      </node>
      <node id="130092">
        <label>TObjString.h</label>
      </node>
      <node id="130066">
        <label>fstream</label>
      </node>
      <node id="130090">
        <label>TRegexp.h</label>
      </node>
      <node id="130050">
        <label>SampleHandler/MetaObject.h</label>
        <link refid="d7/d50/MetaObject_8h_source"/>
        <childnode refid="130051" relation="include">
        </childnode>
        <childnode refid="130052" relation="include">
        </childnode>
        <childnode refid="130054" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
        <childnode refid="130056" relation="include">
        </childnode>
      </node>
      <node id="130086">
        <label>SampleHandler/Sample.h</label>
        <link refid="df/d9d/Sample_8h_source"/>
        <childnode refid="130051" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
        <childnode refid="130062" relation="include">
        </childnode>
        <childnode refid="130049" relation="include">
        </childnode>
        <childnode refid="130054" relation="include">
        </childnode>
        <childnode refid="130087" relation="include">
        </childnode>
      </node>
      <node id="130048">
        <label>EventLoop/Global.h</label>
        <link refid="d1/daf/EventLoop_2EventLoop_2Global_8h_source"/>
      </node>
      <node id="130084">
        <label>RootCoreUtils/hadd.h</label>
        <link refid="db/dbe/hadd_8h_source"/>
        <childnode refid="130053" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
        <childnode refid="130062" relation="include">
        </childnode>
      </node>
      <node id="130068">
        <label>TROOT.h</label>
      </node>
      <node id="130085">
        <label>SampleHandler/MetaFields.h</label>
        <link refid="d2/d7b/MetaFields_8h_source"/>
        <childnode refid="130051" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
      </node>
      <node id="130049">
        <label>TObject.h</label>
      </node>
      <node id="130069">
        <label>TSystem.h</label>
      </node>
      <node id="130079">
        <label>RootCoreUtils/StringUtil.h</label>
        <link refid="d2/d69/StringUtil_8h_source"/>
        <childnode refid="130053" relation="include">
        </childnode>
        <childnode refid="130080" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
      </node>
      <node id="130062">
        <label>vector</label>
      </node>
      <node id="130071">
        <label>TFile.h</label>
      </node>
      <node id="130067">
        <label>sstream</label>
      </node>
      <node id="130053">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="130083">
        <label>RootCoreUtils/MessageType.h</label>
        <link refid="dd/d02/MessageType_8h_source"/>
        <childnode refid="130053" relation="include">
        </childnode>
      </node>
      <node id="130063">
        <label>Rtypes.h</label>
      </node>
      <node id="130077">
        <label>iosfwd</label>
      </node>
      <node id="130065">
        <label>iostream</label>
      </node>
      <node id="130064">
        <label>EventLoopGrid/PandaRootTools.h</label>
        <link refid="db/d27/PandaRootTools_8h_source"/>
        <childnode refid="130062" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
        <childnode refid="130065" relation="include">
        </childnode>
        <childnode refid="130066" relation="include">
        </childnode>
        <childnode refid="130067" relation="include">
        </childnode>
        <childnode refid="130068" relation="include">
        </childnode>
        <childnode refid="130069" relation="include">
        </childnode>
        <childnode refid="130070" relation="include">
        </childnode>
        <childnode refid="130071" relation="include">
        </childnode>
      </node>
      <node id="130087">
        <label>SampleHandler/TagList.h</label>
        <link refid="d2/de6/TagList_8h_source"/>
        <childnode refid="130051" relation="include">
        </childnode>
        <childnode refid="130088" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
      </node>
      <node id="130059">
        <label>EventLoop/Worker.h</label>
        <link refid="dc/db3/Worker_8h_source"/>
        <childnode refid="130048" relation="include">
        </childnode>
        <childnode refid="130060" relation="include">
        </childnode>
        <childnode refid="130061" relation="include">
        </childnode>
        <childnode refid="130062" relation="include">
        </childnode>
        <childnode refid="130063" relation="include">
        </childnode>
        <childnode refid="130058" relation="include">
        </childnode>
        <childnode refid="130051" relation="include">
        </childnode>
      </node>
      <node id="130072">
        <label>EventLoop/Algorithm.h</label>
        <link refid="d7/d36/Algorithm_8h_source"/>
        <childnode refid="130048" relation="include">
        </childnode>
        <childnode refid="130073" relation="include">
        </childnode>
        <childnode refid="130074" relation="include">
        </childnode>
      </node>
      <node id="130073">
        <label>TNamed.h</label>
      </node>
      <node id="130070">
        <label>TString.h</label>
      </node>
      <node id="130080">
        <label>boost/regex.hpp</label>
      </node>
      <node id="130082">
        <label>RootCoreUtils/PrintMsg.h</label>
        <link refid="d2/d5f/PrintMsg_8h_source"/>
        <childnode refid="130053" relation="include">
        </childnode>
        <childnode refid="130055" relation="include">
        </childnode>
        <childnode refid="130083" relation="include">
        </childnode>
      </node>
      <node id="130091">
        <label>TTree.h</label>
      </node>
      <node id="130081">
        <label>RootCoreUtils/ThrowMsg.h</label>
        <link refid="dd/db7/ThrowMsg_8h_source"/>
        <childnode refid="130053" relation="include">
        </childnode>
        <childnode refid="130082" relation="include">
        </childnode>
      </node>
      <node id="130088">
        <label>set</label>
      </node>
      <node id="130052">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="130053" relation="include">
        </childnode>
      </node>
      <node id="130051">
        <label>SampleHandler/Global.h</label>
        <link refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h_source"/>
      </node>
      <node id="130094">
        <label>algorithm</label>
      </node>
      <node id="130061">
        <label>memory</label>
      </node>
      <node id="130078">
        <label>EventLoop/OutputStream.h</label>
        <link refid="da/d9f/OutputStream_8h_source"/>
        <childnode refid="130048" relation="include">
        </childnode>
        <childnode refid="130062" relation="include">
        </childnode>
        <childnode refid="130049" relation="include">
        </childnode>
        <childnode refid="130050" relation="include">
        </childnode>
        <childnode refid="130076" relation="include">
        </childnode>
      </node>
      <node id="130056">
        <label>TCollection.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d9f/namespaceEL">EL</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/db1/GridDriver_8cxx_1a874d5129ba609203b359f1c51dea4486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(EL::GridDriver) namespace EL</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="da/dcf/classEL_1_1GridDriver" kindref="compound">EL::GridDriver</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopGrid/Root/GridDriver.cxx" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopGrid/Root/GridDriver.cxx" bodystart="32" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;EventLoopGrid/GridDriver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventLoopGrid/GridWorker.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventLoop/Algorithm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventLoop/Job.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventLoop/OutputStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RootCoreUtils/Assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RootCoreUtils/StringUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/ThrowMsg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RootCoreUtils/hadd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SampleHandler/MetaFields.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SampleHandler/MetaObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SampleHandler/Sample.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SampleHandler/SampleGrid.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SampleHandler/SampleHandler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TRegexp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TSystem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TTree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TObjString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TObjArray.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">ClassImp(<ref refid="da/dcf/classEL_1_1GridDriver" kindref="compound">EL::GridDriver</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">namespace<sp/>EL<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>std::string<sp/>getRootCoreConfig<sp/>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::regex<sp/>expr<sp/>(</highlight><highlight class="stringliteral">&quot;.*-.*-.*-.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ROOTCORECONFIG<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;ROOTCORECONFIG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ROOTCORECONFIG)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d9/d83/namespaceRCU_1aa110e4059664bce7be1f3d8ba4f3308d" kindref="member">RCU::match_expr</ref><sp/>(expr,<sp/>ROOTCORECONFIG))</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ROOTCORECONFIG;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>invalid<sp/>value<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ROOTCORECONFIG</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>for<sp/>$ROOTCORECONFIG&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rootCmtConfig<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;rootCmtConfig&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rootCmtConfig)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d9/d83/namespaceRCU_1aa110e4059664bce7be1f3d8ba4f3308d" kindref="member">RCU::match_expr</ref><sp/>(expr,<sp/>rootCmtConfig))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rootCmtConfig;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>invalid<sp/>value<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rootCmtConfig</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>for<sp/>$rootCmtConfig&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>no<sp/>valid<sp/>value<sp/>for<sp/>cmt<sp/>config<sp/>found.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>using<sp/>\&quot;x86_64-slc6-gcc47-opt\&quot;<sp/>instead.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>consider<sp/>updating<sp/>to<sp/>a<sp/>more<sp/>recent<sp/>RootCore<sp/>version\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>or<sp/>analysis<sp/>release\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;x86_64-slc6-gcc47-opt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>GridDriver::gangaLogFile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dummyIdCompleted<sp/>=<sp/>-0xDEAD;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dummyIdFailed<sp/>=<sp/>-0xFA11;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cvmfsATLASLocalRootBase<sp/>=<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>shAtlasLocalSetup<sp/>=<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.<sp/>${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>gangaDir<sp/>=<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gSystem-&gt;ExpandPathName(</highlight><highlight class="stringliteral">&quot;~/gangadir-EL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GangaTrfDef<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sampleName;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inDS;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>outDS;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>rootVer;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inputSdBox;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inputFiles;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>outputFiles;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>downloadDir;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>downloadMask;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>userArea;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">EnvReqs<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needGanga;<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needPanda;<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needProxy;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needRootCore;<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needDQ2;<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnvReqs()<sp/>:<sp/>needGanga(false),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needPanda(false),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needProxy(false),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needRootCore(false),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needDQ2(false)<sp/>{}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>bool<sp/>readJobInfo(const<sp/>std::string<sp/>location,<sp/>bool<sp/>printInfo<sp/>=<sp/>true);</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>bool<sp/>readJobInfo(const<sp/>std::string<sp/>location,<sp/>Int_t<sp/>&amp;nEventsTotal,<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>&amp;nFilesTotal,<sp/>Float_t<sp/>&amp;realTimeTotal,</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>&amp;cpuTimeTotal,<sp/>Float_t<sp/>&amp;eventsPerRealSecondTotal,</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>&amp;eventsPerCpuSecondTotal,<sp/>bool<sp/>printInfo);</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>bool<sp/>readJobInfo(const<sp/>std::string<sp/>location,<sp/>Int_t<sp/>&amp;nEventsTotal,<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>&amp;nFilesTotal,<sp/>bool<sp/><sp/>printInfo<sp/>=<sp/>false);</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::string<sp/>getStrValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;inLines,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;key);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>pyList(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;list);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkEnvironment(EnvReqs<sp/>args);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>getNickname();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendGangaCmd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;cmd);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendGangaCmd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;cmd,<sp/>std::string<sp/>&amp;out);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>gangaTrfCmd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GangaTrfDef<sp/>&amp;args,<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GridDriver<sp/>&amp;driver);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readTaskID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeTaskID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskId);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>EL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dcf/classEL_1_1GridDriver_1ad35bf4000a6564f578a55fd0bc68edd6" kindref="member">EL::GridDriver::testInvariant</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/>EL::GridDriver::GridDriver()<sp/>:<sp/><sp/>express(false),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mergeOutput(false),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory(-1),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxCpuCount(-1),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFiles(0),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFilesPerJob(0),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nJobs(-1),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMinorRetries(4),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMajorRetries(4),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nGBPerJob(13),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootVer(gROOT-&gt;GetVersion()),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmtConfig(getRootCoreConfig())<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dcf/classEL_1_1GridDriver_1a4575042cd73c31a9e50b786bf6bf36a4" kindref="member">EL::GridDriver::doSubmit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dbb/classEL_1_1Job" kindref="compound">EL::Job</ref>&amp;<sp/>job,<sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>RCU_READ_INVARIANT(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>RCU_REQUIRE(not<sp/>location.empty());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Parent<sp/>class<sp/>ensures<sp/>location<sp/>is<sp/>absolute,<sp/>but<sp/>if<sp/>originally<sp/>specified<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//as<sp/>a<sp/>relative<sp/>path,<sp/>it<sp/>may<sp/>still<sp/>contain<sp/>&apos;..&apos;<sp/>which<sp/>will<sp/>cause<sp/>trouble</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//later<sp/>as<sp/>dq2<sp/>-H<sp/>option<sp/>used<sp/>by<sp/>Ganga<sp/>Tasks<sp/>requires<sp/>the<sp/>canonical<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>jobDir<sp/>=<sp/>location;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Ssiz_t<sp/>len,<sp/>pos;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>TString<sp/>tsLocation(location.c_str());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*noDir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/[A-Za-z0-9_\\.-]+/\\.\\.&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((pos<sp/>=<sp/>TRegexp(noDir).Index(tsLocation,&amp;len,0))<sp/>!=<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsLocation.Remove(pos,<sp/>len);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>jobDir<sp/>=<sp/>tsLocation.Data();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>input<sp/>sandbox<sp/>dir<sp/>with<sp/>ELG<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>some<sp/>error<sp/>checks<sp/>here<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>jobELGDir<sp/><sp/><sp/>=<sp/>jobDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/elg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>taskIdFile<sp/><sp/>=<sp/>jobELGDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/taskID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>dsContFile<sp/><sp/>=<sp/>jobELGDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/outputDQ2container&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sandboxDir<sp/><sp/>=<sp/>jobELGDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/inputsandbox&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>downloadDir<sp/>=<sp/>jobELGDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/download&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>runShFile<sp/><sp/><sp/>=<sp/>sandboxDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/runjob.sh&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>runShOrig<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;$ROOTCOREBIN/data/EventLoopGrid/runjob.sh&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mergeShFile<sp/>=<sp/>sandboxDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/elg_merge&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mergeShOrig<sp/>=<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$ROOTCOREBIN/user_scripts/EventLoopGrid/elg_merge&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>jobDefFile<sp/><sp/>=<sp/>sandboxDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/jobdef.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>jobELGDir.c_str()));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>sandboxDir.c_str()));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>downloadDir.c_str()));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;cp<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>runShOrig.c_str(),<sp/>runShFile.c_str()));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;chmod<sp/>+x<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>runShFile.c_str()));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;cp<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>mergeShOrig.c_str(),<sp/>mergeShFile.c_str()));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;chmod<sp/>+x<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>mergeShFile.c_str()));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gSystem-&gt;Exec(</highlight><highlight class="stringliteral">&quot;ps<sp/>aux<sp/>|<sp/>grep<sp/>`whoami`<sp/>|<sp/>grep<sp/>-e<sp/>[g]anga<sp/>&gt;<sp/>/dev/null&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>stopServer())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>stop<sp/>currently<sp/>running<sp/>ganga<sp/>service&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>gSystem-&gt;Exec(</highlight><highlight class="stringliteral">&quot;sleep<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>wait<sp/>while<sp/>grid<sp/>jobs<sp/>are<sp/>created,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>can<sp/>take<sp/>several<sp/>minutes...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>EnvReqs<sp/>env;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>env.needGanga<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>env.needPanda<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>env.needProxy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>env.needRootCore<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>checkEnvironment(env))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nickname<sp/>=<sp/>getNickname();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nickname[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>to<sp/>get<sp/>grid<sp/>nickname<sp/>from<sp/>panda&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>TList<sp/>outputs;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">//Save<sp/>the<sp/>Algorithms<sp/>and<sp/>sample<sp/>MetaObjects<sp/>to<sp/>be<sp/>sent<sp/>with<sp/>the<sp/>jobs<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile<sp/>f(jobDefFile.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>TList<sp/>algs;<sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="da/dbb/classEL_1_1Job_1ad7079dc212a4da1a5e6bf43940e91bba" kindref="member">EL::Job::algsIter</ref><sp/>alg<sp/>=<sp/>job.algsBegin(),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>job.algsEnd();<sp/>alg<sp/>!=<sp/>end;<sp/>++<sp/>alg)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algs.Add((*alg)-&gt;Clone());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>f.WriteTObject(&amp;algs,<sp/></highlight><highlight class="stringliteral">&quot;algorithms&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SingleKey&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::Job::outputIter</ref><sp/>out<sp/>=<sp/>job.outputBegin(),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>job.outputEnd();<sp/>out<sp/>!=<sp/>end;<sp/>++out)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outputs.Add(out-&gt;Clone());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>f.WriteTObject(&amp;outputs,<sp/></highlight><highlight class="stringliteral">&quot;outputs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SingleKey&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d1/d56/classSH_1_1SampleHandler_1a88354b0d73fb29ae1dd766a733baab0e" kindref="member" tooltip="the iterator to use">SH::SampleHandler::iterator</ref><sp/>sample<sp/>=<sp/>job.<ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">sampleHandler</ref>().<ref refid="d1/d56/classSH_1_1SampleHandler_1afeaff9e0c8173cf162db26ee0a4d81f6" kindref="member" tooltip="the begin iterator to use">begin</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sample<sp/>!=<sp/>job.<ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">sampleHandler</ref>().<ref refid="d1/d56/classSH_1_1SampleHandler_1a6c039cba7cf97bbb90e98d631a9ca6cb" kindref="member" tooltip="the end iterator to use">end</ref>();<sp/><sp/>++sample)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound" tooltip="A class that manages meta-data to be associated with an object.">SH::MetaObject</ref><sp/>meta(*(*sample)-&gt;meta());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meta.fetchDefaults(*job.<ref refid="da/dbb/classEL_1_1Job_1a26060474b2602f91ef3d220c415c2005" kindref="member">options</ref>());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meta.fetchDefaults(*<ref refid="de/d0a/classEL_1_1Driver_1a44cc2bdc9221bb5c0409c2485f8e2798" kindref="member">options</ref>());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.WriteObject(&amp;meta,<sp/>(*sample)-&gt;name().c_str());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//f.WriteObject((*sample)-&gt;meta(),<sp/>(*sample)-&gt;name().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>f.Close();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound" tooltip="A class that manages meta-data to be associated with an object.">SH::MetaObject</ref><sp/>meta(*job.<ref refid="da/dbb/classEL_1_1Job_1a26060474b2602f91ef3d220c415c2005" kindref="member">options</ref>());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>meta.fetchDefaults(*<ref refid="de/d0a/classEL_1_1Driver_1a44cc2bdc9221bb5c0409c2485f8e2798" kindref="member">options</ref>());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>map&lt;string,<sp/>SH::SampleHandler&gt;<sp/>outMap;<sp/></highlight><highlight class="comment">//<sp/>&lt;label,samples&gt;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>list&lt;std::string&gt;<sp/>outDSs;<sp/></highlight><highlight class="comment">//Created<sp/>dq2<sp/>datasets<sp/>for<sp/>output<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iJob<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>gangaCmd;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d1/d56/classSH_1_1SampleHandler_1a88354b0d73fb29ae1dd766a733baab0e" kindref="member" tooltip="the iterator to use">SH::SampleHandler::iterator</ref><sp/>sample<sp/>=<sp/>job.<ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">sampleHandler</ref>().<ref refid="d1/d56/classSH_1_1SampleHandler_1afeaff9e0c8173cf162db26ee0a4d81f6" kindref="member" tooltip="the begin iterator to use">begin</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample<sp/>!=<sp/>job.<ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">sampleHandler</ref>().<ref refid="d1/d56/classSH_1_1SampleHandler_1a6c039cba7cf97bbb90e98d631a9ca6cb" kindref="member" tooltip="the end iterator to use">end</ref>();<sp/>++sample)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>inDS;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>outDS;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>iJob++;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>SampleGrid,<sp/>loop<sp/>over<sp/>childs<sp/>if<sp/>SampleComposite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>inDS<sp/>=<sp/>(*sample)-&gt;getMetaString(</highlight><highlight class="stringliteral">&quot;nc_grid&quot;</highlight><highlight class="normal">,<sp/>(*sample)-&gt;name());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>outDS<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>outputSampleName.empty())<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outDS<sp/>=<sp/>outputSampleName;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Decide<sp/>on<sp/>a<sp/>good<sp/>default<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outDS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;user.%nickname%.%in:name%&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>outDS.ReplaceAll(</highlight><highlight class="stringliteral">&quot;%in:name%&quot;</highlight><highlight class="normal">,<sp/>(*sample)-&gt;name());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>outDS.ReplaceAll(</highlight><highlight class="stringliteral">&quot;%nickname%&quot;</highlight><highlight class="normal">,<sp/>nickname);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss((*sample)-&gt;name());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>item;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(std::getline(ss,<sp/>item,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>sskey;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sskey<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%in:name[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>++field<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]%&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outDS.ReplaceAll(sskey.str(),<sp/>item);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outDS.Index(</highlight><highlight class="stringliteral">&quot;%in:&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1<sp/>=<sp/>outDS.Index(</highlight><highlight class="stringliteral">&quot;%in:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2<sp/>=<sp/>outDS.Index(</highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">,<sp/>i1+1);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>metaName<sp/>=<sp/>outDS(i1+4,<sp/>i2-i1-4);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outDS.ReplaceAll(</highlight><highlight class="stringliteral">&quot;%in:&quot;</highlight><highlight class="normal">+metaName+</highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*sample)-&gt;getMetaString(std::string(metaName.Data())));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>outDS.ReplaceAll(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outDS.BeginsWith(Form(</highlight><highlight class="stringliteral">&quot;user.%s&quot;</highlight><highlight class="normal">,<sp/>nickname.c_str())))<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ERROR:<sp/>Malformed<sp/>outDS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Bad<sp/>output<sp/>dataset<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outDS<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;It<sp/>should<sp/>begin<sp/>with<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Form(</highlight><highlight class="stringliteral">&quot;user.%s&quot;</highlight><highlight class="normal">,<sp/>nickname.c_str())<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>outputfilenames<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hist-output.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIter<sp/>itr(&amp;outputs);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TObject<sp/>*obj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((obj<sp/>=<sp/>itr()))<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::OutputStream</ref><sp/>*os<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::OutputStream</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>os-&gt;<ref refid="d5/dfe/classEL_1_1OutputStream_1a9ef5507e9336b95aace7e2086bc369d2" kindref="member">label</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>outputfilenames<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+<sp/>name;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(downloadDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>(*sample)-&gt;name()).c_str()));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>GangaTrfDef<sp/>trfDef;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.sampleName<sp/>=<sp/>(*sample)-&gt;name();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.inDS<sp/>=<sp/>inDS.Data();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.outDS<sp/>=<sp/>outDS.Data();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.inputSdBox<sp/>=<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extFile<sp/>+<sp/>(extFile.empty()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)<sp/>+<sp/>jobDefFile<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+<sp/>runShFile;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.inputFiles<sp/>=<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*sample)-&gt;getMetaString(</highlight><highlight class="stringliteral">&quot;nc_grid_filter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.root*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.outputFiles<sp/>=<sp/>outputfilenames;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.downloadDir<sp/>=<sp/>downloadDir;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.downloadMask<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hist-output.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.userArea<sp/>=<sp/>jobELGDir;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>trfDef.rootVer<sp/>=<sp/>rootVer;<sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Transform<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iJob<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/>gangaTrfCmd(trfDef,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>outDSs.push_back(std::string(outDS));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>taskName<sp/>=<sp/>location;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taskName.rfind(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>taskName<sp/>=<sp/>taskName.substr(taskName.rfind(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)+1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>stringstream<sp/>submitCmd;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>submitCmd<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>This<sp/>file<sp/>was<sp/>generated<sp/>by<sp/>EventLoop<sp/>GridDriver<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>EL<sp/>job<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t<sp/>=<sp/>AtlasTask()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t.name<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t.comment<sp/>+=<sp/>&apos;location:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>location<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t.float<sp/>=<sp/>200\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app<sp/>=<sp/>Athena()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.athena_compile<sp/>=<sp/>True\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.option_file<sp/>=<sp/>&apos;runjob.sh&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.atlas_exetype<sp/>=<sp/>&apos;EXE&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.useRootCore<sp/>=<sp/>True\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.append_to_user_area<sp/>=<sp/>[&apos;.root&apos;,&apos;.cxx&apos;,&apos;.C&apos;,&apos;.h&apos;]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.user_area_path<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jobELGDir<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.atlas_release=&apos;None&apos;\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.atlas_cmtconfig<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>meta.castString<sp/>(Job::optCmtConfig,<sp/>cmtConfig)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;\n&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.prepare()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.atlas_release=&apos;&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;app.atlas_dbrelease=&apos;&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;config.Athena.EXE_MAXFILESIZE=2097152\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;config.Configuration.autoGenerateJobWorkspace<sp/>=<sp/>False\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;print\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>\&quot;TaskID:<sp/>%d\&quot;<sp/>%<sp/>t.id\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>\&quot;TaskContainer:<sp/>%s\&quot;<sp/>%<sp/>t.getContainerName()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>gangaCmd.str()</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t.run()\n&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>time\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;time.sleep(60)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>ofstream<sp/>of((jobELGDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/submit.py&quot;</highlight><highlight class="normal">).c_str());<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>of<sp/>&lt;&lt;<sp/>submitCmd.str();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>of.close();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>curDir<sp/>=<sp/>gSystem-&gt;pwd();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>gSystem-&gt;cd(sandboxDir.c_str());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>gangaMsg;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>sendGangaCmd(submitCmd.str(),<sp/>gangaMsg);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>gSystem-&gt;cd(curDir.c_str());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>ok)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>start<sp/>ganga<sp/>service<sp/>-<sp/>job<sp/>submission<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Done.<sp/>Call<sp/>EL::GridDriver::status(\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>location<sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;)<sp/>to<sp/>follow<sp/>the<sp/>progress<sp/>of<sp/>your<sp/>jobs.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskId<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>container<sp/>=<sp/>getStrValues(gangaMsg,<sp/></highlight><highlight class="stringliteral">&quot;TaskContainer:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>istringstream(getStrValues(gangaMsg,<sp/></highlight><highlight class="stringliteral">&quot;TaskID:<sp/>&quot;</highlight><highlight class="normal">))<sp/>&gt;&gt;<sp/>taskId;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>RCU_ASSERT(taskId<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>writeTaskID(location,<sp/>taskId);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>ofstream<sp/>of(dsContFile.c_str());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>of<sp/>&lt;&lt;<sp/>container;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>of.close();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>stringstream<sp/>queryOutDsCmd;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>queryOutDsCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>tr<sp/>in<sp/>tasks(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).transforms:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>\&quot;%(in)s:<sp/>%(out)s<sp/>\&quot;<sp/>%<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;in\&quot;:<sp/>tr.application.options,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;out\&quot;:<sp/>tr.getContainerName()}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>sendGangaCmd(queryOutDsCmd.str(),<sp/>gangaMsg);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d1/d56/classSH_1_1SampleHandler_1a88354b0d73fb29ae1dd766a733baab0e" kindref="member" tooltip="the iterator to use">SH::SampleHandler::iterator</ref><sp/>sample<sp/>=<sp/>job.<ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">sampleHandler</ref>().<ref refid="d1/d56/classSH_1_1SampleHandler_1afeaff9e0c8173cf162db26ee0a4d81f6" kindref="member" tooltip="the begin iterator to use">begin</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample<sp/>!=<sp/>job.<ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">sampleHandler</ref>().<ref refid="d1/d56/classSH_1_1SampleHandler_1a6c039cba7cf97bbb90e98d631a9ca6cb" kindref="member" tooltip="the end iterator to use">end</ref>();<sp/>++sample)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sampleOutDs<sp/>=<sp/>getStrValues(gangaMsg,<sp/>(*sample)-&gt;name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sampleOutDs.rbegin()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sampleOutDs<sp/><sp/>=<sp/>sampleOutDs.substr(0,<sp/>sampleOutDs.size()-1);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sampleOutDs.rbegin()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sampleOutDs<sp/><sp/>=<sp/>sampleOutDs.substr(0,<sp/>sampleOutDs.size()-1);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>sample<sp/>for<sp/>each<sp/>output<sp/>and<sp/>add<sp/>it<sp/>to<sp/>that<sp/>output&apos;s<sp/>handler<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::Job::outputIter</ref><sp/>out=job.outputBegin();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out<sp/>!=<sp/>job.outputEnd();<sp/>++out)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d36/classSH_1_1SampleGrid" kindref="compound" tooltip="This class implements a Sample located on the grid.">SH::SampleGrid</ref><sp/>*<sp/>mysample<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d36/classSH_1_1SampleGrid" kindref="compound" tooltip="This class implements a Sample located on the grid.">SH::SampleGrid</ref>((*sample)-&gt;name());</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mysample-&gt;<ref refid="dd/d5f/classSH_1_1Sample_1a898099e5c42a5602c43f64052f444e43" kindref="member">setMetaString</ref>(</highlight><highlight class="stringliteral">&quot;nc_grid&quot;</highlight><highlight class="normal">,<sp/>sampleOutDs);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mysample-&gt;<ref refid="dd/d5f/classSH_1_1Sample_1a898099e5c42a5602c43f64052f444e43" kindref="member">setMetaString</ref>(</highlight><highlight class="stringliteral">&quot;nc_grid_filter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"><sp/>+<sp/>out-&gt;label()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outMap[out-&gt;label()].add(mysample);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d36/classSH_1_1SampleGrid" kindref="compound" tooltip="This class implements a Sample located on the grid.">SH::SampleGrid</ref><sp/>*<sp/>mysample=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d36/classSH_1_1SampleGrid" kindref="compound" tooltip="This class implements a Sample located on the grid.">SH::SampleGrid</ref>((*sample)-&gt;name());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>mysample-&gt;<ref refid="dd/d5f/classSH_1_1Sample_1a898099e5c42a5602c43f64052f444e43" kindref="member">setMetaString</ref>(</highlight><highlight class="stringliteral">&quot;nc_grid&quot;</highlight><highlight class="normal">,<sp/>sampleOutDs);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>mysample-&gt;<ref refid="dd/d5f/classSH_1_1Sample_1a898099e5c42a5602c43f64052f444e43" kindref="member">setMetaString</ref>(</highlight><highlight class="stringliteral">&quot;nc_grid_filter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hist-output.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mysample-&gt;setMetaDouble(&quot;norigfiles&quot;,<sp/>nFilesInInputDS);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>outMap[</highlight><highlight class="stringliteral">&quot;hist&quot;</highlight><highlight class="normal">].add(mysample);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Print<sp/>the<sp/>created<sp/>dq2<sp/>datasets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>broken<sp/>as<sp/>Tasks<sp/>appends<sp/>extra<sp/>fluff<sp/>to<sp/>the<sp/>ds<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//outDSs.sort();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//outDSs.unique();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;The<sp/>following<sp/>dq2<sp/>output<sp/>datasets<sp/>will<sp/>be<sp/>created:&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//for<sp/>(list&lt;string&gt;::iterator<sp/>it=outDSs.begin();<sp/>it!=outDSs.end();<sp/>++it)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>*it<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//Print<sp/>link<sp/>to<sp/>Analysis<sp/>Task<sp/>Monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stringstream<sp/>url;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>url<sp/>&lt;&lt;<sp/>&quot;https://dashb-atlas-prodsys-prototype.cern.ch/templates/task-analysis/#user=default&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>url<sp/>&lt;&lt;<sp/>&quot;&amp;table=Mains&quot;;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>url<sp/>&lt;&lt;<sp/>&quot;&amp;p=1&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>url<sp/>&lt;&lt;<sp/>&quot;&amp;records=&quot;<sp/>&lt;&lt;<sp/>outDSs.size()<sp/>+<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>url<sp/>&lt;&lt;<sp/>&quot;&amp;activemenu=1&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>url<sp/>&lt;&lt;<sp/>&quot;&amp;timerange=lastMonth&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//url<sp/>&lt;&lt;<sp/>&quot;&amp;from=&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//url<sp/>&lt;&lt;<sp/>&quot;&amp;till=&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//url<sp/>&lt;&lt;<sp/>&quot;&amp;refresh=0&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>url<sp/>&lt;&lt;<sp/>&quot;&amp;pattern=&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>url<sp/>&lt;&lt;<sp/>container<sp/>&lt;&lt;<sp/>&quot;/+%7C%7C+&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//for<sp/>(list&lt;string&gt;::iterator<sp/>it=outDSs.begin();<sp/>it!=outDSs.end();<sp/>++it)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/>url<sp/>&lt;&lt;<sp/>*it<sp/>&lt;&lt;<sp/>&quot;/+%7C%7C+&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;You<sp/>can<sp/>follow<sp/>the<sp/>job<sp/>progress<sp/>using<sp/>the<sp/>Analysis<sp/>Task<sp/>Monitor:&quot;;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>url.str()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;(Please<sp/>note:<sp/>this<sp/>service<sp/>is<sp/>still<sp/>under<sp/>development!)\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Save<sp/>the<sp/>output<sp/>Sample<sp/>Handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::Job::outputIter</ref><sp/>output=job.outputBegin(),</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>end=job.outputEnd();<sp/>output<sp/>!=<sp/>end;<sp/>++output)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outMap[output-&gt;label()].fetch(job.<ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">sampleHandler</ref>());</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outMap[output-&gt;label()].save(jobDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/output-&quot;</highlight><highlight class="normal"><sp/>+<sp/>output-&gt;label());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>outMap[</highlight><highlight class="stringliteral">&quot;hist&quot;</highlight><highlight class="normal">].fetch(job.<ref refid="da/dbb/classEL_1_1Job_1aa02788adcdc922ea863ef9c28c7d5b5f" kindref="member">sampleHandler</ref>());</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>outMap[</highlight><highlight class="stringliteral">&quot;hist&quot;</highlight><highlight class="normal">].save(jobDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/output-hist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/dcf/classEL_1_1GridDriver_1a9b83a8257395062a860d4a2f2059beff" kindref="member">EL::GridDriver::doRetrieve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>RCU_READ_INVARIANT(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>hist_sh_dir<sp/><sp/><sp/><sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/output-hist&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>jobDownloadDir<sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/elg/download&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>dsContFile<sp/><sp/><sp/><sp/><sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/elg/outputDQ2container&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>EnvReqs<sp/>env;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>env.needGanga<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>env.needProxy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>checkEnvironment(env))<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//In<sp/>case<sp/>of<sp/>failure,<sp/>errors<sp/>are<sp/>already<sp/>reported<sp/>by<sp/>checkEnvironment()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="d1/d56/classSH_1_1SampleHandler" kindref="compound" tooltip="A class that manages a list of Sample objects.">SH::SampleHandler</ref><sp/>sh;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>sh.<ref refid="d1/d56/classSH_1_1SampleHandler_1aebbd3fa1f8bf12a43fc650ba63bce7b3" kindref="member" tooltip="load all the samples from the given directory">load</ref>(hist_sh_dir);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskId<sp/>=<sp/>readTaskID(location);<sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taskId<sp/>==<sp/>dummyIdCompleted)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Job<sp/>has<sp/>already<sp/>been<sp/>completed<sp/>and<sp/>output<sp/>downloaded&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taskId<sp/>==<sp/>dummyIdFailed)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>job<sp/>has<sp/>failed<sp/>permanently<sp/>and<sp/>will<sp/>not<sp/>be<sp/>tried<sp/>again&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>RCU_ASSERT(taskId<sp/>&gt;=<sp/>0);<sp/></highlight><highlight class="comment">//At<sp/>this<sp/>point,<sp/>taskId<sp/>must<sp/>be<sp/>that<sp/>of<sp/>a<sp/>real<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>stringstream<sp/>cmd;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>[x,y]<sp/>in<sp/>[[u,t]<sp/>for<sp/>t<sp/>in<sp/>tasks(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).transforms<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>u<sp/>in<sp/>t.units]:<sp/>print<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;elgunit:<sp/>%s<sp/>%s<sp/>%s\&quot;<sp/>%<sp/>(y.application.options,<sp/>x.name,<sp/>x.status)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>sendGangaCmd(cmd.str(),<sp/>out);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>ok)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>start<sp/>ganga<sp/>server&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitList<sp/>=<sp/>getStrValues(out,<sp/></highlight><highlight class="stringliteral">&quot;elgunit:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unitList.empty())<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>list<sp/>of<sp/>task<sp/>partitions<sp/>from<sp/>ganga&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Possibly<sp/>the<sp/>task<sp/>registry<sp/>has<sp/>been<sp/>lost<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;or<sp/>the<sp/>job<sp/>submission<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isIncomplete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//At<sp/>least<sp/>one<sp/>unit<sp/>is<sp/>not<sp/>completed<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRunning<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//At<sp/>least<sp/>one<sp/>unit<sp/>is<sp/>still<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFailed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//At<sp/>least<sp/>one<sp/>unit<sp/>is<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTotalUnits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTotalUnitsCompleted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTotalTransformsCompleted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d1/d56/classSH_1_1SampleHandler_1a88354b0d73fb29ae1dd766a733baab0e" kindref="member" tooltip="the iterator to use">SH::SampleHandler::iterator</ref><sp/>sample<sp/>=<sp/>sh.<ref refid="d1/d56/classSH_1_1SampleHandler_1afeaff9e0c8173cf162db26ee0a4d81f6" kindref="member" tooltip="the begin iterator to use">begin</ref>();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample<sp/>!=<sp/>sh.<ref refid="d1/d56/classSH_1_1SampleHandler_1a6c039cba7cf97bbb90e98d631a9ca6cb" kindref="member" tooltip="the end iterator to use">end</ref>();<sp/>++sample)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mergedHistFile<sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/hist-&quot;</highlight><highlight class="normal"><sp/>+<sp/>(*sample)-&gt;name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>transformCompleted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filesToMerge;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>istringstream<sp/>units(unitList);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nUnits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(units,<sp/>entry))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sampleName,<sp/>unitName,<sp/>unitStatus;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>istringstream<sp/>s(entry);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&gt;&gt;<sp/>sampleName;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&gt;&gt;<sp/>unitName;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&gt;&gt;<sp/>unitStatus;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*sample)-&gt;name()<sp/>!=<sp/>sampleName)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nUnits++;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unitCompleted<sp/>=<sp/>(unitStatus<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unitFailed<sp/><sp/><sp/><sp/>=<sp/>(unitStatus<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unitBad<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(unitStatus<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bad&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nTotalUnits++;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unitCompleted)<sp/>nTotalUnitsCompleted++;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unitFailed<sp/>||<sp/>unitBad)<sp/>isFailed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>unitCompleted<sp/>&amp;&amp;<sp/>not<sp/>unitFailed<sp/>&amp;&amp;<sp/>not<sp/>unitBad)<sp/>isRunning=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>unitCompleted)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>isIncomplete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>transformCompleted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitDir<sp/>=<sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>jobDownloadDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>(*sample)-&gt;name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>unitName;<sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>findCmd<sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;find<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>unitDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-name<sp/>\&quot;*.hist-output.root*\&quot;<sp/>|<sp/><sp/>tr<sp/>&apos;\n&apos;<sp/>&apos;<sp/>&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filesToMerge<sp/>+=<sp/>gSystem-&gt;GetFromPipe(findCmd.c_str());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transformCompleted)<sp/>nTotalTransformsCompleted++;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nUnits<sp/>==<sp/>0)<sp/>transformCompleted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transformCompleted)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;[<sp/>-f<sp/>%s<sp/>]&quot;</highlight><highlight class="normal">,<sp/>mergedHistFile.c_str())))<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filesToMerge.empty())<sp/>{<sp/></highlight><highlight class="comment">//Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>files<sp/>to<sp/>merge\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ganga<sp/>response<sp/>was<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>out<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stopping<sp/>here&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>istringstream<sp/>iss(filesToMerge);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;string&gt;<sp/>input((istream_iterator&lt;string&gt;(iss)),<sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>istream_iterator&lt;string&gt;());<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d83/namespaceRCU_1ad6b11c00605f529a1cde4fdc548dc128" kindref="member">RCU::hadd</ref>(mergedHistFile.c_str(),<sp/>vector&lt;string&gt;(input.begin(),<sp/>input.end()));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;rm<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>filesToMerge.c_str()));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>nTotalTransformsCompleted<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sh.<ref refid="d1/d56/classSH_1_1SampleHandler_1a5b6a3c927212a29355482917c64793a0" kindref="member" tooltip="the number of samples contained">size</ref>()<sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>samples<sp/>processed<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nTotalUnitsCompleted<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>nTotalUnits<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>jobs<sp/>completed)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isRunning)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//At<sp/>this<sp/>point,<sp/>task<sp/>should<sp/>be<sp/>either<sp/>completed<sp/>or<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>RCU_ASSERT(isFailed<sp/>==<sp/>isIncomplete);<sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isFailed)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>job<sp/>has<sp/>failed<sp/>and<sp/>has<sp/>reached<sp/>maximum<sp/>number<sp/>of<sp/>retries.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;It<sp/>will<sp/>not<sp/>be<sp/>tried<sp/>again.<sp/>Sorry.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>stringstream<sp/>removeCmd;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>removeCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tasks(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).remove(remove_jobs=True)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendGangaCmd(removeCmd.str()))<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>writeTaskID(location,<sp/>isFailed<sp/>?<sp/>dummyIdFailed<sp/>:<sp/>dummyIdCompleted);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>The<sp/>job<sp/>has<sp/>stopped<sp/>running<sp/>but<sp/>could<sp/>not<sp/>be<sp/>removed<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;from<sp/>ganga.<sp/>Please<sp/>try<sp/>calling<sp/>retrieve()<sp/>again<sp/>later<sp/>to<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;clean<sp/>up<sp/>the<sp/>job<sp/>records.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>env.needProxy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>env.needDQ2<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkEnvironment(env))<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>container;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>f(dsContFile.c_str());</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&gt;&gt;<sp/>container;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>following<sp/>DQ2<sp/>containers<sp/>have<sp/>been<sp/>created:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>gSystem-&gt;Exec((</highlight><highlight class="stringliteral">&quot;dq2-ls<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.substr(0,container.length()-1)<sp/>+</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.*/\&quot;&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EL::GridDriver::status(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>hist_sh_dir<sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/output-hist&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>dsContFile<sp/><sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/elg/outputDQ2container&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="d1/d56/classSH_1_1SampleHandler" kindref="compound" tooltip="A class that manages a list of Sample objects.">SH::SampleHandler</ref><sp/>sh;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>sh.<ref refid="d1/d56/classSH_1_1SampleHandler_1aebbd3fa1f8bf12a43fc650ba63bce7b3" kindref="member" tooltip="load all the samples from the given directory">load</ref>(hist_sh_dir);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>EnvReqs<sp/>env;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>env.needGanga<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>env.needProxy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>checkEnvironment(env))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskId<sp/>=<sp/>readTaskID(location);<sp/></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taskId<sp/>==<sp/>dummyIdCompleted)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Job<sp/>is<sp/>completed<sp/>completed<sp/>and<sp/>output<sp/>downloaded&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taskId<sp/>==<sp/>dummyIdFailed)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>job<sp/>has<sp/>failed<sp/>permanently<sp/>and<sp/>will<sp/>not<sp/>be<sp/>tried<sp/>again&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>RCU_ASSERT(taskId<sp/>&gt;=<sp/>0);<sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>stringstream<sp/>cmd;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>[x,y]<sp/>in<sp/>[[u,t]<sp/>for<sp/>t<sp/>in<sp/>tasks(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).transforms<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>u<sp/>in<sp/>t.units]:<sp/>print<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;unit:<sp/>%s<sp/>%s\&quot;<sp/>%<sp/>(x.name,<sp/>x.status)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>sendGangaCmd(cmd.str(),<sp/>out);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>ok)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>start<sp/>ganga<sp/>server&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitList<sp/>=<sp/>getStrValues(out,<sp/></highlight><highlight class="stringliteral">&quot;unit:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unitList.empty())<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>list<sp/>of<sp/>task<sp/>partitions<sp/>from<sp/>ganga&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Possibly<sp/>the<sp/>task<sp/>registry<sp/>has<sp/>been<sp/>lost&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/>unitList;</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EL::GridDriver::status()<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>std::istringstream<sp/>tasks(listActive());</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>std::string<sp/>location;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(tasks,<sp/>location))<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>location<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>status(location);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EL::GridDriver::kill(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>EnvReqs<sp/>env;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>env.needGanga<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>env.needProxy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>checkEnvironment(env))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>removeCmd;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskId<sp/>=<sp/>readTaskID(location);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taskId<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>removeCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tasks(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).pause()&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>removeCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tasks(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;).remove(remove_jobs=True)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendGangaCmd(removeCmd.str()))<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writeTaskID(location,<sp/>dummyIdFailed);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Could<sp/>not<sp/>remove<sp/>the<sp/>job<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>location<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taskId<sp/>==<sp/>dummyIdCompleted)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>job<sp/>is<sp/>already<sp/>completed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EL::GridDriver::killAll()<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>std::istringstream<sp/>tasks(listActive());</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>std::string<sp/>location;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Killing<sp/>jobs:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(tasks,<sp/>location))<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>location<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>kill(location);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal">std::string<sp/>EL::GridDriver::listActive()<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>std::string<sp/>gangaMsg;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>sendGangaCmd(</highlight><highlight class="stringliteral">&quot;for<sp/>t<sp/>in<sp/>tasks:<sp/>print<sp/>t.comment&quot;</highlight><highlight class="normal">,<sp/>gangaMsg);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getStrValues(gangaMsg,<sp/></highlight><highlight class="stringliteral">&quot;location:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EL::GridDriver::startServer()<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sendGangaCmd(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EL::GridDriver::stopServer()<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>EnvReqs<sp/>env;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>env.needGanga<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>checkEnvironment(env))<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>up<sp/>ganga\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>gangaBin<sp/>=<sp/>gSystem-&gt;GetFromPipe(</highlight><highlight class="stringliteral">&quot;command<sp/>-v<sp/>ganga&quot;</highlight><highlight class="normal">).Data();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>gangaInstall<sp/>=<sp/>gangaBin.substr(0,<sp/>gangaBin.find(</highlight><highlight class="stringliteral">&quot;/bin/ganga&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>gangaPythonDir<sp/>=<sp/>gangaInstall<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/python&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>cmd;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;export<sp/>PYTHONPATH=$PYTHONPATH:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>gangaPythonDir<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;python<sp/>&lt;&lt;<sp/>EOL\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;from<sp/>GangaService.Lib.ServiceAPI.ServiceAPI<sp/>import<sp/>GangaService\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gs<sp/>=<sp/>GangaService()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gs.gangadir<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gangaDir<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gs.killServer()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EOL\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gSystem-&gt;Exec(cmd.str().c_str())<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EL::GridDriver::reset()<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;rm<sp/>-rf<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>gangaDir));</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">EL<sp/>{<sp/></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>functions<sp/>in<sp/>this<sp/>namespace<sp/>could<sp/>be<sp/>split<sp/>into<sp/>a<sp/>separate<sp/>&quot;utilities&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//module.<sp/>In<sp/>the<sp/>interest<sp/>of<sp/>one<sp/>day<sp/>merging<sp/>this<sp/>package<sp/>with<sp/>the<sp/>main<sp/>EL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//package,<sp/>they<sp/>are<sp/>kept<sp/>here<sp/>to<sp/>keep<sp/>the<sp/>number<sp/>of<sp/>EventLoopGrid<sp/>related<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//files<sp/>to<sp/>a<sp/>minimum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/><sp/>//TODO:<sp/>This<sp/>function<sp/>is<sp/>currently<sp/>not<sp/>used<sp/>as<sp/>the<sp/>sample<sp/>meta<sp/>data</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/><sp/>//are<sp/>not<sp/>filled<sp/>correctly<sp/>during<sp/>submission</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/><sp/>bool<sp/>readJobInfo(const<sp/>std::string<sp/>location,</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><sp/><sp/>&amp;nEventsTotal,</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><sp/><sp/>&amp;nFilesTotal,</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>&amp;realTimeTotal,</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>&amp;cpuTimeTotal,</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>&amp;eventsPerRealSecondTotal,<sp/></highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>&amp;eventsPerCpuSecondTotal,</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/><sp/><sp/><sp/>printInfo)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>namespace<sp/>std;</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TFile<sp/>f(location.c_str());</highlight></codeline>
<codeline lineno="775"><highlight class="comment"></highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(f.IsZombie()<sp/>||<sp/>not<sp/>f.IsOpen())<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;Failed<sp/>to<sp/>oen<sp/>file<sp/>&quot;<sp/>&lt;&lt;<sp/>location<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="comment"></highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TTree<sp/>*tree<sp/>=<sp/>(TTree*)f.Get(&quot;EventLoopGridJobInfo&quot;);</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tree<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;Could<sp/>not<sp/>read<sp/>tree<sp/>&apos;EventLoopGridJobInfo&apos;<sp/>&quot;;</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;in<sp/>file<sp/>&quot;<sp/>&lt;&lt;<sp/>location<sp/>&lt;&lt;<sp/>&quot;.<sp/>&quot;;</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;File<sp/>is<sp/>corrupt<sp/>or<sp/>is<sp/>not<sp/>an<sp/>EventLoopGrid<sp/>histogram<sp/>collection&quot;;</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="comment"></highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>nEventsTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>nFilesTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>realTimeTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cpuTimeTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>eventsPerRealSecondTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>eventsPerCpuSecondTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><sp/><sp/>nEvents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><sp/><sp/>nFiles<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>realTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>cpuTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>eventsPerRealSecond<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>eventsPerCpuSecond<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="804"><highlight class="comment"></highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TBranch<sp/>*bnEvents<sp/>=<sp/>tree-&gt;GetBranch(&quot;eventsRead&quot;);</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TBranch<sp/>*bnFiles<sp/>=<sp/>tree-&gt;GetBranch(&quot;filesRead&quot;);</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TBranch<sp/>*brealTime<sp/>=<sp/>tree-&gt;GetBranch(&quot;loopWallTime&quot;);</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TBranch<sp/>*bcpuTime<sp/>=<sp/>tree-&gt;GetBranch(&quot;loopCpuTime&quot;);</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TBranch<sp/>*beventsPerRealSecond<sp/>=<sp/>tree-&gt;GetBranch(&quot;eventsPerWallSec&quot;);</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TBranch<sp/>*beventsPerCpuSecond<sp/>=<sp/>tree-&gt;GetBranch(&quot;eventsPerCpuSec&quot;);</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>bnEvents-&gt;SetAddress(&amp;nEvents);</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>bnFiles-&gt;SetAddress(&amp;nFiles);</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>brealTime-&gt;SetAddress(&amp;realTime);</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>bcpuTime-&gt;SetAddress(&amp;cpuTime);</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>beventsPerRealSecond-&gt;SetAddress(&amp;eventsPerRealSecond);</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>beventsPerCpuSecond-&gt;SetAddress(&amp;eventsPerCpuSecond);</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(printInfo)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Job<sp/>information<sp/>for<sp/>file<sp/>&quot;<sp/>&lt;&lt;<sp/>location<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="comment"></highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(Int_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tree-&gt;GetEntriesFast();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/>bnEvents-&gt;GetEvent(i);</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/>bnFiles-&gt;GetEvent(i);</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/>brealTime-&gt;GetEvent(i);</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/><sp/><sp/><sp/>bcpuTime-&gt;GetEvent(i);</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/><sp/><sp/><sp/>beventsPerRealSecond-&gt;GetEvent(i);</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/>beventsPerCpuSecond-&gt;GetEvent(i);</highlight></codeline>
<codeline lineno="830"><highlight class="comment"></highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(printInfo)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>Job<sp/>&quot;<sp/>&lt;&lt;<sp/>setw(3)<sp/>&lt;&lt;<sp/>setfill(&apos;0&apos;)<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>Input<sp/>files<sp/>read:<sp/>&quot;<sp/>&lt;&lt;<sp/>nFiles;</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>Events<sp/>read:<sp/>&quot;<sp/>&lt;&lt;<sp/>nEvents;</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>Loop<sp/>real<sp/>time:<sp/>&quot;<sp/>&lt;&lt;<sp/>realTime;</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>Loop<sp/>CPU<sp/>time:<sp/>&quot;<sp/>&lt;&lt;<sp/>cpuTime;</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>events<sp/>per<sp/>real<sp/>second:<sp/>&quot;<sp/>&lt;&lt;<sp/>eventsPerRealSecond;</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>events<sp/>per<sp/>cpu<sp/>second:<sp/>&quot;<sp/>&lt;&lt;<sp/>eventsPerCpuSecond;</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="comment"></highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/>nEventsTotal<sp/>+=<sp/>nEvents;</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/>nFilesTotal<sp/>+=<sp/>nFiles;</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/>realTimeTotal<sp/>+=<sp/>realTime;</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/>cpuTimeTotal<sp/>+=<sp/>cpuTimeTotal;</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>eventsPerRealSecondTotal<sp/></highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/><sp/><sp/><sp/>=<sp/>nEventsTotal<sp/>/<sp/>(realTimeTotal<sp/>!=<sp/>0<sp/>?<sp/>realTimeTotal<sp/>:<sp/>1.);</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>eventsPerCpuSecondTotal<sp/></highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/>=<sp/>nEventsTotal<sp/>/<sp/>(cpuTimeTotal<sp/>!=<sp/>0<sp/>?<sp/>cpuTimeTotal<sp/>:<sp/>1.);</highlight></codeline>
<codeline lineno="852"><highlight class="comment"></highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>f.Close();</highlight></codeline>
<codeline lineno="854"><highlight class="comment"></highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/><sp/>bool<sp/>readJobInfo(const<sp/>std::string<sp/>location,<sp/>bool<sp/>printInfo)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>nEventsTotal<sp/>=<sp/>0,<sp/>nFilesTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>realTimeTotal<sp/>=<sp/>0,<sp/>cpuTimeTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>eventsPerRealSecondTotal<sp/>=<sp/>0,<sp/>eventsPerCpuSecondTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>readJobInfo(location,<sp/><sp/>nEventsTotal,<sp/>nFilesTotal,<sp/>realTimeTotal,<sp/></highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpuTimeTotal,<sp/>eventsPerRealSecondTotal,<sp/></highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventsPerCpuSecondTotal,<sp/>printInfo);</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="871"><highlight class="comment"><sp/><sp/><sp/><sp/>bool<sp/>readJobInfo(const<sp/>std::string<sp/>location,</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>&amp;nEventsTotal,<sp/></highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>&amp;nFilesTotal,</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/><sp/>printInfo)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>realTimeTotal<sp/>=<sp/>0,<sp/>cpuTimeTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>eventsPerRealSecondTotal<sp/>=<sp/>0,<sp/>eventsPerCpuSecondTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>readJobInfo(location,<sp/><sp/>nEventsTotal,<sp/>nFilesTotal,<sp/>realTimeTotal,<sp/></highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpuTimeTotal,<sp/>eventsPerRealSecondTotal,<sp/></highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventsPerCpuSecondTotal,<sp/>printInfo);</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>function<sp/>extracts<sp/>substrings<sp/>from<sp/>a<sp/>text,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>is<sp/>used<sp/>to<sp/>parse<sp/>the<sp/>output<sp/>from<sp/>GangaService.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Returns:<sp/>&quot;value&quot;<sp/>from<sp/>every<sp/>substring<sp/>matching<sp/>&quot;key:<sp/>value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>getStrValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;inLines,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;key)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>out;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>res(inLines);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TObjArray<sp/>*lines<sp/>=<sp/>res.Tokenize(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIter<sp/>itr(lines);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TObject<sp/>*obj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((obj<sp/>=<sp/>itr()))<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>l<sp/>=<sp/>((TObjString*)obj)-&gt;String();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l.Index(key.c_str())<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>val<sp/>=<sp/>l(l.Index(key.c_str())+key.length(),<sp/>l.Length());</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>val.Data();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lines;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>function<sp/>takes<sp/>a<sp/>string<sp/>like<sp/>&quot;var1<sp/>var2<sp/>var3&quot;<sp/>and<sp/>formats<sp/>it<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//python<sp/>list<sp/>of<sp/>strings.<sp/>It<sp/>is<sp/>used<sp/>in<sp/>the<sp/>creation<sp/>of<sp/>python<sp/>commands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Returns:<sp/>A<sp/>string<sp/>of<sp/>format<sp/>&quot;[&apos;var1&apos;,&apos;var2&apos;,&apos;var3&apos;]&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>pyList(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;list)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>s((</highlight><highlight class="stringliteral">&quot;[&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>list<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;]&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.ReplaceAll(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.ReplaceAll(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&apos;,&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.Data();</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>function<sp/>performs<sp/>a<sp/>number<sp/>of<sp/>checks<sp/>on<sp/>the<sp/>environment<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//running<sp/>in.<sp/>If<sp/>necessary,<sp/>it<sp/>tries<sp/>to<sp/>set<sp/>up<sp/>the<sp/>requested<sp/>components.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkEnvironment(EnvReqs<sp/>env)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env.needProxy)<sp/>env.needPanda<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env.needRootCore<sp/>&amp;&amp;<sp/>not<sp/>gSystem-&gt;Getenv(</highlight><highlight class="stringliteral">&quot;ROOTCOREBIN&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Must<sp/>set<sp/>up<sp/>RootCore<sp/>first&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env.needPanda<sp/>&amp;=<sp/>bool(gSystem-&gt;Exec(</highlight><highlight class="stringliteral">&quot;command<sp/>-v<sp/>prun<sp/>&gt;/dev/null&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env.needGanga<sp/>&amp;=<sp/>bool(gSystem-&gt;Exec(</highlight><highlight class="stringliteral">&quot;command<sp/>-v<sp/>ganga<sp/>&gt;/dev/null&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needALRB<sp/>=<sp/>(env.needPanda<sp/>||<sp/>env.needGanga);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>needALRB<sp/>&amp;=<sp/>(<sp/>!<sp/>gSystem-&gt;Getenv(</highlight><highlight class="stringliteral">&quot;ATLAS_LOCAL_ROOT_BASE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needALRB)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;[<sp/>-d<sp/>%s<sp/>]&quot;</highlight><highlight class="normal">,<sp/>cvmfsATLASLocalRootBase))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gSystem-&gt;Setenv(</highlight><highlight class="stringliteral">&quot;ATLAS_LOCAL_ROOT_BASE&quot;</highlight><highlight class="normal">,<sp/>cvmfsATLASLocalRootBase);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>variable<sp/>ATLASLocalRootBase<sp/>is<sp/>not<sp/>set<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;and<sp/>CVMFS<sp/>ATLASLocalRootBase<sp/>is<sp/>not<sp/>available<sp/>-<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>set<sp/>up<sp/>ATLAS<sp/>software<sp/>on<sp/>this<sp/>computer.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env.needPanda<sp/>||<sp/>env.needGanga)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>cmd;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>&gt;<sp/>__env1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>&lt;&lt;<sp/>shAtlasLocalSetup<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&gt;<sp/>/dev/null<sp/>2&gt;&amp;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env.needPanda)<sp/></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;localSetupPandaClient<sp/>--noAthenaCheck<sp/>&gt;/dev/null<sp/>2&gt;&amp;1&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env.needGanga)<sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;localSetupGanga<sp/>&gt;<sp/>/dev/null<sp/>2&gt;&amp;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env.needDQ2)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;localSetupDQ2Client<sp/>--quiet&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>&gt;<sp/>__env2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;grep<sp/>-v<sp/>-Fx<sp/>-f<sp/>__env1<sp/>__env2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;rm<sp/>-f<sp/>__env1<sp/>__env2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>env<sp/>=<sp/>gSystem-&gt;GetFromPipe(cmd.str().c_str()).Data();</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>istringstream<sp/>ssEnv(env);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getline(ssEnv,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>s(line.c_str());</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gSystem-&gt;Setenv(TString(s(0,s.Index(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">))).Data(),<sp/><sp/></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString(s(s.Index(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">)+1,<sp/>s.Length())).Data());</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>setting<sp/>up<sp/>ATLAS<sp/>software,<sp/>see<sp/>log<sp/>for<sp/>details&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gSystem-&gt;Exec(</highlight><highlight class="stringliteral">&quot;rm<sp/>-f<sp/>__env1<sp/>__env2&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env.needPanda<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(gSystem-&gt;Exec(</highlight><highlight class="stringliteral">&quot;command<sp/>-v<sp/>prun&gt;/dev/null&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>setting<sp/>up<sp/>panda!!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retry<sp/>=<sp/>0;<sp/>env.needProxy<sp/>&amp;&amp;<sp/>retry<sp/>&lt;<sp/>3;<sp/>retry++)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pyCheckProxy[]<sp/>=<sp/></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;from<sp/>pandatools<sp/>import<sp/>PsubUtils;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PsubUtils.checkGridProxy(&apos;&apos;,False,False,None);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>env.needProxy<sp/>&amp;=<sp/></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bool(gSystem-&gt;Exec(Form(</highlight><highlight class="stringliteral">&quot;python<sp/>-c<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,<sp/>pyCheckProxy)));<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env.needProxy)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>to<sp/>set<sp/>up<sp/>grid<sp/>proxy&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>function<sp/>returns<sp/>the<sp/>users<sp/>grid<sp/>nickname.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>is<sp/>the<sp/>callers<sp/>responsibility<sp/>to<sp/>ensure<sp/>that<sp/>panda<sp/>tools<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>voms<sp/>proxy<sp/>are<sp/>available.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>getNickname()<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pyGetNickName[]<sp/>=</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;from<sp/>pandatools<sp/>import<sp/>PsubUtils;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;print<sp/>PsubUtils.getNickname();&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gSystem-&gt;GetFromPipe(Form(</highlight><highlight class="stringliteral">&quot;python<sp/>-c<sp/>\&quot;%s\&quot;<sp/>2&gt;/dev/null&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyGetNickName)).Data();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>function<sp/>sends<sp/>a<sp/>command<sp/>to<sp/>the<sp/>ganga<sp/>service.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Returns:<sp/>true<sp/>if<sp/>the<sp/>command<sp/>was<sp/>sent<sp/>succesfully,<sp/>otherwise<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendGangaCmd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;cmd,<sp/>std::string<sp/>&amp;out)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvReqs<sp/>env;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env.needGanga<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env.needProxy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>checkEnvironment(env))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>gangaCfg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RUNTIME_PATH=GangaAtlas:GangaPanda&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>gangaArg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;-o[Configuration]&quot;</highlight><highlight class="normal"><sp/>+<sp/>gangaCfg;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>gangaBin<sp/>=<sp/>gSystem-&gt;GetFromPipe(</highlight><highlight class="stringliteral">&quot;command<sp/>-v<sp/>ganga&quot;</highlight><highlight class="normal">).Data();</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>gangaInstall<sp/>=<sp/>gangaBin.substr(0,<sp/>gangaBin.find(</highlight><highlight class="stringliteral">&quot;/bin/ganga&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>gangaPythonDir<sp/>=<sp/>gangaInstall<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/python&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>sendCmd;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sendCmd</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;export<sp/>PYTHONPATH=$PYTHONPATH:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>gangaPythonDir<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;python<sp/>&lt;&lt;<sp/>EOL\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;from<sp/>GangaService.Lib.ServiceAPI.ServiceAPI<sp/>import<sp/>GangaService\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>time\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gs<sp/>=<sp/>GangaService()\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gs.gangadir<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gangaDir<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gs.gangacmd<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gangaBin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gangaArg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;gs.timeout<sp/>=<sp/>24*60\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>not<sp/>gs.startServer():\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>gs.killServer()\n&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>if<sp/>not<sp/>gs.startServer():\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(30)\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>gs.startServer():\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gs.killServer()\n&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(60)\n&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>gs.startServer():\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>\&quot;Failed<sp/>to<sp/>start<sp/>server\&quot;\n&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>gs.sendCmd(\&quot;\&quot;\&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>cmd</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;\&quot;\&quot;)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EOL\n&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>gSystem-&gt;GetFromPipe(sendCmd.str().c_str()).Data();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out.find(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>server&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>GridDriver::gangaLogFile.empty())<sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofstream<sp/>f(GridDriver::gangaLogFile.c_str(),<sp/>ios::out<sp/>|<sp/>ios::app);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;COMMAND:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>cmd<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RESPONSE:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>out<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>istringstream<sp/>stream(out);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(stream,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.find(</highlight><highlight class="stringliteral">&quot;:<sp/>ERROR&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos)<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>line<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendGangaCmd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;cmd)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>out;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sendGangaCmd(cmd,<sp/>out);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>function<sp/>generates<sp/>python<sp/>code<sp/>to<sp/>create<sp/>a<sp/>Ganga<sp/>Transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>gangaTrfCmd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GangaTrfDef<sp/>&amp;args,<sp/></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GridDriver<sp/>&amp;driver)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>!=<sp/>args.sampleName);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>!=<sp/>args.inDS);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>!=<sp/>args.outDS);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>!=<sp/>args.inputSdBox);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>!=<sp/>args.outputFiles);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>!=<sp/>args.downloadDir);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>gangaCmd;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf<sp/>=<sp/>AtlasTransform()&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.name<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>args.outDS.substr(args.outDS.find(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>5)<sp/>+<sp/>1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t.appendTransform(trf)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*args.inDS.rbegin()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.initializeFromContainer(&apos;&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>args.inDS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.initializeFromDatasets(&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pyList(args.inDS)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>u<sp/>in<sp/>trf.units:<sp/>u.inputdata.names_pattern<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pyList(args.inputFiles)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.setRunLimit(&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>driver.nMinorRetries<sp/>+<sp/>driver.nMajorRetries<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.setMinorRunLimit(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>driver.nMinorRetries<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.setMajorRunLimit(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>driver.nMajorRetries<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.application<sp/>=<sp/>app&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.application.options<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args.sampleName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.outputdata<sp/>=<sp/>DQ2OutputDataset()&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.outputdata.datasetname<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args.outDS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.outputdata.outputdata<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pyList(args.outputFiles)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.copy_output<sp/>=<sp/>DQ2OutputDataset()&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.copy_output.datasetname<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args.outDS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.copy_output.outputdata<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pyList(args.outputFiles)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend<sp/>=<sp/>Jedi()&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.rootver<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>args.rootVer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.local_location<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>args.downloadDir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>args.sampleName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.include_file_mask<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pyList(args.downloadMask)<sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>driver.nFiles)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>u<sp/>in<sp/>trf.units:<sp/>u.inputdata.number_of_files<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>driver.nFiles<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>driver.nFilesPerJob)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.files_per_job<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>driver.nFilesPerJob<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>driver.nGBPerJob)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.MB_per_job<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)(driver.nGBPerJob*1000)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>driver.nJobs)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.subjobs_per_unit<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>driver.nJobs<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>driver.destSE.empty())</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.outputdata.location<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>driver.destSE<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(not<sp/>driver.site.empty())<sp/><sp/></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.site<sp/>=<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>driver.site<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(0<sp/>&lt;<sp/>driver.memory)<sp/></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.memory<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>driver.memory<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>driver.maxCpuCount)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.cputime<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>driver.maxCpuCount<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(driver.express)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.express<sp/>=<sp/>True&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(driver.mergeOutput)<sp/><sp/></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.enableMerge<sp/>=<sp/>True&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.configMerge[&apos;exec&apos;]<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;elg_merge<sp/>jobdef.root<sp/>%OUT<sp/>%IN&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>driver.excludedSite.empty())<sp/><sp/></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.excluded_sites<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pyList(driver.excludedSite)<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>driver.cloud.empty())<sp/><sp/></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>gangaCmd<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.cloud<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>driver.cloud<sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;trf.backend.requirements.anyCloud<sp/>=<sp/>False&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gangaCmd.str();</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readTaskID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE(not<sp/>location.empty());</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>taskIdFile<sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/elg/taskID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskId<sp/>=<sp/>-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>f;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>f.open(taskIdFile.c_str());</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&gt;&gt;<sp/>taskId;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>read<sp/>taskID<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>taskIdFile<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>taskId;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeTaskID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskId)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_REQUIRE(not<sp/>location.empty());</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>taskIdFile<sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/elg/taskID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>f(taskIdFile.c_str());</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/>taskId;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}<sp/></highlight><highlight class="comment">//namespace<sp/>EL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment">//Method<sp/>stubs<sp/>for<sp/>obsolete<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EL::GridDriver::gather(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>location)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>RCU_READ_INVARIANT(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GridDriver::gather():<sp/>This<sp/>function<sp/>is<sp/>obsolete<sp/>and<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;will<sp/>be<sp/>removed<sp/>in<sp/>a<sp/>future<sp/>version.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>use<sp/>retrieve()<sp/>or<sp/>wait()<sp/>instead.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><ref refid="de/d84/classEL_1_1PrunDriver_1ac5cb84f7e40a813f3412b95e7b6b9a71" kindref="member">doRetrieve</ref>(location);<sp/></highlight></codeline>
<codeline lineno="1197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><ref refid="d1/d36/classSH_1_1SampleGrid" kindref="compound" tooltip="This class implements a Sample located on the grid.">SH::SampleGrid</ref>*<sp/>EL::GridDriver::createSampleFromDQ2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dataset)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="1200"><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>RCU_READ_INVARIANT(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GridDriver::createSampleFromDQ2():<sp/>This<sp/>function<sp/>is<sp/>obsolete<sp/>and<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;will<sp/>be<sp/>removed<sp/>in<sp/>a<sp/>future<sp/>version.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>use<sp/>SH::scanDQ2()<sp/>instead.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>std::string<sp/>name=dataset;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos=0;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((pos=name.find(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>pos))<sp/>!=<sp/>std::string::npos)<sp/></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>name.replace(pos++,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><ref refid="d1/d36/classSH_1_1SampleGrid" kindref="compound" tooltip="This class implements a Sample located on the grid.">SH::SampleGrid</ref><sp/>*<sp/>mysample=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d36/classSH_1_1SampleGrid" kindref="compound" tooltip="This class implements a Sample located on the grid.">SH::SampleGrid</ref>(name);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>mysample-&gt;<ref refid="dd/d5f/classSH_1_1Sample_1a898099e5c42a5602c43f64052f444e43" kindref="member">setMetaString</ref>(</highlight><highlight class="stringliteral">&quot;nc_grid&quot;</highlight><highlight class="normal">,<sp/>dataset);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>mysample-&gt;<ref refid="dd/d5f/classSH_1_1Sample_1a898099e5c42a5602c43f64052f444e43" kindref="member">setMetaString</ref>(</highlight><highlight class="stringliteral">&quot;nc_grid_filter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mysample;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopGrid/Root/GridDriver.cxx"/>
  </compounddef>
</doxygen>
