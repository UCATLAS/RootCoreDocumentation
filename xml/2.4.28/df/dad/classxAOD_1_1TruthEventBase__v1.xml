<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/dad/classxAOD_1_1TruthEventBase__v1" kind="class" prot="public">
    <compoundname>xAOD::TruthEventBase_v1</compoundname>
    <basecompoundref refid="dc/db0/classSG_1_1AuxElement" prot="public" virt="non-virtual">SG::AuxElement</basecompoundref>
    <derivedcompoundref refid="d7/d81/classxAOD_1_1TruthEvent__v1" prot="public" virt="non-virtual">xAOD::TruthEvent_v1</derivedcompoundref>
    <derivedcompoundref refid="d1/d99/classxAOD_1_1TruthPileupEvent__v1" prot="public" virt="non-virtual">xAOD::TruthPileupEvent_v1</derivedcompoundref>
    <includes refid="dd/dbe/TruthEventBase__v1_8h" local="no">TruthEventBase_v1.h</includes>
      <sectiondef kind="user-defined">
      <header>Access to all the particles associated with the event</header>
      <description><para><anchor id="_1amgrpae1d721a9742a891165eb963a5463abc"/> </para></description>
      <memberdef kind="typedef" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a104965a27706b93a43a2b1807f3fd242" prot="public" static="no">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TruthParticleContainer</ref> &gt;</type>
        <definition>typedef ElementLink&lt; TruthParticleContainer &gt; xAOD::TruthEventBase_v1::TruthParticleLink_t</definition>
        <argsstring></argsstring>
        <name>TruthParticleLink_t</name>
        <reimplementedby refid="d7/d81/classxAOD_1_1TruthEvent__v1_1a21f24f31ce6827dfd3b70dbb326c31db">TruthParticleLink_t</reimplementedby>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> of a single truth particle link. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/dad/classxAOD_1_1TruthEventBase__v1_1ab6e95532cf7a69a29b9040e4d3c0ccc3" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">TruthParticleLink_t</ref> &gt;</type>
        <definition>typedef std::vector&lt; TruthParticleLink_t &gt; xAOD::TruthEventBase_v1::TruthParticleLinks_t</definition>
        <argsstring></argsstring>
        <name>TruthParticleLinks_t</name>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> of the truth particle links vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a3c7a89c5464ad590612e0a1199c76042" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="df/dad/classxAOD_1_1TruthEventBase__v1_1ab6e95532cf7a69a29b9040e4d3c0ccc3" kindref="member">TruthParticleLinks_t</ref> &amp;</type>
        <definition>const TruthParticleLinks_t&amp; xAOD::TruthEventBase_v1::truthParticleLinks</definition>
        <argsstring>() const </argsstring>
        <name>truthParticleLinks</name>
        <briefdescription>
<para>Get all the truth particles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1abab5e494fefdb7c33b47fca46854ccc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TruthEventBase_v1::setTruthParticleLinks</definition>
        <argsstring>(const TruthParticleLinks_t &amp;plinks)</argsstring>
        <name>setTruthParticleLinks</name>
        <param>
          <type>const <ref refid="df/dad/classxAOD_1_1TruthEventBase__v1_1ab6e95532cf7a69a29b9040e4d3c0ccc3" kindref="member">TruthParticleLinks_t</ref> &amp;</type>
          <declname>plinks</declname>
        </param>
        <briefdescription>
<para>Set all the truth particles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1aa26fc9a648c11dc156d8f7176c025ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xAOD::TruthEventBase_v1::nTruthParticles</definition>
        <argsstring>() const </argsstring>
        <name>nTruthParticles</name>
        <briefdescription>
<para>Get the number of truth particles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a031ead6ccefafe26873d9964d9ca2e25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">TruthParticleLink_t</ref> &amp;</type>
        <definition>const TruthEventBase_v1::TruthParticleLink_t &amp; xAOD::TruthEventBase_v1::truthParticleLink</definition>
        <argsstring>(size_t index) const </argsstring>
        <name>truthParticleLink</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the link to one of the truth particles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1ace892b3ad4e83f662b65293060ba8a7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">TruthParticle</ref> *</type>
        <definition>const TruthParticle * xAOD::TruthEventBase_v1::truthParticle</definition>
        <argsstring>(size_t index) const </argsstring>
        <name>truthParticle</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get a pointer to one of the truth particles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="46" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1adb2b79219d647a66ae0e43405cbfc641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TruthEventBase_v1::addTruthParticleLink</definition>
        <argsstring>(const TruthParticleLink_t &amp;plink)</argsstring>
        <name>addTruthParticleLink</name>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">TruthParticleLink_t</ref> &amp;</type>
          <declname>plink</declname>
        </param>
        <briefdescription>
<para>Add one truth particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a04278730bdb12f2026e2ca202e58f05a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TruthEventBase_v1::clearTruthParticleLinks</definition>
        <argsstring>()</argsstring>
        <name>clearTruthParticleLinks</name>
        <briefdescription>
<para>Remove all truth particles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="60" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="70" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access to all the vertices associated with the event</header>
      <description><para><anchor id="_1amgrp568cda3092d86630e53286e6f5db8c73"/> </para></description>
      <memberdef kind="typedef" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a29aaeac5de6f9df4fb6e7be34ee0980e" prot="public" static="no">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TruthVertexContainer</ref> &gt;</type>
        <definition>typedef ElementLink&lt; TruthVertexContainer &gt; xAOD::TruthEventBase_v1::TruthVertexLink_t</definition>
        <argsstring></argsstring>
        <name>TruthVertexLink_t</name>
        <reimplementedby refid="d7/d81/classxAOD_1_1TruthEvent__v1_1a43b81a66d48f5630b52d682bf07c0995">TruthVertexLink_t</reimplementedby>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> of a single truth vertex link. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/dad/classxAOD_1_1TruthEventBase__v1_1aa1492e12d8807e131348c0bc6f1048c5" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">TruthVertexLink_t</ref> &gt;</type>
        <definition>typedef std::vector&lt; TruthVertexLink_t &gt; xAOD::TruthEventBase_v1::TruthVertexLinks_t</definition>
        <argsstring></argsstring>
        <name>TruthVertexLinks_t</name>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> of the truth particle links vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1abc02bf783b13403687d415d436d2a7d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="df/dad/classxAOD_1_1TruthEventBase__v1_1aa1492e12d8807e131348c0bc6f1048c5" kindref="member">TruthVertexLinks_t</ref> &amp;</type>
        <definition>const TruthVertexLinks_t&amp; xAOD::TruthEventBase_v1::truthVertexLinks</definition>
        <argsstring>() const </argsstring>
        <name>truthVertexLinks</name>
        <briefdescription>
<para>Get all the truth vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a96ec2a11f38d61643e540bdd45c5a545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TruthEventBase_v1::setTruthVertexLinks</definition>
        <argsstring>(const TruthVertexLinks_t &amp;links)</argsstring>
        <name>setTruthVertexLinks</name>
        <param>
          <type>const <ref refid="df/dad/classxAOD_1_1TruthEventBase__v1_1aa1492e12d8807e131348c0bc6f1048c5" kindref="member">TruthVertexLinks_t</ref> &amp;</type>
          <declname>links</declname>
        </param>
        <briefdescription>
<para>Set all the truth vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a778606037d72ea49bfc5b5aa4f91852e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xAOD::TruthEventBase_v1::nTruthVertices</definition>
        <argsstring>() const </argsstring>
        <name>nTruthVertices</name>
        <briefdescription>
<para>Get the number of truth vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="77"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a4ee5d5cf390da4ff6a499a2a6e13e80b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">TruthVertexLink_t</ref> &amp;</type>
        <definition>const TruthEventBase_v1::TruthVertexLink_t &amp; xAOD::TruthEventBase_v1::truthVertexLink</definition>
        <argsstring>(size_t index) const </argsstring>
        <name>truthVertexLink</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the link to one of the truth vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="79" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a351c9f0c79b6fcb73f66589743145758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1" kindref="compound">TruthVertex</ref> *</type>
        <definition>const TruthVertex * xAOD::TruthEventBase_v1::truthVertex</definition>
        <argsstring>(size_t index) const </argsstring>
        <name>truthVertex</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get a pointer to one of the truth vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="108" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a70febe8bc72d3dee2027650d83dd1cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TruthEventBase_v1::addTruthVertexLink</definition>
        <argsstring>(const TruthVertexLink_t &amp;vlink)</argsstring>
        <name>addTruthVertexLink</name>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">TruthVertexLink_t</ref> &amp;</type>
          <declname>vlink</declname>
        </param>
        <briefdescription>
<para>Add one truth vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="83" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1aeb86023e980fe81924ec764d9ceb483c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TruthEventBase_v1::clearTruthVertexLinks</definition>
        <argsstring>()</argsstring>
        <name>clearTruthVertexLinks</name>
        <briefdescription>
<para>Remove all truth vertices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="131" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a47797d7cfb601143973eb6d21098de84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::TruthEventBase_v1::TruthEventBase_v1</definition>
        <argsstring>()</argsstring>
        <name>TruthEventBase_v1</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a76fcb03afd080a7e3bf147949ece2acf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual xAOD::TruthEventBase_v1::~TruthEventBase_v1</definition>
        <argsstring>()</argsstring>
        <name>~TruthEventBase_v1</name>
        <briefdescription>
<para>Virtual destructor, to make vtable happy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a8f2bcdb9e34060e451f03cdb0911116a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434" kindref="member">Type::ObjectType</ref></type>
        <definition>virtual Type::ObjectType xAOD::TruthEventBase_v1::type</definition>
        <argsstring>() const =0</argsstring>
        <name>type</name>
        <reimplementedby refid="d1/d99/classxAOD_1_1TruthPileupEvent__v1_1a36a64ba64a0a12960e745982665623cc">type</reimplementedby>
        <reimplementedby refid="d7/d81/classxAOD_1_1TruthEvent__v1_1adc511a0704f7f95b9b15be3514e19b65">type</reimplementedby>
        <briefdescription>
<para>The type of the object as a simple enumeration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="df/dad/classxAOD_1_1TruthEventBase__v1_1a891ac975c0c938b4015ab869fbaf8068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TruthEventBase_v1::toPersistent</definition>
        <argsstring>()</argsstring>
        <name>toPersistent</name>
        <reimplementedby refid="d7/d81/classxAOD_1_1TruthEvent__v1_1a9823f6eec2bc2417ac7490b5f08a4892">toPersistent</reimplementedby>
        <briefdescription>
<para>Function making sure that the object is ready for persistification. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="93" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx" bodystart="139" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class describing a pile-up or signal truth event in the MC record</para><para>Provides access to particles and vertices, but no extra event info since this is different for signal and pile-up events.</para><para><simplesect kind="author"><para>Andy Buckley &lt;<ulink url="mailto:Andy.Buckley@cern.ch">Andy.Buckley@cern.ch</ulink>&gt; </para><simplesectsep/><para>Jovan Mitrevski &lt;<ulink url="mailto:Jovan.Mitrevski@cern.ch">Jovan.Mitrevski@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>622193 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-10-16 18:08:34 +0200 (Thu, 16 Oct 2014) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="22039">
        <label>xAOD::TruthEvent_v1</label>
        <link refid="d7/d81/classxAOD_1_1TruthEvent__v1"/>
        <childnode refid="22036" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22040">
        <label>xAOD::TruthPileupEvent_v1</label>
        <link refid="d1/d99/classxAOD_1_1TruthPileupEvent__v1"/>
        <childnode refid="22036" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22038">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="22037">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="22038" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22036">
        <label>xAOD::TruthEventBase_v1</label>
        <link refid="df/dad/classxAOD_1_1TruthEventBase__v1"/>
        <childnode refid="22037" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="22054">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="22055">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="22050">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="22059">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="22044" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22053">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="22054" relation="public-inheritance">
        </childnode>
        <childnode refid="22055" relation="public-inheritance">
        </childnode>
        <childnode refid="22056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22048">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="22049">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="22043">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="22046">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="22047">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="22048" relation="public-inheritance">
        </childnode>
        <childnode refid="22049" relation="public-inheritance">
        </childnode>
        <childnode refid="22050" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="22046" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="22045">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="22046" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22052">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="22053" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22056">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="22057">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="22058" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="22051">
        <label>mutex</label>
      </node>
      <node id="22042">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="22043" relation="public-inheritance">
        </childnode>
        <childnode refid="22044" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="22059" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="22041">
        <label>xAOD::TruthEventBase_v1</label>
        <link refid="df/dad/classxAOD_1_1TruthEventBase__v1"/>
        <childnode refid="22042" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22058">
        <label>void</label>
      </node>
      <node id="22044">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="22045" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="22047" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="22046" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="22051" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="22052" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="22057" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/xAODTruth/versions/TruthEventBase_v1.h" bodystart="31" bodyend="95"/>
    <listofallmembers>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1adb2b79219d647a66ae0e43405cbfc641" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>addTruthParticleLink</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a70febe8bc72d3dee2027650d83dd1cc5" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>addTruthVertexLink</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a7aaa8e9eb54091ab7ee43bb7c73918e4" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5279e0349d690c26121f60b5a8778322" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>clearDecorations</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a04278730bdb12f2026e2ca202e58f05a" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>clearTruthParticleLinks</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1aeb86023e980fe81924ec764d9ceb483c" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>clearTruthVertexLinks</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>getConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>getStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>IAuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>index</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af727b22ab51f1d848fc3cf59065b99ea" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>isAvailable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a864fc1dab026cbcf20b2c7e3904b89a4" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>makePrivateStore</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1aa26fc9a648c11dc156d8f7176c025ac9" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>nTruthParticles</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a778606037d72ea49bfc5b5aa4f91852e" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>nTruthVertices</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>operator=</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>releasePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>setConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>setNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>setStore</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1abab5e494fefdb7c33b47fca46854ccc1" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>setTruthParticleLinks</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a96ec2a11f38d61643e540bdd45c5a545" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>setTruthVertexLinks</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a891ac975c0c938b4015ab869fbaf8068" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>toPersistent</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a47797d7cfb601143973eb6d21098de84" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>TruthEventBase_v1</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1ace892b3ad4e83f662b65293060ba8a7b" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>truthParticle</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a031ead6ccefafe26873d9964d9ca2e25" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>truthParticleLink</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a104965a27706b93a43a2b1807f3fd242" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>TruthParticleLink_t</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a3c7a89c5464ad590612e0a1199c76042" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>truthParticleLinks</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1ab6e95532cf7a69a29b9040e4d3c0ccc3" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>TruthParticleLinks_t</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a351c9f0c79b6fcb73f66589743145758" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>truthVertex</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a4ee5d5cf390da4ff6a499a2a6e13e80b" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>truthVertexLink</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a29aaeac5de6f9df4fb6e7be34ee0980e" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>TruthVertexLink_t</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1abc02bf783b13403687d415d436d2a7d5" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>truthVertexLinks</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1aa1492e12d8807e131348c0bc6f1048c5" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>TruthVertexLinks_t</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a8f2bcdb9e34060e451f03cdb0911116a" prot="public" virt="pure-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>type</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::TruthEventBase_v1</scope><name>~AuxElement</name></member>
      <member refid="df/dad/classxAOD_1_1TruthEventBase__v1_1a76fcb03afd080a7e3bf147949ece2acf" prot="public" virt="virtual"><scope>xAOD::TruthEventBase_v1</scope><name>~TruthEventBase_v1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
