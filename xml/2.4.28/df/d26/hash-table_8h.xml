<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d26/hash-table_8h" kind="file">
    <compoundname>hash-table.h</compoundname>
    <includedby refid="d7/d3a/libcalg_8h" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/libcalg.h</includedby>
    <invincdepgraph>
      <node id="108159">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/libcalg.h</label>
        <link refid="d7/d3a/libcalg_8h_source"/>
      </node>
      <node id="108158">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h</label>
        <link refid="hash-table.h"/>
        <childnode refid="108159" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d7/dbd/struct__HashTableIterator" prot="public">_HashTableIterator</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="df/d26/hash-table_8h_1af644de756480558f4d99081ce3d7cc9f" prot="public" static="no">
        <name>HASH_TABLE_NULL</name>
        <initializer>((void *) 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> null <ref refid="df/d26/hash-table_8h_1a5f089a039e268307ee0baaf5bd709aa0" kindref="member">HashTableValue</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" prot="public" static="no">
        <type>struct _HashTable</type>
        <definition>typedef struct _HashTable HashTable</definition>
        <argsstring></argsstring>
        <name>HashTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> hash table structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1ab25d701f1220c8a1a514ff0fbdfc0c30" prot="public" static="no">
        <type>struct <ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">_HashTableIterator</ref></type>
        <definition>typedef struct _HashTableIterator HashTableIterator</definition>
        <argsstring></argsstring>
        <name>HashTableIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Structure used to iterate over a hash table. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1a83d586c0e3c9cf35b34a1ff8e1cf38ca" prot="public" static="no">
        <type>struct _HashTableEntry</type>
        <definition>typedef struct _HashTableEntry HashTableEntry</definition>
        <argsstring></argsstring>
        <name>HashTableEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal structure representing an entry in a hash table. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1ae530fd52926480a301f3dad74512349c" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* HashTableKey</definition>
        <argsstring></argsstring>
        <name>HashTableKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> key to look up a value in a <ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1a5f089a039e268307ee0baaf5bd709aa0" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* HashTableValue</definition>
        <argsstring></argsstring>
        <name>HashTableValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> value stored in a <ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1a7278db6b93b7ca76d9966b90df06fffa" prot="public" static="no">
        <type>unsigned long(*</type>
        <definition>typedef unsigned long(* HashTableHashFunc)(HashTableKey value)</definition>
        <argsstring>)(HashTableKey value)</argsstring>
        <name>HashTableHashFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hash function used to generate hash values for keys used in a hash table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to generate a hash value for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The hash value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="106" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1aef3ce282d12e230287e5937783914fc4" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* HashTableEqualFunc)(HashTableKey value1, HashTableKey value2)</definition>
        <argsstring>)(HashTableKey value1, HashTableKey value2)</argsstring>
        <name>HashTableEqualFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function used to compare two keys for equality.</para><para><simplesect kind="return"><para>Non-zero if the two keys are equal, zero if the keys are not equal. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="115" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1aa7947c8e0160f04cfe6150f738107c11" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* HashTableKeyFreeFunc)(HashTableKey value)</definition>
        <argsstring>)(HashTableKey value)</argsstring>
        <name>HashTableKeyFreeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of function used to free keys when entries are removed from a hash table. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d26/hash-table_8h_1af3ec8d5896aa2df96969a5c76d867337" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* HashTableValueFreeFunc)(HashTableValue value)</definition>
        <argsstring>)(HashTableValue value)</argsstring>
        <name>HashTableValueFreeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of function used to free values when entries are removed from a hash table. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="129" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/d26/hash-table_8h_1ae361c4c0256ec6c741ecfeabef33d891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref> *</type>
        <definition>HashTable* hash_table_new</definition>
        <argsstring>(HashTableHashFunc hash_func, HashTableEqualFunc equal_func)</argsstring>
        <name>hash_table_new</name>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1a7278db6b93b7ca76d9966b90df06fffa" kindref="member">HashTableHashFunc</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1aef3ce282d12e230287e5937783914fc4" kindref="member">HashTableEqualFunc</ref></type>
          <declname>equal_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new hash table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function used to generate hash keys for the keys used in the table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>equal_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function used to test keys used in the table for equality. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> new hash table structure, or NULL if it was not possible to allocate the new hash table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1aeedb51c25fa260ab7925329ccd675764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hash_table_free</definition>
        <argsstring>(HashTable *hash_table)</argsstring>
        <name>hash_table_free</name>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref> *</type>
          <declname>hash_table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a hash table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table to destroy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="152"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1afab978951c1f3ce0648db5486d10b76c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hash_table_register_free_functions</definition>
        <argsstring>(HashTable *hash_table, HashTableKeyFreeFunc key_free_func, HashTableValueFreeFunc value_free_func)</argsstring>
        <name>hash_table_register_free_functions</name>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref> *</type>
          <declname>hash_table</declname>
        </param>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1aa7947c8e0160f04cfe6150f738107c11" kindref="member">HashTableKeyFreeFunc</ref></type>
          <declname>key_free_func</declname>
        </param>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1af3ec8d5896aa2df96969a5c76d867337" kindref="member">HashTableValueFreeFunc</ref></type>
          <declname>value_free_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register functions used to free the key and value when an entry is removed from a hash table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_free_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function used to free keys. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_free_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function used to free values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1a154c1164b6417c7ac10db1d9c4517b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hash_table_insert</definition>
        <argsstring>(HashTable *hash_table, HashTableKey key, HashTableValue value)</argsstring>
        <name>hash_table_insert</name>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref> *</type>
          <declname>hash_table</declname>
        </param>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ae530fd52926480a301f3dad74512349c" kindref="member">HashTableKey</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1a5f089a039e268307ee0baaf5bd709aa0" kindref="member">HashTableValue</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a value into a hash table, overwriting any existing entry using the same key.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key for the new value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero if the value was added successfully, or zero if it was not possible to allocate memory for the new entry. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="181"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1a13ec7991c796b15d99b0567fb65c7e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="df/d26/hash-table_8h_1a5f089a039e268307ee0baaf5bd709aa0" kindref="member">HashTableValue</ref></type>
        <definition>HashTableValue hash_table_lookup</definition>
        <argsstring>(HashTable *hash_table, HashTableKey key)</argsstring>
        <name>hash_table_lookup</name>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref> *</type>
          <declname>hash_table</declname>
        </param>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ae530fd52926480a301f3dad74512349c" kindref="member">HashTableKey</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Look up a value in a hash table by key.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the value to look up. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value, or <ref refid="df/d26/hash-table_8h_1af644de756480558f4d99081ce3d7cc9f" kindref="member">HASH_TABLE_NULL</ref> if there is no value with that key in the hash table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="193"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1a704d19219fa6d3ce678745ffee81b858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hash_table_remove</definition>
        <argsstring>(HashTable *hash_table, HashTableKey key)</argsstring>
        <name>hash_table_remove</name>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref> *</type>
          <declname>hash_table</declname>
        </param>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ae530fd52926480a301f3dad74512349c" kindref="member">HashTableKey</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a value from a hash table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the value to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero if a key was removed, or zero if the specified key was not found in the hash table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="204"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1ad82edde65feac6ebafb6fe32b43e5bc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hash_table_num_entries</definition>
        <argsstring>(HashTable *hash_table)</argsstring>
        <name>hash_table_num_entries</name>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref> *</type>
          <declname>hash_table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the number of entries in a hash table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of entries in the hash table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="213"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1a91afe2cd2cb3ed8ccd098eb572782db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hash_table_iterate</definition>
        <argsstring>(HashTable *hash_table, HashTableIterator *iter)</argsstring>
        <name>hash_table_iterate</name>
        <param>
          <type><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref> *</type>
          <declname>hash_table</declname>
        </param>
        <param>
          <type><ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">HashTableIterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise a <ref refid="df/d26/hash-table_8h_1ab25d701f1220c8a1a514ff0fbdfc0c30" kindref="member">HashTableIterator</ref> to iterate over a hash table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an iterator structure to initialise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="223"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1a716b8542655c2de90f9f42dc41ac7c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hash_table_iter_has_more</definition>
        <argsstring>(HashTableIterator *iterator)</argsstring>
        <name>hash_table_iter_has_more</name>
        <param>
          <type><ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">HashTableIterator</ref> *</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if there are more keys in the hash table to iterate over.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table iterator. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if there are no more values to iterate over, non-zero if there are more values to iterate over. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="235"/>
      </memberdef>
      <memberdef kind="function" id="df/d26/hash-table_8h_1a9a73ca9e0af1b6c22e1f515c5e7c8310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="df/d26/hash-table_8h_1a5f089a039e268307ee0baaf5bd709aa0" kindref="member">HashTableValue</ref></type>
        <definition>HashTableValue hash_table_iter_next</definition>
        <argsstring>(HashTableIterator *iterator)</argsstring>
        <name>hash_table_iter_next</name>
        <param>
          <type><ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">HashTableIterator</ref> *</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Using a hash table iterator, retrieve the next key.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table iterator. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next key from the hash table, or <ref refid="df/d26/hash-table_8h_1af644de756480558f4d99081ce3d7cc9f" kindref="member">HASH_TABLE_NULL</ref> if there are no more keys to iterate over. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h" line="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hash table. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> hash table stores a set of values which can be addressed by a key. Given the key, the corresponding value can be looked up quickly.</para><para>To create a hash table, use <ref refid="df/d26/hash-table_8h_1ae361c4c0256ec6c741ecfeabef33d891" kindref="member">hash_table_new</ref>. To destroy a hash table, use <ref refid="df/d26/hash-table_8h_1aeedb51c25fa260ab7925329ccd675764" kindref="member">hash_table_free</ref>.</para><para>To insert a value into a hash table, use <ref refid="df/d26/hash-table_8h_1a154c1164b6417c7ac10db1d9c4517b9a" kindref="member">hash_table_insert</ref>.</para><para>To remove a value from a hash table, use <ref refid="df/d26/hash-table_8h_1a704d19219fa6d3ce678745ffee81b858" kindref="member">hash_table_remove</ref>.</para><para>To look up a value by its key, use <ref refid="df/d26/hash-table_8h_1a13ec7991c796b15d99b0567fb65c7e65" kindref="member">hash_table_lookup</ref>.</para><para>To iterate over all values in a hash table, use <ref refid="df/d26/hash-table_8h_1a91afe2cd2cb3ed8ccd098eb572782db3" kindref="member">hash_table_iterate</ref> to initialise a <ref refid="df/d26/hash-table_8h_1ab25d701f1220c8a1a514ff0fbdfc0c30" kindref="member">HashTableIterator</ref> structure. Each value can then be read in turn using <ref refid="df/d26/hash-table_8h_1a9a73ca9e0af1b6c22e1f515c5e7c8310" kindref="member">hash_table_iter_next</ref> and <ref refid="df/d26/hash-table_8h_1a716b8542655c2de90f9f42dc41ac7c57" kindref="member">hash_table_iter_has_more</ref>. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(c)<sp/>2005-2008,<sp/>Simon<sp/>Howard</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment">for<sp/>any<sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">that<sp/>the<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">in<sp/>all<sp/>copies.<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment">WARRANTIES<sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment">AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES<sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment">NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment">CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">#ifndef<sp/>ALGORITHM_HASH_TABLE_H</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ALGORITHM_HASH_TABLE_H</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="56" refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_HashTable<sp/><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="df/d26/hash-table_8h_1ab25d701f1220c8a1a514ff0fbdfc0c30" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">_HashTableIterator</ref><sp/><ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">HashTableIterator</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="df/d26/hash-table_8h_1a83d586c0e3c9cf35b34a1ff8e1cf38ca" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_HashTableEntry<sp/><ref refid="df/d26/hash-table_8h_1a83d586c0e3c9cf35b34a1ff8e1cf38ca" kindref="member">HashTableEntry</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="df/d26/hash-table_8h_1ae530fd52926480a301f3dad74512349c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="df/d26/hash-table_8h_1ae530fd52926480a301f3dad74512349c" kindref="member">HashTableKey</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="df/d26/hash-table_8h_1a5f089a039e268307ee0baaf5bd709aa0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="df/d26/hash-table_8h_1a5f089a039e268307ee0baaf5bd709aa0" kindref="member">HashTableValue</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="d7/dbd/struct__HashTableIterator" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">_HashTableIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*hash_table;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d26/hash-table_8h_1a83d586c0e3c9cf35b34a1ff8e1cf38ca" kindref="member">HashTableEntry</ref><sp/>*next_entry;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_chain;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="df/d26/hash-table_8h_1af644de756480558f4d99081ce3d7cc9f" refkind="member"><highlight class="preprocessor">#define<sp/>HASH_TABLE_NULL<sp/>((void<sp/>*)<sp/>0)</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="106" refid="df/d26/hash-table_8h_1a7278db6b93b7ca76d9966b90df06fffa" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long<sp/>(*<ref refid="df/d26/hash-table_8h_1a7278db6b93b7ca76d9966b90df06fffa" kindref="member">HashTableHashFunc</ref>)(HashTableKey<sp/>value);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="df/d26/hash-table_8h_1aef3ce282d12e230287e5937783914fc4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="df/d26/hash-table_8h_1aef3ce282d12e230287e5937783914fc4" kindref="member">HashTableEqualFunc</ref>)(HashTableKey<sp/>value1,<sp/>HashTableKey<sp/>value2);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="df/d26/hash-table_8h_1aa7947c8e0160f04cfe6150f738107c11" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="df/d26/hash-table_8h_1aa7947c8e0160f04cfe6150f738107c11" kindref="member">HashTableKeyFreeFunc</ref>)(HashTableKey<sp/>value);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="df/d26/hash-table_8h_1af3ec8d5896aa2df96969a5c76d867337" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="df/d26/hash-table_8h_1af3ec8d5896aa2df96969a5c76d867337" kindref="member">HashTableValueFreeFunc</ref>)(HashTableValue<sp/>value);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*<ref refid="df/d26/hash-table_8h_1ae361c4c0256ec6c741ecfeabef33d891" kindref="member">hash_table_new</ref>(<ref refid="df/d26/hash-table_8h_1a7278db6b93b7ca76d9966b90df06fffa" kindref="member">HashTableHashFunc</ref><sp/>hash_func,<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d26/hash-table_8h_1aef3ce282d12e230287e5937783914fc4" kindref="member">HashTableEqualFunc</ref><sp/>equal_func);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d26/hash-table_8h_1aeedb51c25fa260ab7925329ccd675764" kindref="member">hash_table_free</ref>(<ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*hash_table);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d26/hash-table_8h_1afab978951c1f3ce0648db5486d10b76c" kindref="member">hash_table_register_free_functions</ref>(<ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*hash_table,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d26/hash-table_8h_1aa7947c8e0160f04cfe6150f738107c11" kindref="member">HashTableKeyFreeFunc</ref><sp/>key_free_func,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d26/hash-table_8h_1af3ec8d5896aa2df96969a5c76d867337" kindref="member">HashTableValueFreeFunc</ref><sp/>value_free_func);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/d26/hash-table_8h_1a154c1164b6417c7ac10db1d9c4517b9a" kindref="member">hash_table_insert</ref>(<ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*hash_table,<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HashTableKey<sp/>key,<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HashTableValue<sp/>value);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">HashTableValue<sp/><ref refid="df/d26/hash-table_8h_1a13ec7991c796b15d99b0567fb65c7e65" kindref="member">hash_table_lookup</ref>(<ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*hash_table,<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HashTableKey<sp/>key);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/d26/hash-table_8h_1a704d19219fa6d3ce678745ffee81b858" kindref="member">hash_table_remove</ref>(<ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*hash_table,<sp/>HashTableKey<sp/>key);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/d26/hash-table_8h_1ad82edde65feac6ebafb6fe32b43e5bc7" kindref="member">hash_table_num_entries</ref>(<ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*hash_table);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d26/hash-table_8h_1a91afe2cd2cb3ed8ccd098eb572782db3" kindref="member">hash_table_iterate</ref>(<ref refid="df/d26/hash-table_8h_1ad09c371a5dda2decb59db772786a842a" kindref="member">HashTable</ref><sp/>*hash_table,<sp/><ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">HashTableIterator</ref><sp/>*iter);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/d26/hash-table_8h_1a716b8542655c2de90f9f42dc41ac7c57" kindref="member">hash_table_iter_has_more</ref>(<ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">HashTableIterator</ref><sp/>*iterator);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">HashTableValue<sp/><ref refid="df/d26/hash-table_8h_1a9a73ca9e0af1b6c22e1f515c5e7c8310" kindref="member">hash_table_iter_next</ref>(<ref refid="d7/dbd/struct__HashTableIterator" kindref="compound">HashTableIterator</ref><sp/>*iterator);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>ALGORITHM_HASH_TABLE_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/hash-table.h"/>
  </compounddef>
</doxygen>
