<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="df/d74/classSG_1_1ExcAuxTypeMismatch" kind="class" prot="public">
    <compoundname>SG::ExcAuxTypeMismatch</compoundname>
    <includes refid="d4/d03/exceptions_8h" local="no">exceptions.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d74/classSG_1_1ExcAuxTypeMismatch_1a26a817929f7454dead23b974ee405d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SG::ExcAuxTypeMismatch::ExcAuxTypeMismatch</definition>
        <argsstring>(SG::auxid_t auxid, const std::type_info &amp;new_type, const std::type_info &amp;old_type)</argsstring>
        <name>ExcAuxTypeMismatch</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>new_type</declname>
        </param>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>old_type</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>auxid</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the requested aux data item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_type</parametername>
</parameternamelist>
<parameterdescription>
<para>New type requested for the item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Previous type associated with the item. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/exceptions.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/exceptions.cxx" bodystart="186" bodyend="192"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exception --- Type mismatch for aux variable. </para>    </briefdescription>
    <detaileddescription>
<para>Thrown when there&apos;s a mismatch between the type requested for an aux data item and a type previously requested for the same item. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/exceptions.h" line="131" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/exceptions.h" bodystart="129" bodyend="142"/>
    <listofallmembers>
      <member refid="df/d74/classSG_1_1ExcAuxTypeMismatch_1a26a817929f7454dead23b974ee405d85" prot="public" virt="non-virtual"><scope>SG::ExcAuxTypeMismatch</scope><name>ExcAuxTypeMismatch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
