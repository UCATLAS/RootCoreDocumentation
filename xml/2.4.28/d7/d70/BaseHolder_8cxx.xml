<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/d70/BaseHolder_8cxx" kind="file">
    <compoundname>BaseHolder.cxx</compoundname>
    <includes refid="de/d76/TrigNavStructure_2TrigNavStructure_2StringSerializer_8h" local="yes">TrigNavStructure/StringSerializer.h</includes>
    <includes refid="df/d37/BaseHolder_8h" local="yes">TrigNavStructure/BaseHolder.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="328321">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="328319" relation="include">
        </childnode>
        <childnode refid="328318" relation="include">
        </childnode>
        <childnode refid="328322" relation="include">
        </childnode>
      </node>
      <node id="328320">
        <label>stdint.h</label>
      </node>
      <node id="328319">
        <label>string</label>
      </node>
      <node id="328323">
        <label>boost/variant.hpp</label>
      </node>
      <node id="328316">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/BaseHolder.cxx</label>
        <link refid="BaseHolder.cxx"/>
        <childnode refid="328317" relation="include">
        </childnode>
        <childnode refid="328321" relation="include">
        </childnode>
        <childnode refid="328324" relation="include">
        </childnode>
      </node>
      <node id="328322">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="328320" relation="include">
        </childnode>
        <childnode refid="328323" relation="include">
        </childnode>
      </node>
      <node id="328317">
        <label>TrigNavStructure/StringSerializer.h</label>
        <link refid="de/d76/TrigNavStructure_2TrigNavStructure_2StringSerializer_8h_source"/>
        <childnode refid="328318" relation="include">
        </childnode>
        <childnode refid="328319" relation="include">
        </childnode>
        <childnode refid="328320" relation="include">
        </childnode>
      </node>
      <node id="328318">
        <label>vector</label>
      </node>
      <node id="328324">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/StringSerializer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/BaseHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">HLT;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">BaseHolder::~BaseHolder()<sp/>{}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BaseHolder::enquireSerialized(std::vector&lt;uint32_t&gt;::const_iterator&amp;<sp/>fromHere,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;::const_iterator&amp;<sp/>end,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id_type&amp;<sp/>c,<sp/>std::string&amp;<sp/>label,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_index_type&amp;<sp/>subtypeIndex<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fromHere<sp/>==<sp/>end<sp/>)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>*fromHere++;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fromHere<sp/>==<sp/>end<sp/>)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>subtypeIndex<sp/>=<sp/>*fromHere++;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fromHere<sp/>==<sp/>end<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>labelSize<sp/>=<sp/>*fromHere++;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fromHere<sp/>==<sp/>end<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fromHere+labelSize<sp/>&gt;<sp/>end<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;::const_iterator<sp/>stringEnd<sp/>=<sp/>fromHere+labelSize;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>HLT::StringSerializer::deserialize(fromHere,<sp/>stringEnd,<sp/>label);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//advance<sp/>iterator<sp/>to<sp/>end<sp/>of<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::advance(fromHere,labelSize);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BaseHolder::serialize(std::vector&lt;uint32_t&gt;&amp;<sp/>output)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>output.push_back(<sp/>typeClid()<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>output.push_back(<sp/>subTypeIndex()<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>labelSizeIndex<sp/>=<sp/>output.size();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>output.push_back(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>beforeSS<sp/>=<sp/>output.size();<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>StringSerializer::serialize(label(),<sp/>output);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>output[labelSizeIndex]<sp/>=<sp/>output.size()<sp/>-<sp/>beforeSS;<sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/BaseHolder.cxx"/>
  </compounddef>
</doxygen>
