<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/d53/xExample_8cxx" kind="file">
    <compoundname>xExample.cxx</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">//<sp/>xExample.cxx:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>xExample<sp/>is<sp/>a<sp/>package<sp/>to<sp/>test<sp/>the<sp/>xAOD<sp/>and<sp/>CP<sp/>tools<sp/>by<sp/>histogramming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>variables<sp/>for<sp/>each<sp/>type<sp/>of<sp/>object.<sp/>Some<sp/>plots<sp/>are<sp/>specific<sp/>to<sp/>ttbar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Frank<sp/>Paige<sp/>&lt;paige@bnl.gov&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thanks:<sp/>David<sp/>Adams,<sp/>Joe<sp/>Taenzer,<sp/>Iacopo<sp/>Vivarelli</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CPAnalysisExamples/xExample.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CPAnalysisExamples/xExampleEDM.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CPAnalysisExamples/xExampleUtils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Job.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/StatusCode.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Worker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Infrastructure<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;xAODRootAccess/Init.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;xAODRootAccess/TEvent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Root<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH1F.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH2F.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TF1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>needed<sp/>to<sp/>distribute<sp/>the<sp/>algorithm<sp/>to<sp/>the<sp/>workers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">ClassImp(<ref refid="d1/d66/classxExample" kindref="compound">xExample</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">The<sp/>code<sp/>below<sp/>makes<sp/>shows<sp/>an<sp/>example<sp/>of<sp/>an<sp/>analysis<sp/>using<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="comment">shallow<sp/>copies<sp/>ad<sp/>deep<sp/>copies<sp/>of<sp/>objects<sp/>and<sp/>containers.<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment">A<sp/>shallow<sp/>copy<sp/>of<sp/>an<sp/>object<sp/>shares<sp/>the<sp/>auxiliary<sp/>store<sp/>with<sp/>the<sp/>original<sp/>object.</highlight></codeline>
<codeline lineno="46"><highlight class="comment">Only<sp/>quantities<sp/>that<sp/>differ<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>original<sp/>object<sp/>are<sp/>stored<sp/>separately.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">A<sp/>deep<sp/>copy<sp/>of<sp/>an<sp/>object<sp/>copies<sp/>the<sp/>entire<sp/>auxiliary<sp/>store<sp/>to<sp/>a<sp/>separate<sp/>memory<sp/>location.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">Please<sp/>be<sp/>aware<sp/>that<sp/>making<sp/>a<sp/>deep<sp/>copy<sp/>of<sp/>an<sp/>object<sp/>is<sp/>an<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="comment">expensive<sp/>operation<sp/>(in<sp/>terms<sp/>of<sp/>used<sp/>resources).<sp/>It<sp/>should<sp/>be<sp/>done<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment">only<sp/>if<sp/>really<sp/>necessary</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">//<sp/>xExample<sp/>class<sp/>functions</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="d1/d66/classxExample" kindref="compound">xExample</ref><sp/>::<sp/><ref refid="d1/d66/classxExample" kindref="compound">xExample</ref><sp/>(){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>you<sp/>put<sp/>any<sp/>code<sp/>for<sp/>the<sp/>base<sp/>initialization<sp/>of<sp/>variables,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>initialize<sp/>all<sp/>pointers<sp/>to<sp/>0.<sp/><sp/>Note<sp/>that<sp/>you<sp/>should<sp/>only<sp/>put</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>most<sp/>basic<sp/>initialization<sp/>here,<sp/>since<sp/>this<sp/>method<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>on<sp/>both<sp/>the<sp/>submission<sp/>and<sp/>the<sp/>worker<sp/>node.<sp/><sp/>Most<sp/>of<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialization<sp/>code<sp/>will<sp/>go<sp/>into<sp/>histInitialize()<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1af58a0865416fc417499cd1710d49ce08" kindref="member">xExample :: setupJob</ref><sp/>(<ref refid="da/dbb/classEL_1_1Job" kindref="compound">EL::Job</ref>&amp;<sp/>job){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>you<sp/>put<sp/>code<sp/>that<sp/>sets<sp/>up<sp/>the<sp/>job<sp/>on<sp/>the<sp/>submission<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>it<sp/>is<sp/>ready<sp/>to<sp/>work<sp/>with<sp/>your<sp/>algorithm,<sp/>e.g.<sp/>you<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>request<sp/>the<sp/>D3PDReader<sp/>service<sp/>or<sp/>add<sp/>output<sp/>files.<sp/><sp/>Any<sp/>code<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>here<sp/>could<sp/>instead<sp/>also<sp/>go<sp/>into<sp/>the<sp/>submission<sp/>script.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sole<sp/>advantage<sp/>of<sp/>putting<sp/>it<sp/>here<sp/>is<sp/>that<sp/>it<sp/>gets<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>activated/deactivated<sp/>when<sp/>you<sp/>add/remove<sp/>the<sp/>algorithm<sp/>from<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>job,<sp/>which<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>of<sp/>value<sp/>to<sp/>you.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>SoftwareTutorialxAODAnalysisInROOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>job.<ref refid="da/dbb/classEL_1_1Job_1a52d21f848a949d1f7af0803aff4680e0" kindref="member">useXAOD</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="dd/d44/namespacexAOD_1a2b6ff6013c964ff2254bd3540cd1738d" kindref="member">xAOD::Init</ref>(<sp/></highlight><highlight class="stringliteral">&quot;xExample&quot;</highlight><highlight class="normal"><sp/>).ignore();<sp/></highlight><highlight class="comment">//<sp/>call<sp/>before<sp/>opening<sp/>first<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1ad2beb5c900a7ee2437ddbddc41294bd7" kindref="member">xExample :: histInitialize</ref><sp/>(){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>you<sp/>do<sp/>everything<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>at<sp/>the<sp/>very</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>on<sp/>each<sp/>worker<sp/>node,<sp/>e.g.<sp/>create<sp/>histograms<sp/>and<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>trees.<sp/><sp/>This<sp/>method<sp/>gets<sp/>called<sp/>before<sp/>any<sp/>input<sp/>files<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>connected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>map&lt;string,TH*&gt;<sp/>facilitates<sp/>booking<sp/>many<sp/>histograms;<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>only<sp/>a<sp/>single<sp/>statement.<sp/>Histograms<sp/>appear<sp/>in<sp/>output<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>alphabetical<sp/>order,<sp/>not<sp/>booking<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pt<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xxLim[17]<sp/>=<sp/>{9.9999,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20.00,<sp/>30.00,<sp/>40.00,<sp/>60.00,<sp/>80.00,<sp/>120.0,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>160.0,<sp/>240.0,<sp/>320.0,<sp/>480.0,<sp/>640.0,<sp/>960.0,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1280.,<sp/>1920.,<sp/>2560.,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10000.1};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>std::string<sp/>xxStr[17]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;0000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0020&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0030&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0040&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0060&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0080&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0120&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0160&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0240&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0320&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0480&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0640&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0960&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1280&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;1920&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;2560&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;17;<sp/>++i){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ptLim[i]<sp/>=<sp/>xxLim[i];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>ptStr[i]<sp/>=<sp/>xxStr[i];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Primary<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intactual&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;intactual&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;intactual&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intaverage&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;intaverage&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;intaverage&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intdiff&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;intdiff&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;intdiff&quot;</highlight><highlight class="normal">,100,-50.,50.);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxidx&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxidx&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxidx&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxz0&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxz0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxz0&quot;</highlight><highlight class="normal">,100,-200.,200.);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxn2&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxn2&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxn2&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxn5&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxn5&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxn5&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxntrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxntrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxntrk&quot;</highlight><highlight class="normal">,100,0.,200.);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mupt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mupt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mupt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0.,<sp/>500.<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mueta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mueta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mueta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muphi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;muphi&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;muphi&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-1.,<sp/>1.);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mutype&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mutype&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mutype&quot;</highlight><highlight class="normal">,5,0.,5.);<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muquality&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;muquality&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;muquality&quot;</highlight><highlight class="normal">,5,0.,5.);<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mugoodpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mugoodpt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mugoodpt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0.,<sp/>500.<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mugoodeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mugoodeta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mugoodeta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muidrat&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;muidrat&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;muidrat&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muptc30&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;muptc30&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;muptc30&quot;</highlight><highlight class="normal">,100,0.,20.);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elpt&quot;</highlight><highlight class="normal">,100,<sp/>0.,<sp/>500.);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eleta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;eleta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;eleta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elphi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elphi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elphi&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-1.,<sp/>1.);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elauthor&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elauthor&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elauthor&quot;</highlight><highlight class="normal">,16,0,16.);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elntrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elntrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elntrk&quot;</highlight><highlight class="normal">,20,0,20.);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eleoverp&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;eleoverp&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;eleoverp&quot;</highlight><highlight class="normal">,100,0,5.);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eletc30&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;eletc30&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;eletc30&quot;</highlight><highlight class="normal">,100,0.,20.);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgood&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elgood&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elgood&quot;</highlight><highlight class="normal">,2,0.,2.);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgoodpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elgoodpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elgoodpt&quot;</highlight><highlight class="normal">,100,<sp/>0.,<sp/>500.);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgoodeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elgoodeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elgoodeta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eldrtrue&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;eldrtrue&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;eldrtrue&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elptrat&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elptrat&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elptrat&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4LCTopo<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptjmax<sp/>=<sp/>2000.;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptjlomax<sp/>=<sp/>200.;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4pt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4pt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4pt&quot;</highlight><highlight class="normal">,100,0.,ptjmax);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4ptlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4ptlo&quot;</highlight><highlight class="normal">,100,0.,ptjlomax);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4eta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4eta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4eta&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4phi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4phi&quot;</highlight><highlight class="normal">,100,-1.,1.);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4rlep&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4rlep&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4rlep&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4calibrlep&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4calibrlep&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4calibrlep&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptbad&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4ptbad&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4ptbad&quot;</highlight><highlight class="normal">,100,0.,ptjmax);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4etabad&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4etabad&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4etabad&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4drelvpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;akt4drelvpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4drelvpt&quot;</highlight><highlight class="normal">,50,0.,200.,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50,0.,2.);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4calib&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str.c_str(),str.c_str(),100,0.,2.);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal">,110,-1.,1.19999);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvfx&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4jvfx&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4jvfx&quot;</highlight><highlight class="normal">,110,-1.,1.19999);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvftot&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4jvftot&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4jvftot&quot;</highlight><highlight class="normal">,110,0.,1.09999);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str.c_str(),str.c_str(),110,-1.,1.19999);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4trueid&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4trueid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4trueid&quot;</highlight><highlight class="normal">,18,-2.,16.);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptb&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4ptb&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4ptb&quot;</highlight><highlight class="normal">,100,0.,ptjmax);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4etab&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4etab&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4etab&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4mv1&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4mv1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4mv1&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4sv1b&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4sv1b&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4sv1b&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4sv1u&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4sv1u&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4sv1u&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4sv1uvb&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;akt4sv1uvb&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4sv1uvb&quot;</highlight><highlight class="normal">,80,0.,0.4,50,0.,1.);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ntrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4ntrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4ntrk&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4nsitrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4nsitrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4nsitrk&quot;</highlight><highlight class="normal">,20,0.,20.);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4z0trk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4z0trk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4z0trk&quot;</highlight><highlight class="normal">,100,-200.,200.);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4dz0trk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4dz0trk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4dz0trk&quot;</highlight><highlight class="normal">,200,-5.,5.);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4z0vz0&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;akt4z0vz0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4z0vz0&quot;</highlight><highlight class="normal">,25,-50.,50.,25,-50.,50.);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str.c_str(),str.c_str(),100,0.,2.);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4drtrue&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4drtrue&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4drtrue&quot;</highlight><highlight class="normal">,100,0.,2.0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4drtruecalib&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4drtruecalib&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4drtruecalib&quot;</highlight><highlight class="normal">,100,0.,2.0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jes&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str.c_str(),str.c_str(),100,0.,2.);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jescalib&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str2.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str2.c_str(),str2.c_str(),100,0.,2.);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4jesvpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;akt4jesvpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4jesvpt&quot;</highlight><highlight class="normal">,50,0.,500,50,0.,2.);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4Truth<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4pt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktT4pt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktT4pt&quot;</highlight><highlight class="normal">,100,0.,ptjmax);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4ptlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktT4ptlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktT4ptlo&quot;</highlight><highlight class="normal">,100,0.,ptjlomax);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4eta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktT4eta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktT4eta&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktT4phi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktT4phi&quot;</highlight><highlight class="normal">,100,-1.,1.);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4EMTopo<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktem4n100&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktem4n100&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktem4n100&quot;</highlight><highlight class="normal">,20,0.,20.);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktem4ncalib100&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktem4ncalib100&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktem4ncalib100&quot;</highlight><highlight class="normal">,20,0.,20.);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TauJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taupt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taupt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;taupt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0.,<sp/>500.<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taueta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taueta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;taueta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauphi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauphi&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tauphi&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-1.,<sp/>1.);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">,5,0.,5.);<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taubdt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taubdt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;taubdt&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;taudrelvpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;taudrelvpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;taudrelvpt&quot;</highlight><highlight class="normal">,50,0.,200.,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50,0.,2.);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tautruept&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tautruept&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tautruept&quot;</highlight><highlight class="normal">,100,0.,500.);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tautrueeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tautrueeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tautrueeta&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taugoodpt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;taugoodpt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0.,<sp/>500.<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taugoodeta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;taugoodeta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodbdt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taugoodbdt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;taugoodbdt&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauntrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauntrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tauntrk&quot;</highlight><highlight class="normal">,10,0.,10.);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauptrtrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauptrtrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tauptrtrk&quot;</highlight><highlight class="normal">,120,0.,1.2);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taudrtrue&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taudrtrue&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;taudrtrue&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauptrat&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauptrat&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tauptrat&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Met</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metet&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metet&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metet&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metetlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metetlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metetlo&quot;</highlight><highlight class="normal">,100,0.,200.);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metsum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metsum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metsum&quot;</highlight><highlight class="normal">,100,0.,2000.);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettrueet&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mettrueet&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mettrueet&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettrueetlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mettrueetlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mettrueetlo&quot;</highlight><highlight class="normal">,100,0.,200.);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettruesum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mettruesum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mettruesum&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibet&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metcalibet&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metcalibet&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibetlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metcalibetlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metcalibetlo&quot;</highlight><highlight class="normal">,100,0.,100.);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibsum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metcalibsum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metcalibsum&quot;</highlight><highlight class="normal">,100,0.,2000.);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tppt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tppt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tppt&quot;</highlight><highlight class="normal">,100,0.,500.);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpptlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpptlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpptlo&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpeta&quot;</highlight><highlight class="normal">,70,-7.,7.);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpnum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpnum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpnum&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpsum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpsum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpsum&quot;</highlight><highlight class="normal">,100,-100.,100.);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpsumlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpsumlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpsumlo&quot;</highlight><highlight class="normal">,100,-1.,1.);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpbpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpbpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpbpt&quot;</highlight><highlight class="normal">,100,0.,500.);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpbeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpbeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpbeta&quot;</highlight><highlight class="normal">,100,-5.,5.);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpwkid&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpwkid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpwkid&quot;</highlight><highlight class="normal">,50,-25.,25.);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Interactions<sp/>from<sp/>Geant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxr&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpvxr&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpvxr&quot;</highlight><highlight class="normal">,100,0.,500.);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpvxeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpvxeta&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxidin&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpvxidin&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpvxidin&quot;</highlight><highlight class="normal">,100,0.,100.);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>histograms<sp/>to<sp/>job<sp/>and<sp/>set<sp/>Sumw2</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,TH1*&gt;::iterator<sp/>h1Itr<sp/>=<sp/>m_TH1.begin();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,TH1*&gt;::iterator<sp/>h1ItrE<sp/>=<sp/>m_TH1.end();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>h1Itr<sp/>!=<sp/>h1ItrE;<sp/>++h1Itr){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1*<sp/>h1<sp/>=<sp/>(*h1Itr).second;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>h1-&gt;Sumw2();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;addOutput(h1);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,TH2*&gt;::iterator<sp/>h2Itr<sp/>=<sp/>m_TH2.begin();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,TH2*&gt;::iterator<sp/>h2ItrE<sp/>=<sp/>m_TH2.end();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>h2Itr<sp/>!=<sp/>h2ItrE;<sp/>++h2Itr){</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>TH2*<sp/>h2<sp/>=<sp/>(*h2Itr).second;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>h2-&gt;Sumw2();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;addOutput(h2);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1a77e418c03f4b5694541112fd52f4b23b" kindref="member">xExample :: fileExecute</ref><sp/>(){</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>you<sp/>do<sp/>everything<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>exactly<sp/>once<sp/>for<sp/>every</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>file,<sp/>e.g.<sp/>collect<sp/>a<sp/>list<sp/>of<sp/>all<sp/>lumi-blocks<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1a34d666e0f9f39d048bdec885b1bf73d1" kindref="member">xExample :: changeInput</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*firstFile*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>you<sp/>do<sp/>everything<sp/>you<sp/>need<sp/>to<sp/>do<sp/>when<sp/>we<sp/>change<sp/>input<sp/>files,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>resetting<sp/>branch<sp/>addresses<sp/>on<sp/>trees.<sp/><sp/>If<sp/>you<sp/>are<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>D3PDReader<sp/>or<sp/>a<sp/>similar<sp/>service<sp/>this<sp/>method<sp/>is<sp/>not<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1aff8374576d81f9872490c91c6ce4c94e" kindref="member">xExample :: initialize</ref><sp/>(){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>you<sp/>do<sp/>everything<sp/>that<sp/>you<sp/>need<sp/>to<sp/>do<sp/>after<sp/>the<sp/>first<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>has<sp/>been<sp/>connected<sp/>and<sp/>before<sp/>the<sp/>first<sp/>event<sp/>is<sp/>processed,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>create<sp/>additional<sp/>histograms<sp/>based<sp/>on<sp/>which<sp/>variables<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>in<sp/>the<sp/>input<sp/>files.<sp/><sp/>You<sp/>can<sp/>also<sp/>create<sp/>all<sp/>of<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>histograms<sp/>and<sp/>trees<sp/>in<sp/>here,<sp/>but<sp/>be<sp/>aware<sp/>that<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>get<sp/>called<sp/>if<sp/>no<sp/>events<sp/>are<sp/>processed.<sp/><sp/>So<sp/>any<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>create<sp/>here<sp/>won&apos;t<sp/>be<sp/>available<sp/>in<sp/>the<sp/>output<sp/>if<sp/>you<sp/>have<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wanted<sp/>to<sp/>restructure<sp/>this<sp/>more<sp/>like<sp/>real<sp/>analysis:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(1)<sp/>Get<sp/>objects<sp/>and<sp/>apply<sp/>CP<sp/>tools<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(2)<sp/>Remove<sp/>overlaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(3)<sp/>Make<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>many<sp/>tools<sp/>missing,<sp/>and<sp/>intermediate<sp/>plots<sp/>useful.<sp/>Have<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>collections<sp/>to<sp/>xExampleEDM.h<sp/>to<sp/>facilitate<sp/>this<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>SoftwareTutorialxAODAnalysisInROOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>m_event<sp/>=<sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;xaodEvent();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>long<sp/>long<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;initialize()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>events<sp/>=<sp/>%lli&quot;</highlight><highlight class="normal">,<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1abd190a2cfceeeb52c454ed8436c92540" kindref="member" tooltip="Get how many entries are available from the current input file(s).">getEntries</ref>()<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>transient<sp/>object<sp/>store.<sp/>Needed<sp/>for<sp/>METRebuilder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Like<sp/>m_event<sp/>but<sp/>does<sp/>not<sp/>assume<sp/>new<sp/>objects<sp/>are<sp/>written<sp/>to<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>m_store<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/dae/classxAOD_1_1TStore" kindref="compound">xAOD::TStore</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>m_eventCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>m_warnCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>m_warnLimit<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configuration<sp/>from<sp/>SoftwareTutorialxAODAnalysisInROOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>m_jetCleaningTool<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="df/dd2/classJetCleaningTool" kindref="compound" tooltip="Class for selecting jets that pass cleaning cuts.">JetCleaningTool</ref>(</highlight><highlight class="stringliteral">&quot;JetCleaning&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>m_jetCleaningTool-&gt;msg().setLevel(<sp/>MSG::DEBUG<sp/>);<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>m_jetCleaningTool-&gt;setProperty(<sp/></highlight><highlight class="stringliteral">&quot;CutLevel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MediumBad&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>m_jetCleaningTool-&gt;initialize();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configuration<sp/>from<sp/>Joe<sp/>Taenzer<sp/>sample<sp/>code<sp/>but<sp/>isData=false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>is<sp/>relative<sp/>to<sp/>xaodExample/run<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>Insitu<sp/>with<sp/>!isData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>*<sp/>eventInfo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(<sp/>eventInfo,<sp/></highlight><highlight class="stringliteral">&quot;EventInfo&quot;</highlight><highlight class="normal">).isSuccess()<sp/>){</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;initialize()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>EventInfo.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMC<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a58b04e0f3b70be5c1b2cb7ec1b12f7a0" kindref="member" tooltip="Check for one particular bitmask value.">eventType</ref>(<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ac05adfe37c466a5eedbb5991a0063481aab5db53c3e4e61ccac5962fb23fa3771" kindref="member" tooltip="true: simulation, false: data">xAOD::EventInfo::IS_SIMULATION</ref>)<sp/>)<sp/>isMC<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isData<sp/>=<sp/>!isMC;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>std::string<sp/>JES_config_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;JES_Full2012dataset_Preliminary_MC14.config&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isData)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d62/classJetCalibrationTool" kindref="compound">JetCalibrationTool</ref>(</highlight><highlight class="stringliteral">&quot;JetCalibToolMine4LC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;JetCollection&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;AntiKt4LCTopo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;ConfigFile&quot;</highlight><highlight class="normal">,JES_config_file);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;CalibSequence&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;EtaJES_Insitu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;IsData&quot;</highlight><highlight class="normal">,isData);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d62/classJetCalibrationTool" kindref="compound">JetCalibrationTool</ref>(</highlight><highlight class="stringliteral">&quot;JetCalibToolMine4EM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;JetCollection&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;AntiKt4EMTopo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;ConfigFile&quot;</highlight><highlight class="normal">,JES_config_file);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;CalibSequence&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;EtaJES_Insitu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;IsData&quot;</highlight><highlight class="normal">,isData);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d62/classJetCalibrationTool" kindref="compound">JetCalibrationTool</ref>(</highlight><highlight class="stringliteral">&quot;JetCalibToolMine4LC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;JetCollection&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;AntiKt4LCTopo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;ConfigFile&quot;</highlight><highlight class="normal">,JES_config_file);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;CalibSequence&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;EtaJES&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;IsData&quot;</highlight><highlight class="normal">,isData);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d62/classJetCalibrationTool" kindref="compound">JetCalibrationTool</ref>(</highlight><highlight class="stringliteral">&quot;JetCalibToolMine4EM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;JetCollection&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;AntiKt4EMTopo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;ConfigFile&quot;</highlight><highlight class="normal">,JES_config_file);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;CalibSequence&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;EtaJES&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;IsData&quot;</highlight><highlight class="normal">,isData);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>m_akt4LCTopoCalibrationTool-&gt;initializeTool(</highlight><highlight class="stringliteral">&quot;xExampleLC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;initializeTool(</highlight><highlight class="stringliteral">&quot;xExampleEM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>METRebuilder<sp/>from<sp/>Reconstruction/MET/METUtilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;AntiKt4LCCalibJets&quot;<sp/>is<sp/>key<sp/>used<sp/>to<sp/>save<sp/>m_akt4CopyJets.first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>default<sp/>inputs<sp/>otherwise<sp/>--<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>https://svnweb.cern.ch/trac/atlasoff/browser/Reconstruction/MET/METUtilities/trunk/Root/METRebuilder.cxx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>m_metRebuilder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/dad/classmet_1_1METRebuilder" kindref="compound">met::METRebuilder</ref>(</highlight><highlight class="stringliteral">&quot;METRebuilderTool&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>m_metRebuilder-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;JetColl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4LCCalibJets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>m_metRebuilder-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;OutputContainer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MET_CalibFinal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>m_metRebuilder-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;OutputTotal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Final&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>m_metRebuilder-&gt;setProperty(<sp/></highlight><highlight class="stringliteral">&quot;SoftTermType&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TrackSoftTerm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>m_metRebuilder-&gt;msg().setLevel(<sp/>MSG::INFO);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_metRebuilder-&gt;initialize()<sp/>){</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;initialize()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>METRebuilder.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>new<sp/>object<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>clear<sp/>them<sp/>after<sp/>each<sp/>execute()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>for<sp/>Muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>m_newMuons<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>m_newMuonsAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/d01/classxAOD_1_1MuonAuxContainer__v3" kindref="compound">xAOD::MuonAuxContainer</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>m_newMuons-&gt;setStore(m_newMuonsAux);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>for<sp/>Electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>m_newElectrons<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>m_newElectronsAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/dde/classxAOD_1_1ElectronAuxContainer__v3" kindref="compound">xAOD::ElectronAuxContainer</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>m_newElectrons-&gt;setStore(m_newElectronsAux);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>for<sp/>TauJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>m_newTauJets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TauJetContainer</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>m_newTauJetsAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d84/classxAOD_1_1TauJetAuxContainer__v2" kindref="compound">xAOD::TauJetAuxContainer</ref>();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>m_newTauJets-&gt;setStore(m_newTauJetsAux);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shallow<sp/>copy<sp/>used<sp/>for<sp/>AntiKt4LCTopo<sp/>jets.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_akt4CopyJets<sp/>in<sp/>xExampleEDM.h<sp/>includes<sp/>all<sp/>jets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>View<sp/>container<sp/>provides<sp/>access<sp/>to<sp/>selected<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>m_akt4ViewJets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>used<sp/>for<sp/>AntiKt4EMTopo<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>m_aktem4NewJets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>m_aktem4NewJetsAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/dc1/classxAOD_1_1JetAuxContainer__v1" kindref="compound">xAOD::JetAuxContainer</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>m_aktem4NewJets-&gt;setStore(m_aktem4NewJetsAux);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>NOT<sp/>initialize<sp/>containers<sp/>for<sp/>rebuilt<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>done<sp/>in<sp/>METRebuilder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1a3b1d1bcec52ba29b46471b0878f52bf6" kindref="member">xExample :: execute</ref><sp/>(){</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>you<sp/>do<sp/>everything<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>on<sp/>every<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>events,<sp/>e.g.<sp/>read<sp/>input<sp/>variables,<sp/>apply<sp/>cuts,<sp/>and<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>histograms<sp/>and<sp/>trees.<sp/><sp/>This<sp/>is<sp/>where<sp/>most<sp/>of<sp/>your<sp/>actual<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>will<sp/>go.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Want<sp/>to<sp/>run<sp/>on<sp/>both<sp/>full<sp/>and<sp/>derived<sp/>xAOD<sp/>with<sp/>various<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Hence<sp/>test<sp/>containers<sp/>with<sp/>contains()<sp/>and<sp/>skip<sp/>if<sp/>missing<sp/>rather</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>exiting<sp/>as<sp/>in<sp/>tutorials.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_eventCounter==0)<sp/>m_startTime<sp/>=<sp/>time(NULL);<sp/></highlight><highlight class="comment">//time<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(m_eventCounter<sp/>%<sp/>100)<sp/>==0<sp/>){</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Event<sp/>number<sp/>=<sp/>%i&quot;</highlight><highlight class="normal">,<sp/>m_eventCounter<sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>m_eventCounter++;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>EventInfo</highlight></codeline>
<codeline lineno="478"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>*<sp/>eventInfo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(<sp/>eventInfo,<sp/></highlight><highlight class="stringliteral">&quot;EventInfo&quot;</highlight><highlight class="normal">).isSuccess()<sp/>){</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>EventInfo<sp/>collection.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMC<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a58b04e0f3b70be5c1b2cb7ec1b12f7a0" kindref="member" tooltip="Check for one particular bitmask value.">eventType</ref>(<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ac05adfe37c466a5eedbb5991a0063481aab5db53c3e4e61ccac5962fb23fa3771" kindref="member" tooltip="true: simulation, false: data">xAOD::EventInfo::IS_SIMULATION</ref>)<sp/>)<sp/>isMC<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>relative<sp/>event<sp/>weights,<sp/>necessary<sp/>for<sp/>JZxW<sp/>jets,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Overall<sp/>weight<sp/>is<sp/>sigma*efficiency/Nevent,<sp/>where<sp/>sigma<sp/>and<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>efficiency<sp/>are<sp/>gotten<sp/>from<sp/>AMI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>weights<sp/>=<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1aaa66353a56b59ede862025d543c2f97f" kindref="member" tooltip="The weights of all the MC events used in the simulation.">mcEventWeights</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>weights.size()<sp/>&gt;<sp/>0<sp/>)<sp/>wt<sp/>=<sp/>weights[0];</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pileup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intactual&quot;</highlight><highlight class="normal">]-&gt;Fill(eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a83e577703e798c1f1ae1fb42df600d0f" kindref="member">actualInteractionsPerCrossing</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intaverage&quot;</highlight><highlight class="normal">]-&gt;Fill(eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ab1793eb8b17b868d32f441dea04c7a31" kindref="member">averageInteractionsPerCrossing</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intdiff&quot;</highlight><highlight class="normal">]-&gt;Fill(eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a83e577703e798c1f1ae1fb42df600d0f" kindref="member">actualInteractionsPerCrossing</ref>()<sp/>-<sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ab1793eb8b17b868d32f441dea04c7a31" kindref="member">averageInteractionsPerCrossing</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Primary<sp/>vertices</highlight></codeline>
<codeline lineno="507"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>primary<sp/>vertices.<sp/>First<sp/>vertex<sp/>has<sp/>\max<sp/>\sum<sp/>p_T^2?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>cache<sp/>\sum<sp/>pt^2<sp/>--<sp/>xAOD::Vertex<sp/>only<sp/>has<sp/>multiplicity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::VertexContainer</ref>*<sp/>pVertices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(pVertices,</highlight><highlight class="stringliteral">&quot;PrimaryVertices&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>PrimaryVertices.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>first<sp/>vertex<sp/>is<sp/>correct<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>pVertex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pVertices-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>()<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>pVertex<sp/>=<sp/>(*pVertices)[0];</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>primary<sp/>vertex.<sp/>Exiting&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>\sum<sp/>pt^2<sp/>for<sp/>vertices.<sp/>Will<sp/>be<sp/>incorrect<sp/>if<sp/>tracks<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thinned,<sp/>so<sp/>do<sp/>not<sp/>replace<sp/>primary<sp/>vertex<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>check<sp/>validity<sp/>of<sp/>*all*<sp/>ElementLinks.<sp/>Otherwise<sp/>code<sp/>may<sp/>die</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>run<sp/>on<sp/>derived<sp/>xAOD<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>nv2<sp/>and<sp/>nv5<sp/>will<sp/>be<sp/>*wrong*<sp/>if<sp/>tracks<sp/>are<sp/>thinned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iVertex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pt2PV<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nv2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nv5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::VertexContainer::const_iterator</ref><sp/>vtxItr<sp/>=<sp/>pVertices-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::VertexContainer::const_iterator</ref><sp/>vtxItrE<sp/>=<sp/>pVertices-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivtx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>vtxItr!=vtxItrE;<sp/>++vtxItr){</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>++ivtx;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntrkv<sp/>=<sp/>(*vtxItr)-&gt;nTrackParticles();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ntrkv<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ntrkv<sp/>&gt;<sp/>1<sp/>)<sp/>++nv2;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ntrkv<sp/>&gt;<sp/>4<sp/>)<sp/>++nv5;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>primary<sp/>vertex<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>ElementLink&lt;xAOD::TrackParticleContainer&gt;<sp/>&gt;<sp/>vxTracks<sp/>=<sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*vtxItr)-&gt;trackParticleLinks();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptsum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>it=0;<sp/>it&lt;vxTracks.size();<sp/>++it){</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(vxTracks[it]).isValid()<sp/>){</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dereference<sp/>an<sp/>ElementLink<sp/>to<sp/>get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>trkit<sp/>=<sp/>*(vxTracks[it]);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>trkit<sp/>)<sp/>ptsum<sp/>+=<sp/>trkit-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a604c64ea8bf6798578e67def61bd6389" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>().Perp2();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptsum<sp/>&gt;<sp/>pt2PV<sp/>){</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pt2PV<sp/>=<sp/>ptsum;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iVertex<sp/>=<sp/>ivtx;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z0PV<sp/>=<sp/>pVertex-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a9173ecba7b08275d3438d274a4869814" kindref="member" tooltip="Returns the z position.">z</ref>();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntrkVertex<sp/>=<sp/>pVertex-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a24fcd904109cdb65100d8087d7d2caf1" kindref="member" tooltip="Get the number of tracks associated with this vertex.">nTrackParticles</ref>();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>histograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxntrk&quot;</highlight><highlight class="normal">]-&gt;Fill(ntrkVertex,<sp/>wt);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxidx&quot;</highlight><highlight class="normal">]-&gt;Fill(std::min(iVertex,49),<sp/>wt);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxz0&quot;</highlight><highlight class="normal">]-&gt;Fill(z0PV,<sp/>wt);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxn2&quot;</highlight><highlight class="normal">]-&gt;Fill(nv2,<sp/>wt);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxn5&quot;</highlight><highlight class="normal">]-&gt;Fill(nv5,<sp/>wt);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>particles</highlight></codeline>
<codeline lineno="579"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>information<sp/>in<sp/>xAOD<sp/>has<sp/>linked<sp/>TruthParticle<sp/>and<sp/>TruthVertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>containers.<sp/>Particles<sp/>have<sp/>parent<sp/>and<sp/>decay<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>follow<sp/>sequence<sp/>of<sp/>decays<sp/>to<sp/>find<sp/>all<sp/>descendants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TruthParticleContainer</ref>*<sp/>truths<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Following<sp/>mainly<sp/>relevant<sp/>to<sp/>ttbar<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>const<sp/>xAOD::TruthParticle*<sp/>&gt;<sp/>bHadrons;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>wLeptons;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>wElectrons;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>wMuons;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>wTauJets;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>const<sp/>xAOD::TruthParticle*<sp/>&gt;<sp/>wkids;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isMC<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eTruth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTruth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>TruthParticle,<sp/>NOT<sp/>TruthParticles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>contains()<sp/>test<sp/>to<sp/>avoid<sp/>warning<sp/>message<sp/>for<sp/>each<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TruthParticleContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;TruthParticle&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(<sp/>truths,<sp/></highlight><highlight class="stringliteral">&quot;TruthParticle&quot;</highlight><highlight class="normal"><sp/>)<sp/>){</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>TruthParticle.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>TruthParticle.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MC<sp/>samples<sp/>may<sp/>not<sp/>contain<sp/>truth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>truths<sp/>){</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::TruthParticleContainer::const_iterator</ref><sp/>tpItr<sp/>=<sp/>truths-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::TruthParticleContainer::const_iterator</ref><sp/>tpItrE<sp/>=<sp/>truths-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stable<sp/>particles<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>for<sp/>PowhegPythia<sp/>ttbar!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Powheg<sp/>has<sp/>detached<sp/>W&apos;s<sp/>with<sp/>status==3<sp/>children<sp/>and<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stable<sp/>descendants.<sp/>Remove<sp/>status!=1<sp/>and<sp/>no<sp/>decayVtx().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>tpItr<sp/>!=<sp/>tpItrE;<sp/>++tpItr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(*tpItr)-&gt;m()<sp/>gives<sp/>ZERO<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generator<sp/>stable<sp/>particles<sp/>have<sp/><sp/>status==1<sp/>&amp;&amp;<sp/>barcode&lt;100000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>status==1<sp/>particles<sp/>are<sp/>from<sp/>pileup<sp/>or<sp/>Geant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGS<sp/>=<sp/>(*tpItr)-&gt;status()==1<sp/>&amp;&amp;<sp/>(*tpItr)-&gt;barcode()&lt;100000;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isGS<sp/>){</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tppt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpptlo&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*tpItr)-&gt;pt()<sp/>&gt;<sp/>0<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nTruth;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTruth<sp/>+=<sp/>(*tpItr)-&gt;e();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>isGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stable<sp/>particles<sp/>with<sp/>decay<sp/>vertex<sp/>give<sp/>Geant<sp/>secondaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>vertex<sp/>location<sp/>and<sp/>particle<sp/>type<sp/>to<sp/>see<sp/>what<sp/>is<sp/>being<sp/>kept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isGS<sp/>&amp;&amp;<sp/>(*tpItr)-&gt;hasDecayVtx()<sp/>){</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1" kindref="compound">xAOD::TruthVertex</ref>*<sp/>dvtx<sp/>=<sp/>(*tpItr)-&gt;decayVtx();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dvtx<sp/>){</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxr&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>dvtx-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1af35117431775cc1c1f3e75851bff8f76" kindref="member" tooltip="Vertex transverse distance from the beam line.">perp</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dvtx-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1af35117431775cc1c1f3e75851bff8f76" kindref="member" tooltip="Vertex transverse distance from the beam line.">perp</ref>()<sp/>&gt;<sp/>0<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>dvtx-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1a14ffef8b6d1e8c59193c7dc0b19db428" kindref="member" tooltip="Vertex pseudorapidity.">eta</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idabs<sp/>=<sp/>std::abs(<sp/>(*tpItr)-&gt;pdgId()<sp/>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>all<sp/>hadrons<sp/>as<sp/>id=99</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxidin&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>std::min(idabs,99)<sp/>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B<sp/>hadrons<sp/>-<sp/>plot<sp/>and<sp/>save<sp/>TruthParticle*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isBHadron(*tpItr)<sp/>){</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpbpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpbeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bHadrons.push_back(*tpItr);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W<sp/>leptonic<sp/>decays<sp/>-<sp/>e/mu/tau<sp/>among<sp/>first<sp/>generation<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generator<sp/>specific:<sp/>used<sp/>mainly<sp/>with<sp/>PowhegPythia6<sp/>ttbar<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>possible<sp/>virtual<sp/>W<sp/>in<sp/>B<sp/>decays<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>abs((*tpItr)-&gt;pdgId())<sp/>==<sp/>24<sp/>&amp;&amp;<sp/>(*tpItr)-&gt;p4().M()<sp/>&gt;<sp/>5000<sp/>){</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>badW<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hadW<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1" kindref="compound">xAOD::TruthVertex</ref>*<sp/>dvtx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*tpItr)-&gt;hasDecayVtx()<sp/>)<sp/>(*tpItr)-&gt;decayVtx();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>valid<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dvtx<sp/>){</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>ElementLink&lt;xAOD::TruthParticleContainer&gt;<sp/>&gt;&amp;<sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outPart<sp/>=<sp/>dvtx-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1a176e729a6c2fbcc9ccd2a96c1fce1d05" kindref="member" tooltip="Get all the outgoing particles.">outgoingParticleLinks</ref>();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lepIda<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;outPart.size();<sp/>++k){</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>(outPart[k]).isValid()<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>kid<sp/>=<sp/>*(outPart[k]);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>kid<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kidId<sp/>=<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1acb4c67ce31fc8b37847f8a31e79a4c" kindref="member" tooltip="PDG ID code.">pdgId</ref>();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kidIda<sp/>=<sp/>std::abs(kidId);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>self-decays,<sp/>W<sp/>-&gt;<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kidId<sp/>==<sp/>(*tpItr)-&gt;pdgId()<sp/>)<sp/>badW<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PowhegPythia6<sp/>has<sp/>W&apos;s<sp/>with<sp/>no<sp/>real<sp/>descendants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>!(kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a13d49b87d6fd9148a716341be8253ed9" kindref="member" tooltip="The decay vertex of this particle.">decayVtx</ref>())<sp/>)<sp/>badW<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!badW<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpwkid&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1acb4c67ce31fc8b37847f8a31e79a4c" kindref="member" tooltip="PDG ID code.">pdgId</ref>()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>leptonic<sp/>W<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kidIda==11<sp/>||<sp/>kidIda==13<sp/>||<sp/>kidIda==15<sp/>){</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hadW<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lepIda<sp/>=<sp/>std::abs(kidId);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wLeptons.push_back(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>()<sp/>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>non-neutrino<sp/>stable<sp/>descendants,<sp/>including<sp/>leptons,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>photons,<sp/>and<sp/>hadrons<sp/>from<sp/>taus.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getDescendants<sp/>replaces<sp/>HepMC<sp/>descendants<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!hadW<sp/>&amp;&amp;<sp/>!badW<sp/>){</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDescendants(<sp/>(*tpItr),<sp/>wkids<sp/>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pwvis;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nuemu<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wkids.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>kid<sp/>=<sp/>wkids[kk];</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ida<sp/>=<sp/>std::abs(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1acb4c67ce31fc8b37847f8a31e79a4c" kindref="member" tooltip="PDG ID code.">pdgId</ref>()<sp/>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ida==12<sp/>||<sp/>ida==14<sp/>)<sp/>nuemu<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()==1<sp/>&amp;&amp;<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a67b81d8c6616ba826f9694ff24b613d4" kindref="member">barcode</ref>()&lt;100000<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ida!=12<sp/>&amp;&amp;<sp/>ida!=14<sp/>&amp;&amp;<sp/>ida!=16<sp/>){</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwvis<sp/>+=<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lepIda==11<sp/>)<sp/>wElectrons.push_back(<sp/>pwvis<sp/>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lepIda==13<sp/>)<sp/><sp/>wMuons.push_back(<sp/>pwvis<sp/>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lepIda==15<sp/>&amp;&amp;<sp/>!nuemu<sp/>)<sp/>wTauJets.push_back(<sp/>pwvis<sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>id==24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>tpItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>multiplicity<sp/>and<sp/>energy<sp/>(Ecm<sp/>hard<sp/>coded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expect<sp/>eTruth<sp/>=<sp/>Ecm,<sp/>but<sp/>not<sp/>true<sp/>for<sp/>PowhegPythia6<sp/>ttbar<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Ecm<sp/>=<sp/>8000.;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpnum&quot;</highlight><highlight class="normal">]-&gt;Fill(nTruth,<sp/>wt);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpsum&quot;</highlight><highlight class="normal">]-&gt;Fill(eTruth/1000.<sp/>-<sp/>Ecm,<sp/>wt);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpsumlo&quot;</highlight><highlight class="normal">]-&gt;Fill(eTruth/1000.<sp/>-<sp/>Ecm,<sp/>wt);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>truths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>isMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Muons</highlight></codeline>
<codeline lineno="736"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>Muons<sp/>from<sp/>the<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>m_muons<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;Muons&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(m_muons,<sp/></highlight><highlight class="stringliteral">&quot;Muons&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>Muons.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>Muons.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_muons<sp/>){</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>muItr<sp/>=<sp/>m_muons-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>muItrE<sp/>=<sp/>m_muons-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>muItr<sp/>!=<sp/>muItrE;<sp/>++muItr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mupt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*muItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mueta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*muItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muphi&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*muItr)-&gt;phi()/M_PI<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mutype<sp/>=<sp/>(*muItr)-&gt;muonType();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mutype&quot;</highlight><highlight class="normal">]-&gt;Fill(mutype,<sp/>wt);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>muquality<sp/>=<sp/>(*muItr)-&gt;quality();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muquality&quot;</highlight><highlight class="normal">]-&gt;Fill(muquality,<sp/>wt);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mutype!=xAOD::Muon::Combined<sp/>||<sp/>muquality!=xAOD::Muon::Tight)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>have<sp/>Muon<sp/>CP<sp/>tools<sp/>yet,<sp/>so<sp/>just<sp/>copy&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Would<sp/>be<sp/>done<sp/>internally<sp/>by<sp/>CP<sp/>correctedCopy()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>*<sp/>tmpmu<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpmu-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(**muItr);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_newMuons-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(tmpmu);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>muItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>from<sp/>m_newMuons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>muItr<sp/>=<sp/>m_newMuons-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>muItrE<sp/>=<sp/>m_newMuons-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>muItr!=muItrE;<sp/>++muItr){</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>*<sp/>amuon<sp/>=<sp/>(*muItr);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()<sp/>&lt;<sp/>20000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mugoodpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mugoodeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Isolation<sp/>variables<sp/>are<sp/>track<sp/>ptcone20,ptcone30,ptcone40<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calorimeter<sp/>etcone20,etcone30,etcone40.<sp/>Do<sp/>just<sp/>one:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptc30<sp/>=<sp/>-666.;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a0f955a0deee65306b56220533b4d7cd9" kindref="member" tooltip="Accessor for Isolation values. If &amp;#39;information&amp;#39; is stored in this xAOD::Muon...">isolation</ref>(ptc30,<sp/>xAOD::Iso::ptcone30);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muptc30&quot;</highlight><highlight class="normal">]-&gt;Fill(ptc30/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dereference<sp/>an<sp/>ElementLink<sp/>to<sp/>get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>pt<sp/>of<sp/>inner<sp/>detector<sp/>track<sp/>and<sp/>muon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>idlink<sp/>=</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>idlink.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>idtrack<sp/>=<sp/>*idlink;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>idtrack<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muidrat&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>idtrack-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a4354004bc5b79bf39d3ea87ed4347387" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>muItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Electrons</highlight></codeline>
<codeline lineno="809"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>m_electrons<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;ElectronCollection&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(m_electrons,<sp/></highlight><highlight class="stringliteral">&quot;ElectronCollection&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>ElectronCollection.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>ElectronCollection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_electrons<sp/>){</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Electron<sp/>inherits<sp/>from<sp/>Egamma,<sp/>which<sp/>contains<sp/>most<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isolation<sp/>for<sp/>Muon<sp/>but<sp/>isolationValue<sp/>for<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iso<sp/>for<sp/>Muon<sp/>but<sp/>EgammaParameters<sp/>for<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>eItr<sp/>=<sp/>m_electrons-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>eItrE<sp/>=<sp/>m_electrons-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>eItr<sp/>!=<sp/>eItrE;<sp/>++eItr){</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pel<sp/>=<sp/>(*eItr)-&gt;p4();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*eItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eleta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*eItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elphi&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*eItr)-&gt;phi()/M_PI<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elauthor&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*eItr)-&gt;author()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>good<sp/>electrons<sp/>-<sp/>no<sp/>CP<sp/>tools<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>egood<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*eItr)-&gt;auxdata&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;Tight&quot;</highlight><highlight class="normal">)<sp/>)<sp/>egood<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgood&quot;</highlight><highlight class="normal">]-&gt;Fill(egood,<sp/>wt);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!egood<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>have<sp/>Electron<sp/>CP<sp/>tools<sp/>yet,<sp/>so<sp/>just<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Would<sp/>be<sp/>done<sp/>internally<sp/>by<sp/>CP<sp/>correctedCopy()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>tmpel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpel-&gt;makePrivateStore(**eItr);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(tmpel);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>from<sp/>m_newElectrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>eItr<sp/>=<sp/>m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>eItrE<sp/>=<sp/>m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>eItr!=eItrE;<sp/>++eItr){</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>anelectron<sp/>=<sp/>(*eItr);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>anelectron-&gt;pt()<sp/>&lt;<sp/>20000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pel<sp/>=<sp/>anelectron-&gt;p4();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgoodpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>anelectron-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgoodeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>anelectron-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elntrk&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>anelectron-&gt;nTrackParticles()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pttrk<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>anelectron-&gt;nTrackParticles()<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pttrk<sp/>=<sp/>fabs(<sp/>anelectron-&gt;trackParticle(0)-&gt;pt()<sp/>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pttrk&gt;0<sp/>)<sp/>pttrk<sp/>=<sp/>anelectron-&gt;pt()/pttrk;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eleoverp&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>pttrk<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>isolation<sp/>variables<sp/>as<sp/>for<sp/>muon<sp/>but<sp/>different<sp/>syntax:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isolation<sp/>for<sp/>Muon<sp/>but<sp/>isolationValue<sp/>for<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iso<sp/>for<sp/>Muon<sp/>but<sp/>EgammaParameters<sp/>for<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>etc30<sp/>=<sp/>-666.;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>anelectron-&gt;isolationValue(etc30,<sp/>xAOD::Iso::etcone30);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eletc30&quot;</highlight><highlight class="normal">]-&gt;Fill(etc30,<sp/>wt);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>to<sp/>truth<sp/>electrons<sp/>from<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>4-vector<sp/>is<sp/>sum<sp/>of<sp/>e<sp/>+<sp/>gammas<sp/>from<sp/>W<sp/>descendants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtrue<sp/>=<sp/>0.999;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pttrue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wElectrons.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drkk<sp/>=<sp/>pel.DeltaR(<sp/>wElectrons[kk]<sp/>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>drkk<sp/>&lt;<sp/>rtrue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtrue<sp/>=<sp/>drkk;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pttrue<sp/>=<sp/>wElectrons[kk].Perp();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eldrtrue&quot;</highlight><highlight class="normal">]-&gt;Fill(rtrue,wt);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rtrue<sp/>&lt;<sp/>0.1<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elptrat&quot;</highlight><highlight class="normal">]-&gt;Fill(anelectron-&gt;pt()/pttrue,<sp/>wt);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>for<sp/>eItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TauJets</highlight></codeline>
<codeline lineno="901"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>TauJets<sp/>from<sp/>the<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>m_tauJets<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TauJetContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;TauRecContainer&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(m_tauJets,<sp/></highlight><highlight class="stringliteral">&quot;TauRecContainer&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>TauRecContainer.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>TauRecContainer.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_tauJets<sp/>){</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::TauJetContainer::const_iterator</ref><sp/>tauItr<sp/>=<sp/>m_tauJets-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::TauJetContainer::const_iterator</ref><sp/>tauItrE<sp/>=<sp/>m_tauJets-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>tauItr<sp/>!=<sp/>tauItrE;<sp/>++tauItr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>ptau<sp/>=<sp/>(*tauItr)-&gt;p4();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taupt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*tauItr)-&gt;pt()<sp/>&lt;<sp/>20000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taueta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauphi&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;phi()/M_PI<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TauID<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tauLoose<sp/>=<sp/></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tauItr)-&gt;isTau(<sp/>xAOD::TauJetParameters::JetBDTSigLoose<sp/>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tauMedium<sp/>=<sp/></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tauItr)-&gt;isTau(<sp/>xAOD::TauJetParameters::JetBDTSigMedium<sp/>);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tauTight<sp/>=<sp/></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tauItr)-&gt;isTau(<sp/>xAOD::TauJetParameters::JetBDTSigTight<sp/>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tauLoose<sp/>)<sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">]-&gt;Fill(1,<sp/>wt);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tauMedium<sp/>)<sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">]-&gt;Fill(2,<sp/>wt);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tauTight<sp/>)<sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">]-&gt;Fill(3,<sp/>wt);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bdt<sp/>=<sp/>(*tauItr)-&gt;discriminant(<sp/>xAOD::TauJetParameters::BDTJetScore<sp/>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taubdt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>bdt<sp/>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!tauTight<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>tight<sp/>Electron<sp/>overlaps,<sp/>DeltaR<sp/>&lt;<sp/>0.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtaue<sp/>=<sp/>1.999;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ie=0;<sp/>ie&lt;m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>();<sp/>++ie){</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>elie<sp/>=<sp/>(*m_newElectrons)[ie];</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dr<sp/>=<sp/>ptau.DeltaR(elie-&gt;p4());</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dr<sp/>&lt;<sp/>rtaue<sp/>)<sp/>rtaue<sp/>=<sp/>dr;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;taudrelvpt&quot;</highlight><highlight class="normal">]-&gt;Fill(ptau.Perp()/1000.,rtaue,wt);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rtaue<sp/>&lt;<sp/>0.2<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>have<sp/>TauJet<sp/>CP<sp/>tools<sp/>yet,<sp/>so<sp/>just<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Would<sp/>be<sp/>done<sp/>internally<sp/>by<sp/>CP<sp/>correctedCopy()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>*<sp/>tmptau<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>();</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmptau-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(**tauItr);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_newTauJets-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(tmptau);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>for<sp/>tauItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>from<sp/>m_newTauJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>tauItr<sp/>=<sp/>m_newTauJets-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>tauItrE<sp/>=<sp/>m_newTauJets-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>tauItr!=tauItrE;<sp/>++tauItr){</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*tauItr)-&gt;pt()<sp/>&lt;<sp/>40000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>ptau<sp/>=<sp/>(*tauItr)-&gt;p4();</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bdt<sp/>=<sp/>(*tauItr)-&gt;discriminant(<sp/>xAOD::TauJetParameters::BDTJetScore<sp/>);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodbdt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>bdt<sp/>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exercise<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tau-&gt;nTracks()<sp/>gives<sp/>segfault.<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>true<sp/>in<sp/>_r5591_r5625</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/***********</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[&quot;taugoodntrk&quot;]-&gt;Fill(<sp/>(*tauItr)-&gt;nTracks()<sp/>);</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>ElementLink&lt;xAOD::TrackParticleContainer&gt;<sp/>&gt;<sp/>tautrks<sp/>=</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tauItr)-&gt;trackLinks();</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for(unsigned<sp/>int<sp/>it=0;<sp/>it&lt;tautrks.size();<sp/>++it){</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>!(tautrks[it]).isValid()<sp/>)<sp/>continue;</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>xAOD::TrackParticle*<sp/>trk<sp/>=<sp/>*(tautrks[it]);</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>trk<sp/>)<sp/>m_TH1[&quot;taugoodptrtrk&quot;]-&gt;Fill(<sp/>trk-&gt;pt()/(*tauItr)-&gt;pt(),<sp/>wt);</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>***********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>to<sp/>W<sp/>-&gt;<sp/>hadtau<sp/>nu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtrue<sp/>=<sp/>0.999;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pttrue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wTauJets.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>wTauJets[kk].Perp()&lt;=0<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drkk<sp/>=<sp/>ptau.DeltaR(<sp/>wTauJets[kk]<sp/>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>drkk<sp/>&lt;<sp/>rtrue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtrue<sp/>=<sp/>drkk;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pttrue<sp/>=<sp/>wTauJets[kk].Perp();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>to<sp/>truth<sp/>W<sp/>-&gt;<sp/>tau<sp/>nu,<sp/>!tau<sp/>-&gt;<sp/>e,mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>all<sp/>isGenStable<sp/>decay<sp/>products<sp/>other<sp/>than<sp/>neutrinos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taudrtrue&quot;</highlight><highlight class="normal">]-&gt;Fill(rtrue,<sp/>wt);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rtrue&lt;0.1<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauptrat&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;pt()/pttrue<sp/>);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>for<sp/>tauItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;wTauJets.size();<sp/>++i){</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tautruept&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>wTauJets[i].Perp()/1000.<sp/>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>wTauJets[i].Perp()&lt;=<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tautrueeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>wTauJets[i].PseudoRapidity()<sp/>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_tauJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4Truth<sp/>Jets</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>m_akt4TruthJets<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isMC<sp/>){</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;AntiKt4TruthJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(m_akt4TruthJets,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4TruthJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>AntiKt4TruthJets.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>AntiKt4TruthJets.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_akt4TruthJets<sp/>){</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>aktT4Itr<sp/>=<sp/>m_akt4TruthJets-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>aktT4ItrE<sp/>=<sp/>m_akt4TruthJets-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>aktT4Itr<sp/>!=<sp/>aktT4ItrE;<sp/>++aktT4Itr){</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>(*aktT4Itr)-&gt;p4();</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>leptonic<sp/>W<sp/>decays<sp/>from<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rlep<sp/>=<sp/>1.999;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wLeptons.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drkk<sp/>=<sp/>pjet.DeltaR(<sp/>wLeptons[kk]<sp/>);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlep<sp/>=<sp/>TMath::Min(rlep,drkk);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rlep<sp/>&lt;<sp/>0.4<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptj<sp/>=<sp/>(*aktT4Itr)-&gt;pt()/1000.;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4pt&quot;</highlight><highlight class="normal">]-&gt;Fill(ptj,<sp/>wt);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4ptlo&quot;</highlight><highlight class="normal">]-&gt;Fill(ptj,<sp/>wt);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4eta&quot;</highlight><highlight class="normal">]-&gt;Fill((*aktT4Itr)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4phi&quot;</highlight><highlight class="normal">]-&gt;Fill((*aktT4Itr)-&gt;phi()/M_PI,<sp/>wt);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_akt4TruthJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>isMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4LCTopo<sp/>Jets<sp/>and<sp/>B<sp/>jets</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;AntiKt4LCTopoJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(m_akt4Jets,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4LCTopoJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>AntiKt4LCTopoJets.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>AntiKt4LCTopoJets.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reconstructed<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>shallow<sp/>copy<sp/>using<sp/>variables<sp/>in<sp/>xExampleEDM.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>m_badJetPtMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_akt4Jets<sp/>){</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4CopyJets<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a085ed78569d97f9ff21bea6a65b4aea3" kindref="member">xAOD::shallowCopyContainer</ref>(<sp/>*m_akt4Jets<sp/>);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">xAOD::JetContainer::iterator</ref><sp/>akt4Itr<sp/>=<sp/><sp/>(m_akt4CopyJets.first)-&gt;begin();</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">xAOD::JetContainer::iterator</ref><sp/>akt4ItrE<sp/>=<sp/>(m_akt4CopyJets.first)-&gt;end();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>akt4Itr<sp/>!=<sp/>akt4ItrE;<sp/>++akt4Itr){</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGood<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>(*akt4Itr)-&gt;p4();</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref><sp/>p4aod<sp/>=<sp/>(*akt4Itr)-&gt;jetP4();</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptj<sp/>=<sp/>(*akt4Itr)-&gt;pt()/1000.;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>cleaning<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_jetCleaningTool-&gt;accept(**akt4Itr)<sp/>){</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptbad&quot;</highlight><highlight class="normal">]-&gt;Fill(ptj,<sp/>wt);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4etabad&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isGood<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Appropriate<sp/>scale<sp/>for<sp/>bad<sp/>jet?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_badJetPtMax<sp/>=<sp/>std::max(m_badJetPtMax,<sp/>ptj);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>JetCalibration<sp/>tool.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibration<sp/>already<sp/>applied<sp/>in<sp/>valid1<sp/>samples;<sp/>applying<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>makes<sp/>JES<sp/>worse.<sp/>Should<sp/>apply<sp/>to<sp/>old<sp/>scale.<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JetArea<sp/>pileup<sp/>subtraction<sp/>applied<sp/>in<sp/>mc14<sp/>samples,<sp/>so<sp/>omit<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>xExample::initialize().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>jetP4(),<sp/>setJetP4()<sp/>use<sp/>JetFourMom_t,<sp/>which<sp/>is<sp/>a<sp/>Math::LorentzVector,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>a<sp/>TLorentzVector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_akt4LCTopoCalibrationTool-&gt;applyCalibration(**akt4Itr)<sp/>){</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>apply<sp/>shallow-copy<sp/>calibration.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*akt4Itr)-&gt;setJetP4(</highlight><highlight class="stringliteral">&quot;xaodscale&quot;</highlight><highlight class="normal">,p4aod);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>to<sp/>original<sp/>jets<sp/>needed<sp/>for<sp/>METRebuilder.<sp/>See<sp/>setObjLink<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://twiki.cern.ch/twiki/bin/viewauth/AtlasProtected/METUtilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>do<sp/>this<sp/>for<sp/>EVERY<sp/>jet<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::IParticleContainer &gt;</ref><sp/>link(*m_akt4Jets,(*akt4Itr)-&gt;index());</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_objLinkAcc(**akt4Itr)<sp/>=<sp/>link;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibration<sp/>factors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptj&gt;ptLim[ib]<sp/>&amp;&amp;<sp/>ptj&lt;ptLim[ib+1]<sp/>){</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4calib&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calib<sp/>=<sp/>(*akt4Itr)-&gt;pt()/p4aod.pt();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]-&gt;Fill(calib,<sp/>wt);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>electron<sp/>overlaps<sp/>after<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>omit<sp/>jet<sp/>from<sp/>view<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rjete<sp/>=<sp/>1.999;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ie=0;<sp/>ie&lt;m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>();<sp/>++ie){</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>elie<sp/>=<sp/>(*m_newElectrons)[ie];</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dr<sp/>=<sp/>pjet.DeltaR(elie-&gt;p4());</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dr<sp/>&lt;<sp/>rjete<sp/>)<sp/>rjete<sp/>=<sp/>dr;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4drelvpt&quot;</highlight><highlight class="normal">]-&gt;Fill(pjet.Perp()/1000.,<sp/>rjete,<sp/>wt);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>jet<sp/>if<sp/>not<sp/>removed<sp/>by<sp/>cleaning<sp/>and<sp/>does<sp/>not<sp/>match<sp/>electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rjete<sp/>&gt;<sp/>0.2<sp/>&amp;&amp;<sp/>isGood<sp/>)<sp/>m_akt4ViewJets-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>((*akt4Itr));</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>for<sp/>akt4Itr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>calibrated<sp/>jets<sp/>in<sp/>TStore<sp/>for<sp/>METRebuilder<sp/>in<sp/>m_store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hence<sp/>do<sp/>NOT<sp/>delete<sp/>them<sp/>at<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_store-&gt;record(m_akt4CopyJets.first,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4LCCalibJets&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!m_store-&gt;record(m_akt4CopyJets.second,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4LCCalibJetsAux.&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>record<sp/>AntiKt4LCCalibJets.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>calibration<sp/>plots<sp/>with<sp/>recalibrated<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>akt4Itr2=(m_akt4ViewJets)-&gt;begin();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>akt4Itr2E=(m_akt4ViewJets)-&gt;end();</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>akt4Itr2!=akt4Itr2E;<sp/>++akt4Itr2){</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>ajet<sp/>=<sp/>(*akt4Itr2);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>ajet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1aa8e568b53d3eef9e2a5df94b9dfac8d5" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>();</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref><sp/>p4aod<sp/>=<sp/>ajet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a166db7944b9111045c827ad664fc7883" kindref="member" tooltip="The full 4-momentum of the particle : internal jet type.">jetP4</ref>(</highlight><highlight class="stringliteral">&quot;xaodscale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>calibrated<sp/>to<sp/>truth<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bin<sp/>in<sp/>pttrue,<sp/>so<sp/>do<sp/>before<sp/>pt<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_akt4TruthJets<sp/>){</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drtrue<sp/>=<sp/>666.;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itrue<sp/>=<sp/>-666;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>it=0;<sp/>it&lt;m_akt4TruthJets-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>();<sp/>++it){</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>jit<sp/>=<sp/>(*m_akt4TruthJets)[it];</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drit<sp/>=<sp/>pjet.DeltaR(jit-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1aa8e568b53d3eef9e2a5df94b9dfac8d5" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>());</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>drit<sp/>&lt;<sp/>drtrue<sp/>){</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drtrue<sp/>=<sp/>drit;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itrue<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itrue<sp/>&gt;<sp/>-1<sp/>){</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4drtruecalib&quot;</highlight><highlight class="normal">]-&gt;Fill(drtrue,<sp/>wt);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptjT<sp/>=<sp/>((*m_akt4TruthJets)[itrue])-&gt;pt();</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jescalib<sp/>=<sp/>ajet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/ptjT;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jesaod<sp/>=<sp/>p4aod.pt()/ptjT;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptjT<sp/>=<sp/>ptjT/1000.;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>drtrue<sp/>&lt;<sp/>0.1<sp/>){</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4jesvpt&quot;</highlight><highlight class="normal">]-&gt;Fill(ptjT,jesaod,<sp/>wt);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptjT&gt;ptLim[ib]<sp/>&amp;&amp;<sp/>ptjT&lt;ptLim[ib+1]){</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jescalib&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]-&gt;Fill(jescalib,<sp/>wt);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jes&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str2.c_str()]-&gt;Fill(jesaod,<sp/>wt);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_akt4TruthJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>akt4Itr2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>valid1<sp/>samples<sp/>are<sp/>produced<sp/>with<sp/>calibration;<sp/>applying<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>made<sp/>JES<sp/>worse.<sp/>Hence<sp/>akt4Itr3<sp/>with<sp/>various<sp/>options.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>is<sp/>for<sp/>MC14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>with<sp/>original<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xAOD::JetContainer::const_iterator<sp/>akt4Itr3<sp/>=<sp/>m_akt4Jets-&gt;begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xAOD::JetContainer::const_iterator<sp/>akt4Itr3E<sp/>=<sp/>m_akt4Jets-&gt;end();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>with<sp/>recalibrated<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>akt4Itr3=(m_akt4ViewJets)-&gt;begin();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>akt4Itr3E=(m_akt4ViewJets)-&gt;end();</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>akt4Itr3!=akt4Itr3E;<sp/>++akt4Itr3){</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>ajet<sp/>=<sp/>(*akt4Itr3);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>ajet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1aa8e568b53d3eef9e2a5df94b9dfac8d5" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>();</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>leptonic<sp/>W<sp/>decays<sp/>from<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rlep<sp/>=<sp/>1.999;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wLeptons.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drkk<sp/>=<sp/>pjet.DeltaR(<sp/>wLeptons[kk]<sp/>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlep<sp/>=<sp/>std::min(rlep,drkk);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4rlep&quot;</highlight><highlight class="normal">]-&gt;Fill(rlep,<sp/>wt);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rlep<sp/>&lt;<sp/>0.4<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptj<sp/>=<sp/>(*akt4Itr3)-&gt;pt()/1000.;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4pt&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptlo&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4eta&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4phi&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;phi()/M_PI,<sp/>wt);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>jet<sp/>cuts<sp/>for<sp/>remaining<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*akt4Itr3)-&gt;pt()&lt;20000.<sp/>||<sp/>fabs((*akt4Itr3)-&gt;eta())&gt;2.5<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Jet<sp/>moment<sp/>keys<sp/>listed<sp/>in<sp/>xAODJet/JetAttributes.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>JVF<sp/>for<sp/>all<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>jvfvec<sp/>=<sp/></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*akt4Itr3)-&gt;getAttribute&lt;<sp/>std::vector&lt;float&gt;<sp/>&gt;(xAOD::JetAttribute::JVF);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jvf0<sp/>=<sp/>-666;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)jvfvec.size()<sp/>&gt;<sp/>iVertex<sp/>){</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jvf0<sp/>=<sp/>jvfvec[iVertex];</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>JVF<sp/>index<sp/>%i<sp/>%lu&quot;</highlight><highlight class="normal">,iVertex,jvfvec.size());</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>primary<sp/>vertex<sp/>JVF<sp/>inclusive<sp/>and<sp/>binned<sp/>in<sp/>ptj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal">]-&gt;Fill(jvf0,<sp/>wt);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptj&gt;ptLim[ib]<sp/>&amp;&amp;<sp/>ptj&lt;ptLim[ib+1]<sp/>){</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]-&gt;Fill(jvf0,<sp/>wt);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jvfmax<sp/>=<sp/>-666;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jvfsum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Dummy<sp/>vertex<sp/>at<sp/>end?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii=0;<sp/>ii&lt;jvfvec.size();<sp/>++ii){</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jvfsum<sp/>+=<sp/>jvfvec[ii];</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>jvfvec[ii]<sp/>&gt;<sp/>jvfmax<sp/>)<sp/>jvfmax<sp/>=<sp/>jvfvec[ii];</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>primary<sp/>vertex<sp/>is<sp/>dummy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvftot&quot;</highlight><highlight class="normal">]-&gt;Fill(jvfsum,<sp/>wt);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii=0;<sp/>ii&lt;jvfvec.size()-1;<sp/>++ii<sp/>){</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ii<sp/>!=<sp/>iVertex<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvfx&quot;</highlight><highlight class="normal">]-&gt;Fill(jvfvec[ii]<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>flavor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trueid<sp/>=<sp/>(*akt4Itr3)-&gt;getAttribute&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;TruthLabelID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4trueid&quot;</highlight><highlight class="normal">]-&gt;Fill(trueid,<sp/>wt);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>trueid<sp/>==<sp/>5<sp/>){</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptb&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4etab&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flavor<sp/>tagging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;Probabilities&quot;<sp/>for<sp/>SV1<sp/>and<sp/>IP3D<sp/>make<sp/>no<sp/>sense<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MV1<sp/>is<sp/>always<sp/>zero<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/ded/classxAOD_1_1BTagging" kindref="compound" tooltip="Class for xAOD b-tagging information.">xAOD::BTagging</ref>*<sp/>btag<sp/>=(*akt4Itr3)-&gt;btagging();</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mv1<sp/>=<sp/>btag-&gt;MV1_discriminant();</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4mv1&quot;</highlight><highlight class="normal">]-&gt;Fill(mv1,<sp/>wt);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4sv1b&quot;</highlight><highlight class="normal">]-&gt;Fill(btag-&gt;SV1_pb(),<sp/>wt);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4sv1u&quot;</highlight><highlight class="normal">]-&gt;Fill(btag-&gt;SV1_pu(),<sp/>wt);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4sv1uvb&quot;</highlight><highlight class="normal">]-&gt;Fill(btag-&gt;SV1_pb(),btag-&gt;SV1_pu(),<sp/>wt);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Associated<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>only<sp/>tracks<sp/>with<sp/>at<sp/>least<sp/>1pixel/6SCT<sp/>hits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>pileup<sp/>need<sp/>Delta<sp/>z0<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>work<sp/>with<sp/>thinned<sp/>tracks<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::IParticle*&gt;<sp/>jtracks;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jtracks<sp/>=<sp/>(*akt4Itr3)-&gt;getAssociatedObjects&lt;<ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref>&gt;(<sp/>xAOD::JetAttribute::GhostTrack<sp/>);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntracks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>psum(0,0,0,0);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj=0;<sp/>jj&lt;jtracks.size();<sp/>++jj){</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>trkjj<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(jtracks[jj]);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a4354004bc5b79bf39d3ea87ed4347387" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()<sp/>&lt;<sp/>1000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>npix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>nsct<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(npix,<ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(nsct,<ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4nsitrk&quot;</highlight><highlight class="normal">]-&gt;Fill(npix+nsct,<sp/>wt);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>npix&lt;1<sp/>||<sp/>nsct&lt;6<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>z<sp/>for<sp/>track<sp/>and<sp/>primary<sp/>vertex<sp/>in<sp/>different<sp/>frames<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dz0<sp/>=<sp/>trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a17b0af19adc8a9e13083248aba0b023e" kindref="member" tooltip="Returns the  parameter.">z0</ref>()+trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1ada1ab6f889a4c21e0512a1593cb3d446" kindref="member" tooltip="The z origin for the parameters.">vz</ref>()<sp/>-<sp/>z0PV;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4dz0trk&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>dz0,<sp/>wt);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>std::abs(<sp/>dz0*sin(trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1ab5db486ec9a6ccb7a882fc8fe3cef999" kindref="member" tooltip="Returns the  parameter, which has range 0 to .">theta</ref>()))<sp/>&gt;<sp/>1.5<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ntracks;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>ptrk<sp/>=<sp/>trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a604c64ea8bf6798578e67def61bd6389" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>();</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psum<sp/>+=<sp/>ptrk;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>pjet.DeltaR(ptrk)<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Protect<sp/>against<sp/>occasional<sp/>track<sp/>pt<sp/>&gt;&gt;<sp/>1TeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rat<sp/>=<sp/>psum.Pt()<sp/>/<sp/>(*akt4Itr3)-&gt;pt();</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rat<sp/>=<sp/>std::min(rat,3.0);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptj&gt;ptLim[ib]<sp/>&amp;&amp;<sp/>ptj&lt;ptLim[ib+1]<sp/>){</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]-&gt;Fill(rat,<sp/>wt);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ntrk&quot;</highlight><highlight class="normal">]-&gt;Fill(ntracks<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>for<sp/>akt4Itr3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_akt4Jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4EMTopo<sp/>Jets</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>m_aktem4Jets<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;AntiKt4EMTopoJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(m_aktem4Jets,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4EMTopoJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>AntiKt4EMTopoJets.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>AntiKt4EMTopoJets.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_aktem4Jets<sp/>){</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>aktem4Itr<sp/>=<sp/>m_aktem4Jets-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>aktem4ItrE<sp/>=<sp/>m_aktem4Jets-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>simple<sp/>example<sp/>utilizing<sp/>a<sp/>deep<sp/>copy<sp/>for<sp/>jets<sp/>to<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uncalibrated<sp/>and<sp/>calibrated<sp/>jets<sp/>with<sp/>pt<sp/>&gt;<sp/>100GeV.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>an<sp/>efficient<sp/>way<sp/>to<sp/>make<sp/>this<sp/>trivial<sp/>plot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>njet100<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>aktem4Itr<sp/>!=<sp/>aktem4ItrE;<sp/>++aktem4Itr){</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>(*aktem4Itr)-&gt;p4();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref><sp/>p4aod<sp/>=<sp/>(*aktem4Itr)-&gt;jetP4();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*aktem4Itr)-&gt;pt()<sp/>&gt;<sp/>100000<sp/>)<sp/>++njet100;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>deep<sp/>copy.<sp/>MUST<sp/>initialize<sp/>pointer<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>calibJet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;calibratedCopy(**aktem4Itr,<sp/>calibJet);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calibJet-&gt;setJetP4(</highlight><highlight class="stringliteral">&quot;xaodscale&quot;</highlight><highlight class="normal">,p4aod);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ALWAYS<sp/>give<sp/>ownership<sp/>to<sp/>a<sp/>DataVector,<sp/>which<sp/>can<sp/>delete<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;delete<sp/>calibJet&quot;<sp/>does<sp/>NOT<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_aktem4NewJets-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(calibJet);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>unwanted<sp/>jet.<sp/>STL<sp/>methods<sp/>for<sp/>removing<sp/>items<sp/>from<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>overloaded<sp/>to<sp/>work<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>calibJet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()<sp/>&lt;<sp/>100000<sp/>)<sp/>m_aktem4NewJets-&gt;<ref refid="d0/d4d/classDataVector_1a52881ff983e0d0dd21b23c4d03824b68" kindref="member" tooltip="Remove the last element from the collection.">pop_back</ref>();</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktem4n100&quot;</highlight><highlight class="normal">]-&gt;Fill(njet100,<sp/>wt);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktem4ncalib100&quot;</highlight><highlight class="normal">]-&gt;Fill(m_aktem4NewJets-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_aktem4Jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>ET</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>just<sp/>plot<sp/>(uncalibrated)<sp/>MET<sp/>from<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>*<sp/>METFinals<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;MET_RefFinal&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(METFinals,<sp/></highlight><highlight class="stringliteral">&quot;MET_RefFinal&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>MET_RefFinal.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>MET_RefFinal.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>*<sp/>METTruths<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a3b92c86df4409b99960328dd263792ed" kindref="member" tooltip="Function checking if an object is available from the store.">contains</ref>&lt;<ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;MET_Truth&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_event-&gt;<ref refid="de/d95/classxAOD_1_1TEvent_1a85e9bb280df774885102075cbf7b8e06" kindref="member" tooltip="Retrieve either an input or an output object from the event.">retrieve</ref>(METTruths,<sp/></highlight><highlight class="stringliteral">&quot;MET_Truth&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>MET_Truth.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>MET_Truth.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>MissingETContainer<sp/>has<sp/>multiple<sp/>versions<sp/>labeled<sp/>by<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>METReaderAlg.cxx.<sp/>Examples<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;Final&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*METTruths)[&quot;NonInt&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;RefEle&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*METTruths)[&quot;Int&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;RefGamma&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*METTruths)[&quot;IntOut&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;RefTau&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*METTruths)[&quot;IntMuons&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;RefJet&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;Muons&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;SoftClus&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;SoftClus&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref>*<sp/>metRefFinal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>METFinals<sp/>)<sp/>metRefFinal<sp/>=<sp/>(*METFinals)[</highlight><highlight class="stringliteral">&quot;Final&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref>*<sp/>metTruth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>METTruths<sp/>)<sp/>metTruth<sp/>=<sp/>(*METTruths)[</highlight><highlight class="stringliteral">&quot;NonInt&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>metRefFinal<sp/>){</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metet&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metRefFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metetlo&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metRefFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metsum&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metRefFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1af3599113dcc06aabf7010c053057e488" kindref="member" tooltip="Returns.">sumet</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>metTruth<sp/>){</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettrueet&quot;</highlight><highlight class="normal">]-&gt;Fill(metTruth-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettrueetlo&quot;</highlight><highlight class="normal">]-&gt;Fill(metTruth-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettruesum&quot;</highlight><highlight class="normal">]-&gt;Fill(metTruth-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1af3599113dcc06aabf7010c053057e488" kindref="member" tooltip="Returns.">sumet</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalculate<sp/>MET<sp/>with<sp/>calibrated<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remaining<sp/>inputs<sp/>are<sp/>default<sp/>-<sp/>see<sp/>initialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_metRebuilder-&gt;execute()<sp/>){</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>execute<sp/>METRebuilder.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>new<sp/>MET<sp/>-<sp/>name<sp/>set<sp/>in<sp/>initialize().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>m_metCalibs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_store-&gt;retrieve(m_metCalibs,<sp/></highlight><highlight class="stringliteral">&quot;MET_CalibFinal&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>MET_CalibFinal.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref>*<sp/>metCalibFinal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_metCalibs<sp/>)<sp/>metCalibFinal<sp/>=<sp/>(*m_metCalibs)[</highlight><highlight class="stringliteral">&quot;Final&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Histogram<sp/>new<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>metCalibFinal<sp/>){</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibet&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metCalibFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibetlo&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metCalibFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibsum&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metCalibFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1af3599113dcc06aabf7010c053057e488" kindref="member" tooltip="Returns.">sumet</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>copy<sp/>containers</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copies.<sp/>Clearing<sp/>containers<sp/>deletes<sp/>contents<sp/>including<sp/>AuxStore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>m_newMuons-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>m_newTauJets-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>AntiKt4LCTopo<sp/>shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clearing<sp/>view<sp/>container<sp/>does<sp/>not<sp/>delete<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_akt4CopyJets<sp/>saved<sp/>in<sp/>TStore<sp/>so<sp/>NOT<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>m_akt4ViewJets-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>AntiKt4EMTopo<sp/>deep<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clearing<sp/>container<sp/>deletes<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>m_aktem4NewJets-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>transient<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/>m_store-&gt;clear();</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>with<sp/>a<sp/>message:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>((m_eventCounter-1)<sp/>%<sp/>100)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;===&gt;&gt;&gt;<sp/><sp/>done<sp/>processing<sp/>event<sp/>#%i,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;run<sp/>#%i<sp/>%i<sp/>events<sp/>processed<sp/>so<sp/>far<sp/><sp/>&lt;&lt;&lt;===&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a383bbb9559f9603d5ca13f8a2eb9e280" kindref="member" tooltip="The current event&amp;#39;s event number.">eventNumber</ref>()<sp/>),</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a53c034dc7ca12355747c9d2756627254" kindref="member" tooltip="The current event&amp;#39;s run number.">runNumber</ref>()<sp/>),</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>m_eventCounter<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Processing<sp/>rate<sp/>=<sp/>%f<sp/>Hz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(m_eventCounter)/(time(NULL)-m_startTime));</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1afe9ddc58d85d17cd9c4032e058e90719" kindref="member">xExample :: postExecute</ref><sp/>(){</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>you<sp/>do<sp/>everything<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>after<sp/>the<sp/>main<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>processing.<sp/><sp/>This<sp/>is<sp/>typically<sp/>very<sp/>rare,<sp/>particularly<sp/>in<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>code.<sp/><sp/>It<sp/>is<sp/>mainly<sp/>used<sp/>in<sp/>implementing<sp/>the<sp/>NTupleSvc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1aae27d4891a11f9c4aca1fa7679cd5693" kindref="member">xExample :: finalize</ref><sp/>(){</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>is<sp/>the<sp/>mirror<sp/>image<sp/>of<sp/>initialize(),<sp/>meaning<sp/>it<sp/>gets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>after<sp/>the<sp/>last<sp/>event<sp/>has<sp/>been<sp/>processed<sp/>on<sp/>the<sp/>worker<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>allows<sp/>you<sp/>to<sp/>finish<sp/>up<sp/>any<sp/>objects<sp/>you<sp/>created<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize()<sp/>before<sp/>they<sp/>are<sp/>written<sp/>to<sp/>disk.<sp/><sp/>This<sp/>is<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fairly<sp/>rare,<sp/>since<sp/>this<sp/>happens<sp/>separately<sp/>for<sp/>each<sp/>worker<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Most<sp/>of<sp/>the<sp/>time<sp/>you<sp/>want<sp/>to<sp/>do<sp/>your<sp/>post-processing<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>submission<sp/>node<sp/>after<sp/>all<sp/>your<sp/>histogram<sp/>outputs<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>merged.<sp/><sp/>This<sp/>is<sp/>different<sp/>from<sp/>histFinalize()<sp/>in<sp/>that<sp/>it<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gets<sp/>called<sp/>on<sp/>worker<sp/>nodes<sp/>that<sp/>processed<sp/>input<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref><sp/><ref refid="d1/d66/classxExample_1a5d39323f9ecd624b706a2f460879ed63" kindref="member">xExample :: histFinalize</ref><sp/>(){</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>is<sp/>the<sp/>mirror<sp/>image<sp/>of<sp/>histInitialize(),<sp/>meaning<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gets<sp/>called<sp/>after<sp/>the<sp/>last<sp/>event<sp/>has<sp/>been<sp/>processed<sp/>on<sp/>the<sp/>worker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>node<sp/>and<sp/>allows<sp/>you<sp/>to<sp/>finish<sp/>up<sp/>any<sp/>objects<sp/>you<sp/>created<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>histInitialize()<sp/>before<sp/>they<sp/>are<sp/>written<sp/>to<sp/>disk.<sp/><sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>fairly<sp/>rare,<sp/>since<sp/>this<sp/>happens<sp/>separately<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>worker<sp/>node.<sp/><sp/>Most<sp/>of<sp/>the<sp/>time<sp/>you<sp/>want<sp/>to<sp/>do<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>post-processing<sp/>on<sp/>the<sp/>submission<sp/>node<sp/>after<sp/>all<sp/>your<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>outputs<sp/>have<sp/>been<sp/>merged.<sp/><sp/>This<sp/>is<sp/>different<sp/>from<sp/>finalize()<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>it<sp/>gets<sp/>called<sp/>on<sp/>all<sp/>worker<sp/>nodes<sp/>regardless<sp/>of<sp/>whether</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>processed<sp/>input<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;histFinalize()&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Finished<sp/>processing<sp/>%i<sp/>events&quot;</highlight><highlight class="normal">,m_eventCounter);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;histFinalize()&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Produced<sp/>%i<sp/>retrieve<sp/>warnings&quot;</highlight><highlight class="normal">,<sp/>m_warnCounter);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EL::StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/Root/xExample.cxx"/>
  </compounddef>
</doxygen>
