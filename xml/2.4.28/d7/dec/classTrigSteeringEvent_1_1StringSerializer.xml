<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/dec/classTrigSteeringEvent_1_1StringSerializer" kind="class" prot="public">
    <compoundname>TrigSteeringEvent::StringSerializer</compoundname>
    <includes refid="da/d4a/TrigSteeringEvent_2TrigSteeringEvent_2StringSerializer_8h" local="no">StringSerializer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a49c8624a15989ea7542dd7397505b736" prot="private" static="no" mutable="no">
        <type>std::ostringstream</type>
        <definition>std::ostringstream TrigSteeringEvent::StringSerializer::m_ostream</definition>
        <argsstring></argsstring>
        <name>m_ostream</name>
        <briefdescription>
<para>sstream used in serialization </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="77" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a1e677811c19de13c7b73c0055e241b32" prot="private" static="no" mutable="no">
        <type>std::istringstream</type>
        <definition>std::istringstream TrigSteeringEvent::StringSerializer::m_istream</definition>
        <argsstring></argsstring>
        <name>m_istream</name>
        <briefdescription>
<para>sstream used in de-serialization </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="78" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a0960ec4732b065ac07c09303fbcafeef" prot="private" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char * TrigSteeringEvent::StringSerializer::s_delimiter</definition>
        <argsstring></argsstring>
        <name>s_delimiter</name>
        <initializer> &quot;\n&quot;</initializer>
        <briefdescription>
<para>default delimeter which is put between strings from the input vector while serialization happens </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="79" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a401d3809248a4ad4c8c9e53d5b6adef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TrigSteeringEvent::StringSerializer::serialize</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;strings, std::vector&lt; uint32_t &gt; &amp;storage)</argsstring>
        <name>serialize</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>strings</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes vector of strings into vector of integers</para><para>The number of strings (size of input vector) is put first into the stream. In case the strings is an empty vector the 0 is put into the storage.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>strings</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage</parametername>
</parameternamelist>
<parameterdescription>
<para>is place where serizlized from of stings is appended to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/StringSerializer.cxx" bodystart="11" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a8b7da4b1160954e41a9f773864f8963f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TrigSteeringEvent::StringSerializer::serialize</definition>
        <argsstring>(const std::string &amp;str, std::vector&lt; uint32_t &gt; &amp;storage)</argsstring>
        <name>serialize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/StringSerializer.cxx" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1acebca33171c561c98baa5bdbdfadd6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t TrigSteeringEvent::StringSerializer::deserialize</definition>
        <argsstring>(std::vector&lt; uint32_t &gt;::const_iterator first, std::vector&lt; uint32_t &gt;::const_iterator last, std::vector&lt; std::string &gt; &amp;strings)</argsstring>
        <name>deserialize</name>
        <param>
          <type>std::vector&lt; uint32_t &gt;::const_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32_t &gt;::const_iterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>strings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserialize vector into strings</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>Beginning of &apos;byte-stream&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>End of &apos;byte-stream&apos;, i.e. vector::end() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strings</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of strings to hold result</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of words consumed during deserialization </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/StringSerializer.cxx" bodystart="63" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1ae46f23e9729f09dffc6d21c99cb6d069" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t TrigSteeringEvent::StringSerializer::deserialize</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;storage, std::vector&lt; std::string &gt; &amp;strings)</argsstring>
        <name>deserialize</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>storage</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>strings</declname>
        </param>
        <briefdescription>
<para>Same as above but with vector instead of iterators. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1acfab4b01c1303722807e32b6de1db0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t TrigSteeringEvent::StringSerializer::deserialize</definition>
        <argsstring>(std::vector&lt; uint32_t &gt;::const_iterator first, std::vector&lt; uint32_t &gt;::const_iterator last, std::string &amp;str)</argsstring>
        <name>deserialize</name>
        <param>
          <type>std::vector&lt; uint32_t &gt;::const_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32_t &gt;::const_iterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Deserialize one single string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/StringSerializer.cxx" bodystart="108" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1adc0f259171b66d7988cea31b0252fbfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t TrigSteeringEvent::StringSerializer::deserialize</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;storage, std::string &amp;str)</argsstring>
        <name>deserialize</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>storage</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Deserialize one single string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1aed289487b224d8e62c9eb68451161f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int TrigSteeringEvent::StringSerializer::inquireSize</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;storage)</argsstring>
        <name>inquireSize</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return number of strings serialized into &apos;storage&apos; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="66" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/StringSerializer.cxx" bodystart="120" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1ab7234266c1915b59a90db03d522712ef" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int TrigSteeringEvent::StringSerializer::getPadding</definition>
        <argsstring>(unsigned int sizeToReserve)</argsstring>
        <name>getPadding</name>
        <param>
          <type>unsigned int</type>
          <declname>sizeToReserve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of padding bytes needed to align with uint32_t </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" bodystart="73" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility class (not a tool or so) to serialize strings into stream of 32bit integers. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h" bodystart="19" bodyend="80"/>
    <listofallmembers>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1acebca33171c561c98baa5bdbdfadd6b7" prot="public" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>deserialize</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1ae46f23e9729f09dffc6d21c99cb6d069" prot="public" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>deserialize</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1acfab4b01c1303722807e32b6de1db0bd" prot="public" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>deserialize</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1adc0f259171b66d7988cea31b0252fbfe" prot="public" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>deserialize</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1ab7234266c1915b59a90db03d522712ef" prot="private" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>getPadding</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1aed289487b224d8e62c9eb68451161f5e" prot="public" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>inquireSize</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a1e677811c19de13c7b73c0055e241b32" prot="private" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>m_istream</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a49c8624a15989ea7542dd7397505b736" prot="private" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>m_ostream</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a0960ec4732b065ac07c09303fbcafeef" prot="private" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>s_delimiter</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a401d3809248a4ad4c8c9e53d5b6adef6" prot="public" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>serialize</name></member>
      <member refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a8b7da4b1160954e41a9f773864f8963f" prot="public" virt="non-virtual"><scope>TrigSteeringEvent::StringSerializer</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
