<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/dbb/classTrig_1_1DecisionAccess" kind="class" prot="public">
    <compoundname>Trig::DecisionAccess</compoundname>
    <basecompoundref refid="da/d3f/classTrig_1_1Logger" prot="public" virt="virtual">Trig::Logger</basecompoundref>
    <derivedcompoundref refid="d1/d94/classTrig_1_1TrigDecisionToolCore" prot="public" virt="non-virtual">Trig::TrigDecisionToolCore</derivedcompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d7/dbb/classTrig_1_1DecisionAccess_1ad3eb01bd66410fda0aca1d1a62aac10f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Combination</definition>
        <argsstring></argsstring>
        <name>Combination</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1a0d33032bac758a05f1541c8f529f6c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Trig::DecisionAccess::DecisionAccess</definition>
        <argsstring>()</argsstring>
        <name>DecisionAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1a3b0477d0578c4f69bb9b48d410abc539" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Trig::DecisionAccess::~DecisionAccess</definition>
        <argsstring>()</argsstring>
        <name>~DecisionAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1a4bbf92073dcc53d79ee33094e93b6d72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trig::DecisionAccess::isPassed</definition>
        <argsstring>(const Trig::ChainGroup *chaingroup, unsigned int condition=TrigDefs::Physics) const </argsstring>
        <name>isPassed</name>
        <param>
          <type>const <ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">Trig::ChainGroup</ref> *</type>
          <declname>chaingroup</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <briefdescription>
<para>true if given group of chains passed </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">Trig::ChainGroup</ref> </para><simplesectsep/><para>TrigDefs::Conditions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1a69a8eb209c1ba455060d7413d7e4f682" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trig::DecisionAccess::isPassed</definition>
        <argsstring>(const std::string &amp;chain, unsigned int condition) const </argsstring>
        <name>isPassed</name>
        <reimplementedby refid="d6/dc4/classTrig_1_1TrigDecisionTool_1a5a6f42b657b3e1cd8e0ed8759e86da2b">isPassed</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
<para>true if given chain passed </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">Trig::ChainGroup</ref> </para><simplesectsep/><para>TrigDefs::Conditions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1ab7e521998edc8b0ee5458b7911dab39a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trig::DecisionAccess::isPassed</definition>
        <argsstring>(const std::string &amp;chain) const </argsstring>
        <name>isPassed</name>
        <reimplementedby refid="d6/dc4/classTrig_1_1TrigDecisionTool_1a9b8eaa2cce18dba14b84159da454018d">isPassed</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1aa931049b7da8c4d274e19f67acda7916" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Trig::DecisionAccess::isPassedBits</definition>
        <argsstring>(const Trig::ChainGroup *chaingroup) const </argsstring>
        <name>isPassedBits</name>
        <param>
          <type>const <ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">Trig::ChainGroup</ref> *</type>
          <declname>chaingroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return expert-level information about the various trigger flags as a bit mask. Note: this does not accept a conditions flag -- the prescription is always enforceLogicalFlow. The mask can be comprehended using the following constants from TrigDefs:: EF_passedRaw EF_passThrough EF_prescaled EF_resurrected L2_passedRaw L2_passThrough L2_prescaled L2_resurrected L1_isPassedAfterPrescale L1_isPassedBeforePrescale L1_isPassedAfterVeto </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1ab2ed9edd73561335b7313ce126d7ae60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Trig::DecisionAccess::isPassedBits</definition>
        <argsstring>(const std::string &amp;chain) const </argsstring>
        <name>isPassedBits</name>
        <reimplementedby refid="d6/dc4/classTrig_1_1TrigDecisionTool_1ae154c9fffd2c434997da4f33c69dbe2c">isPassedBits</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="82" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1a4ebd449b66e6fe0a0c630b04d43accad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char Trig::DecisionAccess::getBGCode</definition>
        <argsstring>() const </argsstring>
        <name>getBGCode</name>
        <briefdescription>
<para>get the bunch group code bit X=1: BG <ref refid="d3/d24/structX" kindref="compound">X</ref> fired (X=0..7) use: bool BGXfired = BGCode &amp; (0x1&lt;&lt;<ref refid="d3/d24/structX" kindref="compound">X</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="89" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1a60cfcf7b5463a13dab1afebcb3d711fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d6f/classTrig_1_1FeatureContainer" kindref="compound">FeatureContainer</ref></type>
        <definition>Trig::FeatureContainer Trig::DecisionAccess::features</definition>
        <argsstring>(const ChainGroup *group, unsigned int condition=TrigDefs::Physics) const </argsstring>
        <name>features</name>
        <param>
          <type>const <ref refid="d8/d5b/classTrig_1_1ChainGroup" kindref="compound">ChainGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <briefdescription>
<para>returns all features related to given chain group </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1ad6f68e0b23413345c873dc9e59954283" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d6f/classTrig_1_1FeatureContainer" kindref="compound">FeatureContainer</ref></type>
        <definition>Trig::FeatureContainer Trig::DecisionAccess::features</definition>
        <argsstring>(const std::string &amp;chainName=&quot;EF_.*&quot;, unsigned int condition=TrigDefs::Physics) const </argsstring>
        <name>features</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>chainName</declname>
          <defval>&quot;EF_.*&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <briefdescription>
<para>returns features related to given chain </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionAccess.cxx" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1a92171386106d616014a46dc3592c71a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>const <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;</type>
        <definition>const Trig::Feature&lt; T &gt; Trig::DecisionAccess::ancestor</definition>
        <argsstring>(const HLT::TriggerElement *te, std::string label=&quot;&quot;) const </argsstring>
        <name>ancestor</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>gives back feature matching (by seeding relation)  te - is trigger element to start with, not that thanks to conversion operators <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref> object can be given here as well </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="109" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" bodystart="145" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1a7684c6270f2630ac1676bca5cfc698b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>const std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &gt;</type>
        <definition>const std::vector&lt; Trig::Feature&lt; T &gt; &gt; Trig::DecisionAccess::ancestors</definition>
        <argsstring>(const HLT::TriggerElement *te, std::string label=&quot;&quot;, unsigned int condition=TrigDefs::Physics, const std::string &amp;teName=&quot;&quot;) const </argsstring>
        <name>ancestors</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
          <defval>TrigDefs::Physics</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>gives back features matching (by seeding relation) - will also flatten containers if necessary  te - is trigger element to start with, not that thanks to conversion operators <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref> object can be given here as well </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="118" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" bodystart="163" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d7/dbb/classTrig_1_1DecisionAccess_1ab56e7f405e3c28a15e1a3d9a6f9113f0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d2/df9/classTrig_1_1CacheGlobalMemory" kindref="compound">Trig::CacheGlobalMemory</ref> *</type>
        <definition>virtual Trig::CacheGlobalMemory* Trig::DecisionAccess::cgm</definition>
        <argsstring>() const =0</argsstring>
        <name>cgm</name>
        <reimplementedby refid="d1/d94/classTrig_1_1TrigDecisionToolCore_1aec1ebd681dd629fb392ed0e4c1331aa7">cgm</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4857">
        <label>Trig::Logger</label>
        <link refid="da/d3f/classTrig_1_1Logger"/>
      </node>
      <node id="4858">
        <label>Trig::TrigDecisionToolCore</label>
        <link refid="d1/d94/classTrig_1_1TrigDecisionToolCore"/>
        <childnode refid="4856" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4856">
        <label>Trig::DecisionAccess</label>
        <link refid="d7/dbb/classTrig_1_1DecisionAccess"/>
        <childnode refid="4857" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4859">
        <label>Trig::TrigDecisionTool</label>
        <link refid="d6/dc4/classTrig_1_1TrigDecisionTool"/>
        <childnode refid="4858" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4861">
        <label>Trig::Logger</label>
        <link refid="da/d3f/classTrig_1_1Logger"/>
      </node>
      <node id="4860">
        <label>Trig::DecisionAccess</label>
        <link refid="d7/dbb/classTrig_1_1DecisionAccess"/>
        <childnode refid="4861" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h" bodystart="42" bodyend="135"/>
    <listofallmembers>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1a92171386106d616014a46dc3592c71a3" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>ancestor</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1a7684c6270f2630ac1676bca5cfc698b6" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>ancestors</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1ab56e7f405e3c28a15e1a3d9a6f9113f0" prot="private" virt="pure-virtual"><scope>Trig::DecisionAccess</scope><name>cgm</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1ad3eb01bd66410fda0aca1d1a62aac10f" prot="protected" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>Combination</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1a0d33032bac758a05f1541c8f529f6c1b" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>DecisionAccess</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1a60cfcf7b5463a13dab1afebcb3d711fa" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>features</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1ad6f68e0b23413345c873dc9e59954283" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>features</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1a4ebd449b66e6fe0a0c630b04d43accad" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>getBGCode</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1a4bbf92073dcc53d79ee33094e93b6d72" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>isPassed</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1a69a8eb209c1ba455060d7413d7e4f682" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>isPassed</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1ab7e521998edc8b0ee5458b7911dab39a" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>isPassed</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1aa931049b7da8c4d274e19f67acda7916" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>isPassedBits</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1ab2ed9edd73561335b7313ce126d7ae60" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>isPassedBits</name></member>
      <member refid="da/d3f/classTrig_1_1Logger_1af7005aaa1fa4b1f7b468c8f6b57ed623" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>msg</name></member>
      <member refid="da/d3f/classTrig_1_1Logger_1acc95899df786d3c2d712a98f1272dba5" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>msg</name></member>
      <member refid="da/d3f/classTrig_1_1Logger_1a5e317583363e7cba9283802957a802d2" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>msgLvl</name></member>
      <member refid="da/d3f/classTrig_1_1Logger_1a1c0c2e9a6f71c3a102699c0433f05f50" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>setMessaging</name></member>
      <member refid="da/d3f/classTrig_1_1Logger_1a872de090f2efd6dd6e455d2a43973504" prot="public" virt="non-virtual"><scope>Trig::DecisionAccess</scope><name>staticStream</name></member>
      <member refid="d7/dbb/classTrig_1_1DecisionAccess_1a3b0477d0578c4f69bb9b48d410abc539" prot="public" virt="virtual"><scope>Trig::DecisionAccess</scope><name>~DecisionAccess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
