<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/dad/namespacexAOD_1_1PVHelpers" kind="namespace">
    <compoundname>xAOD::PVHelpers</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="d7/dad/namespacexAOD_1_1PVHelpers_1af7a78233b46c7ae82fc154d8f0feea71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; float, float &gt;</type>
        <definition>std::pair&lt; float, float &gt; xAOD::PVHelpers::getZCommonAndError</definition>
        <argsstring>(const xAOD::EventInfo *eventInfo, const xAOD::EgammaContainer *egammas, float convPtCut=2e3)</argsstring>
        <name>getZCommonAndError</name>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>eventInfo</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::EgammaContainer</ref> *</type>
          <declname>egammas</declname>
        </param>
        <param>
          <type>float</type>
          <declname>convPtCut</declname>
          <defval>2e3</defval>
        </param>
        <briefdescription>
<para>Return zCommon and zCommonError. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/PhotonVertexSelection/PhotonVertexHelpers.h" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/Root/PhotonVertexHelpers.cxx" bodystart="51" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d7/dad/namespacexAOD_1_1PVHelpers_1ae14d1065889d6090344e948824a78c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::PVHelpers::getVertexSumPt</definition>
        <argsstring>(const xAOD::Vertex *vertex, int power=1, bool useAux=true)</argsstring>
        <name>getVertexSumPt</name>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vertex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>power</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useAux</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Loop over track particles associated with vertex and return scalar sum of pT^power in GeV (from auxdata if available and useAux = true). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/PhotonVertexSelection/PhotonVertexHelpers.h" line="25" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/Root/PhotonVertexHelpers.cxx" bodystart="218" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="d7/dad/namespacexAOD_1_1PVHelpers_1a72fa42360e5105cbe27c6801fa86fbfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TLorentzVector</type>
        <definition>TLorentzVector xAOD::PVHelpers::getVertexMomentum</definition>
        <argsstring>(const xAOD::Vertex *vertex, bool useAux=true, std::string derivationPrefix=&quot;&quot;)</argsstring>
        <name>getVertexMomentum</name>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vertex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useAux</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>derivationPrefix</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Return vector sum of tracks associated with vertex (from auxdata if available and useAux = true). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/PhotonVertexSelection/PhotonVertexHelpers.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/Root/PhotonVertexHelpers.cxx" bodystart="182" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="d7/dad/namespacexAOD_1_1PVHelpers_1a547c6e18554a97607e13a4af73a4f5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
        <definition>const xAOD::Vertex * xAOD::PVHelpers::getHardestVertex</definition>
        <argsstring>(const xAOD::VertexContainer *vertices)</argsstring>
        <name>getHardestVertex</name>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> *</type>
          <declname>vertices</declname>
        </param>
        <briefdescription>
<para>Return vertex with highest sum pT^2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/PhotonVertexSelection/PhotonVertexHelpers.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/Root/PhotonVertexHelpers.cxx" bodystart="33" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d7/dad/namespacexAOD_1_1PVHelpers_1a15420362fa54362423fe6562ab2de2ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TLorentzVector</type>
        <definition>TLorentzVector xAOD::PVHelpers::getTrackAtFirstMeasurement</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>getTrackAtFirstMeasurement</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Return track at first measurment, useful as proxy to conversion vertex pT. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/PhotonVertexSelection/PhotonVertexHelpers.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/Root/PhotonVertexHelpers.cxx" bodystart="154" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="d7/dad/namespacexAOD_1_1PVHelpers_1af12700b34322ea24c3a650db30bd2a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::PVHelpers::passConvSelection</definition>
        <argsstring>(const xAOD::Photon *photon, float convPtCut=2e3)</argsstring>
        <name>passConvSelection</name>
        <param>
          <type>const <ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound">xAOD::Photon</ref> *</type>
          <declname>photon</declname>
        </param>
        <param>
          <type>float</type>
          <declname>convPtCut</declname>
          <defval>2e3</defval>
        </param>
        <briefdescription>
<para>Check if photon is converted, and tracks have Si hits and pass selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/PhotonVertexSelection/PhotonVertexHelpers.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/Root/PhotonVertexHelpers.cxx" bodystart="138" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="d7/dad/namespacexAOD_1_1PVHelpers_1a345dc2b2bf88535268a9b81784684cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::PVHelpers::passConvSelection</definition>
        <argsstring>(const xAOD::Vertex &amp;conversionVertex, size_t i, float convPtCut)</argsstring>
        <name>passConvSelection</name>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> &amp;</type>
          <declname>conversionVertex</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>convPtCut</declname>
        </param>
        <briefdescription>
<para>Check if track i of conversion vertex pass selection (Si hits and pt). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/PhotonVertexSelection/PhotonVertexHelpers.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/Root/PhotonVertexHelpers.cxx" bodystart="120" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/PhotonVertexSelection/PhotonVertexHelpers.h" line="17"/>
  </compounddef>
</doxygen>
