<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/db1/classTrigPassFlags" kind="class" prot="public">
    <compoundname>TrigPassFlags</compoundname>
    <includes refid="d5/d12/TrigPassFlags_8h" local="no">TrigPassFlags.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d7/db1/classTrigPassFlags_1adf99706aac55a90bdfe6c9dcf8f4d942" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TrigPassFlagsCnv_p1</definition>
        <argsstring></argsstring>
        <name>TrigPassFlagsCnv_p1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="77" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/db1/classTrigPassFlags_1a798b35f5f658eb8e1d5dccf31dfa0e47" prot="private" static="no" mutable="no">
        <type>const void *</type>
        <definition>const void* TrigPassFlags::m_container_ptr</definition>
        <argsstring></argsstring>
        <name>m_container_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="79" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/db1/classTrigPassFlags_1a77f398fe42120bc56297c20490a5d73e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; bool &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;bool&gt; &gt; TrigPassFlags::m_flagsPerObject</definition>
        <argsstring></argsstring>
        <name>m_flagsPerObject</name>
        <briefdescription>
<para>list of trainsient n-bit value (STL docu assures that a vector of booleans is efficient) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/db1/classTrigPassFlags_1adf4955260e42967ae6e48c4301f6d48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TrigPassFlags::TrigPassFlags</definition>
        <argsstring>()</argsstring>
        <name>TrigPassFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/TrigPassFlags.cxx" bodystart="4" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="d7/db1/classTrigPassFlags_1aae70de29ecd190f634f1f8ba4f0fbd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TrigPassFlags::TrigPassFlags</definition>
        <argsstring>(const unsigned int size, const unsigned int flagSize, const void *cont=0)</argsstring>
        <name>TrigPassFlags</name>
        <param>
          <type>const unsigned int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>flagSize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>cont</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor to be used by the <ref refid="dc/d8d/namespaceHLT" kindref="compound">HLT</ref> algorithms Initialized the flags vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of container for which the flags will be recorded. This determines the length of the outer vector&lt;vector&lt;bool&gt; &gt; of m_flagsPerObject. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flagSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the flags. This determines the length of the inner vector&lt;bool&gt; m_flagsPerObject. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the container, if given then the member functions will be performing additional check if the bits setting is the same (desired initailly container) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/TrigPassFlags.cxx" bodystart="7" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="d7/db1/classTrigPassFlags_1a98bcdc8942a8d0e7cbd6a11bba0d25d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TrigPassFlags::setFlagBit</definition>
        <argsstring>(const unsigned int position, const unsigned int bitPosition, const bool bitValue, const void *cont=0)</argsstring>
        <name>setFlagBit</name>
        <param>
          <type>const unsigned int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>bitPosition</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>bitValue</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>cont</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Set bit of the flag at index position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>postion of the flag in the vector of flags </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the bit within the flag </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitValue</parametername>
</parameternamelist>
<parameterdescription>
<para>enable/disable the bit </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Hypo algorithms should use the helper function <ref refid="dc/d8d/namespaceHLT_1a47f73f8090fb22242479b867ed797d58" kindref="member">HLT::setFlagBit</ref> (see below) to modify the <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/TrigPassFlags.cxx" bodystart="14" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d7/db1/classTrigPassFlags_1a86e67daeafe9da4270914f278cf9edf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TrigPassFlags::setFlag</definition>
        <argsstring>(const unsigned int position, const std::vector&lt; bool &gt; &amp;flag, const void *cont=0)</argsstring>
        <name>setFlag</name>
        <param>
          <type>const unsigned int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>cont</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Set the flag at index position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>postion of the flag in the vector of flags </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flagValue</parametername>
</parameternamelist>
<parameterdescription>
<para>value of the flag (can be used if flagSize is smaller than sizeof(int) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Hypo algorithms should use the helper function <ref refid="dc/d8d/namespaceHLT_1a9e82af6d95406e63e9fc22db58a269a8" kindref="member">HLT::setFlag</ref> (see below) to modify the <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/TrigPassFlags.cxx" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="d7/db1/classTrigPassFlags_1a7dfa55e6026462f28e0da62dbd289862" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TrigPassFlags::getFlagBit</definition>
        <argsstring>(const unsigned int position, const unsigned int bitPosition) const </argsstring>
        <name>getFlagBit</name>
        <param>
          <type>const unsigned int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>bitPosition</declname>
        </param>
        <briefdescription>
<para>Returns the bit &apos;bitPosition&apos; of the flag at index position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Hypo algorithms should use the helper function <ref refid="dc/d8d/namespaceHLT_1af8a8de691c034960ca68e60eb3acb5ef" kindref="member">HLT::getFlagBit</ref> (see below) to access the <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/TrigPassFlags.cxx" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d7/db1/classTrigPassFlags_1a5e6911b1442640b82aea163f577d358a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; bool &gt; &amp;</type>
        <definition>const std::vector&lt; bool &gt; &amp; TrigPassFlags::getFlag</definition>
        <argsstring>(const unsigned int position) const </argsstring>
        <name>getFlag</name>
        <param>
          <type>const unsigned int</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Returns the flag (vector&lt;bool&gt;) at index position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Hypo algorithms should use the helper function <ref refid="dc/d8d/namespaceHLT_1a17f6857efcd2a5d097d29c9502105689" kindref="member">HLT::getFlag</ref> (see below) to access the <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/TrigPassFlags.cxx" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d7/db1/classTrigPassFlags_1afe2c5027f4cca0b8d40950c60e811300" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int TrigPassFlags::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>gets size of the container object vector </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="69" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d7/db1/classTrigPassFlags_1a9f71f216729c77930ff472e957613815" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int TrigPassFlags::flagSize</definition>
        <argsstring>() const </argsstring>
        <name>flagSize</name>
        <briefdescription>
<para>gets size of the flag vector for the object at index </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="74" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> Flag is an ordered collection of bits (vector&lt;bool&gt;) that can hold additional (boolean) information about a trigger object. This information can be stored by a Hypo algorithm, together with the trigger object in the same TE. Since trigger objects are often stored within a container in the TE, the <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> class acts a container for the corresponding flags.</para><para>Note that all flags witin a <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> object have to be of the same size (given as parameter flagSize in the constructor)</para><para><simplesect kind="warning"><para>Hypo algorithms should use the helper functions (see below) to modify the <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> content </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="21442">
        <label>TrigPassFlags</label>
        <link refid="d7/db1/classTrigPassFlags"/>
        <childnode refid="21443" relation="usage">
          <edgelabel>m_container_ptr</edgelabel>
        </childnode>
      </node>
      <node id="21443">
        <label>void</label>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="25" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="25" bodyend="81"/>
    <listofallmembers>
      <member refid="d7/db1/classTrigPassFlags_1a9f71f216729c77930ff472e957613815" prot="public" virt="non-virtual"><scope>TrigPassFlags</scope><name>flagSize</name></member>
      <member refid="d7/db1/classTrigPassFlags_1a5e6911b1442640b82aea163f577d358a" prot="public" virt="non-virtual"><scope>TrigPassFlags</scope><name>getFlag</name></member>
      <member refid="d7/db1/classTrigPassFlags_1a7dfa55e6026462f28e0da62dbd289862" prot="public" virt="non-virtual"><scope>TrigPassFlags</scope><name>getFlagBit</name></member>
      <member refid="d7/db1/classTrigPassFlags_1a798b35f5f658eb8e1d5dccf31dfa0e47" prot="private" virt="non-virtual"><scope>TrigPassFlags</scope><name>m_container_ptr</name></member>
      <member refid="d7/db1/classTrigPassFlags_1a77f398fe42120bc56297c20490a5d73e" prot="private" virt="non-virtual"><scope>TrigPassFlags</scope><name>m_flagsPerObject</name></member>
      <member refid="d7/db1/classTrigPassFlags_1a86e67daeafe9da4270914f278cf9edf7" prot="public" virt="non-virtual"><scope>TrigPassFlags</scope><name>setFlag</name></member>
      <member refid="d7/db1/classTrigPassFlags_1a98bcdc8942a8d0e7cbd6a11bba0d25d7" prot="public" virt="non-virtual"><scope>TrigPassFlags</scope><name>setFlagBit</name></member>
      <member refid="d7/db1/classTrigPassFlags_1afe2c5027f4cca0b8d40950c60e811300" prot="public" virt="non-virtual"><scope>TrigPassFlags</scope><name>size</name></member>
      <member refid="d7/db1/classTrigPassFlags_1adf4955260e42967ae6e48c4301f6d48c" prot="public" virt="non-virtual"><scope>TrigPassFlags</scope><name>TrigPassFlags</name></member>
      <member refid="d7/db1/classTrigPassFlags_1aae70de29ecd190f634f1f8ba4f0fbd60" prot="public" virt="non-virtual"><scope>TrigPassFlags</scope><name>TrigPassFlags</name></member>
      <member refid="d7/db1/classTrigPassFlags_1adf99706aac55a90bdfe6c9dcf8f4d942" prot="private" virt="non-virtual"><scope>TrigPassFlags</scope><name>TrigPassFlagsCnv_p1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
