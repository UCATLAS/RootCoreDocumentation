<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/dc8/trie_8h" kind="file">
    <compoundname>trie.h</compoundname>
    <includedby refid="d7/d3a/libcalg_8h" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/libcalg.h</includedby>
    <invincdepgraph>
      <node id="108193">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/libcalg.h</label>
        <link refid="d7/d3a/libcalg_8h_source"/>
      </node>
      <node id="108192">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h</label>
        <link refid="trie.h"/>
        <childnode refid="108193" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d7/dc8/trie_8h_1a00ccfc639655d6790d98ba271380cee4" prot="public" static="no">
        <name>TRIE_NULL</name>
        <initializer>((void *) 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> null <ref refid="d7/dc8/trie_8h_1a8470f563e4859d99e118299f9e573786" kindref="member">TrieValue</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" prot="public" static="no">
        <type>struct _Trie</type>
        <definition>typedef struct _Trie Trie</definition>
        <argsstring></argsstring>
        <name>Trie</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> trie structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/dc8/trie_8h_1a8470f563e4859d99e118299f9e573786" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* TrieValue</definition>
        <argsstring></argsstring>
        <name>TrieValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Value stored in a <ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d7/dc8/trie_8h_1a23773f6ddfbf27e8f844840d8f1023ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref> *</type>
        <definition>Trie* trie_new</definition>
        <argsstring>(void)</argsstring>
        <name>trie_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new trie.</para><para><simplesect kind="return"><para>Pointer to a new trie structure, or NULL if it was not possible to allocate memory for the new trie. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="d7/dc8/trie_8h_1a7fe9ae638ae3f97e27e089bff41ab27a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void trie_free</definition>
        <argsstring>(Trie *trie)</argsstring>
        <name>trie_free</name>
        <param>
          <type><ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref> *</type>
          <declname>trie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a trie.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trie</parametername>
</parameternamelist>
<parameterdescription>
<para>The trie to destroy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="d7/dc8/trie_8h_1a6623554e5ab14226ee0e99580bdcbd69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int trie_insert</definition>
        <argsstring>(Trie *trie, char *key, TrieValue value)</argsstring>
        <name>trie_insert</name>
        <param>
          <type><ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref> *</type>
          <declname>trie</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="d7/dc8/trie_8h_1a8470f563e4859d99e118299f9e573786" kindref="member">TrieValue</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a new key-value pair into a trie.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trie</parametername>
</parameternamelist>
<parameterdescription>
<para>The trie. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to access the new value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero if the value was inserted successfully, or zero if it was not possible to allocate memory for the new entry. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="94"/>
      </memberdef>
      <memberdef kind="function" id="d7/dc8/trie_8h_1a1c2a3ff33de44d2e306de8376be583ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dc8/trie_8h_1a8470f563e4859d99e118299f9e573786" kindref="member">TrieValue</ref></type>
        <definition>TrieValue trie_lookup</definition>
        <argsstring>(Trie *trie, char *key)</argsstring>
        <name>trie_lookup</name>
        <param>
          <type><ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref> *</type>
          <declname>trie</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Look up a value from its key in a trie.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trie</parametername>
</parameternamelist>
<parameterdescription>
<para>The trie. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value associated with the key, or <ref refid="d7/dc8/trie_8h_1a00ccfc639655d6790d98ba271380cee4" kindref="member">TRIE_NULL</ref> if not found in the trie. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="d7/dc8/trie_8h_1a298687431c0e6e1d16dca65bd499cbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int trie_remove</definition>
        <argsstring>(Trie *trie, char *key)</argsstring>
        <name>trie_remove</name>
        <param>
          <type><ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref> *</type>
          <declname>trie</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an entry from a trie.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trie</parametername>
</parameternamelist>
<parameterdescription>
<para>The trie. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the entry to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero if the key was removed successfully, or zero if it is not present in the trie. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="d7/dc8/trie_8h_1a740c921f06ab6cca11fbbc0d28edb392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int trie_num_entries</definition>
        <argsstring>(Trie *trie)</argsstring>
        <name>trie_num_entries</name>
        <param>
          <type><ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref> *</type>
          <declname>trie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the number of entries in a trie.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trie</parametername>
</parameternamelist>
<parameterdescription>
<para>The trie. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Count of the number of entries in the trie. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h" line="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Fast string lookups. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> trie is a data structure which provides fast mappings from strings to values.</para><para>To create a new trie, use <ref refid="d7/dc8/trie_8h_1a23773f6ddfbf27e8f844840d8f1023ba" kindref="member">trie_new</ref>. To destroy a trie, use <ref refid="d7/dc8/trie_8h_1a7fe9ae638ae3f97e27e089bff41ab27a" kindref="member">trie_free</ref>.</para><para>To insert a value into a trie, use <ref refid="d7/dc8/trie_8h_1a6623554e5ab14226ee0e99580bdcbd69" kindref="member">trie_insert</ref>. To remove a value from a trie, use <ref refid="d7/dc8/trie_8h_1a298687431c0e6e1d16dca65bd499cbed" kindref="member">trie_remove</ref>.</para><para>To look up a value from its key, use <ref refid="d7/dc8/trie_8h_1a1c2a3ff33de44d2e306de8376be583ff" kindref="member">trie_lookup</ref>.</para><para>To find the number of entries in a trie, use <ref refid="d7/dc8/trie_8h_1a740c921f06ab6cca11fbbc0d28edb392" kindref="member">trie_num_entries</ref>. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(c)<sp/>2005-2008,<sp/>Simon<sp/>Howard</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment">for<sp/>any<sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">that<sp/>the<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">in<sp/>all<sp/>copies.<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment">WARRANTIES<sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment">AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES<sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment">NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment">CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor">#ifndef<sp/>ALGORITHM_TRIE_H</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ALGORITHM_TRIE_H</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="51" refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_Trie<sp/><ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="d7/dc8/trie_8h_1a8470f563e4859d99e118299f9e573786" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="d7/dc8/trie_8h_1a8470f563e4859d99e118299f9e573786" kindref="member">TrieValue</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="d7/dc8/trie_8h_1a00ccfc639655d6790d98ba271380cee4" refkind="member"><highlight class="preprocessor">#define<sp/>TRIE_NULL<sp/>((void<sp/>*)<sp/>0)</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref><sp/>*<ref refid="d7/dc8/trie_8h_1a23773f6ddfbf27e8f844840d8f1023ba" kindref="member">trie_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/dc8/trie_8h_1a7fe9ae638ae3f97e27e089bff41ab27a" kindref="member">trie_free</ref>(<ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref><sp/>*trie);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/dc8/trie_8h_1a6623554e5ab14226ee0e99580bdcbd69" kindref="member">trie_insert</ref>(<ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref><sp/>*trie,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>TrieValue<sp/>value);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">TrieValue<sp/><ref refid="d7/dc8/trie_8h_1a1c2a3ff33de44d2e306de8376be583ff" kindref="member">trie_lookup</ref>(<ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref><sp/>*trie,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/dc8/trie_8h_1a298687431c0e6e1d16dca65bd499cbed" kindref="member">trie_remove</ref>(<ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref><sp/>*trie,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/dc8/trie_8h_1a740c921f06ab6cca11fbbc0d28edb392" kindref="member">trie_num_entries</ref>(<ref refid="d7/dc8/trie_8h_1af5808be7fb71b1ef0b1dcbe55da603ce" kindref="member">Trie</ref><sp/>*trie);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>ALGORITHM_TRIE_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/trie.h"/>
  </compounddef>
</doxygen>
