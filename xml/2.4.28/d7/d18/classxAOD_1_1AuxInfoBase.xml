<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/d18/classxAOD_1_1AuxInfoBase" kind="class" prot="public">
    <compoundname>xAOD::AuxInfoBase</compoundname>
    <basecompoundref refid="dc/d05/classSG_1_1IAuxStore" prot="public" virt="non-virtual">SG::IAuxStore</basecompoundref>
    <basecompoundref refid="db/d37/classSG_1_1IAuxStoreIO" prot="public" virt="non-virtual">SG::IAuxStoreIO</basecompoundref>
    <basecompoundref refid="dc/d42/classSG_1_1IAuxStoreHolder" prot="public" virt="non-virtual">SG::IAuxStoreHolder</basecompoundref>
    <derivedcompoundref refid="d5/de7/classxAOD_1_1CMMRoIAuxInfo__v1" prot="public" virt="non-virtual">xAOD::CMMRoIAuxInfo_v1</derivedcompoundref>
    <derivedcompoundref refid="d1/de6/classxAOD_1_1EnergySumRoIAuxInfo__v1" prot="public" virt="non-virtual">xAOD::EnergySumRoIAuxInfo_v1</derivedcompoundref>
    <derivedcompoundref refid="d1/d52/classxAOD_1_1EventAuxInfo__v1" prot="public" virt="non-virtual">xAOD::EventAuxInfo_v1</derivedcompoundref>
    <derivedcompoundref refid="dc/d9a/classxAOD_1_1EventShapeAuxInfo__v1" prot="public" virt="non-virtual">xAOD::EventShapeAuxInfo_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/dfb/classxAOD_1_1FileMetaDataAuxInfo__v1" prot="public" virt="non-virtual">xAOD::FileMetaDataAuxInfo_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/d4c/classxAOD_1_1JetEtRoIAuxInfo__v1" prot="public" virt="non-virtual">xAOD::JetEtRoIAuxInfo_v1</derivedcompoundref>
    <derivedcompoundref refid="d1/d13/classxAOD_1_1RoiDescriptorStoreAuxInfo__v1" prot="public" virt="non-virtual">xAOD::RoiDescriptorStoreAuxInfo_v1</derivedcompoundref>
    <derivedcompoundref refid="d6/d61/classxAOD_1_1TrigDecisionAuxInfo__v1" prot="public" virt="non-virtual">xAOD::TrigDecisionAuxInfo_v1</derivedcompoundref>
    <derivedcompoundref refid="dc/dc2/classxAOD_1_1TrigNavigationAuxInfo__v1" prot="public" virt="non-virtual">xAOD::TrigNavigationAuxInfo_v1</derivedcompoundref>
    <includes refid="d0/d60/AuxInfoBase_8h" local="no">AuxInfoBase.h</includes>
    <innerclass refid="d0/d0d/structxAOD_1_1AuxInfoBase_1_1TSAuxidSet" prot="private">xAOD::AuxInfoBase::TSAuxidSet</innerclass>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IAuxStoreHolder interface</header>
      <description><para><anchor id="_1amgrpb1d942c7d59298c451f4641067ca2f65"/> </para></description>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a0cb2310ab1bb2637da6a64346a28800c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
        <definition>SG::IAuxStore * xAOD::AuxInfoBase::getStore</definition>
        <argsstring>() const </argsstring>
        <name>getStore</name>
        <reimplements refid="dc/d42/classSG_1_1IAuxStoreHolder_1ae8a47c0d7ed7325508cb94ca3570a5cd">getStore</reimplements>
        <briefdescription>
<para>Get the currently used internal store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a921da25b6e8e05a6c0cea0d87c95fef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::setStore</definition>
        <argsstring>(SG::IAuxStore *store)</argsstring>
        <name>setStore</name>
        <reimplements refid="dc/d42/classSG_1_1IAuxStoreHolder_1aea3c4b6aa04dc1581af2c77562adb90d">setStore</reimplements>
        <param>
          <type><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Set a different internal store object. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used by the I/O infrastructure to possibly put a store object into this one, which can interact with dynamic variables directly.</para><para>Note that the object takes ownership of the received store.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>The store that should be used for dynamic variable handling inside the object from now on </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="72" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="159" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a6f7f2aab9d0a45cb40bd5e829f97167c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9" kindref="member">AuxStoreType</ref></type>
        <definition>virtual AuxStoreType xAOD::AuxInfoBase::getStoreType</definition>
        <argsstring>() const </argsstring>
        <name>getStoreType</name>
        <reimplements refid="dc/d42/classSG_1_1IAuxStoreHolder_1a5cbc4fb29e1ed8c561da079455790a24">getStoreType</reimplements>
        <briefdescription>
<para>Return the type of the store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="74" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IConstAuxStore interface</header>
      <description><para><anchor id="_1amgrp923490749c1bddf7b538181b97b1ea70"/> </para></description>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1afe89ad64e26ac08591dfa63de54faab1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const void *</type>
        <definition>const void * xAOD::AuxInfoBase::getData</definition>
        <argsstring>(auxid_t auxid) const </argsstring>
        <name>getData</name>
        <param>
          <type><ref refid="d7/d18/classxAOD_1_1AuxInfoBase_1a81f39ae2868e21ba453166f5f9eb968a" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="82" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="201" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1ae3cb57c61133500c346f2e3724dc50ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref> &amp;</type>
        <definition>const AuxInfoBase::auxid_set_t &amp; xAOD::AuxInfoBase::getAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getAuxIDs</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1a3be9ddcb2b1198c3cab03c7b94764a3d">getAuxIDs</reimplements>
        <briefdescription>
<para>Get the types(names) of variables handled by this container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a23617420149a167a5f962e8ed16d4b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * xAOD::AuxInfoBase::getDecoration</definition>
        <argsstring>(auxid_t auxid, size_t size, size_t capacity)</argsstring>
        <name>getDecoration</name>
        <param>
          <type><ref refid="d7/d18/classxAOD_1_1AuxInfoBase_1a81f39ae2868e21ba453166f5f9eb968a" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array, as a decoration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="89" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="238" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1aed0fa7eb26759e0aa648a2edf1f69edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1a6bf19cb8961665a0d4672e2d4f719aa5">lock</reimplements>
        <briefdescription>
<para>Lock the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="278" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a01418f22444fcec5f035f53e118e3786" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::clearDecorations</definition>
        <argsstring>()</argsstring>
        <name>clearDecorations</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1ab3dec2e6bc75789344ec9d31c8b8a3c3">clearDecorations</reimplements>
        <briefdescription>
<para>Clear all decorations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="292" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a5505fc527f62ba493cba0646e8e7cb62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t xAOD::AuxInfoBase::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1af71be6076fcf09fd0f8c1d53e704548d">size</reimplements>
        <briefdescription>
<para>Get the size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="98" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="321" bodyend="344"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IAuxStore interface</header>
      <description><para><anchor id="_1amgrp44b120bee999133a29277c27a0f31e6d"/> </para></description>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a6a3acceec3128112aaf55e4a6c22d18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * xAOD::AuxInfoBase::getData</definition>
        <argsstring>(auxid_t auxid, size_t size, size_t capacity)</argsstring>
        <name>getData</name>
        <param>
          <type><ref refid="d7/d18/classxAOD_1_1AuxInfoBase_1a81f39ae2868e21ba453166f5f9eb968a" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array, creating the array if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="107" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="354" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a4b31ea00775c91e377aaabf56ff3966e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref> &amp;</type>
        <definition>const AuxInfoBase::auxid_set_t &amp; xAOD::AuxInfoBase::getWritableAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getWritableAuxIDs</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a691e17d3a91d2733af73a4c5ae17e625">getWritableAuxIDs</reimplements>
        <briefdescription>
<para>Return a set of writable data identifiers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="110" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="385" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1abf46778ded27f6f6a10eb9ed73b4c7b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::resize</definition>
        <argsstring>(size_t size)</argsstring>
        <name>resize</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a3e35266b4688361e2c804b68b73892e0">resize</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Resize the arrays to a given size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="113" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="400" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a3cebd7b18930053b1a9d3ec53402acdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::reserve</definition>
        <argsstring>(size_t size)</argsstring>
        <name>reserve</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a76c099cf5b1e88b8bdfebf4c014e4d1b">reserve</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Reserve a given size for the arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="115" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="431" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1abbeae8ae83e5bc077f5bdfdf110c6477" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::shift</definition>
        <argsstring>(size_t pos, ptrdiff_t offs)</argsstring>
        <name>shift</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1abd4ea23e3b5eb58f8e747daaf2279068">shift</reimplements>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>ptrdiff_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Shift the contents of the stored arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="462" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1aed9922830bcf47f22c5ff20c635e8de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool xAOD::AuxInfoBase::setOption</definition>
        <argsstring>(auxid_t id, const SG::AuxDataOption &amp;option)</argsstring>
        <name>setOption</name>
        <param>
          <type><ref refid="d7/d18/classxAOD_1_1AuxInfoBase_1a81f39ae2868e21ba453166f5f9eb968a" kindref="member">auxid_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound">SG::AuxDataOption</ref> &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Make an option setting on an aux variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="119" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="479" bodyend="486"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IAuxStoreIO interface</header>
      <description><para><anchor id="_1amgrp88b4583fe2141202fa4506158a6ce938"/> </para></description>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a03db67999fac679a810f34b237c15756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const void *</type>
        <definition>const void * xAOD::AuxInfoBase::getIOData</definition>
        <argsstring>(auxid_t auxid) const </argsstring>
        <name>getIOData</name>
        <param>
          <type><ref refid="d7/d18/classxAOD_1_1AuxInfoBase_1a81f39ae2868e21ba453166f5f9eb968a" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Get a pointer to the data being stored for one aux data item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="497" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a8b5c2707020f8beef19c77d14d3717d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::type_info *</type>
        <definition>const std::type_info * xAOD::AuxInfoBase::getIOType</definition>
        <argsstring>(auxid_t auxid) const </argsstring>
        <name>getIOType</name>
        <param>
          <type><ref refid="d7/d18/classxAOD_1_1AuxInfoBase_1a81f39ae2868e21ba453166f5f9eb968a" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Return the type of the data to be stored for one aux data item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="130" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="521" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1ac9dd93c774153ffb4730e40bca791a4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref> &amp;</type>
        <definition>const AuxInfoBase::auxid_set_t &amp; xAOD::AuxInfoBase::getDynamicAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getDynamicAuxIDs</name>
        <reimplements refid="db/d37/classSG_1_1IAuxStoreIO_1a09fa260bc3e6871d748d3342c602af69">getDynamicAuxIDs</reimplements>
        <briefdescription>
<para>Get the types(names) of variables created dynamically. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="542" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a38914eee0edfe09737e0377eebf47720" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::selectAux</definition>
        <argsstring>(const std::set&lt; std::string &gt; &amp;attributes)</argsstring>
        <name>selectAux</name>
        <reimplements refid="db/d37/classSG_1_1IAuxStoreIO_1a0ddbdecb0f824866d4dd51b666264a67">selectAux</reimplements>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
<para>Select dynamic Aux attributes by name (for writing). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="136" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="562" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a1e168d7cd18f9b81b8f4eb5690db6000" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref> &amp;</type>
        <definition>const AuxInfoBase::auxid_set_t &amp; xAOD::AuxInfoBase::getSelectedAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getSelectedAuxIDs</name>
        <reimplements refid="db/d37/classSG_1_1IAuxStoreIO_1ad902a6d9ee41b239fbca73870cebe237">getSelectedAuxIDs</reimplements>
        <briefdescription>
<para>Get the IDs of the selected dynamic Aux variables (for writing). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="139" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="572" bodyend="590"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions managing the instance name of the container</header>
      <description><para><anchor id="_1amgrp7ac7d0ae987769343410b8f8ebd39e5a"/> </para></description>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1ad2e5f6828079ffa2f5ccdf163fbf85e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * xAOD::AuxInfoBase::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
<para>Get the name of the container instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="147" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="595" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a32baace783e7f107b6abb0ee5bed77e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::setName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>setName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set the name of the container instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="149" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="600" bodyend="604"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d7/d18/classxAOD_1_1AuxInfoBase_1a81f39ae2868e21ba453166f5f9eb968a" prot="public" static="no">
        <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
        <definition>typedef SG::auxid_t xAOD::AuxInfoBase::auxid_t</definition>
        <argsstring></argsstring>
        <name>auxid_t</name>
        <briefdescription>
<para>The aux ID type definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d18/classxAOD_1_1AuxInfoBase_1af9ea8cb20860995a71ca3558edf00c5a" prot="public" static="no">
        <type><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref></type>
        <definition>typedef SG::auxid_set_t xAOD::AuxInfoBase::auxid_set_t</definition>
        <argsstring></argsstring>
        <name>auxid_set_t</name>
        <briefdescription>
<para>The aux ID set type definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d7/d18/classxAOD_1_1AuxInfoBase_1ae46a9c4541429f99a90f94c01d796503" prot="private" static="no">
        <type>AthContainers_detail::mutex</type>
        <definition>typedef AthContainers_detail::mutex xAOD::AuxInfoBase::mutex_t</definition>
        <argsstring></argsstring>
        <name>mutex_t</name>
        <briefdescription>
<para>Mutex for multithread synchronization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="180" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d7/d18/classxAOD_1_1AuxInfoBase_1a8c55f64d8d8fd0dbcaffabee34db2aea" prot="private" static="no">
        <type>AthContainers_detail::lock_guard&lt; mutex_t &gt;</type>
        <definition>typedef AthContainers_detail::lock_guard&lt; mutex_t &gt; xAOD::AuxInfoBase::guard_t</definition>
        <argsstring></argsstring>
        <name>guard_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="181" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1a248f12b1c2d2914950036bc2ccbd1cf3" prot="private" static="no" mutable="no">
        <type><ref refid="d6/dd6/classxAOD_1_1AuxSelection" kindref="compound">AuxSelection</ref></type>
        <definition>AuxSelection xAOD::AuxInfoBase::m_selection</definition>
        <argsstring></argsstring>
        <name>m_selection</name>
        <briefdescription>
<para>Dynamic attributes selection implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="161" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1a221302583ab2c9c2721fbdfd33332d94" prot="private" static="no" mutable="yes">
        <type><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref></type>
        <definition>auxid_set_t xAOD::AuxInfoBase::m_auxids</definition>
        <argsstring></argsstring>
        <name>m_auxids</name>
        <briefdescription>
<para>Internal list of all available variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="163" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1a384f74b90b55f820dd7fe306f8dea23e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="de/d12/classSG_1_1IAuxTypeVector" kindref="compound">SG::IAuxTypeVector</ref> * &gt;</type>
        <definition>std::vector&lt; SG::IAuxTypeVector* &gt; xAOD::AuxInfoBase::m_vecs</definition>
        <argsstring></argsstring>
        <name>m_vecs</name>
        <briefdescription>
<para>Internal list of all managed variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="165" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1ae13a123b48d3ad5b6a6a5d987228c63b" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
        <definition>SG::IAuxStore* xAOD::AuxInfoBase::m_store</definition>
        <argsstring></argsstring>
        <name>m_store</name>
        <briefdescription>
<para>Internal dynamic auxiliary store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="168" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1a34cd5aa8e37256e91a38fc804d2dc8b9" prot="private" static="no" mutable="no">
        <type><ref refid="db/d37/classSG_1_1IAuxStoreIO" kindref="compound">SG::IAuxStoreIO</ref> *</type>
        <definition>SG::IAuxStoreIO* xAOD::AuxInfoBase::m_storeIO</definition>
        <argsstring></argsstring>
        <name>m_storeIO</name>
        <briefdescription>
<para>The IO interface to the internal auxiliary store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="170" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1a0a18fb576bd6d471074ceb2b139a53f4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xAOD::AuxInfoBase::m_ownsStore</definition>
        <argsstring></argsstring>
        <name>m_ownsStore</name>
        <briefdescription>
<para>Flag deciding if the object owns the dynamic store or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="172" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1a92b217bb326b3d20916bf19fa75b0751" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xAOD::AuxInfoBase::m_locked</definition>
        <argsstring></argsstring>
        <name>m_locked</name>
        <briefdescription>
<para>Has the container been locked? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="174" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1a9ed6492a00885a518ba99f3b4579b555" prot="private" static="no" mutable="yes">
        <type>size_t</type>
        <definition>size_t xAOD::AuxInfoBase::m_tick</definition>
        <argsstring></argsstring>
        <name>m_tick</name>
        <briefdescription>
<para>Count changes to <computeroutput>m_auxids</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="177" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1aec7d8c6f35521604cc10462d2b5e8d1c" prot="private" static="no" mutable="yes">
        <type>mutex_t</type>
        <definition>mutex_t xAOD::AuxInfoBase::m_mutex</definition>
        <argsstring></argsstring>
        <name>m_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="182" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1a5951c78265c9732b8b9c53aa479876f3" prot="private" static="no" mutable="yes">
        <type>AthContainers_detail::thread_specific_ptr&lt; TSAuxidSet &gt;</type>
        <definition>AthContainers_detail::thread_specific_ptr&lt; TSAuxidSet &gt; xAOD::AuxInfoBase::m_tsAuxids</definition>
        <argsstring></argsstring>
        <name>m_tsAuxids</name>
        <briefdescription>
<para>Thread-local versions of the auxid set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="192" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d18/classxAOD_1_1AuxInfoBase_1ace2be7440c5981a1ca2d468bf5cca43b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xAOD::AuxInfoBase::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>Name of the container in memory. Set externally. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="195" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a76c845d3cd14f78886edf1a2209f488f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxInfoBase::AuxInfoBase</definition>
        <argsstring>(bool allowDynamicVars=true)</argsstring>
        <name>AuxInfoBase</name>
        <param>
          <type>bool</type>
          <declname>allowDynamicVars</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="20" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a36469cd61f2887db415df51b872c20ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxInfoBase::AuxInfoBase</definition>
        <argsstring>(const AuxInfoBase &amp;parent)</argsstring>
        <name>AuxInfoBase</name>
        <param>
          <type>const <ref refid="d7/d18/classxAOD_1_1AuxInfoBase" kindref="compound">AuxInfoBase</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This is an interesting one. The internal variables of <ref refid="d7/d18/classxAOD_1_1AuxInfoBase" kindref="compound">AuxInfoBase</ref> are set up by the derived class(es) at construction. So, this internal state is not to be copied!</para><para>However, since the derived classes (the contents of their regular members) are allowed to be copied, let&apos;s not make this constructor private. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="43" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a9c4631569ab4cf583139c4920f089146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxInfoBase::AuxInfoBase</definition>
        <argsstring>(const SG::IAuxStore *store)</argsstring>
        <name>AuxInfoBase</name>
        <param>
          <type>const <ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Constructor receiving a &quot;dynamic auxiliary store&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor is used to wrap another object that is stored in StoreGate, and hence we should not take ownership of.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Another store that should be wrapped, but not owned </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="68" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a1d6ba4b3d5c2baec3c4b4e1c498ff396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxInfoBase::~AuxInfoBase</definition>
        <argsstring>()</argsstring>
        <name>~AuxInfoBase</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="85" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a36accbf8fd3e644ef6987c523f3fb266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d18/classxAOD_1_1AuxInfoBase" kindref="compound">AuxInfoBase</ref> &amp;</type>
        <definition>AuxInfoBase &amp; xAOD::AuxInfoBase::operator=</definition>
        <argsstring>(const AuxInfoBase &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d7/d18/classxAOD_1_1AuxInfoBase" kindref="compound">AuxInfoBase</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para>Just like the copy constructor, this operator doesn&apos;t actually copy anything either. It&apos;s just here to make it clear to C++ that the internal state of these objects is not to be messed with.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to this same object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxInfoBase.cxx" bodystart="104" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d7/d18/classxAOD_1_1AuxInfoBase_1a4afe2b19e0a08901bcf19c3bd251758d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void xAOD::AuxInfoBase::regAuxVar</definition>
        <argsstring>(const std::string &amp;name, T &amp;info)</argsstring>
        <name>regAuxVar</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d1/def/classT" kindref="compound">T</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Register one of the persistent variables internally. </para>        </briefdescription>
        <detaileddescription>
<para>The user is expected to use this function inside the constructor of the derived class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable. Same as the C++ variable&apos;s name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to the auxiliary variable inside the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.icc" bodystart="35" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Common base class for auxiliary info objects</para><para>This class should be used as the base for classes describing auxiliary information about standalone objects. The most important example of this is the <ref refid="dd/d44/namespacexAOD_1a36b2acd55b1ff4b04f435a71fd213042" kindref="member">xAOD::EventInfo</ref> object...</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>633004 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-12-02 14:36:00 +0100 (Tue, 02 Dec 2014) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1834">
        <label>xAOD::AuxInfoBase</label>
        <link refid="d7/d18/classxAOD_1_1AuxInfoBase"/>
        <childnode refid="1835" relation="public-inheritance">
        </childnode>
        <childnode refid="1837" relation="public-inheritance">
        </childnode>
        <childnode refid="1838" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1838">
        <label>SG::IAuxStoreHolder</label>
        <link refid="dc/d42/classSG_1_1IAuxStoreHolder"/>
      </node>
      <node id="1840">
        <label>xAOD::EnergySumRoIAuxInfo_v1</label>
        <link refid="d1/de6/classxAOD_1_1EnergySumRoIAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1842">
        <label>xAOD::EventShapeAuxInfo_v1</label>
        <link refid="dc/d9a/classxAOD_1_1EventShapeAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1847">
        <label>xAOD::TrigNavigationAuxInfo_v1</label>
        <link refid="dc/dc2/classxAOD_1_1TrigNavigationAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1843">
        <label>xAOD::FileMetaDataAuxInfo_v1</label>
        <link refid="d9/dfb/classxAOD_1_1FileMetaDataAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1839">
        <label>xAOD::CMMRoIAuxInfo_v1</label>
        <link refid="d5/de7/classxAOD_1_1CMMRoIAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1845">
        <label>xAOD::RoiDescriptorStoreAuxInfo_v1</label>
        <link refid="d1/d13/classxAOD_1_1RoiDescriptorStoreAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1836">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="1837">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="1835">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="1836" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1846">
        <label>xAOD::TrigDecisionAuxInfo_v1</label>
        <link refid="d6/d61/classxAOD_1_1TrigDecisionAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1841">
        <label>xAOD::EventAuxInfo_v1</label>
        <link refid="d1/d52/classxAOD_1_1EventAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1844">
        <label>xAOD::JetEtRoIAuxInfo_v1</label>
        <link refid="d8/d4c/classxAOD_1_1JetEtRoIAuxInfo__v1"/>
        <childnode refid="1834" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1848">
        <label>xAOD::AuxInfoBase</label>
        <link refid="d7/d18/classxAOD_1_1AuxInfoBase"/>
        <childnode refid="1849" relation="public-inheritance">
        </childnode>
        <childnode refid="1851" relation="public-inheritance">
        </childnode>
        <childnode refid="1852" relation="public-inheritance">
        </childnode>
        <childnode refid="1849" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="1853" relation="usage">
          <edgelabel>m_selection</edgelabel>
        </childnode>
        <childnode refid="1859" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
        <childnode refid="1860" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="1851" relation="usage">
          <edgelabel>m_storeIO</edgelabel>
        </childnode>
        <childnode refid="1861" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="1852">
        <label>SG::IAuxStoreHolder</label>
        <link refid="dc/d42/classSG_1_1IAuxStoreHolder"/>
      </node>
      <node id="1863">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="1864">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="1857">
        <label>Internal::hash_code_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="1862">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="1863" relation="public-inheritance">
        </childnode>
        <childnode refid="1864" relation="public-inheritance">
        </childnode>
        <childnode refid="1865" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1859">
        <label>string</label>
      </node>
      <node id="1858">
        <label>Internal::map_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , unique_keys, hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="1853">
        <label>xAOD::AuxSelection</label>
        <link refid="d6/dd6/classxAOD_1_1AuxSelection"/>
        <childnode refid="1854" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="1850">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="1851">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="1855">
        <label>SG::hashtable&lt; size_t, size_t, std::allocator&lt; size_t &gt;, Internal::identity&lt; size_t &gt;, std::equal_to&lt; size_t &gt;, hash&lt; size_t &gt;, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, false, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="1856" relation="public-inheritance">
        </childnode>
        <childnode refid="1857" relation="public-inheritance">
        </childnode>
        <childnode refid="1858" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1849">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="1850" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1861">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="1862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1865">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="1856">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="1860">
        <label>mutex</label>
      </node>
      <node id="1854">
        <label>SG::unordered_set&lt; size_t &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="1855" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxInfoBase.h" bodystart="40" bodyend="197"/>
    <listofallmembers>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9a94fd1895e790e358290b074ea49edbe2" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>AST_ContainerStore</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9afb6416cb757f8628e0383b707c99b19a" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>AST_ObjectStore</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1af9ea8cb20860995a71ca3558edf00c5a" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>auxid_set_t</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a81f39ae2868e21ba453166f5f9eb968a" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>auxid_t</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a76c845d3cd14f78886edf1a2209f488f" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>AuxInfoBase</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a36469cd61f2887db415df51b872c20ea" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>AuxInfoBase</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a9c4631569ab4cf583139c4920f089146" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>AuxInfoBase</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>AuxStoreType</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a01418f22444fcec5f035f53e118e3786" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>clearDecorations</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1ae3cb57c61133500c346f2e3724dc50ac" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getAuxIDs</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1afe89ad64e26ac08591dfa63de54faab1" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getData</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a6a3acceec3128112aaf55e4a6c22d18b" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getData</name></member>
      <member refid="dc/d05/classSG_1_1IAuxStore_1a0a6b90ed812993712727c76b64953c48" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStore::"><scope>xAOD::AuxInfoBase</scope><name>getData</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1aa73e6e5474cdc0d38fe3367740876c59" prot="public" virt="pure-virtual" ambiguityscope="SG::IConstAuxStore::"><scope>xAOD::AuxInfoBase</scope><name>getData</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a23617420149a167a5f962e8ed16d4b17" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getDecoration</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a96728593e3bc1da60d3bdd28291969f0" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStore::"><scope>xAOD::AuxInfoBase</scope><name>getDecoration</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1ac9dd93c774153ffb4730e40bca791a4e" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getDynamicAuxIDs</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a03db67999fac679a810f34b237c15756" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getIOData</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a55ba7c049509f9b6a8b5c57e9322bcc9" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStoreIO::"><scope>xAOD::AuxInfoBase</scope><name>getIOData</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a8b5c2707020f8beef19c77d14d3717d5" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getIOType</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a25c3d7891a19f3881f932c3484031df2" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStoreIO::"><scope>xAOD::AuxInfoBase</scope><name>getIOType</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a1e168d7cd18f9b81b8f4eb5690db6000" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getSelectedAuxIDs</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a0cb2310ab1bb2637da6a64346a28800c" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getStore</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a6f7f2aab9d0a45cb40bd5e829f97167c" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getStoreType</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a4b31ea00775c91e377aaabf56ff3966e" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>getWritableAuxIDs</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a8c55f64d8d8fd0dbcaffabee34db2aea" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>guard_t</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1aed0fa7eb26759e0aa648a2edf1f69edd" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>lock</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a221302583ab2c9c2721fbdfd33332d94" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_auxids</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a92b217bb326b3d20916bf19fa75b0751" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_locked</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1aec7d8c6f35521604cc10462d2b5e8d1c" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_mutex</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1ace2be7440c5981a1ca2d468bf5cca43b" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_name</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a0a18fb576bd6d471074ceb2b139a53f4" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_ownsStore</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a248f12b1c2d2914950036bc2ccbd1cf3" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_selection</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1ae13a123b48d3ad5b6a6a5d987228c63b" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_store</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a34cd5aa8e37256e91a38fc804d2dc8b9" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_storeIO</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a9ed6492a00885a518ba99f3b4579b555" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_tick</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a5951c78265c9732b8b9c53aa479876f3" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_tsAuxids</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a384f74b90b55f820dd7fe306f8dea23e" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>m_vecs</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1ae46a9c4541429f99a90f94c01d796503" prot="private" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>mutex_t</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1ad2e5f6828079ffa2f5ccdf163fbf85e3" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>name</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a36accbf8fd3e644ef6987c523f3fb266" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>operator=</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a4afe2b19e0a08901bcf19c3bd251758d" prot="protected" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>regAuxVar</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a3cebd7b18930053b1a9d3ec53402acdc" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>reserve</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1abf46778ded27f6f6a10eb9ed73b4c7b4" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>resize</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a38914eee0edfe09737e0377eebf47720" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>selectAux</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a32baace783e7f107b6abb0ee5bed77e7" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>setName</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1aed9922830bcf47f22c5ff20c635e8de8" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>setOption</name></member>
      <member refid="dc/d05/classSG_1_1IAuxStore_1a371646fff1258a9f81b35d26eca3ac45" prot="public" virt="virtual" ambiguityscope="SG::IAuxStore::"><scope>xAOD::AuxInfoBase</scope><name>setOption</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a921da25b6e8e05a6c0cea0d87c95fef7" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>setStore</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1abbeae8ae83e5bc077f5bdfdf110c6477" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>shift</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a5505fc527f62ba493cba0646e8e7cb62" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>size</name></member>
      <member refid="d7/d18/classxAOD_1_1AuxInfoBase_1a1d6ba4b3d5c2baec3c4b4e1c498ff396" prot="public" virt="non-virtual"><scope>xAOD::AuxInfoBase</scope><name>~AuxInfoBase</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a51489d2a5109fe92f83a8f34ff89c57b" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>~IAuxStoreHolder</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a78166aac5abe83f66eef9946a23ced75" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>~IAuxStoreIO</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a2acc9ded5fe9a64c8f508d3c0d7431a5" prot="public" virt="virtual"><scope>xAOD::AuxInfoBase</scope><name>~IConstAuxStore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
