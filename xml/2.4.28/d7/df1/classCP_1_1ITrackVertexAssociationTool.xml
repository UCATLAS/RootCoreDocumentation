<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/df1/classCP_1_1ITrackVertexAssociationTool" kind="class" prot="public">
    <compoundname>CP::ITrackVertexAssociationTool</compoundname>
    <basecompoundref refid="d4/d20/classasg_1_1IAsgTool" prot="public" virt="virtual">asg::IAsgTool</basecompoundref>
    <derivedcompoundref refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool" prot="public" virt="virtual">CP::LooseTrackVertexAssociationTool</derivedcompoundref>
    <derivedcompoundref refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool" prot="public" virt="virtual">CP::TightTrackVertexAssociationTool</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a00d6b75e48c95dd65b727a2fabf79161" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CP::ITrackVertexAssociationTool::isCompatible</definition>
        <argsstring>(const xAOD::TrackParticle &amp;, const xAOD::Vertex &amp;) const =0</argsstring>
        <name>isCompatible</name>
        <reimplementedby refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a05b8ee9ad100daf4d42c06fff5cdc5ff">isCompatible</reimplementedby>
        <reimplementedby refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1af681ee9d16a92af37c8833d7982fa589">isCompatible</reimplementedby>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function just return the decision of whether the track is matched to the Vertex Not sure whether the track is matched to best choice </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" line="25"/>
      </memberdef>
      <memberdef kind="function" id="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a3428e611b61fb1e687e1a3bbd85f68dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>virtual xAOD::TrackVertexAssociationMap CP::ITrackVertexAssociationTool::getMatchMap</definition>
        <argsstring>(std::vector&lt; const xAOD::TrackParticle * &gt; &amp;, std::vector&lt; const xAOD::Vertex * &gt; &amp;) const =0</argsstring>
        <name>getMatchMap</name>
        <reimplementedby refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1aec959de68bab1a88ff1138e5d9d60ea7">getMatchMap</reimplementedby>
        <reimplementedby refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1acc47c380712a0b8b86cb32eeed1c2628">getMatchMap</reimplementedby>
        <param>
          <type>std::vector&lt; const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> * &gt; &amp;</type>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" line="26"/>
      </memberdef>
      <memberdef kind="function" id="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a63f465dcaad90af44d741ad5c0164105" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>virtual xAOD::TrackVertexAssociationMap CP::ITrackVertexAssociationTool::getMatchMap</definition>
        <argsstring>(const xAOD::TrackParticleContainer &amp;, const xAOD::VertexContainer &amp;) const =0</argsstring>
        <name>getMatchMap</name>
        <reimplementedby refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ae6a2b05b62f47b2469bc7d27b48fe0cc">getMatchMap</reimplementedby>
        <reimplementedby refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a562a5b95a90d84ea732b4204334b20ff">getMatchMap</reimplementedby>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::TrackParticleContainer</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" line="27"/>
      </memberdef>
      <memberdef kind="function" id="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a7e8953f3bf31d828eace96161c8ed693" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &gt;</type>
        <definition>virtual ElementLink&lt; xAOD::VertexContainer&gt; CP::ITrackVertexAssociationTool::getUniqueMatchVertexLink</definition>
        <argsstring>(const xAOD::TrackParticle &amp;, const xAOD::VertexContainer &amp;) const =0</argsstring>
        <name>getUniqueMatchVertexLink</name>
        <reimplementedby refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1afa0c24ebff3f73503d8ec155d782dd2f">getUniqueMatchVertexLink</reimplementedby>
        <reimplementedby refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a9a2a34d615d862e3b7e9a7f82077a9ff">getUniqueMatchVertexLink</reimplementedby>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
        </param>
        <briefdescription>
<para>This functions will return the best matched vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" line="32"/>
      </memberdef>
      <memberdef kind="function" id="d7/df1/classCP_1_1ITrackVertexAssociationTool_1acdaca12ea6b9ce0935ade1de70bfd978" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
        <definition>virtual const xAOD::Vertex* CP::ITrackVertexAssociationTool::getUniqueMatchVertex</definition>
        <argsstring>(const xAOD::TrackParticle &amp;, std::vector&lt; const xAOD::Vertex * &gt; &amp;) const =0</argsstring>
        <name>getUniqueMatchVertex</name>
        <reimplementedby refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a6e214899f5f26486193e4e91aec52b58">getUniqueMatchVertex</reimplementedby>
        <reimplementedby refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a6a70006ce70bedb0d17039ae2d8936e5">getUniqueMatchVertex</reimplementedby>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" line="34"/>
      </memberdef>
      <memberdef kind="function" id="d7/df1/classCP_1_1ITrackVertexAssociationTool_1accf5c8fd2cf22805a7af79f23684d883" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>virtual xAOD::TrackVertexAssociationMap CP::ITrackVertexAssociationTool::getUniqueMatchMap</definition>
        <argsstring>(std::vector&lt; const xAOD::TrackParticle * &gt; &amp;, std::vector&lt; const xAOD::Vertex * &gt; &amp;) const =0</argsstring>
        <name>getUniqueMatchMap</name>
        <reimplementedby refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ab78bf9e74bc11a8096e67e7398140f95">getUniqueMatchMap</reimplementedby>
        <reimplementedby refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a85c01f0cb06f7e2c21009b2122b8c609">getUniqueMatchMap</reimplementedby>
        <param>
          <type>std::vector&lt; const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> * &gt; &amp;</type>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
        </param>
        <briefdescription>
<para>This functions related to the previous functions, will return a 2D vector to store the best matched tracks for each vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a02b821193fd4d9c515821cbc46b38e62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>virtual xAOD::TrackVertexAssociationMap CP::ITrackVertexAssociationTool::getUniqueMatchMap</definition>
        <argsstring>(const xAOD::TrackParticleContainer &amp;, const xAOD::VertexContainer &amp;) const =0</argsstring>
        <name>getUniqueMatchMap</name>
        <reimplementedby refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ac5dca7886831a7c568f501dcc1e66c50">getUniqueMatchMap</reimplementedby>
        <reimplementedby refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a13246805b31c773223bf4f370c01ba65">getUniqueMatchMap</reimplementedby>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::TrackParticleContainer</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" line="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10947">
        <label>CP::ITrackVertexAssociationTool</label>
        <link refid="d7/df1/classCP_1_1ITrackVertexAssociationTool"/>
        <childnode refid="10948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10949">
        <label>CP::LooseTrackVertexAssociationTool</label>
        <link refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool"/>
        <childnode refid="10947" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10948">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="10950">
        <label>CP::TightTrackVertexAssociationTool</label>
        <link refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool"/>
        <childnode refid="10947" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10951">
        <label>CP::ITrackVertexAssociationTool</label>
        <link refid="d7/df1/classCP_1_1ITrackVertexAssociationTool"/>
        <childnode refid="10952" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10952">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" line="20" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/ITrackVertexAssociationTool.h" bodystart="19" bodyend="41"/>
    <listofallmembers>
      <member refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a3428e611b61fb1e687e1a3bbd85f68dd" prot="public" virt="pure-virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>getMatchMap</name></member>
      <member refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a63f465dcaad90af44d741ad5c0164105" prot="public" virt="pure-virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>getMatchMap</name></member>
      <member refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1accf5c8fd2cf22805a7af79f23684d883" prot="public" virt="pure-virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>getUniqueMatchMap</name></member>
      <member refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a02b821193fd4d9c515821cbc46b38e62" prot="public" virt="pure-virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>getUniqueMatchMap</name></member>
      <member refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1acdaca12ea6b9ce0935ade1de70bfd978" prot="public" virt="pure-virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>getUniqueMatchVertex</name></member>
      <member refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a7e8953f3bf31d828eace96161c8ed693" prot="public" virt="pure-virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>getUniqueMatchVertexLink</name></member>
      <member refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a00d6b75e48c95dd65b727a2fabf79161" prot="public" virt="pure-virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>isCompatible</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1af1aac990b958e92bf38123318d926e67" prot="public" virt="pure-virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>print</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>CP::ITrackVertexAssociationTool</scope><name>~IAsgTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
