<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/d90/DefinitionMaker_8cxx" kind="file">
    <compoundname>DefinitionMaker.cxx</compoundname>
    <includes refid="d9/d77/DefinitionMaker_8h" local="no">QuickAna/DefinitionMaker.h</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes refid="d4/d85/DefinitionArgs_8h" local="no">QuickAna/DefinitionArgs.h</includes>
    <includes refid="d6/df3/IAnaTool_8h" local="no">QuickAna/IAnaTool.h</includes>
    <includes refid="d5/dba/QuickAna_2QuickAna_2MessageCheck_8h" local="no">QuickAna/MessageCheck.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <includes local="no">mutex</includes>
    <incdepgraph>
      <node id="245494">
        <label>list</label>
      </node>
      <node id="245498">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="245489" relation="include">
        </childnode>
        <childnode refid="245499" relation="include">
        </childnode>
        <childnode refid="245500" relation="include">
        </childnode>
        <childnode refid="245501" relation="include">
        </childnode>
      </node>
      <node id="245491">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="245488">
        <label>functional</label>
      </node>
      <node id="245497">
        <label>PATInterfaces/ISystematicsTool.h</label>
        <link refid="d6/db3/ISystematicsTool_8h_source"/>
        <childnode refid="245498" relation="include">
        </childnode>
        <childnode refid="245502" relation="include">
        </childnode>
        <childnode refid="245503" relation="include">
        </childnode>
        <childnode refid="245507" relation="include">
        </childnode>
      </node>
      <node id="245501">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="245487">
        <label>QuickAna/Global.h</label>
        <link refid="d4/d7e/QuickAna_2QuickAna_2Global_8h_source"/>
      </node>
      <node id="245511">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="245492">
        <label>QuickAna/DefinitionArgs.h</label>
        <link refid="d4/d85/DefinitionArgs_8h_source"/>
        <childnode refid="245487" relation="include">
        </childnode>
        <childnode refid="245493" relation="include">
        </childnode>
        <childnode refid="245494" relation="include">
        </childnode>
        <childnode refid="245495" relation="include">
        </childnode>
        <childnode refid="245489" relation="include">
        </childnode>
      </node>
      <node id="245486">
        <label>QuickAna/DefinitionMaker.h</label>
        <link refid="d9/d77/DefinitionMaker_8h_source"/>
        <childnode refid="245487" relation="include">
        </childnode>
        <childnode refid="245488" relation="include">
        </childnode>
        <childnode refid="245489" relation="include">
        </childnode>
        <childnode refid="245490" relation="include">
        </childnode>
      </node>
      <node id="245499">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="245489">
        <label>string</label>
      </node>
      <node id="245512">
        <label>AthenaBaseComps/AthMessaging.h</label>
      </node>
      <node id="245496">
        <label>QuickAna/IAnaTool.h</label>
        <link refid="d6/df3/IAnaTool_8h_source"/>
        <childnode refid="245487" relation="include">
        </childnode>
        <childnode refid="245497" relation="include">
        </childnode>
      </node>
      <node id="245507">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="245504" relation="include">
        </childnode>
        <childnode refid="245506" relation="include">
        </childnode>
        <childnode refid="245490" relation="include">
        </childnode>
        <childnode refid="245489" relation="include">
        </childnode>
        <childnode refid="245488" relation="include">
        </childnode>
        <childnode refid="245502" relation="include">
        </childnode>
        <childnode refid="245503" relation="include">
        </childnode>
      </node>
      <node id="245493">
        <label>QuickAna/AnaToolSequence.h</label>
        <link refid="d7/d5c/AnaToolSequence_8h_source"/>
        <childnode refid="245487" relation="include">
        </childnode>
        <childnode refid="245494" relation="include">
        </childnode>
        <childnode refid="245495" relation="include">
        </childnode>
        <childnode refid="245490" relation="include">
        </childnode>
      </node>
      <node id="245503">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="245504" relation="include">
        </childnode>
        <childnode refid="245505" relation="include">
        </childnode>
        <childnode refid="245506" relation="include">
        </childnode>
        <childnode refid="245489" relation="include">
        </childnode>
      </node>
      <node id="245509">
        <label>AsgTools/MessageCheck.h</label>
        <link refid="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_source"/>
        <childnode refid="245510" relation="include">
        </childnode>
        <childnode refid="245511" relation="include">
        </childnode>
        <childnode refid="245512" relation="include">
        </childnode>
      </node>
      <node id="245504">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="245490">
        <label>vector</label>
      </node>
      <node id="245514">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="245505">
        <label>iosfwd</label>
      </node>
      <node id="245485">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/DefinitionMaker.cxx</label>
        <link refid="DefinitionMaker.cxx"/>
        <childnode refid="245486" relation="include">
        </childnode>
        <childnode refid="245491" relation="include">
        </childnode>
        <childnode refid="245492" relation="include">
        </childnode>
        <childnode refid="245496" relation="include">
        </childnode>
        <childnode refid="245508" relation="include">
        </childnode>
        <childnode refid="245513" relation="include">
        </childnode>
        <childnode refid="245515" relation="include">
        </childnode>
      </node>
      <node id="245500">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="245515">
        <label>mutex</label>
      </node>
      <node id="245510">
        <label>type_traits</label>
      </node>
      <node id="245506">
        <label>set</label>
      </node>
      <node id="245513">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="245514" relation="include">
        </childnode>
      </node>
      <node id="245508">
        <label>QuickAna/MessageCheck.h</label>
        <link refid="d5/dba/QuickAna_2QuickAna_2MessageCheck_8h_source"/>
        <childnode refid="245487" relation="include">
        </childnode>
        <childnode refid="245509" relation="include">
        </childnode>
      </node>
      <node id="245502">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
      <node id="245495">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d7/d63/namespaceana">ana</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2014.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/DefinitionMaker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Suppressing<sp/>unused<sp/>typedef<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunknown-pragmas&quot;</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-local-typedefs&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/DefinitionArgs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/IAnaTool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/MessageCheck.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ana</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Data</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::mutex<sp/>mutex;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DefinitionMaker&gt;<sp/>list;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Data&amp;<sp/>data<sp/>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Data<sp/>data;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d0b/classana_1_1DefinitionMaker_1a6f7f72ca17a9f02315ec109228ccf453" kindref="member" tooltip="add a new object definition">DefinitionMaker ::</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="d5/d0b/classana_1_1DefinitionMaker_1a6f7f72ca17a9f02315ec109228ccf453" kindref="member" tooltip="add a new object definition">  addDefinition</ref><sp/>(DefinitionMaker<sp/>val_definition)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>Data&amp;<sp/>mydata<sp/>(data());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock<sp/>(mydata.mutex);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>mydata.list.push_back<sp/>(val_definition);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>StatusCode<sp/><ref refid="d5/d0b/classana_1_1DefinitionMaker_1a925a10176a8df75b30155cfb331c5100" kindref="member" tooltip="make a new definition">DefinitionMaker ::</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="d5/d0b/classana_1_1DefinitionMaker_1a925a10176a8df75b30155cfb331c5100" kindref="member" tooltip="make a new definition">  makeDefinition</ref><sp/>(DefinitionArgs&amp;<sp/>args)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">msgConfiguration;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Data&amp;<sp/>mydata<sp/>(data());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock<sp/>(mydata.mutex);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolSequence<sp/>result;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundName<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>maker<sp/>:<sp/>mydata.list)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DefinitionArgs<sp/>myargs<sp/>=<sp/>args.cloneConf();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>myfoundName<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(maker.doMakeDefinition<sp/>(myargs,<sp/>myfoundName));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myfoundName)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundName)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;duplicate<sp/>object<sp/>definition:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>args.name());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>myargs.extractSequence<sp/>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundName<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!foundName)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>object<sp/>definition:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>args.name());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>def<sp/>:<sp/>result)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(def.first)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>args.add<sp/>(std::unique_ptr&lt;IAnaTool&gt;<sp/>(std::move<sp/>(def.first)));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d0b/classana_1_1DefinitionMaker_1a0b999f2cc0af172b02c1a41c91581d5a" kindref="member" tooltip="check the invariant of this object">DefinitionMaker ::</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="d5/d0b/classana_1_1DefinitionMaker_1a0b999f2cc0af172b02c1a41c91581d5a" kindref="member" tooltip="check the invariant of this object">  testInvariant</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="107"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="d5/d0b/classana_1_1DefinitionMaker_1a7ffd33868fd591b4a41ae0df9db5b8a0" kindref="member" tooltip="standard constructor">DefinitionMaker ::</ref></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="d5/d0b/classana_1_1DefinitionMaker_1a7ffd33868fd591b4a41ae0df9db5b8a0" kindref="member" tooltip="standard constructor">  DefinitionMaker</ref><sp/>(<ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member" tooltip="the various object types we have to deal with">ObjectType</ref><sp/>val_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val_name,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;StatusCode<sp/>(DefinitionArgs&amp;)&gt;&amp;<sp/>val_function)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_type<sp/>(val_type),<sp/>m_function<sp/>(val_function)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::algorithm::split(m_names,<sp/>val_name,<sp/>boost::is_any_of(</highlight><highlight class="stringliteral">&quot;\t<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>StatusCode<sp/>DefinitionMaker<sp/>::</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>doMakeDefinition<sp/>(DefinitionArgs&amp;<sp/>args,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>foundName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="127"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">msgConfiguration;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_REQUIRE<sp/>(!args.filled());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member" tooltip="the various object types we have to deal with">ObjectType</ref><sp/>type<sp/>=<sp/>args.type();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>OBJECT_FAT_JET)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>OBJECT_JET;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>OBJECT_MET2)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>OBJECT_MET;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>m_type<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::find<sp/>(m_names.begin(),<sp/>m_names.end(),<sp/>args.name())<sp/>!=<sp/>m_names.end())</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(m_function<sp/>(args));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.filled())</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;definition<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>args.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>didn&apos;t<sp/>do<sp/>anything&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundName<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>foundName<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/DefinitionMaker.cxx"/>
  </compounddef>
</doxygen>
