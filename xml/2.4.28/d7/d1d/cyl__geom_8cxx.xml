<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d7/d1d/cyl__geom_8cxx" kind="file">
    <compoundname>cyl_geom.cxx</compoundname>
    <includes refid="d0/dc6/cyl__geom_8h" local="yes">JetUtils/cyl_geom.h</includes>
    <incdepgraph>
      <node id="202070">
        <label>list</label>
      </node>
      <node id="202072">
        <label>cmath</label>
      </node>
      <node id="202068">
        <label>JetUtils/cyl_geom.h</label>
        <link refid="d0/dc6/cyl__geom_8h_source"/>
        <childnode refid="202069" relation="include">
        </childnode>
        <childnode refid="202070" relation="include">
        </childnode>
        <childnode refid="202071" relation="include">
        </childnode>
        <childnode refid="202072" relation="include">
        </childnode>
      </node>
      <node id="202067">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUtils/Root/cyl_geom.cxx</label>
        <link refid="cyl_geom.cxx"/>
        <childnode refid="202068" relation="include">
        </childnode>
      </node>
      <node id="202071">
        <label>vector</label>
      </node>
      <node id="202069">
        <label>set</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d6/d37/namespaceJetGeom">JetGeom</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="d7/d1d/cyl__geom_8cxx_1aa1acfd1910664253dc0464b2e71525ff" prot="public" static="no">
        <name>CY_GEOM_CPP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUtils/Root/cyl_geom.cxx" line="1" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUtils/Root/cyl_geom.cxx" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>CY_GEOM_CPP</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;JetUtils/cyl_geom.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">JetGeom<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testHullLine(point_list_t<sp/>&amp;hull,<sp/>point_t<sp/>p){</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>helper<sp/>function<sp/>for<sp/>findConvexHull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>point_list_t::iterator<sp/>it_prev<sp/>=<sp/>hull.end();it_prev--;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>point_list_t::iterator<sp/>it_pprev<sp/>=<sp/>it_prev;<sp/>it_pprev--;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>line_t<sp/>l(*it_pprev,<sp/>*it_prev);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>hull<sp/>:<sp/>&quot;&lt;&lt;<sp/>hull.size()&lt;&lt;<sp/>&quot;<sp/><sp/>p.phi<sp/>=&quot;&lt;&lt;p.second<sp/><sp/>&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;&lt;&lt;<sp/>(*it_prev).first&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>(*it_prev).second<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&quot;&lt;&lt;<sp/>(*it_pprev).first<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;&lt;&lt;(*it_pprev).second<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>&quot;&lt;&lt;<sp/>p.first<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;&lt;&lt;<sp/>p.second<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>l.is_left(p)<sp/>&amp;&amp;<sp/>(hull.size()&gt;2)){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>is<sp/>right<sp/>!&quot;<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>hull.pop_back();<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>testHullLine(hull,<sp/>p);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>is<sp/>left<sp/>!&quot;<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>hull.push_back(p);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>listToSet(point_list_t<sp/>&amp;inList,<sp/>point_set_t<sp/>&amp;outSet){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>point_list_t::iterator<sp/>it<sp/>=<sp/>inList.begin();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>point_list_t::iterator<sp/>itE<sp/>=<sp/>inList.end();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>point_set_t::iterator<sp/>s_it<sp/>=<sp/>outSet.begin();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>it!=itE;<sp/>++it){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>s_it<sp/>=<sp/>outSet.insert(s_it,<sp/>*it);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUtils/Root/cyl_geom.cxx"/>
  </compounddef>
</doxygen>
