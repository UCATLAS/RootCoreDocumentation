<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/d97/PackedContainer__test_8cxx" kind="file">
    <compoundname>PackedContainer_test.cxx</compoundname>
    <includes refid="d6/dda/PackedContainer_8h" local="yes">AthContainers/PackedContainer.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cassert</includes>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="74188">
        <label>limits</label>
      </node>
      <node id="74185">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="74186" relation="include">
        </childnode>
        <childnode refid="74187" relation="include">
        </childnode>
      </node>
      <node id="74181">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedContainer_test.cxx</label>
        <link refid="PackedContainer_test.cxx"/>
        <childnode refid="74182" relation="include">
        </childnode>
        <childnode refid="74194" relation="include">
        </childnode>
        <childnode refid="74195" relation="include">
        </childnode>
        <childnode refid="74189" relation="include">
        </childnode>
      </node>
      <node id="74189">
        <label>stdint.h</label>
      </node>
      <node id="74195">
        <label>cassert</label>
      </node>
      <node id="74186">
        <label>string</label>
      </node>
      <node id="74193">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="74184">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="74185" relation="include">
        </childnode>
        <childnode refid="74188" relation="include">
        </childnode>
        <childnode refid="74189" relation="include">
        </childnode>
        <childnode refid="74190" relation="include">
        </childnode>
      </node>
      <node id="74190">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="74187">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="74192">
        <label>vector</label>
      </node>
      <node id="74191">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="74183">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="74194">
        <label>iostream</label>
      </node>
      <node id="74182">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="74183" relation="include">
        </childnode>
        <childnode refid="74184" relation="include">
        </childnode>
        <childnode refid="74191" relation="include">
        </childnode>
        <childnode refid="74192" relation="include">
        </childnode>
        <childnode refid="74193" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="db/d97/PackedContainer__test_8cxx_1a1440a7779ac56f47a3f355ce4a8c7da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test1</definition>
        <argsstring>()</argsstring>
        <name>test1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedContainer_test.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedContainer_test.cxx" bodystart="16" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="db/d97/PackedContainer__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedContainer_test.cxx" line="88" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedContainer_test.cxx" bodystart="87" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regression tests for PackedContainer. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Sep, 2014 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/dda/PackedContainer_8h" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">AthContainers/PackedContainer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test1()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;int32_t&gt;</ref><sp/>pc1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>assert<sp/>(pc1.<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>().nbits()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>assert<sp/>(pc1.<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>().isSigned()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>assert<sp/>(pc1.<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>().isFloat()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;uint32_t&gt;</ref><sp/>pc2;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>assert<sp/>(pc2.parms().nbits()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>assert<sp/>(pc2.parms().isSigned()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>assert<sp/>(pc2.parms().isFloat()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;uint16_t&gt;</ref><sp/>pc3;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>assert<sp/>(pc3.parms().nbits()<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>assert<sp/>(pc3.parms().isSigned()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>assert<sp/>(pc3.parms().isFloat()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;int8_t&gt;</ref><sp/>pc4;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>assert<sp/>(pc4.parms().nbits()<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>assert<sp/>(pc4.parms().isSigned()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>assert<sp/>(pc4.parms().isFloat()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;float&gt;</ref><sp/>pc5;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().nbits()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().nmantissa()<sp/>==<sp/>23);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().isSigned()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().isFloat()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().rounding()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().scale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().hasScale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;double&gt;</ref><sp/>pc6;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>assert<sp/>(pc6.parms().nbits()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>assert<sp/>(pc6.parms().nmantissa()<sp/>==<sp/>23);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>assert<sp/>(pc6.parms().isSigned()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>assert<sp/>(pc6.parms().isFloat()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>assert<sp/>(pc6.parms().rounding()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>assert<sp/>(pc6.parms().scale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>assert<sp/>(pc6.parms().hasScale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;int16_t&gt;</ref><sp/>&gt;<sp/>pc7;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>assert<sp/>(pc7.parms().nbits()<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>assert<sp/>(pc7.parms().isSigned()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>assert<sp/>(pc7.parms().isFloat()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>&gt;<sp/>pc8;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>assert<sp/>(pc8.parms().nbits()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>assert<sp/>(pc8.parms().isSigned()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>assert<sp/>(pc8.parms().isFloat()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>assert<sp/>(pc1.<ref refid="dd/d01/classSG_1_1PackedContainer_1a193cad55d1fa94dbaaf5682fc1aa3737" kindref="member" tooltip="Set a packing option.">setOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;nbits&quot;</highlight><highlight class="normal">,<sp/>23));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>assert<sp/>(pc1.<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>().nbits()<sp/>==<sp/>23);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>assert<sp/>(pc1.<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>().isSigned()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>assert<sp/>(pc1.<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>().isFloat()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.setOption<sp/>(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>2.5));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().scale()<sp/>==<sp/>2.5);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().hasScale()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.setOption<sp/>(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>static_cast&lt;double&gt;(3.5)));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().scale()<sp/>==<sp/>3.5);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>assert<sp/>(pc5.parms().hasScale()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>pc2.setParms<sp/>(pc1.<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>assert<sp/>(pc2.parms().nbits()<sp/>==<sp/>23);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>assert<sp/>(pc2.parms().isSigned()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>assert<sp/>(pc2.parms().isFloat()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>test1();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedContainer_test.cxx"/>
  </compounddef>
</doxygen>
