<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/d1b/Egamma__v1_8cxx" kind="file">
    <compoundname>Egamma_v1.cxx</compoundname>
    <includes refid="d1/d0c/AuxStoreAccessorMacros_8h" local="yes">xAODCore/AuxStoreAccessorMacros.h</includes>
    <includes refid="d9/d42/Egamma__v1_8h" local="yes">xAODEgamma/versions/Egamma_v1.h</includes>
    <includes refid="db/ddd/EgammaAccessors__v1_8h" local="yes">EgammaAccessors_v1.h</includes>
    <includes refid="d1/d7c/getIsolationAccessor_8h" local="yes">xAODPrimitives/tools/getIsolationAccessor.h</includes>
    <includes refid="df/d25/getIsolationCorrectionAccessor_8h" local="yes">xAODPrimitives/tools/getIsolationCorrectionAccessor.h</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="363850">
        <label>list</label>
      </node>
      <node id="363859">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="363844" relation="include">
        </childnode>
        <childnode refid="363851" relation="include">
        </childnode>
        <childnode refid="363759" relation="include">
        </childnode>
        <childnode refid="363840" relation="include">
        </childnode>
        <childnode refid="363766" relation="include">
        </childnode>
      </node>
      <node id="363844">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="363804">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="363866">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="363867" relation="include">
        </childnode>
        <childnode refid="363845" relation="include">
        </childnode>
        <childnode refid="363773" relation="include">
        </childnode>
        <childnode refid="363868" relation="include">
        </childnode>
      </node>
      <node id="363806">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="363765" relation="include">
        </childnode>
        <childnode refid="363767" relation="include">
        </childnode>
        <childnode refid="363773" relation="include">
        </childnode>
        <childnode refid="363774" relation="include">
        </childnode>
      </node>
      <node id="363807">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="363776">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="363761" relation="include">
        </childnode>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363777" relation="include">
        </childnode>
        <childnode refid="363775" relation="include">
        </childnode>
      </node>
      <node id="363878">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="363879" relation="include">
        </childnode>
        <childnode refid="363880" relation="include">
        </childnode>
        <childnode refid="363881" relation="include">
        </childnode>
      </node>
      <node id="363772">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="363774">
        <label>functional</label>
      </node>
      <node id="363841">
        <label>boost/version.hpp</label>
      </node>
      <node id="363771">
        <label>limits</label>
      </node>
      <node id="363777">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="363802">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="363768">
        <label>iterator</label>
      </node>
      <node id="363829">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="363826" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
      </node>
      <node id="363790">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="363751" relation="include">
        </childnode>
        <childnode refid="363791" relation="include">
        </childnode>
      </node>
      <node id="363831">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="363882">
        <label>CxxUtils/final.h</label>
        <link refid="da/d9b/final_8h"/>
      </node>
      <node id="363865">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="363871">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="363872" relation="include">
        </childnode>
        <childnode refid="363839" relation="include">
        </childnode>
        <childnode refid="363771" relation="include">
        </childnode>
        <childnode refid="363774" relation="include">
        </childnode>
        <childnode refid="363873" relation="include">
        </childnode>
      </node>
      <node id="363814">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="363762" relation="include">
        </childnode>
        <childnode refid="363815" relation="include">
        </childnode>
        <childnode refid="363816" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
        <childnode refid="363751" relation="include">
        </childnode>
      </node>
      <node id="363786">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="363787" relation="include">
        </childnode>
        <childnode refid="363769" relation="include">
        </childnode>
      </node>
      <node id="363750">
        <label>stdint.h</label>
      </node>
      <node id="363851">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="363771" relation="include">
        </childnode>
        <childnode refid="363852" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
        <childnode refid="363769" relation="include">
        </childnode>
        <childnode refid="363763" relation="include">
        </childnode>
      </node>
      <node id="363837">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="363783">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
      </node>
      <node id="363754">
        <label>RVersion.h</label>
      </node>
      <node id="363764">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="363765" relation="include">
        </childnode>
        <childnode refid="363773" relation="include">
        </childnode>
        <childnode refid="363774" relation="include">
        </childnode>
      </node>
      <node id="363834">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="363835" relation="include">
        </childnode>
        <childnode refid="363874" relation="include">
        </childnode>
        <childnode refid="363824" relation="include">
        </childnode>
      </node>
      <node id="363770">
        <label>cmath</label>
      </node>
      <node id="363818">
        <label>cassert</label>
      </node>
      <node id="363842">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="363861">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="363816">
        <label>stdexcept</label>
      </node>
      <node id="363805">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="363880">
        <label>Eigen/Core</label>
      </node>
      <node id="363848">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="363856">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="363758">
        <label>TLorentzVector.h</label>
      </node>
      <node id="363826">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="363751" relation="include">
        </childnode>
        <childnode refid="363827" relation="include">
        </childnode>
      </node>
      <node id="363751">
        <label>string</label>
      </node>
      <node id="363808">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="363762" relation="include">
        </childnode>
        <childnode refid="363761" relation="include">
        </childnode>
        <childnode refid="363790" relation="include">
        </childnode>
        <childnode refid="363786" relation="include">
        </childnode>
        <childnode refid="363778" relation="include">
        </childnode>
        <childnode refid="363809" relation="include">
        </childnode>
        <childnode refid="363810" relation="include">
        </childnode>
        <childnode refid="363793" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
        <childnode refid="363767" relation="include">
        </childnode>
        <childnode refid="363769" relation="include">
        </childnode>
        <childnode refid="363811" relation="include">
        </childnode>
        <childnode refid="363812" relation="include">
        </childnode>
        <childnode refid="363800" relation="include">
        </childnode>
        <childnode refid="363813" relation="include">
        </childnode>
      </node>
      <node id="363781">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
      </node>
      <node id="363884">
        <label>xAODPrimitives/tools/getIsolationAccessor.h</label>
        <link refid="d1/d7c/getIsolationAccessor_8h_source"/>
        <childnode refid="363759" relation="include">
        </childnode>
        <childnode refid="363876" relation="include">
        </childnode>
      </node>
      <node id="363811">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="363853">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="363836" relation="include">
        </childnode>
        <childnode refid="363851" relation="include">
        </childnode>
        <childnode refid="363854" relation="include">
        </childnode>
        <childnode refid="363856" relation="include">
        </childnode>
        <childnode refid="363841" relation="include">
        </childnode>
        <childnode refid="363768" relation="include">
        </childnode>
        <childnode refid="363769" relation="include">
        </childnode>
      </node>
      <node id="363867">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="363876">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="363868">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="363869" relation="include">
        </childnode>
      </node>
      <node id="363875">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="363825" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
      </node>
      <node id="363869">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="363755">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="363797">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="363858">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="363853" relation="include">
        </childnode>
        <childnode refid="363768" relation="include">
        </childnode>
        <childnode refid="363766" relation="include">
        </childnode>
        <childnode refid="363859" relation="include">
        </childnode>
      </node>
      <node id="363812">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="363794">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="363854">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="363836" relation="include">
        </childnode>
        <childnode refid="363753" relation="include">
        </childnode>
        <childnode refid="363773" relation="include">
        </childnode>
        <childnode refid="363855" relation="include">
        </childnode>
      </node>
      <node id="363760">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="363753">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="363754" relation="include">
        </childnode>
        <childnode refid="363755" relation="include">
        </childnode>
      </node>
      <node id="363810">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="363803">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="363852">
        <label>limits.h</label>
      </node>
      <node id="363846">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="363847" relation="include">
        </childnode>
      </node>
      <node id="363789">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="363790" relation="include">
        </childnode>
        <childnode refid="363771" relation="include">
        </childnode>
        <childnode refid="363750" relation="include">
        </childnode>
        <childnode refid="363792" relation="include">
        </childnode>
      </node>
      <node id="363762">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363764" relation="include">
        </childnode>
      </node>
      <node id="363752">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="363750" relation="include">
        </childnode>
      </node>
      <node id="363881">
        <label>Eigen/Dense</label>
      </node>
      <node id="363765">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="363766" relation="include">
        </childnode>
        <childnode refid="363767" relation="include">
        </childnode>
        <childnode refid="363768" relation="include">
        </childnode>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363769" relation="include">
        </childnode>
        <childnode refid="363770" relation="include">
        </childnode>
        <childnode refid="363771" relation="include">
        </childnode>
        <childnode refid="363751" relation="include">
        </childnode>
        <childnode refid="363772" relation="include">
        </childnode>
      </node>
      <node id="363839">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="363818" relation="include">
        </childnode>
      </node>
      <node id="363757">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="363758" relation="include">
        </childnode>
        <childnode refid="363759" relation="include">
        </childnode>
        <childnode refid="363819" relation="include">
        </childnode>
        <childnode refid="363777" relation="include">
        </childnode>
      </node>
      <node id="363819">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="363820" relation="include">
        </childnode>
      </node>
      <node id="363824">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="363750" relation="include">
        </childnode>
        <childnode refid="363825" relation="include">
        </childnode>
        <childnode refid="363757" relation="include">
        </childnode>
        <childnode refid="363826" relation="include">
        </childnode>
        <childnode refid="363828" relation="include">
        </childnode>
        <childnode refid="363749" relation="include">
        </childnode>
        <childnode refid="363830" relation="include">
        </childnode>
        <childnode refid="363831" relation="include">
        </childnode>
      </node>
      <node id="363855">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="363851" relation="include">
        </childnode>
        <childnode refid="363839" relation="include">
        </childnode>
      </node>
      <node id="363782">
        <label>typeinfo</label>
      </node>
      <node id="363817">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="363811" relation="include">
        </childnode>
        <childnode refid="363818" relation="include">
        </childnode>
      </node>
      <node id="363823">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="363824" relation="include">
        </childnode>
        <childnode refid="363832" relation="include">
        </childnode>
      </node>
      <node id="363835">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="363814" relation="include">
        </childnode>
        <childnode refid="363836" relation="include">
        </childnode>
        <childnode refid="363837" relation="include">
        </childnode>
        <childnode refid="363838" relation="include">
        </childnode>
        <childnode refid="363844" relation="include">
        </childnode>
        <childnode refid="363845" relation="include">
        </childnode>
        <childnode refid="363851" relation="include">
        </childnode>
        <childnode refid="363853" relation="include">
        </childnode>
        <childnode refid="363857" relation="include">
        </childnode>
        <childnode refid="363858" relation="include">
        </childnode>
        <childnode refid="363854" relation="include">
        </childnode>
        <childnode refid="363860" relation="include">
        </childnode>
        <childnode refid="363753" relation="include">
        </childnode>
        <childnode refid="363861" relation="include">
        </childnode>
        <childnode refid="363862" relation="include">
        </childnode>
        <childnode refid="363856" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
        <childnode refid="363774" relation="include">
        </childnode>
        <childnode refid="363863" relation="include">
        </childnode>
        <childnode refid="363766" relation="include">
        </childnode>
        <childnode refid="363816" relation="include">
        </childnode>
        <childnode refid="363768" relation="include">
        </childnode>
        <childnode refid="363777" relation="include">
        </childnode>
        <childnode refid="363864" relation="include">
        </childnode>
        <childnode refid="363866" relation="include">
        </childnode>
        <childnode refid="363870" relation="include">
        </childnode>
        <childnode refid="363871" relation="include">
        </childnode>
      </node>
      <node id="363825">
        <label>bitset</label>
      </node>
      <node id="363792">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="363756">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="363809">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="363779">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="363750" relation="include">
        </childnode>
      </node>
      <node id="363791">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="363796">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="363845">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="363846" relation="include">
        </childnode>
        <childnode refid="363838" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363772" relation="include">
        </childnode>
        <childnode refid="363848" relation="include">
        </childnode>
        <childnode refid="363795" relation="include">
        </childnode>
        <childnode refid="363849" relation="include">
        </childnode>
      </node>
      <node id="363775">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="363879">
        <label>unistd.h</label>
      </node>
      <node id="363864">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="363865" relation="include">
        </childnode>
      </node>
      <node id="363780">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="363762" relation="include">
        </childnode>
        <childnode refid="363781" relation="include">
        </childnode>
        <childnode refid="363783" relation="include">
        </childnode>
        <childnode refid="363784" relation="include">
        </childnode>
        <childnode refid="363798" relation="include">
        </childnode>
        <childnode refid="363800" relation="include">
        </childnode>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
        <childnode refid="363806" relation="include">
        </childnode>
        <childnode refid="363807" relation="include">
        </childnode>
      </node>
      <node id="363787">
        <label>vector</label>
      </node>
      <node id="363874">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="363835" relation="include">
        </childnode>
        <childnode refid="363757" relation="include">
        </childnode>
        <childnode refid="363775" relation="include">
        </childnode>
      </node>
      <node id="363872">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="363766" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
      </node>
      <node id="363873">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="363883">
        <label>EgammaAccessors_v1.h</label>
        <link refid="db/ddd/EgammaAccessors__v1_8h_source"/>
        <childnode refid="363759" relation="include">
        </childnode>
        <childnode refid="363822" relation="include">
        </childnode>
      </node>
      <node id="363828">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="363829" relation="include">
        </childnode>
      </node>
      <node id="363767">
        <label>utility</label>
      </node>
      <node id="363870">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="363793">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="363748">
        <label>xAODEgamma/versions/Egamma_v1.h</label>
        <link refid="d9/d42/Egamma__v1_8h_source"/>
        <childnode refid="363749" relation="include">
        </childnode>
        <childnode refid="363757" relation="include">
        </childnode>
        <childnode refid="363821" relation="include">
        </childnode>
        <childnode refid="363822" relation="include">
        </childnode>
        <childnode refid="363823" relation="include">
        </childnode>
        <childnode refid="363833" relation="include">
        </childnode>
        <childnode refid="363875" relation="include">
        </childnode>
        <childnode refid="363876" relation="include">
        </childnode>
        <childnode refid="363877" relation="include">
        </childnode>
        <childnode refid="363878" relation="include">
        </childnode>
        <childnode refid="363882" relation="include">
        </childnode>
        <childnode refid="363793" relation="include">
        </childnode>
        <childnode refid="363750" relation="include">
        </childnode>
      </node>
      <node id="363833">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="363823" relation="include">
        </childnode>
        <childnode refid="363834" relation="include">
        </childnode>
        <childnode refid="363832" relation="include">
        </childnode>
      </node>
      <node id="363843">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="363801">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="363785">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="363800">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="363801" relation="include">
        </childnode>
        <childnode refid="363802" relation="include">
        </childnode>
        <childnode refid="363803" relation="include">
        </childnode>
        <childnode refid="363804" relation="include">
        </childnode>
        <childnode refid="363805" relation="include">
        </childnode>
      </node>
      <node id="363827">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="363820">
        <label>iosfwd</label>
      </node>
      <node id="363769">
        <label>cstdlib</label>
      </node>
      <node id="363863">
        <label>iostream</label>
      </node>
      <node id="363815">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="363761">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="363762" relation="include">
        </childnode>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363775" relation="include">
        </childnode>
      </node>
      <node id="363763">
        <label>cstddef</label>
      </node>
      <node id="363885">
        <label>xAODPrimitives/tools/getIsolationCorrectionAccessor.h</label>
        <link refid="df/d25/getIsolationCorrectionAccessor_8h_source"/>
        <childnode refid="363759" relation="include">
        </childnode>
        <childnode refid="363875" relation="include">
        </childnode>
        <childnode refid="363876" relation="include">
        </childnode>
        <childnode refid="363877" relation="include">
        </childnode>
      </node>
      <node id="363813">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="363780" relation="include">
        </childnode>
        <childnode refid="363776" relation="include">
        </childnode>
        <childnode refid="363761" relation="include">
        </childnode>
        <childnode refid="363811" relation="include">
        </childnode>
        <childnode refid="363812" relation="include">
        </childnode>
      </node>
      <node id="363822">
        <label>xAODEgamma/EgammaEnums.h</label>
        <link refid="d4/d8f/EgammaEnums_8h_source"/>
      </node>
      <node id="363747">
        <label>xAODCore/AuxStoreAccessorMacros.h</label>
        <link refid="d1/d0c/AuxStoreAccessorMacros_8h_source"/>
      </node>
      <node id="363849">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="363836" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
        <childnode refid="363850" relation="include">
        </childnode>
        <childnode refid="363818" relation="include">
        </childnode>
        <childnode refid="363769" relation="include">
        </childnode>
        <childnode refid="363777" relation="include">
        </childnode>
      </node>
      <node id="363784">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="363781" relation="include">
        </childnode>
        <childnode refid="363785" relation="include">
        </childnode>
        <childnode refid="363786" relation="include">
        </childnode>
        <childnode refid="363788" relation="include">
        </childnode>
        <childnode refid="363793" relation="include">
        </childnode>
        <childnode refid="363782" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
        <childnode refid="363766" relation="include">
        </childnode>
        <childnode refid="363750" relation="include">
        </childnode>
        <childnode refid="363795" relation="include">
        </childnode>
        <childnode refid="363796" relation="include">
        </childnode>
        <childnode refid="363797" relation="include">
        </childnode>
      </node>
      <node id="363821">
        <label>xAODEgamma/EgammaDefs.h</label>
        <link refid="dd/d34/EgammaDefs_8h_source"/>
        <childnode refid="363750" relation="include">
        </childnode>
      </node>
      <node id="363795">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="363838">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="363808" relation="include">
        </childnode>
        <childnode refid="363836" relation="include">
        </childnode>
        <childnode refid="363837" relation="include">
        </childnode>
        <childnode refid="363759" relation="include">
        </childnode>
        <childnode refid="363780" relation="include">
        </childnode>
        <childnode refid="363814" relation="include">
        </childnode>
        <childnode refid="363839" relation="include">
        </childnode>
        <childnode refid="363776" relation="include">
        </childnode>
        <childnode refid="363840" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
        <childnode refid="363843" relation="include">
        </childnode>
      </node>
      <node id="363877">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="363832">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="363775" relation="include">
        </childnode>
      </node>
      <node id="363799">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="363788">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="363785" relation="include">
        </childnode>
        <childnode refid="363789" relation="include">
        </childnode>
        <childnode refid="363793" relation="include">
        </childnode>
        <childnode refid="363787" relation="include">
        </childnode>
        <childnode refid="363794" relation="include">
        </childnode>
      </node>
      <node id="363766">
        <label>algorithm</label>
      </node>
      <node id="363830">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="363860">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="363759">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="363760" relation="include">
        </childnode>
        <childnode refid="363761" relation="include">
        </childnode>
        <childnode refid="363776" relation="include">
        </childnode>
        <childnode refid="363778" relation="include">
        </childnode>
        <childnode refid="363780" relation="include">
        </childnode>
        <childnode refid="363808" relation="include">
        </childnode>
        <childnode refid="363786" relation="include">
        </childnode>
        <childnode refid="363814" relation="include">
        </childnode>
        <childnode refid="363811" relation="include">
        </childnode>
        <childnode refid="363763" relation="include">
        </childnode>
        <childnode refid="363817" relation="include">
        </childnode>
      </node>
      <node id="363746">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx</label>
        <link refid="Egamma_v1.cxx"/>
        <childnode refid="363747" relation="include">
        </childnode>
        <childnode refid="363748" relation="include">
        </childnode>
        <childnode refid="363883" relation="include">
        </childnode>
        <childnode refid="363884" relation="include">
        </childnode>
        <childnode refid="363885" relation="include">
        </childnode>
        <childnode refid="363816" relation="include">
        </childnode>
      </node>
      <node id="363778">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="363750" relation="include">
        </childnode>
        <childnode refid="363751" relation="include">
        </childnode>
        <childnode refid="363779" relation="include">
        </childnode>
        <childnode refid="363753" relation="include">
        </childnode>
      </node>
      <node id="363857">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="363853" relation="include">
        </childnode>
        <childnode refid="363839" relation="include">
        </childnode>
        <childnode refid="363768" relation="include">
        </childnode>
      </node>
      <node id="363836">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="363749">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="363750" relation="include">
        </childnode>
        <childnode refid="363751" relation="include">
        </childnode>
        <childnode refid="363752" relation="include">
        </childnode>
        <childnode refid="363753" relation="include">
        </childnode>
        <childnode refid="363756" relation="include">
        </childnode>
      </node>
      <node id="363847">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="363862">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="363773">
        <label>memory</label>
      </node>
      <node id="363798">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="363783" relation="include">
        </childnode>
        <childnode refid="363784" relation="include">
        </childnode>
        <childnode refid="363799" relation="include">
        </childnode>
      </node>
      <node id="363840">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="363760" relation="include">
        </childnode>
        <childnode refid="363776" relation="include">
        </childnode>
        <childnode refid="363761" relation="include">
        </childnode>
        <childnode refid="363795" relation="include">
        </childnode>
        <childnode refid="363841" relation="include">
        </childnode>
        <childnode refid="363842" relation="include">
        </childnode>
        <childnode refid="363751" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>Egamma_v1$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxStoreAccessorMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/versions/Egamma_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EgammaAccessors_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODPrimitives/tools/getIsolationAccessor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODPrimitives/tools/getIsolationCorrectionAccessor.h&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a79e70bc14a2fc3a29d7d45a2a2c9a5af" kindref="member" tooltip="Default constructor.">Egamma_v1::Egamma_v1</ref>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>IParticle(),<sp/>m_p4(),<sp/>m_p4Cached(<sp/>false<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a79e70bc14a2fc3a29d7d45a2a2c9a5af" kindref="member" tooltip="Default constructor.">Egamma_v1::Egamma_v1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Egamma_v1&amp;<sp/>eg)<sp/>:<sp/>IParticle(eg),<sp/>m_p4(eg.m_p4),<sp/>m_p4Cached(eg.m_p4Cached)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/>Egamma_v1&amp;<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ab0ba0e6120b3eea36befb17bbf31906d" kindref="member" tooltip="Assignment Operator. Using the assignment of SG::AuxElement.">Egamma_v1::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Egamma_v1&amp;<sp/>eg<sp/>){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;eg){<sp/></highlight><highlight class="comment">//<sp/>protect<sp/>against<sp/>invalid<sp/>self-assignment<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" kindref="member" tooltip="Return the container holding this element.">container</ref>()<sp/>&amp;&amp;<sp/>!this-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>()<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ab0ba0e6120b3eea36befb17bbf31906d" kindref="member" tooltip="Assignment Operator. Using the assignment of SG::AuxElement.">IParticle::operator=</ref>(<sp/>eg<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_p4<sp/>=<sp/>eg.m_p4;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_p4Cached<sp/>=<sp/>eg.m_p4Cached;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>convention,<sp/>always<sp/>return<sp/>*this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1aee301381a5be0d47caa07b2947db1327" kindref="member" tooltip="The transverse momentum () of the particle.">Egamma_v1::pt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a9c64d1f34b462d0c733eb29e51d68899" kindref="member" tooltip="The pseudorapidity () of the particle.">Egamma_v1::eta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3d0388e78161846da4c5f02b5e7b73c6" kindref="member" tooltip="The azimuthal angle () of the particle.">Egamma_v1::phi</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a01d1279e46ce4eb33b3fcb4c24454439" kindref="member" tooltip="The invariant mass of the particle.">Egamma_v1::m</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8e58d9167d689f335753ec3112ea304f" kindref="member" tooltip="The total energy of the particle.">Egamma_v1::e</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3cb2d57ad308c4da1c5379062c479748" kindref="member" tooltip="The full 4-momentum of the particle as a TLoretzVector.">p4</ref>().E();<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ada67ec6540d85bc80e15726e6e25bba9" kindref="member" tooltip="The true rapidity (y) of the particle.">Egamma_v1::rapidity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3cb2d57ad308c4da1c5379062c479748" kindref="member" tooltip="The full 4-momentum of the particle as a TLoretzVector.">p4</ref>().Rapidity();<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a387b516af32193b22a1ec12856936ea7" kindref="member" tooltip="Definition of the 4-momentum type.">Egamma_v1::FourMom_t</ref>&amp;<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3cb2d57ad308c4da1c5379062c479748" kindref="member" tooltip="The full 4-momentum of the particle as a TLoretzVector.">Egamma_v1::p4</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_p4Cached<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p4.SetPtEtaPhiM(<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1aee301381a5be0d47caa07b2947db1327" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>(),<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a9c64d1f34b462d0c733eb29e51d68899" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>(),<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3d0388e78161846da4c5f02b5e7b73c6" kindref="member" tooltip="The azimuthal angle () of the particle.">phi</ref>(),<ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a01d1279e46ce4eb33b3fcb4c24454439" kindref="member" tooltip="The invariant mass of the particle.">m</ref>());<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p4Cached=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_p4;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a1424b7edbe81cf37e473129b25de116f" kindref="member" tooltip="set the 4-vec">Egamma_v1::setP4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc1(<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>acc1(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>pt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc2(<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>acc2(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>eta;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc3(<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>acc3(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>phi;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc4(<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>acc4(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>recalculate<sp/>m_p4<sp/>if<sp/>requested<sp/>after<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4Cached=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a91f15804dee9affffd6ae4aecee604d1" kindref="member" tooltip="set the Pt">Egamma_v1::setPt</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pt){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>pt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>recalculate<sp/>m_p4<sp/>if<sp/>requested<sp/>after<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4Cached=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a423160d03d506b2238e9b711fdaa95aa" kindref="member" tooltip="set the eta">Egamma_v1::setEta</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>eta;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>recalculate<sp/>m_p4<sp/>if<sp/>requested<sp/>after<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4Cached=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a4a07a23da2c3b97cb2998acee1df1296" kindref="member" tooltip="set the phi">Egamma_v1::setPhi</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi){</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>phi;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>recalculate<sp/>m_p4<sp/>if<sp/>requested<sp/>after<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4Cached=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a4ff0e73d79c45d0ced4e77b1ca4f74d0" kindref="member" tooltip="set the Mass">Egamma_v1::setM</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>recalculate<sp/>m_p4<sp/>if<sp/>requested<sp/>after<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4Cached=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1acd4a485f56814dab83be15134b8a4d2d" kindref="member" tooltip="4x4 Covariance Matrix in EtEtaPhiM (needs decision)">Egamma_v1::EgammaCovMatrix_t</ref><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a603dfedeecd77b71f8fe72c1686074aa" kindref="member" tooltip="Returns the 4x4 symmetric covariance matrix .">Egamma_v1::covMatrix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>std::vector&lt;float&gt;<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;EgammaCovarianceMatrix&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc.isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1acd4a485f56814dab83be15134b8a4d2d" kindref="member" tooltip="4x4 Covariance Matrix in EtEtaPhiM (needs decision)">EgammaCovMatrix_t</ref><sp/>dummy;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dummy.setZero();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>v<sp/>=<sp/>acc(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;const<sp/>EgammaCovMatrix_t&gt;<sp/>(v.data());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a408915b268d5ab9b11395215119b1116" kindref="member" tooltip="set the 4x4 symmetric covariance matrix .">Egamma_v1::setCovMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1acd4a485f56814dab83be15134b8a4d2d" kindref="member" tooltip="4x4 Covariance Matrix in EtEtaPhiM (needs decision)">Egamma_v1::EgammaCovMatrix_t</ref>&amp;<sp/>cov){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>internal<sp/>storage<sp/>is<sp/>an<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>std::vector<sp/>&lt;<sp/>float<sp/>&gt;<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;EgammaCovarianceMatrix&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>v(cov.data(),cov.data()+16);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)=v;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ae6d85313985892f5bbfda67e4194e449" kindref="member" tooltip="Get author.">Egamma_v1::author</ref>(uint16_t<sp/>mask)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint16_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;author&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ae6d85313985892f5bbfda67e4194e449" kindref="member" tooltip="Get author.">author</ref><sp/>=<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>author<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ac739caad9a5e1d28bb01c75fe1428ccd" kindref="member" tooltip="add author">Egamma_v1::addAuthor</ref>(uint16_t<sp/>newAuthor)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint16_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;author&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ae6d85313985892f5bbfda67e4194e449" kindref="member" tooltip="Get author.">author</ref><sp/>=<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>=<sp/>author<sp/>|<sp/>newAuthor;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a067237194e53ea2d80ae525619089d23" kindref="member" tooltip="set author">Egamma_v1::setAuthor</ref>(uint16_t<sp/>newAuthor)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint16_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;author&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>=<sp/>newAuthor;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a132220c60799f5d19c27e6a9dd64e8ea" kindref="member" tooltip="Accessor for ShowerShape values.">Egamma_v1::showerShapeValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EgammaParameters::ShowerShapeType<sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Egamma_v1::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ae52777b81cb8dccd5c97c1c8b9e4b3de" kindref="member" tooltip="Explicit Instantiation of Template.">showerShapeAccessorV1</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a132220c60799f5d19c27e6a9dd64e8ea" kindref="member" tooltip="Accessor for ShowerShape values.">Egamma_v1::showerShapeValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EgammaParameters::ShowerShapeType<sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Egamma_v1::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ae52777b81cb8dccd5c97c1c8b9e4b3de" kindref="member" tooltip="Explicit Instantiation of Template.">showerShapeAccessorV1</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Shower<sp/>Shape<sp/>type<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a0ff80af411b893a13c583d2a6dc4a9c0" kindref="member" tooltip="Set method for Shower Shape values.">Egamma_v1::setShowerShapeValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EgammaParameters::ShowerShapeType<sp/>information){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">xAOD::Egamma_v1::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ae52777b81cb8dccd5c97c1c8b9e4b3de" kindref="member" tooltip="Explicit Instantiation of Template.">showerShapeAccessorV1</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1af0a931cf7fcb2b333035fa85e1a223ad" kindref="member" tooltip="Accessor for Isolation values.">Egamma_v1::isolation</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a97b0164b8842a623c5539294a8837b55" kindref="member">getIsolationAccessor</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1af0a931cf7fcb2b333035fa85e1a223ad" kindref="member" tooltip="Accessor for Isolation values.">Egamma_v1::isolation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>information)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a97b0164b8842a623c5539294a8837b55" kindref="member">getIsolationAccessor</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>type<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a9ad0fd2fcfdc6721096fecb1f7f4ca8e" kindref="member" tooltip="set method for Isolation values.">Egamma_v1::setIsolation</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>information)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a97b0164b8842a623c5539294a8837b55" kindref="member">getIsolationAccessor</ref>(<sp/>information<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ac1f838bba3bc1fda254ebd0746ec84db" kindref="member" tooltip="Accessor for flavour and type depended Isolation Calo correction.">Egamma_v1::isolationCaloCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>corr,<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref><sp/>param)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,corr,param);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ac1f838bba3bc1fda254ebd0746ec84db" kindref="member" tooltip="Accessor for flavour and type depended Isolation Calo correction.">Egamma_v1::isolationCaloCorrection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>corr,<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref><sp/>param)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,corr,param);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>correction<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1afca38ccee1cc8d942b72c2b5a3f833ab" kindref="member" tooltip="set method for flavour and type depended Isolation Calo Corrections.">Egamma_v1::setIsolationCaloCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>corr,<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref><sp/>param){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,corr,param);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ac1f838bba3bc1fda254ebd0746ec84db" kindref="member" tooltip="Accessor for flavour and type depended Isolation Calo correction.">Egamma_v1::isolationCaloCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>type<sp/>,<sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>corr)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(type,corr);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ac1f838bba3bc1fda254ebd0746ec84db" kindref="member" tooltip="Accessor for flavour and type depended Isolation Calo correction.">Egamma_v1::isolationCaloCorrection</ref>(<ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>type,<sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>corr)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(type,corr);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>correction<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1afca38ccee1cc8d942b72c2b5a3f833ab" kindref="member" tooltip="set method for flavour and type depended Isolation Calo Corrections.">Egamma_v1::setIsolationCaloCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref><sp/>type,<sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref><sp/>corr){</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(type,corr);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8815edbd6a07e588bfddfec07a8e4ff5" kindref="member" tooltip="Accessor for Isolation Track correction.">Egamma_v1::isolationTrackCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref><sp/>corr)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,corr);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8815edbd6a07e588bfddfec07a8e4ff5" kindref="member" tooltip="Accessor for Isolation Track correction.">Egamma_v1::isolationTrackCorrection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref><sp/>corr)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,corr);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>correction<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1ad9128201008c12a80807258553e6805a" kindref="member" tooltip="Set method for Isolation Track Corrections.">Egamma_v1::setIsolationTrackCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref><sp/>corr){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref>*<sp/>acc<sp/>=<sp/>getIsolationCorrectionAccessor(flavour,corr);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a5c0a54d58af75673853f9b4fffa0f45a" kindref="member" tooltip="Accessor for Isolation corection Bitset.">Egamma_v1::isolationCorrectionBitset</ref>(<sp/>std::bitset&lt;32&gt;&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; uint32_t &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ac4ba9f85aaec751ba09889d3490a112c" kindref="member">getIsolationCorrectionBitsetAccessor</ref>(<sp/>flavour<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/><sp/>std::bitset&lt;32&gt;((<sp/>*acc<sp/>)(<sp/>*this<sp/>));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>std::bitset&lt;32&gt;<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a5c0a54d58af75673853f9b4fffa0f45a" kindref="member" tooltip="Accessor for Isolation corection Bitset.">Egamma_v1::isolationCorrectionBitset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; uint32_t &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ac4ba9f85aaec751ba09889d3490a112c" kindref="member">getIsolationCorrectionBitsetAccessor</ref>(<sp/>flavour<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>Isolation<sp/>BitSet<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/>std::bitset&lt;32&gt;((<sp/>*acc<sp/>)(<sp/>*this<sp/>));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1adbc6115a83a660cf1bf07a8051978c9a" kindref="member" tooltip="Set method for Isolation corection Bitset.">Egamma_v1::setIsolationCorrectionBitset</ref>(uint32_t<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref><sp/>flavour<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; uint32_t &gt;</ref>*<sp/>acc<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1ac4ba9f85aaec751ba09889d3490a112c" kindref="member">getIsolationCorrectionBitsetAccessor</ref>(<sp/>flavour<sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1aff51c92a4239f737e8382bfdc076839f" kindref="member" tooltip="Return the number of xAOD::CaloClusters that define the electron candidate.">Egamma_v1::nCaloClusters</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; Egamma_v1::CLELVec_t &gt;</ref></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterAcc(<sp/></highlight><highlight class="stringliteral">&quot;caloClusterLinks&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>clusterAcc.isAvailable(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusterAcc(<sp/>*this<sp/>).size();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>*<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a59ef94cb0c87efcd27b3781048932e2e" kindref="member" tooltip="Pointer to the xAOD::CaloCluster/s that define the electron candidate.">Egamma_v1::caloCluster</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>index<sp/>&gt;=<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1aff51c92a4239f737e8382bfdc076839f" kindref="member" tooltip="Return the number of xAOD::CaloClusters that define the electron candidate.">nCaloClusters</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a6a546618ceacfd1cf73d02697db1f350" kindref="member" tooltip="Helper type definition.">CLELVec_t</ref>&amp;<sp/>cls<sp/>=<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8e1688e9665559ba5dc6dca303091c07" kindref="member" tooltip="Get all cluster links.">caloClusterLinks</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>cls[<sp/>index<sp/>].isValid()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<sp/>cls[<sp/>index<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; CaloClusterContainer &gt;</ref>&amp;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3b873a0e8d4fca717f5d00eaf2aebbed" kindref="member" tooltip="ElementLink to the xAOD::CaloCluster/s that match the electron candidate.">Egamma_v1::caloClusterLink</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>index<sp/>&gt;=<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1aff51c92a4239f737e8382bfdc076839f" kindref="member" tooltip="Return the number of xAOD::CaloClusters that define the electron candidate.">nCaloClusters</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; CaloClusterContainer &gt;</ref><sp/>dummy;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8e1688e9665559ba5dc6dca303091c07" kindref="member" tooltip="Get all cluster links.">caloClusterLinks</ref>()[<sp/>index<sp/>];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>Egamma_v1,<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a6a546618ceacfd1cf73d02697db1f350" kindref="member" tooltip="Helper type definition.">Egamma_v1::CLELVec_t</ref>,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caloClusterLinks,<sp/>setCaloClusterLinks<sp/>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>bool<sp/>Egamma_v1::isGoodOQ(uint32_t<sp/>mask)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint32_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;OQ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>OQ<sp/>=<sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(OQ<sp/>&amp;<sp/>mask)==0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a47ed9e0498f310e9e119911927102c7b" kindref="member" tooltip="Return the object quality bit word.">Egamma_v1::OQ</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint32_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;OQ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a580cbf8b1776ac9c860d23c88a6c10b9" kindref="member" tooltip="Set the object quality.">Egamma_v1::setOQ</ref>(uint32_t<sp/>newOQ)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>uint32_t<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;OQ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>=<sp/>newOQ;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"></codeline>
<codeline lineno="381"></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8100e3ee0bc223198afbad3a98428907" kindref="member" tooltip="Selectors / isEM and all that.">Egamma_v1::passSelection</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::EgammaParameters::SelectionMenu<sp/>menu<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; char &gt;</ref>*<sp/>acc<sp/>=<sp/>selectionMenuAccessorV1(<sp/>menu<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!acc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<sp/>(*acc)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8100e3ee0bc223198afbad3a98428907" kindref="member" tooltip="Selectors / isEM and all that.">Egamma_v1::passSelection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::EgammaParameters::SelectionMenu<sp/>menu<sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; char &gt;</ref>*<sp/>acc<sp/>=<sp/>selectionMenuAccessorV1(<sp/>menu<sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>bool<sp/>selection<sp/>menu<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*acc)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a69da50401824e8b722648ece2c86fd2d" kindref="member" tooltip="Set the selection decision for a menu.">Egamma_v1::setPassSelection</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::EgammaParameters::SelectionMenu<sp/>menu){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; char &gt;</ref>*<sp/>acc<sp/>=<sp/>selectionMenuAccessorV1(<sp/>menu<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)=value;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a93fb2ba5994e0120e89ecdfb90ef4ad0" kindref="member" tooltip="Return the isEM word for a selection menu If the menu isEM is stored in this xAOD::Egamma...">Egamma_v1::selectionisEM</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::EgammaParameters::SelectionisEM<sp/>isEM)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; unsigned int &gt;</ref>*<sp/>acc<sp/>=<sp/>selectionisEMAccessorV1(<sp/>isEM<sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc-&gt;<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<sp/>(*acc)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a93fb2ba5994e0120e89ecdfb90ef4ad0" kindref="member" tooltip="Return the isEM word for a selection menu If the menu isEM is stored in this xAOD::Egamma...">Egamma_v1::selectionisEM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::EgammaParameters::SelectionisEM<sp/>isEM)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; unsigned int &gt;</ref>*<sp/>acc<sp/>=<sp/>selectionisEMAccessorV1(<sp/>isEM<sp/>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown/Unavailable<sp/>unsigned<sp/>int<sp/>isEM<sp/>requested&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*acc)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a6a9d41e1b5b7a7d6b3b6a571af7aff02" kindref="member" tooltip="Set the isEM word for a selection menu.">Egamma_v1::setSelectionisEM</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xAOD::EgammaParameters::SelectionisEM<sp/>isEM){</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; unsigned int &gt;</ref>*<sp/>acc<sp/>=<sp/>selectionisEMAccessorV1(<sp/>isEM<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*acc<sp/>)(<sp/>*this<sp/>)=value;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8100e3ee0bc223198afbad3a98428907" kindref="member" tooltip="Selectors / isEM and all that.">Egamma_v1::passSelection</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>menu<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; char &gt;</ref><sp/>acc(<sp/>menu<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<sp/>(acc)(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8100e3ee0bc223198afbad3a98428907" kindref="member" tooltip="Selectors / isEM and all that.">Egamma_v1::passSelection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>menu<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; char &gt;</ref><sp/>acc(<sp/>menu<sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(acc)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a69da50401824e8b722648ece2c86fd2d" kindref="member" tooltip="Set the selection decision for a menu.">Egamma_v1::setPassSelection</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>menu){</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; char &gt;</ref><sp/>acc(<sp/>menu<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>acc<sp/>)(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)=value;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a93fb2ba5994e0120e89ecdfb90ef4ad0" kindref="member" tooltip="Return the isEM word for a selection menu If the menu isEM is stored in this xAOD::Egamma...">Egamma_v1::selectionisEM</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>isEM)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; unsigned int &gt;</ref><sp/>acc(<sp/>isEM<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<sp/>(acc)(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a93fb2ba5994e0120e89ecdfb90ef4ad0" kindref="member" tooltip="Return the isEM word for a selection menu If the menu isEM is stored in this xAOD::Egamma...">Egamma_v1::selectionisEM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>isEM)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; unsigned int &gt;</ref><sp/>acc(<sp/>isEM<sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(acc)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a6a9d41e1b5b7a7d6b3b6a571af7aff02" kindref="member" tooltip="Set the isEM word for a selection menu.">Egamma_v1::setSelectionisEM</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>isEM){</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; unsigned int &gt;</ref><sp/>acc(<sp/>isEM<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>acc<sp/>)(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)=value;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1aa8ea1eec284609eb403b92d80c37bd7e" kindref="member" tooltip="Return the LH value as float If the LH decision is stored in this xAOD::Egamma, then...">Egamma_v1::likelihoodValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>LHValue</highlight><highlight class="comment">/*=std::string(&quot;LHValue&quot;)*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;float&gt;</ref><sp/>acc(<sp/>LHValue<sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!acc.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<sp/>(acc)(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1aa8ea1eec284609eb403b92d80c37bd7e" kindref="member" tooltip="Return the LH value as float If the LH decision is stored in this xAOD::Egamma, then...">Egamma_v1::likelihoodValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>LHValue</highlight><highlight class="comment">/*=std::string(&quot;LHValue&quot;)*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt; float &gt;</ref><sp/>acc(<sp/>LHValue<sp/>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(acc)(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a2a1194afd77f29bdd7b4f13dd1e7558e" kindref="member" tooltip="Set the LHValue as float.">Egamma_v1::setLikelihoodValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>LHValue</highlight><highlight class="comment">/*=std::string(&quot;LHValue&quot;)*/</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;float&gt;</ref><sp/>acc(<sp/>LHValue);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>acc<sp/>)(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)=value;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LocalWords:<sp/><sp/>const<sp/>el<sp/>hasStore<sp/>makePrivateStore</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx"/>
  </compounddef>
</doxygen>
