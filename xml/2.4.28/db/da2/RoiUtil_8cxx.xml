<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/da2/RoiUtil_8cxx" kind="file">
    <compoundname>RoiUtil.cxx</compoundname>
    <includes refid="d1/de2/RoiUtil_8h" local="yes">IRegionSelector/RoiUtil.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="263586">
        <label>cmath</label>
      </node>
      <node id="263583">
        <label>IRegionSelector/IRoiDescriptor.h</label>
        <link refid="d3/d80/IRoiDescriptor_8h_source"/>
        <childnode refid="263584" relation="include">
        </childnode>
        <childnode refid="263585" relation="include">
        </childnode>
      </node>
      <node id="263584">
        <label>vector</label>
      </node>
      <node id="263581">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx</label>
        <link refid="RoiUtil.cxx"/>
        <childnode refid="263582" relation="include">
        </childnode>
        <childnode refid="263586" relation="include">
        </childnode>
      </node>
      <node id="263585">
        <label>iostream</label>
      </node>
      <node id="263582">
        <label>IRegionSelector/RoiUtil.h</label>
        <link refid="d1/de2/RoiUtil_8h_source"/>
        <childnode refid="263583" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="db/da2/RoiUtil_8cxx_1a32d94430c53f897b9cc4580d0e0ff371" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double M_2PI</definition>
        <argsstring></argsstring>
        <name>M_2PI</name>
        <initializer> 2*M_PI</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/da2/RoiUtil_8cxx_1a0dd8bc8db2035123dcaf6f3cc5710409" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float M_PIF</definition>
        <argsstring></argsstring>
        <name>M_PIF</name>
        <initializer> float(M_PI)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@file<sp/><sp/><sp/><sp/>RoiUtil.cxx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-member,<sp/>non<sp/>friend<sp/>RoiDescriptor<sp/>utility<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>improve<sp/>encapsulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@author<sp/>M.Sutton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2015<sp/>M.Sutton<sp/>(sutt@cern.ch)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>$Id:<sp/>RoiUtil.cxx,<sp/>v0.0<sp/><sp/><sp/>Sat<sp/>31<sp/>Oct<sp/>2015<sp/>09:54:33<sp/>CET<sp/>sutt<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;IRegionSelector/RoiUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_2PI</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M_2PI<sp/>=<sp/>2*M_PI;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PIF</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>M_PIF<sp/>=<sp/>float(M_PI);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RoiUtil::contains(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/da4/classIRoiDescriptor" kindref="compound" tooltip="hmmm - is this actually ever needed ??">IRoiDescriptor</ref>&amp;<sp/>roi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dzdr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxR<sp/>=<sp/>1100;<sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>radius<sp/>of<sp/>RoI<sp/>-<sp/>outer<sp/>TRT<sp/>radius<sp/>~1070<sp/>mm<sp/>-<sp/>should<sp/>be<sp/>configurable?<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zouter<sp/>=<sp/>dzdr*maxR<sp/>+<sp/>z0;<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1adf30c7ead19cbd1fcd2872759062972b" kindref="member" tooltip="Super RoI access methods.">composite</ref>()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>IRoiDescriptor::roi_iterator<sp/>itr=roi.<ref refid="d4/da4/classIRoiDescriptor_1abfb3340a4eeaea141e76d4f9a24447b6" kindref="member" tooltip="const limit iterators">begin</ref>()<sp/>;<sp/>itr!=roi.end()<sp/>;<sp/>itr++<sp/>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoiUtil::contains_internal(<sp/>*(*itr),<sp/>z0,<sp/>zouter<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contains_internal(<sp/>roi,<sp/>z0,<sp/>zouter<sp/>);<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RoiUtil::contains_internal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/da4/classIRoiDescriptor" kindref="compound" tooltip="hmmm - is this actually ever needed ??">IRoiDescriptor</ref>&amp;<sp/>roi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zouter<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>z0&lt;=roi.<ref refid="d4/da4/classIRoiDescriptor_1a3257350e1989b02309f50cea9d42e963" kindref="member">zedPlus</ref>()<sp/>&amp;&amp;<sp/>z0&gt;=roi.zedMinus()<sp/>&amp;&amp;<sp/>zouter&lt;=roi.<ref refid="d4/da4/classIRoiDescriptor_1afc7ab19226765d23ca357db7964bf3e6" kindref="member" tooltip="zed limits at some outer radius">zedOuterPlus</ref>()<sp/>&amp;&amp;<sp/>zouter&gt;=roi.zedOuterMinus()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RoiUtil::containsPhi(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/da4/classIRoiDescriptor" kindref="compound" tooltip="hmmm - is this actually ever needed ??">IRoiDescriptor</ref>&amp;<sp/>roi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1adf30c7ead19cbd1fcd2872759062972b" kindref="member" tooltip="Super RoI access methods.">composite</ref>()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>IRoiDescriptor::roi_iterator<sp/>itr=roi.<ref refid="d4/da4/classIRoiDescriptor_1abfb3340a4eeaea141e76d4f9a24447b6" kindref="member" tooltip="const limit iterators">begin</ref>()<sp/>;<sp/>itr!=roi.end()<sp/>;<sp/>itr++<sp/>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoiUtil::containsPhi(<sp/>*(*itr),<sp/>phi<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1a0d7dc148fd6b150a9cf74ac11c7cf656" kindref="member" tooltip="is this a full detector RoI?">isFullscan</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1a2b2d1e50abc4d3707d0c51801366e12d" kindref="member" tooltip="extreme phi values">phiPlus</ref>()&gt;roi.phiMinus()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>phi&lt;roi.<ref refid="d4/da4/classIRoiDescriptor_1a2b2d1e50abc4d3707d0c51801366e12d" kindref="member" tooltip="extreme phi values">phiPlus</ref>()<sp/>&amp;&amp;<sp/>phi&gt;roi.phiMinus()<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>phi&lt;roi.<ref refid="d4/da4/classIRoiDescriptor_1a2b2d1e50abc4d3707d0c51801366e12d" kindref="member" tooltip="extreme phi values">phiPlus</ref>()<sp/>||<sp/>phi&gt;roi.phiMinus()<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RoiUtil::roiContainsZed(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/da4/classIRoiDescriptor" kindref="compound" tooltip="hmmm - is this actually ever needed ??">IRoiDescriptor</ref>&amp;<sp/>roi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1adf30c7ead19cbd1fcd2872759062972b" kindref="member" tooltip="Super RoI access methods.">composite</ref>()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0<sp/>;<sp/>i&lt;roi.<ref refid="d4/da4/classIRoiDescriptor_1a73c80d908db892687e743b61766cb910" kindref="member" tooltip="number of constituents">size</ref>()<sp/>;<sp/>i++<sp/>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roiContainsZed(<sp/>*roi.<ref refid="d4/da4/classIRoiDescriptor_1aa2f75033c69043902f85710a70c5bbe8" kindref="member" tooltip="find an RoiDescriptor constituent">at</ref>(i),<sp/>z,<sp/>r<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1a0d7dc148fd6b150a9cf74ac11c7cf656" kindref="member" tooltip="is this a full detector RoI?">isFullscan</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zminus<sp/>=<sp/>r*roi.<ref refid="d4/da4/classIRoiDescriptor_1a3a50bacde8e29c61bd61828a141efb17" kindref="member" tooltip="return the gradients">dzdrMinus</ref>()+roi.zedMinus();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zplus<sp/><sp/>=<sp/>r*roi.dzdrPlus()<sp/>+roi.<ref refid="d4/da4/classIRoiDescriptor_1a3257350e1989b02309f50cea9d42e963" kindref="member">zedPlus</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>z&gt;=zminus<sp/>&amp;&amp;<sp/>z&lt;=zplus<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RoiUtil::containsZed(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/da4/classIRoiDescriptor" kindref="compound" tooltip="hmmm - is this actually ever needed ??">IRoiDescriptor</ref>&amp;<sp/>roi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1adf30c7ead19cbd1fcd2872759062972b" kindref="member" tooltip="Super RoI access methods.">composite</ref>()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>IRoiDescriptor::roi_iterator<sp/>itr=roi.<ref refid="d4/da4/classIRoiDescriptor_1abfb3340a4eeaea141e76d4f9a24447b6" kindref="member" tooltip="const limit iterators">begin</ref>()<sp/>;<sp/>itr!=roi.end()<sp/>;<sp/>itr++<sp/>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoiUtil::containsZed(<sp/>*(*itr),<sp/>z,<sp/>r<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1a0d7dc148fd6b150a9cf74ac11c7cf656" kindref="member" tooltip="is this a full detector RoI?">isFullscan</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zminus<sp/>=<sp/>r*roi.<ref refid="d4/da4/classIRoiDescriptor_1a3a50bacde8e29c61bd61828a141efb17" kindref="member" tooltip="return the gradients">dzdrMinus</ref>()<sp/>+<sp/>roi.zedMinus();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zplus<sp/><sp/>=<sp/>r*roi.dzdrPlus()<sp/><sp/>+<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1a3257350e1989b02309f50cea9d42e963" kindref="member">zedPlus</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>z&gt;=zminus<sp/>&amp;&amp;<sp/>z&lt;=zplus<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RoiUtil::contains(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/da4/classIRoiDescriptor" kindref="compound" tooltip="hmmm - is this actually ever needed ??">IRoiDescriptor</ref>&amp;<sp/>roi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1adf30c7ead19cbd1fcd2872759062972b" kindref="member" tooltip="Super RoI access methods.">composite</ref>()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>IRoiDescriptor::roi_iterator<sp/>itr=roi.<ref refid="d4/da4/classIRoiDescriptor_1abfb3340a4eeaea141e76d4f9a24447b6" kindref="member" tooltip="const limit iterators">begin</ref>()<sp/>;<sp/>itr!=roi.end()<sp/>;<sp/>itr++<sp/>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoiUtil::contains(<sp/>*(*itr),<sp/>z,<sp/>r,<sp/>phi<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>RoiUtil::containsZed(<sp/>roi,<sp/>z,<sp/>r<sp/>)<sp/>&amp;&amp;<sp/>RoiUtil::containsPhi(<sp/>roi,<sp/>phi<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RoiUtil::roiContains(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/da4/classIRoiDescriptor" kindref="compound" tooltip="hmmm - is this actually ever needed ??">IRoiDescriptor</ref>&amp;<sp/>roi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1adf30c7ead19cbd1fcd2872759062972b" kindref="member" tooltip="Super RoI access methods.">composite</ref>()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0<sp/>;<sp/>i&lt;roi.<ref refid="d4/da4/classIRoiDescriptor_1a73c80d908db892687e743b61766cb910" kindref="member" tooltip="number of constituents">size</ref>()<sp/>;<sp/>i++<sp/>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoiUtil::roiContains(<sp/>*roi.<ref refid="d4/da4/classIRoiDescriptor_1aa2f75033c69043902f85710a70c5bbe8" kindref="member" tooltip="find an RoiDescriptor constituent">at</ref>(i),<sp/>z,<sp/>r,<sp/>phi<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>roi.<ref refid="d4/da4/classIRoiDescriptor_1a0d7dc148fd6b150a9cf74ac11c7cf656" kindref="member" tooltip="is this a full detector RoI?">isFullscan</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>RoiUtil::roiContainsZed(<sp/>roi,<sp/>z,<sp/>r<sp/>)<sp/>&amp;&amp;<sp/>RoiUtil::containsPhi(<sp/>roi,<sp/>phi<sp/>)<sp/>);<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RoiUtil::phicheck(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi)<sp/>{<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>phi&gt;<sp/>M_PIF<sp/>)<sp/>phi-=M_2PI;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>phi&lt;-M_PIF<sp/>)<sp/>phi+=M_2PI;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(phi<sp/>&gt;=<sp/>-M_PIF<sp/>&amp;&amp;<sp/>phi<sp/>&lt;=<sp/>M_PIF)<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>use<sp/>!<sp/>of<sp/>range<sp/>rather<sp/>than<sp/>range<sp/>to<sp/>also<sp/>catch<sp/>nan<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::exception();<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RoiUtil::etacheck(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(eta&gt;-100<sp/><sp/>&amp;&amp;<sp/>eta&lt;100)<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>check<sp/>also<sp/>for<sp/>nan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::exception();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eta;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RoiUtil::zedcheck(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(zed&gt;-100000<sp/><sp/>&amp;&amp;<sp/>zed&lt;100000<sp/>)<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>check<sp/>also<sp/>for<sp/>nan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::exception();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>zed;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RoiDescriptor/Root/RoiUtil.cxx"/>
  </compounddef>
</doxygen>
