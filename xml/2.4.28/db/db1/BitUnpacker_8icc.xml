<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/db1/BitUnpacker_8icc" kind="file">
    <compoundname>BitUnpacker.icc</compoundname>
    <includes refid="dd/d16/ones_8h" local="yes">CxxUtils/ones.h</includes>
    <includedby refid="d5/d33/BitUnpacker_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/BitUnpacker.h</includedby>
    <incdepgraph>
      <node id="106582">
        <label>CxxUtils/ones.h</label>
        <link refid="dd/d16/ones_8h"/>
      </node>
      <node id="106581">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/BitUnpacker.icc</label>
        <link refid="BitUnpacker.icc"/>
        <childnode refid="106582" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="106584">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/BitUnpacker.h</label>
        <link refid="d5/d33/BitUnpacker_8h"/>
        <childnode refid="106585" relation="include">
        </childnode>
        <childnode refid="106586" relation="include">
        </childnode>
      </node>
      <node id="106583">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/BitUnpacker.icc</label>
        <link refid="BitUnpacker.icc"/>
        <childnode refid="106584" relation="include">
        </childnode>
      </node>
      <node id="106585">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/PackedConverter.h</label>
        <link refid="d2/df1/PackedConverter_8h"/>
      </node>
      <node id="106586">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/BitPackerUnpacker_test.cxx</label>
        <link refid="d2/d10/BitPackerUnpacker__test_8cxx"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="de/d12/namespaceCxxUtils">CxxUtils</innernamespace>
    <briefdescription>
<para>Helper to unpack a set of values bitwise from a stream. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Nov, 2014 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d16/ones_8h" kindref="compound" tooltip="Construct a bit mask.">CxxUtils/ones.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CxxUtils<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STREAM&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="d4/d06/classCxxUtils_1_1BitUnpacker_1a289caccb4c86d7edc6061edb1d64442d" kindref="member" tooltip="Constructor.">BitUnpacker&lt;STREAM&gt;::BitUnpacker</ref><sp/>(uint8_t<sp/>nbits,<sp/>STREAM&amp;<sp/>stream)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>:<sp/>m_buf(0),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf(0),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbits(nbits),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>(stream),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mask<sp/>(CxxUtils::<ref refid="de/d12/namespaceCxxUtils_1a8d7b43f454542ab8071fe88444f3cb2b" kindref="member" tooltip="Return a bit mask with the lower n bits set.">ones</ref>&lt;uint32_t&gt;(nbits))</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>assert<sp/>(m_nbits<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>m_nbits<sp/>&lt;=<sp/>32);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STREAM&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">uint32_t<sp/><ref refid="d4/d06/classCxxUtils_1_1BitUnpacker_1a25c4dd74feebb4b973e0c4c14bccc179" kindref="member" tooltip="Unpack one value from the stream.">BitUnpacker&lt;STREAM&gt;::unpack</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>totbits<sp/>=<sp/>8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_buf);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nbuf<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>&gt;&gt;<sp/>m_buf;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf<sp/>=<sp/>totbits;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>uint32_t<sp/>out<sp/>=<sp/>m_buf<sp/>&amp;<sp/>m_mask;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nbits<sp/>&gt;<sp/>m_nbuf)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nleft<sp/>=<sp/>m_nbits<sp/>-<sp/>m_nbuf;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>&gt;&gt;<sp/>m_buf;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>|=<sp/>(m_buf<sp/>&amp;<sp/>CxxUtils::ones&lt;uint32_t&gt;(nleft))<sp/>&lt;&lt;<sp/>m_nbuf;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buf<sp/>&gt;&gt;=<sp/>nleft;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf<sp/>=<sp/>totbits<sp/>-<sp/>nleft;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nbits<sp/>&gt;=<sp/>32)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_buf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_buf<sp/>&gt;&gt;=<sp/>m_nbits;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf<sp/>-=<sp/>m_nbits;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STREAM&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="d8/dac/classCxxUtils_1_1BitUnpacker8_1a61a7eb79862ec671e7cd5d4ee0a7c9a5" kindref="member" tooltip="Constructor.">BitUnpacker8&lt;STREAM&gt;::BitUnpacker8</ref><sp/>(STREAM&amp;<sp/>stream)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>:<sp/>m_buf(0),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf(0),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>(stream)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STREAM&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="d8/dac/classCxxUtils_1_1BitUnpacker8_1a61a7eb79862ec671e7cd5d4ee0a7c9a5" kindref="member" tooltip="Constructor.">BitUnpacker8&lt;STREAM&gt;::BitUnpacker8</ref><sp/>(uint8_t<sp/></highlight><highlight class="comment">/*nbits*/</highlight><highlight class="normal">,<sp/>STREAM&amp;<sp/>stream)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>:<sp/>m_buf(0),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf(0),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>(stream)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STREAM&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">uint32_t<sp/><ref refid="d8/dac/classCxxUtils_1_1BitUnpacker8_1a6d1b443e92921402ab66a8f968fa2944" kindref="member" tooltip="Unpack one value from the stream.">BitUnpacker8&lt;STREAM&gt;::unpack</ref>()<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nbuf<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>&gt;&gt;<sp/>m_buf;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ret<sp/>=<sp/>m_buf<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>m_buf<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>--m_nbuf;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STREAM&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="d3/dbe/classCxxUtils_1_1BitUnpacker16_1a5dbd7a6cdb0083251e7c7e4394e2c245" kindref="member" tooltip="Constructor.">BitUnpacker16&lt;STREAM&gt;::BitUnpacker16</ref><sp/>(STREAM&amp;<sp/>stream)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>:<sp/>m_buf(0),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf(0),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>(stream)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STREAM&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="d3/dbe/classCxxUtils_1_1BitUnpacker16_1a5dbd7a6cdb0083251e7c7e4394e2c245" kindref="member" tooltip="Constructor.">BitUnpacker16&lt;STREAM&gt;::BitUnpacker16</ref><sp/>(uint8_t<sp/></highlight><highlight class="comment">/*nbits*/</highlight><highlight class="normal">,<sp/>STREAM&amp;<sp/>stream)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>:<sp/>m_buf(0),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf(0),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>(stream)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STREAM&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">uint32_t<sp/><ref refid="d3/dbe/classCxxUtils_1_1BitUnpacker16_1a54b270c6838094258bb650a67d7b0ee4" kindref="member" tooltip="Unpack one value from the stream.">BitUnpacker16&lt;STREAM&gt;::unpack</ref>()<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nbuf<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>m_stream<sp/>&gt;&gt;<sp/>m_buf;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbuf<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>uint16_t<sp/>ret<sp/>=<sp/>m_buf<sp/>&amp;<sp/>0xffff;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>m_buf<sp/>&gt;&gt;=<sp/>16;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>--m_nbuf;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>CxxUtils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/BitUnpacker.icc"/>
  </compounddef>
</doxygen>
