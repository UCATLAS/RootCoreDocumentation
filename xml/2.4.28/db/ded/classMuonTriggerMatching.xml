<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/ded/classMuonTriggerMatching" kind="class" prot="public">
    <compoundname>MuonTriggerMatching</compoundname>
    <basecompoundref refid="df/d38/classLeptonTriggerMatching" prot="public" virt="non-virtual">LeptonTriggerMatching</basecompoundref>
    <includes refid="df/d81/MuonTriggerMatching_8h" local="no">MuonTriggerMatching.h</includes>
    <innerclass refid="de/d5c/structMuonTriggerMatching_1_1DimuonChainInfo" prot="public">MuonTriggerMatching::DimuonChainInfo</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="db/ded/classMuonTriggerMatching_1a85d4aa0da76266628e301d80677015ee" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MuonTriggerMatching::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="142" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/ded/classMuonTriggerMatching_1a16d18d776158af34f8c9cbc9e8a11917" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="de/d5c/structMuonTriggerMatching_1_1DimuonChainInfo" kindref="compound">DimuonChainInfo</ref> &gt;</type>
        <definition>std::map&lt;std::string, DimuonChainInfo&gt; MuonTriggerMatching::m_DimuonChainMap</definition>
        <argsstring></argsstring>
        <name>m_DimuonChainMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1add75cdeebb854b8ff91b9bb1918cd43b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MuonTriggerMatching::MuonTriggerMatching</definition>
        <argsstring>(const MTT__D3PDEvent *d3pd, TTree *TrigConfTree=0)</argsstring>
        <name>MuonTriggerMatching</name>
        <param>
          <type>const <ref refid="d9/d11/classTriggerNavigationVariables" kindref="compound">MTT__D3PDEvent</ref> *</type>
          <declname>d3pd</declname>
        </param>
        <param>
          <type>TTree *</type>
          <declname>TrigConfTree</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d3pd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] class object used for the given ntuple analysis </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TrigConfTree</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] pointer of physicsMeta/TrigConfTree block [optional] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" bodystart="29" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1adface81e9fffed81bff66ddc3ba07c0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual MuonTriggerMatching::~MuonTriggerMatching</definition>
        <argsstring>()</argsstring>
        <name>~MuonTriggerMatching</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1ae96ed100953b2eefe2406c792c92e308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MuonTriggerMatching::match</definition>
        <argsstring>(const double eta, const double phi, const std::string &amp;chain, const std::string &amp;l1item=&quot;&quot;)</argsstring>
        <name>match</name>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>l1item</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>look for matching EF muon trigger object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eta</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] eta of an offline muon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] phi of an offline muon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] single muon EF chain name. ex) &quot;EF_mu18&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l1item</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] optional: minimum level1 threshold required for seed of the matching EF chain ex) &quot;L1_MU11&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if matching EF object was found false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="18" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1ae6a12ec09759f18f8e225637e6df5a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt; int, int &gt; MuonTriggerMatching::matchedTrack</definition>
        <argsstring>(const double eta, const double phi, const std::string &amp;chain, const std::string &amp;l1item=&quot;&quot;)</argsstring>
        <name>matchedTrack</name>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>l1item</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>look for matching EF muon trigger object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eta</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] eta of an offline muon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] phi of an offline muon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] single muon EF chain name. ex) &quot;EF_mu18&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>EFmuon</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] to be used for accessing the matched EF trigger object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l1item</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] optional: minimum level1 threshold required for seed of the matching EF chain ex) &quot;L1_MU11&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pair of int to access trigger object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1a37e0d83feaec82de091591f7bf115edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MuonTriggerMatching::matchDimuon</definition>
        <argsstring>(const TLorentzVector &amp;muon1, const TLorentzVector &amp;muon2, const std::string &amp;chain, std::pair&lt; bool, bool &gt; &amp;result1, std::pair&lt; bool, bool &gt; &amp;result2)</argsstring>
        <name>matchDimuon</name>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>muon1</declname>
        </param>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>muon2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>std::pair&lt; bool, bool &gt; &amp;</type>
          <declname>result1</declname>
        </param>
        <param>
          <type>std::pair&lt; bool, bool &gt; &amp;</type>
          <declname>result2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>look for matching EF di-muon trigger object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>muon1</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] TLorentzVector of muon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>muon2</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] TLorentzVector of muon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] di-muon EF chain name. ex) &quot;EF_2mu10&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result1</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] bool values indicating if muon1 passed the first/second thresholds of the di-muon trigger. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result2</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] bool values indicating if muon2 passed the first/second thresholds of the di-muon trigger. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if matching EF object was found false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="50" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1a6da4d0ce673ea80a326c181a0e9f1a52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int MuonTriggerMatching::matchDimuon_python</definition>
        <argsstring>(const TLorentzVector &amp;muon1, const TLorentzVector &amp;muon2, const std::string &amp;chain)</argsstring>
        <name>matchDimuon_python</name>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>muon1</declname>
        </param>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>muon2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="102" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1acdafaed05162555e12ee4f969521cb08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MuonTriggerMatching::useIndex</definition>
        <argsstring>(bool x)</argsstring>
        <name>useIndex</name>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="111" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" bodystart="111" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1a67f68a7d8f6cf24cb8c2c2f53a5f4b7b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MuonTriggerMatching::matchedTrackDetail_index</definition>
        <argsstring>(EFmuon &amp;efMuonId, const EFmuon &amp;usedEfMuonId, const double eta, const double phi, const std::string &amp;chainForThisMuon, const std::string &amp;l1item=std::string(), const std::string &amp;chainEventTrigger=std::string())</argsstring>
        <name>matchedTrackDetail_index</name>
        <param>
          <type><ref refid="dc/daf/structLeptonTriggerMatching_1_1EFmuon" kindref="compound">EFmuon</ref> &amp;</type>
          <declname>efMuonId</declname>
        </param>
        <param>
          <type>const <ref refid="dc/daf/structLeptonTriggerMatching_1_1EFmuon" kindref="compound">EFmuon</ref> &amp;</type>
          <declname>usedEfMuonId</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chainForThisMuon</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>l1item</declname>
          <defval>std::string()</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chainEventTrigger</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="151" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="309" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1a6de3aa3862874fe7b8bf68eacb9e3088" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MuonTriggerMatching::matchedTrackDetail</definition>
        <argsstring>(EFmuon &amp;efMuonId, const EFmuon &amp;usedEfMuonId, const double eta, const double phi, const std::string &amp;chainForThisMuon, const std::string &amp;l1item=std::string(), const std::string &amp;chainEventTrigger=std::string())</argsstring>
        <name>matchedTrackDetail</name>
        <param>
          <type><ref refid="dc/daf/structLeptonTriggerMatching_1_1EFmuon" kindref="compound">EFmuon</ref> &amp;</type>
          <declname>efMuonId</declname>
        </param>
        <param>
          <type>const <ref refid="dc/daf/structLeptonTriggerMatching_1_1EFmuon" kindref="compound">EFmuon</ref> &amp;</type>
          <declname>usedEfMuonId</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chainForThisMuon</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>l1item</declname>
          <defval>std::string()</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chainEventTrigger</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="159" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="234" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1adca011b642abc84df9d311bbe576c5b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; bool, bool &gt;</type>
        <definition>std::pair&lt; bool, bool &gt; MuonTriggerMatching::matchDimuon</definition>
        <argsstring>(const TLorentzVector &amp;muon1, const TLorentzVector &amp;muon2, const DimuonChainInfo &amp;chain)</argsstring>
        <name>matchDimuon</name>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>muon1</declname>
        </param>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>muon2</declname>
        </param>
        <param>
          <type>const <ref refid="de/d5c/structMuonTriggerMatching_1_1DimuonChainInfo" kindref="compound">DimuonChainInfo</ref> &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="163" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="330" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1a63d0c7e647a6bd3db015a56e2b0e91b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MuonTriggerMatching::createChainIdMapFromFile</definition>
        <argsstring>()</argsstring>
        <name>createChainIdMapFromFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="165" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonChainIdMap.h" bodystart="3" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1aa16244164c5ee96082ca24eec33cb980" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MuonTriggerMatching::decodeDimuonChain</definition>
        <argsstring>(DimuonChainInfo &amp;chainInfo)</argsstring>
        <name>decodeDimuonChain</name>
        <param>
          <type><ref refid="de/d5c/structMuonTriggerMatching_1_1DimuonChainInfo" kindref="compound">DimuonChainInfo</ref> &amp;</type>
          <declname>chainInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="167" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="382" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1a2095411cb61b9861706005331fa8bcde" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MuonTriggerMatching::checkSeedL2</definition>
        <argsstring>(const double eta, const double phi, const std::string &amp;chain, double l2dr=0.15, double l1dr=0.20)</argsstring>
        <name>checkSeedL2</name>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>l2dr</declname>
          <defval>0.15</defval>
        </param>
        <param>
          <type>double</type>
          <declname>l1dr</declname>
          <defval>0.20</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="173" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="128" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1acd3e88d268de6007e55acd1602815351" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MuonTriggerMatching::checkSeedEF</definition>
        <argsstring>(const double eta, const double phi, const std::string &amp;chain)</argsstring>
        <name>checkSeedEF</name>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="177" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="176" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="db/ded/classMuonTriggerMatching_1af67b517f140628845acfaf732fa52c28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MuonTriggerMatching::checkSeed_index</definition>
        <argsstring>(const double eta, const double phi, const std::string &amp;chain)</argsstring>
        <name>checkSeed_index</name>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="181" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/MuonTriggerMatching.cxx" bodystart="83" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Toyonobu Okuyama </para><simplesectsep/><para>Takashi Matsushita This class implements method for muon trigger matching with navigation information in ntuple analysis.</para></simplesect>
Validated on NTUP_SMWZ. Should work on any ntuples which contains TrigMuonD3PDMaker block </para>    </detaileddescription>
    <inheritancegraph>
      <node id="14967">
        <label>MuonTriggerMatching</label>
        <link refid="db/ded/classMuonTriggerMatching"/>
        <childnode refid="14968" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14968">
        <label>LeptonTriggerMatching</label>
        <link refid="df/d38/classLeptonTriggerMatching"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14971">
        <label>TriggerNavigationVariables</label>
        <link refid="d9/d11/classTriggerNavigationVariables"/>
      </node>
      <node id="14969">
        <label>MuonTriggerMatching</label>
        <link refid="db/ded/classMuonTriggerMatching"/>
        <childnode refid="14970" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14970">
        <label>LeptonTriggerMatching</label>
        <link refid="df/d38/classLeptonTriggerMatching"/>
        <childnode refid="14971" relation="usage">
          <edgelabel>m_d3pd</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/MuonTriggerMatching.h" bodystart="22" bodyend="182"/>
    <listofallmembers>
      <member refid="df/d38/classLeptonTriggerMatching_1aef129aede076dfacebaed48eea2a734ca7702ec51f4ad8e504cbb6bc78843984b" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>CHAIN_CB</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aef129aede076dfacebaed48eea2a734caf2237e8b9c2c5bf463ba2b92e8d42728" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>CHAIN_MG</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aef129aede076dfacebaed48eea2a734ca6ac3affadf46b886087bc1dd7d195fe6" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>CHAIN_SA</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1af67b517f140628845acfaf732fa52c28" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>checkSeed_index</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1acd3e88d268de6007e55acd1602815351" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>checkSeedEF</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1a2095411cb61b9861706005331fa8bcde" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>checkSeedL2</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a21c8281980c781412b1adbef39914f30" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>createChainIdMapFile</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1a63d0c7e647a6bd3db015a56e2b0e91b8" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>createChainIdMapFromFile</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1aa16244164c5ee96082ca24eec33cb980" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>decodeDimuonChain</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a6cdf6401b06699b42561cc1cdcb023dc" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>dR</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a281e8198dd1c74d3b405d57c2cb51285" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>dumpChainIdMap</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ab1a23f6fc8aa2530c8b9cb024f85d93d" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>getChainIndex</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aebac2722657a696f4ce15a85b5443237" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>getDeltaR</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1af5ba15a67d9af599d46134c556e02c43" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>getL1pt</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aa4685968760881a700b4f79a51d605c5" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>index_match</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a95096c18b4a7207c8f7cfeed8001bd32" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>isEqual</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a4e54027a3b6d064ac0f3bf5fc08f7bcf" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>L1_isPassed</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1af23b737ca14958a176c50482ec767c43" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>LeptonTriggerMatching</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a0d15e51ff680f2356764b342e1c663a6" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_d3pd</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1afae2c16988ff9c95941d339241873864" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_debug</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1a16d18d776158af34f8c9cbc9e8a11917" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_DimuonChainMap</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1a85d4aa0da76266628e301d80677015ee" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_index</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1adc88e509aee21a50424fd1335b9d8fc7" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_isIndexMatchUsed</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a2f4c5c51baa97a40e3c75660d8e29d2a" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_isNavigationMatchUsed</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ab3ac9eecc3335e6a8a066dbc269d34bc" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_MapOfChainIdMap</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a856b639bbf36ff60a8221c48d2753801" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_matchingDr</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a5d1b810ec7df1f09aa6c473bb1ab5bd5" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>m_NotFoundChain</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1ae96ed100953b2eefe2406c792c92e308" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>match</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1a37e0d83feaec82de091591f7bf115edf" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>matchDimuon</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1adca011b642abc84df9d311bbe576c5b5" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>matchDimuon</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1a6da4d0ce673ea80a326c181a0e9f1a52" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>matchDimuon_python</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1ae6a12ec09759f18f8e225637e6df5a78" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>matchedTrack</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1a6de3aa3862874fe7b8bf68eacb9e3088" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>matchedTrackDetail</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a03cc8544dab5fdbc2d3edd3d621b4ad3" prot="protected" virt="non-virtual" ambiguityscope="LeptonTriggerMatching::"><scope>MuonTriggerMatching</scope><name>matchedTrackDetail</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ab95fa2e2fcc840496c5be860a1e7f1eb" prot="protected" virt="non-virtual" ambiguityscope="LeptonTriggerMatching::"><scope>MuonTriggerMatching</scope><name>matchedTrackDetail</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1a67f68a7d8f6cf24cb8c2c2f53a5f4b7b" prot="private" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>matchedTrackDetail_index</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aef129aede076dfacebaed48eea2a734c" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>MuonChainType</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1add75cdeebb854b8ff91b9bb1918cd43b" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>MuonTriggerMatching</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ae03b08960ae00b6f90629270972a97eb" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>readTrigConfTree</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a1e185959e78e94e1d210d6c0ddb0e384" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>setDebug</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a1d02d82cc7447f48c94f70715ee16f70" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>setDeltaR</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aaa92d9740069466b00e0ef2b74fe861a" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>setTriggerNavigationVariables</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a6a4984e45e938d6f6ab75cc6deaca76b" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>showSMKeys</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ac6442a640bd5f1857414e0367b1b9d72" prot="protected" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>tokenize</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1acdafaed05162555e12ee4f969521cb08" prot="public" virt="non-virtual"><scope>MuonTriggerMatching</scope><name>useIndex</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a88dbb2b105a2c462a336c81873613739" prot="public" virt="virtual"><scope>MuonTriggerMatching</scope><name>~LeptonTriggerMatching</name></member>
      <member refid="db/ded/classMuonTriggerMatching_1adface81e9fffed81bff66ddc3ba07c0e" prot="public" virt="virtual"><scope>MuonTriggerMatching</scope><name>~MuonTriggerMatching</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
