<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/dd1/classSH_1_1DiskWriter" kind="class" prot="public">
    <compoundname>SH::DiskWriter</compoundname>
    <derivedcompoundref refid="d2/d69/classSH_1_1DiskWriterLocal" prot="public" virt="non-virtual">SH::DiskWriterLocal</derivedcompoundref>
    <derivedcompoundref refid="dc/d85/classSH_1_1DiskWriterXRD" prot="public" virt="non-virtual">SH::DiskWriterXRD</derivedcompoundref>
    <includes refid="db/d77/DiskWriter_8h" local="no">DiskWriter.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1afcaea9955d1944962e220e4287c23be1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SH::DiskWriter::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplementedby refid="dc/d85/classSH_1_1DiskWriterXRD_1ab0e32bcf706196f685c3f243be4635ea">testInvariant</reimplementedby>
        <reimplementedby refid="d2/d69/classSH_1_1DiskWriterLocal_1aac122aa4e713820ae16702df92b56d87">testInvariant</reimplementedby>
        <briefdescription>
<para>test the invariant of this object </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskWriter.cxx" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1a68f27eb8b356f99876de20bdf36a7bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SH::DiskWriter::DiskWriter</definition>
        <argsstring>()</argsstring>
        <name>DiskWriter</name>
        <briefdescription>
<para>standard constructor </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory I </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskWriter.cxx" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1a5139f63a55699ea81ce44cc7bb746808" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>SH::DiskWriter::~DiskWriter</definition>
        <argsstring>()</argsstring>
        <name>~DiskWriter</name>
        <briefdescription>
<para>standard destructor </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
<simplesect kind="par"><title>Rationale</title><para>virtual destructor for base class </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskWriter.cxx" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1a592e67695b63c9caa3b29813a9a5d834" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SH::DiskWriter::path</definition>
        <argsstring>() const </argsstring>
        <name>path</name>
        <briefdescription>
<para>the path where this file can be accessed or the empty string if it is not known (yet). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Rationale</title><para>while it is not guaranteed that every writer will know how to handle this, most writers will, and it can be useful. however, not every writer will know this until after the file is closed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskWriter.cxx" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1a8ffef649ce87ac77c7e211b69309f827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TFile *</type>
        <definition>TFile * SH::DiskWriter::file</definition>
        <argsstring>()</argsstring>
        <name>file</name>
        <briefdescription>
<para>the file we are writing to </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>file already closed </para></simplesect>
<simplesect kind="par"><title>Postcondition</title><para>result != 0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="86" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskWriter.cxx" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1aacdfb2b84bd309c3f8e0bcb9e156da8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SH::DiskWriter::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
<para>closes the file we are writing to </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>i/o errors<linebreak/>
 file already closed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskWriter.cxx" bodystart="71" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1ab16d7e57e80a829e589607da8f618b2c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string SH::DiskWriter::getPath</definition>
        <argsstring>() const =0</argsstring>
        <name>getPath</name>
        <reimplementedby refid="dc/d85/classSH_1_1DiskWriterXRD_1a5e0e8a1f4502f4587be33fb3919091d3">getPath</reimplementedby>
        <reimplementedby refid="d2/d69/classSH_1_1DiskWriterLocal_1aef319de0e915f1034a9710c2158f9c4a">getPath</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="path()"><para>the path where this file can be accessed or the empty string if it is not known (yet). </para><para><simplesect kind="par"><title>Rationale</title><para>while it is not guaranteed that every writer will know how to handle this, most writers will, and it can be useful. however, not every writer will know this until after the file is closed. </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="db/dd1/classSH_1_1DiskWriter_1a592e67695b63c9caa3b29813a9a5d834" kindref="member">DiskWriter::path</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1a2076c3ac8baa53003f20f7be1d883ffc" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>TFile *</type>
        <definition>virtual TFile* SH::DiskWriter::getFile</definition>
        <argsstring>()=0</argsstring>
        <name>getFile</name>
        <reimplementedby refid="dc/d85/classSH_1_1DiskWriterXRD_1ae90acd1bc6d9daa406bab85cbac5eac4">getFile</reimplementedby>
        <reimplementedby refid="d2/d69/classSH_1_1DiskWriterLocal_1a4e98a52bdf2525acf0cc737918122f00">getFile</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="file()"><para>the file we are writing to </para><para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>file already closed </para></simplesect>
<simplesect kind="par"><title>Postcondition</title><para>result != 0 </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="db/dd1/classSH_1_1DiskWriter_1a8ffef649ce87ac77c7e211b69309f827" kindref="member">DiskWriter::file</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classSH_1_1DiskWriter_1a7fd7c50b769145a098779c04a204578f" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SH::DiskWriter::doClose</definition>
        <argsstring>()=0</argsstring>
        <name>doClose</name>
        <reimplementedby refid="dc/d85/classSH_1_1DiskWriterXRD_1a92007e438f8561754b4762d036ccfd88">doClose</reimplementedby>
        <reimplementedby refid="d2/d69/classSH_1_1DiskWriterLocal_1a38f206d9ec2b55bf2c541ea9fed14c6b">doClose</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="close()"><para>closes the file we are writing to </para><para><simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>i/o errors<linebreak/>
 file already closed </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="db/dd1/classSH_1_1DiskWriter_1aacdfb2b84bd309c3f8e0bcb9e156da8b" kindref="member">DiskWriter::close</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>an interface that manages writing a single output file </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Rationale</title><para>This interface allows to write files to arbitrary storage systems. Most importantly, it allows to execute actions after a file has been closed. </para></simplesect>
<simplesect kind="warning"><para>This interface may still change, if new output types are added that need new functionality. </para></simplesect>
<simplesect kind="see"><para><ref refid="d6/d99/classSH_1_1DiskOutput" kindref="compound">DiskOutput</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5160">
        <label>SH::DiskWriter</label>
        <link refid="db/dd1/classSH_1_1DiskWriter"/>
      </node>
      <node id="5161">
        <label>SH::DiskWriterLocal</label>
        <link refid="d2/d69/classSH_1_1DiskWriterLocal"/>
        <childnode refid="5160" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5162">
        <label>SH::DiskWriterXRD</label>
        <link refid="dc/d85/classSH_1_1DiskWriterXRD"/>
        <childnode refid="5160" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskWriter.h" bodystart="31" bodyend="124"/>
    <listofallmembers>
      <member refid="db/dd1/classSH_1_1DiskWriter_1aacdfb2b84bd309c3f8e0bcb9e156da8b" prot="public" virt="non-virtual"><scope>SH::DiskWriter</scope><name>close</name></member>
      <member refid="db/dd1/classSH_1_1DiskWriter_1a68f27eb8b356f99876de20bdf36a7bd7" prot="public" virt="non-virtual"><scope>SH::DiskWriter</scope><name>DiskWriter</name></member>
      <member refid="db/dd1/classSH_1_1DiskWriter_1a7fd7c50b769145a098779c04a204578f" prot="private" virt="pure-virtual"><scope>SH::DiskWriter</scope><name>doClose</name></member>
      <member refid="db/dd1/classSH_1_1DiskWriter_1a8ffef649ce87ac77c7e211b69309f827" prot="public" virt="non-virtual"><scope>SH::DiskWriter</scope><name>file</name></member>
      <member refid="db/dd1/classSH_1_1DiskWriter_1a2076c3ac8baa53003f20f7be1d883ffc" prot="private" virt="pure-virtual"><scope>SH::DiskWriter</scope><name>getFile</name></member>
      <member refid="db/dd1/classSH_1_1DiskWriter_1ab16d7e57e80a829e589607da8f618b2c" prot="private" virt="pure-virtual"><scope>SH::DiskWriter</scope><name>getPath</name></member>
      <member refid="db/dd1/classSH_1_1DiskWriter_1a592e67695b63c9caa3b29813a9a5d834" prot="public" virt="non-virtual"><scope>SH::DiskWriter</scope><name>path</name></member>
      <member refid="db/dd1/classSH_1_1DiskWriter_1afcaea9955d1944962e220e4287c23be1" prot="public" virt="non-virtual"><scope>SH::DiskWriter</scope><name>testInvariant</name></member>
      <member refid="db/dd1/classSH_1_1DiskWriter_1a5139f63a55699ea81ce44cc7bb746808" prot="public" virt="virtual"><scope>SH::DiskWriter</scope><name>~DiskWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
