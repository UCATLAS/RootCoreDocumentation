<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/dd1/classxAOD_1_1Vertex__v1" kind="class" prot="public">
    <compoundname>xAOD::Vertex_v1</compoundname>
    <basecompoundref refid="dc/db0/classSG_1_1AuxElement" prot="public" virt="non-virtual">SG::AuxElement</basecompoundref>
    <includes refid="d7/dcc/Vertex__v1_8h" local="no">Vertex_v1.h</includes>
      <sectiondef kind="user-defined">
      <header>Track particle contents operations</header>
      <description><para><anchor id="_1amgrpb63b18d46d6da319d23f1595be8e7304"/> </para></description>
      <memberdef kind="typedef" id="db/dd1/classxAOD_1_1Vertex__v1_1a69722882c53db42abecfb413c256fc56" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::TrackParticleContainer</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt; ElementLink&lt; xAOD::TrackParticleContainer &gt; &gt; xAOD::Vertex_v1::TrackParticleLinks_t</definition>
        <argsstring></argsstring>
        <name>TrackParticleLinks_t</name>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> for the associated track particles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="db/dd1/classxAOD_1_1Vertex__v1_1a0b5ff67ae559c6ff1d776e2f8e6f1245" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::NeutralParticleContainer</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt; ElementLink&lt; xAOD::NeutralParticleContainer &gt; &gt; xAOD::Vertex_v1::NeutralParticleLinks_t</definition>
        <argsstring></argsstring>
        <name>NeutralParticleLinks_t</name>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> for the associated neutral particles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1aaeb9a863edb0b99532a0aab0e77e4a7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a69722882c53db42abecfb413c256fc56" kindref="member">TrackParticleLinks_t</ref> &amp;</type>
        <definition>const TrackParticleLinks_t&amp; xAOD::Vertex_v1::trackParticleLinks</definition>
        <argsstring>() const </argsstring>
        <name>trackParticleLinks</name>
        <briefdescription>
<para>Get all the particles associated with the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a1368424a3588a62499527f0ae783d21b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setTrackParticleLinks</definition>
        <argsstring>(const TrackParticleLinks_t &amp;trackParticles)</argsstring>
        <name>setTrackParticleLinks</name>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a69722882c53db42abecfb413c256fc56" kindref="member">TrackParticleLinks_t</ref> &amp;</type>
          <declname>trackParticles</declname>
        </param>
        <briefdescription>
<para>Set all track particle links at once. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a481485f614e12a4121a12cf7f03fb5ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt; float &gt;&amp; xAOD::Vertex_v1::trackWeights</definition>
        <argsstring>() const </argsstring>
        <name>trackWeights</name>
        <briefdescription>
<para>Get all the track weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a22e30d9a88840cc68ee8c5b1c5d73117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setTrackWeights</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;weights)</argsstring>
        <name>setTrackWeights</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
<para>Set all the track weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1af4c835421b7ac56d28d3a4677257f29d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a0b5ff67ae559c6ff1d776e2f8e6f1245" kindref="member">NeutralParticleLinks_t</ref> &amp;</type>
        <definition>const NeutralParticleLinks_t&amp; xAOD::Vertex_v1::neutralParticleLinks</definition>
        <argsstring>() const </argsstring>
        <name>neutralParticleLinks</name>
        <briefdescription>
<para>Get all the particles associated with the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="129"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1aebb56d953f7ff2d02d26266c24a6726b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setNeutralParticleLinks</definition>
        <argsstring>(const NeutralParticleLinks_t &amp;neutralParticles)</argsstring>
        <name>setNeutralParticleLinks</name>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a0b5ff67ae559c6ff1d776e2f8e6f1245" kindref="member">NeutralParticleLinks_t</ref> &amp;</type>
          <declname>neutralParticles</declname>
        </param>
        <briefdescription>
<para>Set all neutral particle links at once. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a62835ddffd7264b08453c7e88e1d4d66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt; float &gt;&amp; xAOD::Vertex_v1::neutralWeights</definition>
        <argsstring>() const </argsstring>
        <name>neutralWeights</name>
        <briefdescription>
<para>Get all the neutral weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a0cfed56ce7b3d01181aea18b5192d285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setNeutralWeights</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;weights)</argsstring>
        <name>setNeutralWeights</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
<para>Set all the neutral weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1ab46a526655507c6f81d1e1597b8e1a42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">TrackParticle</ref> *</type>
        <definition>setTrackWeights setNeutralWeights const TrackParticle * xAOD::Vertex_v1::trackParticle</definition>
        <argsstring>(size_t i) const </argsstring>
        <name>trackParticle</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get the pointer to a given track that was used in vertex reco. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="140" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="247" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1af79def14c4f0c233e1b0d4af43d2c45c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Vertex_v1::trackWeight</definition>
        <argsstring>(size_t i) const </argsstring>
        <name>trackWeight</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get the weight of a given track in the vertex reconstruction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="142" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="260" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a24fcd904109cdb65100d8087d7d2caf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xAOD::Vertex_v1::nTrackParticles</definition>
        <argsstring>() const </argsstring>
        <name>nTrackParticles</name>
        <briefdescription>
<para>Get the number of tracks associated with this vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="144" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="268" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a021fa80160ea3cdb559b4c553face5b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d5/d44/classxAOD_1_1NeutralParticle__v1" kindref="compound">NeutralParticle</ref> *</type>
        <definition>const NeutralParticle * xAOD::Vertex_v1::neutralParticle</definition>
        <argsstring>(size_t i) const </argsstring>
        <name>neutralParticle</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get the pointer to a given neutral that was used in vertex reco. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="148" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="278" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1aa602c90599e8b16b319dc16958aa51c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Vertex_v1::neutralWeight</definition>
        <argsstring>(size_t i) const </argsstring>
        <name>neutralWeight</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get the weight of a given neutral in the vertex reconstruction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="150" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="291" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a289a1558aeaed7c8eb5e12e13df0e476" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xAOD::Vertex_v1::nNeutralParticles</definition>
        <argsstring>() const </argsstring>
        <name>nNeutralParticles</name>
        <briefdescription>
<para>Get the number of neutrals associated with this vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="152" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="299" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a55587648ca553dfc88d6a118cc881d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::addTrackAtVertex</definition>
        <argsstring>(const ElementLink&lt; TrackParticleContainer &gt; &amp;tr, float weight=1.0)</argsstring>
        <name>addTrackAtVertex</name>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TrackParticleContainer</ref> &gt; &amp;</type>
          <declname>tr</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Add a new track to the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="312" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a66b0eaf653dd4423c528e1aa04cf9fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::addNeutralAtVertex</definition>
        <argsstring>(const ElementLink&lt; NeutralParticleContainer &gt; &amp;tr, float weight=1.0)</argsstring>
        <name>addNeutralAtVertex</name>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">NeutralParticleContainer</ref> &gt; &amp;</type>
          <declname>tr</declname>
        </param>
        <param>
          <type>float</type>
          <declname>weight</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Add a new neutral to the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="161" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="321" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a1f17fa6db99126ee514a42d05616e371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::clearTracks</definition>
        <argsstring>()</argsstring>
        <name>clearTracks</name>
        <briefdescription>
<para>Remove all tracks from the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="164" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="329" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a0399086b4415dc1d19a2cbde3e78ccbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::clearNeutrals</definition>
        <argsstring>()</argsstring>
        <name>clearNeutrals</name>
        <briefdescription>
<para>Remove all neutrals from the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="167" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="336" bodyend="341"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Fit quality functions</header>
      <description><para><anchor id="_1amgrp7e7337e8a344dc50bcf66dfd640be010"/> </para></description>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a22703ccb9ecc38f6245cf1a2a5a5211a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Vertex_v1::chiSquared</definition>
        <argsstring>() const </argsstring>
        <name>chiSquared</name>
        <briefdescription>
<para>Returns the <formula id="114">$ \chi^2 $</formula> of the vertex fit as float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a852e1e1779463a7ebe7b6e1ecd2644fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Vertex_v1::numberDoF</definition>
        <argsstring>() const </argsstring>
        <name>numberDoF</name>
        <briefdescription>
<para>Returns the number of degrees of freedom of the vertex fit as float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1ad05361b5837ead71e3e102556e0c4604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setFitQuality</definition>
        <argsstring>(float chiSquared, float numberDoF)</argsstring>
        <name>setFitQuality</name>
        <param>
          <type>float</type>
          <declname>chiSquared</declname>
        </param>
        <param>
          <type>float</type>
          <declname>numberDoF</declname>
        </param>
        <briefdescription>
<para>Set the &apos;Fit Quality&apos; information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="91" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="148" bodyend="156"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="db/dd1/classxAOD_1_1Vertex__v1_1a896db5a1ec8b75021cf223dff3ad7da5" prot="private" static="no" mutable="yes">
        <type>Amg::Vector3D</type>
        <definition>Amg::Vector3D xAOD::Vertex_v1::m_position</definition>
        <argsstring></argsstring>
        <name>m_position</name>
        <briefdescription>
<para>Cached position of the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="177" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/dd1/classxAOD_1_1Vertex__v1_1a52660768e609377fd86317da443d79b8" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool xAOD::Vertex_v1::m_positionCached</definition>
        <argsstring></argsstring>
        <name>m_positionCached</name>
        <briefdescription>
<para>Cache status of the position object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="179" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/dd1/classxAOD_1_1Vertex__v1_1a3ca13abdbe9b13b7cc0d5ec324b2c78f" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool xAOD::Vertex_v1::m_covarianceCached</definition>
        <argsstring></argsstring>
        <name>m_covarianceCached</name>
        <briefdescription>
<para>Cache status of the covariance object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="183" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a3a55bd3faef78d94e792edf2297c14e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::Vertex_v1::Vertex_v1</definition>
        <argsstring>()</argsstring>
        <name>Vertex_v1</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a5f7f93ee8da8822bfad95c692a4ef1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::Vertex_v1::Vertex_v1</definition>
        <argsstring>(const Vertex_v1 &amp;other)</argsstring>
        <name>Vertex_v1</name>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">Vertex_v1</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="23" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a410d6c5cc96a2bc64b39eaeec5c1aa43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">Vertex_v1</ref> &amp;</type>
        <definition>Vertex_v1 &amp; xAOD::Vertex_v1::operator=</definition>
        <argsstring>(const Vertex_v1 &amp;tp)</argsstring>
        <name>operator=</name>
        <reimplements refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650">operator=</reimplements>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">Vertex_v1</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Assignment operator. This can involve creating and copying an Auxilary store, and so should be used sparingly. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="34" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a9c995d7b6078f06d6795989c25892300" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434" kindref="member">Type::ObjectType</ref></type>
        <definition>Type::ObjectType xAOD::Vertex_v1::type</definition>
        <argsstring>() const </argsstring>
        <name>type</name>
        <briefdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> little helper function for identifying the type in template code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1af2f27f08509b2c6d5e1554ad3326b6f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Vertex_v1::x</definition>
        <argsstring>() const </argsstring>
        <name>x</name>
        <briefdescription>
<para>Returns the x position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a77481190c7c9679a38f2cdb8cf2d8783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setX</definition>
        <argsstring>(float value)</argsstring>
        <name>setX</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the x position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="58"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a4e957102a0a0c1ce10a2089b5882c71d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Vertex_v1::y</definition>
        <argsstring>() const </argsstring>
        <name>y</name>
        <briefdescription>
<para>Returns the y position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a894753c70aebcd9bbb79d5b72b748a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setY</definition>
        <argsstring>(float value)</argsstring>
        <name>setY</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the y position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a9173ecba7b08275d3438d274a4869814" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Vertex_v1::z</definition>
        <argsstring>() const </argsstring>
        <name>z</name>
        <briefdescription>
<para>Returns the z position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a620ff1477d4a82b698526b304df042d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setZ</definition>
        <argsstring>(float value)</argsstring>
        <name>setZ</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the z position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1af72a305ec9de9986c44579494cf43e8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt; float &gt;&amp; xAOD::Vertex_v1::covariance</definition>
        <argsstring>() const </argsstring>
        <name>covariance</name>
        <briefdescription>
<para>Returns the covariance matrix as a simple vector of values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="69"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a92af93a2b89dc0f547bef1e5cc6c6f8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setCovariance</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setCovariance</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the covariance matrix as a simple vector of values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="71"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a8aa3c36b9384e92fa6119ac0c633c3a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Amg::Vector3D &amp;</type>
        <definition>const Amg::Vector3D&amp; xAOD::Vertex_v1::position</definition>
        <argsstring>() const </argsstring>
        <name>position</name>
        <briefdescription>
<para>Returns the 3-pos. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="74"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1aa460d69fd25c3e6389c9ef3b31b24f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setPosition</definition>
        <argsstring>(const Amg::Vector3D &amp;position)</argsstring>
        <name>setPosition</name>
        <param>
          <type>const Amg::Vector3D &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Sets the 3-position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="76" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="94" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a89b43353ed2ee3588e3da12825185e53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const</type>
        <definition>const xAOD::Vertex_v1::AmgSymMatrix</definition>
        <argsstring>(3)&amp;covariancePosition() const </argsstring>
        <name>AmgSymMatrix</name>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
<para>Returns the vertex covariance matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a38551a4dcb87c906d0b67c34ab474243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setCovariancePosition</definition>
        <argsstring>(const AmgSymMatrix(3)&amp;covariancePosition)</argsstring>
        <name>setCovariancePosition</name>
        <param>
          <type>const AmgSymMatrix(3)&amp;</type>
          <declname>covariancePosition</declname>
        </param>
        <briefdescription>
<para>Sets the vertex covariance matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="121" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a34e99a6f8d2bdf2584bb9cd92d3c308a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/db2/namespacexAOD_1_1VxType_1a1d548d2beffc6a21d4162b4aa513afba" kindref="member">VxType::VertexType</ref></type>
        <definition>VxType::VertexType xAOD::Vertex_v1::vertexType</definition>
        <argsstring>() const </argsstring>
        <name>vertexType</name>
        <briefdescription>
<para>The type of the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="96"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a8cf336745810d978e799e88fe3ef0c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::setVertexType</definition>
        <argsstring>(VxType::VertexType vType)</argsstring>
        <name>setVertexType</name>
        <param>
          <type><ref refid="d3/db2/namespacexAOD_1_1VxType_1a1d548d2beffc6a21d4162b4aa513afba" kindref="member">VxType::VertexType</ref></type>
          <declname>vType</declname>
        </param>
        <briefdescription>
<para>Set the type of the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1ab8ecf74911e2d6ffc35977234cc80720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; Trk::VxTrackAtVertex &gt; &amp;</type>
        <definition>std::vector&lt; Trk::VxTrackAtVertex &gt; &amp; xAOD::Vertex_v1::vxTrackAtVertex</definition>
        <argsstring>()</argsstring>
        <name>vxTrackAtVertex</name>
        <briefdescription>
<para>Non-const access to the VxTrackAtVertex vector. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to attach an Athena-only, reconstruction specific information to the object. The data is attached as a dynamic auxiliary property. And it needs to be explicitly disabled for writing out, as we don&apos;t have a valid dictionary for it. Not to mention that these objects are very large.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> modifiable object, creating it if necessary </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="102" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a6399908dc48a38d2b444392d4fd9748d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; Trk::VxTrackAtVertex &gt; &amp;</type>
        <definition>const std::vector&lt; Trk::VxTrackAtVertex &gt; &amp; xAOD::Vertex_v1::vxTrackAtVertex</definition>
        <argsstring>() const </argsstring>
        <name>vxTrackAtVertex</name>
        <briefdescription>
<para>Const access to the vector of tracks fitted to the vertex (may not exist!). </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to access the Athena-only, reconstruction specific decoration on the object.</para><para>Keep in mind that this decoration is not available for most of the vertices. When calling this function on an object that doesn&apos;t have this decoration, an exception will be thrown. Use the <ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a952d56c7178af2556c46e765b16a4ba0" kindref="member">vxTrackAtVertexAvailable()</ref> function to check if this function will succeed or not.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> constant reference to the decoration </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="104" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a952d56c7178af2556c46e765b16a4ba0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Vertex_v1::vxTrackAtVertexAvailable</definition>
        <argsstring>() const </argsstring>
        <name>vxTrackAtVertexAvailable</name>
        <briefdescription>
<para>Check if VxTrackAtVertices are attached to the object. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to check whether this Athena-only, reconstruction-specific decoration is available on the object. In most cases it isn&apos;t.</para><para><simplesect kind="return"><para>The availablility of the decoration </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="106" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a76cefd84bd851b6d96287f5f307b260e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Vertex_v1::resetCache</definition>
        <argsstring>()</argsstring>
        <name>resetCache</name>
        <briefdescription>
<para>Reset the internal cache of the object. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used by ROOT to reset the object after a new object was read into an existing memory location. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="173" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx" bodystart="349" bodyend="355"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="db/dd1/classxAOD_1_1Vertex__v1_1a2aacd18e911adebe107bf39dbd4d0b66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::Vertex_v1::AmgSymMatrix</definition>
        <argsstring>(3) m_covariance</argsstring>
        <name>AmgSymMatrix</name>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
<para>Cached covariance of the vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class describing a Vertex.</para><para><simplesect kind="author"><para>Kirill Prokofiev &lt;<ulink url="mailto:Kirill.Prokofev@cern.ch">Kirill.Prokofev@cern.ch</ulink>&gt; </para><simplesectsep/><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt; </para><simplesectsep/><para>Ruslan Mashinistov &lt;<ulink url="mailto:Ruslan.Mashinistov@cern.ch">Ruslan.Mashinistov@cern.ch</ulink>&gt; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="22886">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="22884">
        <label>xAOD::Vertex_v1</label>
        <link refid="db/dd1/classxAOD_1_1Vertex__v1"/>
        <childnode refid="22885" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22885">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="22886" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="22900">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="22901">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="22896">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="22905">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="22890" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22899">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="22900" relation="public-inheritance">
        </childnode>
        <childnode refid="22901" relation="public-inheritance">
        </childnode>
        <childnode refid="22902" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22894">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="22895">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="22889">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="22887">
        <label>xAOD::Vertex_v1</label>
        <link refid="db/dd1/classxAOD_1_1Vertex__v1"/>
        <childnode refid="22888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22892">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="22893">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="22894" relation="public-inheritance">
        </childnode>
        <childnode refid="22895" relation="public-inheritance">
        </childnode>
        <childnode refid="22896" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="22892" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="22891">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="22892" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22898">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="22899" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22902">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="22903">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="22904" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="22897">
        <label>mutex</label>
      </node>
      <node id="22888">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="22889" relation="public-inheritance">
        </childnode>
        <childnode refid="22890" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="22905" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="22904">
        <label>void</label>
      </node>
      <node id="22890">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="22891" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="22893" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="22892" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="22897" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="22898" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="22903" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/Vertex_v1.h" bodystart="40" bodyend="185"/>
    <listofallmembers>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a66b0eaf653dd4423c528e1aa04cf9fd4" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>addNeutralAtVertex</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a55587648ca553dfc88d6a118cc881d7b" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>addTrackAtVertex</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a89b43353ed2ee3588e3da12825185e53" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>AmgSymMatrix</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a2aacd18e911adebe107bf39dbd4d0b66" prot="private" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>AmgSymMatrix</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a7aaa8e9eb54091ab7ee43bb7c73918e4" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5279e0349d690c26121f60b5a8778322" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>AuxElement</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a22703ccb9ecc38f6245cf1a2a5a5211a" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>chiSquared</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>clearDecorations</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a0399086b4415dc1d19a2cbde3e78ccbe" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>clearNeutrals</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a1f17fa6db99126ee514a42d05616e371" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>clearTracks</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>container</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1af72a305ec9de9986c44579494cf43e8d" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>covariance</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>getConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>getStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>IAuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>index</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af727b22ab51f1d848fc3cf59065b99ea" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>isAvailable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a864fc1dab026cbcf20b2c7e3904b89a4" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a3ca13abdbe9b13b7cc0d5ec324b2c78f" prot="private" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>m_covarianceCached</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a896db5a1ec8b75021cf223dff3ad7da5" prot="private" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>m_position</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a52660768e609377fd86317da443d79b8" prot="private" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>m_positionCached</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>makePrivateStore</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a021fa80160ea3cdb559b4c553face5b4" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>neutralParticle</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1af4c835421b7ac56d28d3a4677257f29d" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>neutralParticleLinks</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a0b5ff67ae559c6ff1d776e2f8e6f1245" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>NeutralParticleLinks_t</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1aa602c90599e8b16b319dc16958aa51c3" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>neutralWeight</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a62835ddffd7264b08453c7e88e1d4d66" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>neutralWeights</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a289a1558aeaed7c8eb5e12e13df0e476" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>nNeutralParticles</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a24fcd904109cdb65100d8087d7d2caf1" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>nTrackParticles</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a852e1e1779463a7ebe7b6e1ecd2644fe" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>numberDoF</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a410d6c5cc96a2bc64b39eaeec5c1aa43" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>operator=</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a8aa3c36b9384e92fa6119ac0c633c3a6" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>position</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>releasePrivateStore</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a76cefd84bd851b6d96287f5f307b260e" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>resetCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setConstStore</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a92af93a2b89dc0f547bef1e5cc6c6f8d" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setCovariance</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a38551a4dcb87c906d0b67c34ab474243" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setCovariancePosition</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1ad05361b5837ead71e3e102556e0c4604" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setFitQuality</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1aebb56d953f7ff2d02d26266c24a6726b" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setNeutralParticleLinks</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a0cfed56ce7b3d01181aea18b5192d285" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setNeutralWeights</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setNonConstStore</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1aa460d69fd25c3e6389c9ef3b31b24f14" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setPosition</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setStore</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a1368424a3588a62499527f0ae783d21b" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setTrackParticleLinks</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a22e30d9a88840cc68ee8c5b1c5d73117" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setTrackWeights</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a8cf336745810d978e799e88fe3ef0c87" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setVertexType</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a77481190c7c9679a38f2cdb8cf2d8783" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setX</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a894753c70aebcd9bbb79d5b72b748a0b" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setY</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a620ff1477d4a82b698526b304df042d7" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>setZ</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1ab46a526655507c6f81d1e1597b8e1a42" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>trackParticle</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1aaeb9a863edb0b99532a0aab0e77e4a7d" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>trackParticleLinks</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a69722882c53db42abecfb413c256fc56" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>TrackParticleLinks_t</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1af79def14c4f0c233e1b0d4af43d2c45c" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>trackWeight</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a481485f614e12a4121a12cf7f03fb5ef" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>trackWeights</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a9c995d7b6078f06d6795989c25892300" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>type</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a3a55bd3faef78d94e792edf2297c14e6" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>Vertex_v1</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a5f7f93ee8da8822bfad95c692a4ef1a7" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>Vertex_v1</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a34e99a6f8d2bdf2584bb9cd92d3c308a" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>vertexType</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1ab8ecf74911e2d6ffc35977234cc80720" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>vxTrackAtVertex</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a6399908dc48a38d2b444392d4fd9748d" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>vxTrackAtVertex</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a952d56c7178af2556c46e765b16a4ba0" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>vxTrackAtVertexAvailable</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1af2f27f08509b2c6d5e1554ad3326b6f9" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>x</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a4e957102a0a0c1ce10a2089b5882c71d" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>y</name></member>
      <member refid="db/dd1/classxAOD_1_1Vertex__v1_1a9173ecba7b08275d3438d274a4869814" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>z</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::Vertex_v1</scope><name>~AuxElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
