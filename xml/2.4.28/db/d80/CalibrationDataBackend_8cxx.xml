<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/d80/CalibrationDataBackend_8cxx" kind="file">
    <compoundname>CalibrationDataBackend.cxx</compoundname>
    <includes refid="d2/d74/CalibrationDataContainer_8h" local="yes">CalibrationDataInterface/CalibrationDataContainer.h</includes>
    <includes refid="d2/d82/CalibrationDataBackend_8h" local="yes">CalibrationDataInterface/CalibrationDataBackend.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="yes">TFile.h</includes>
    <includes local="yes">TMap.h</includes>
    <includes local="yes">TObjString.h</includes>
    <includes local="yes">TDirectory.h</includes>
    <incdepgraph>
      <node id="96799">
        <label>TMap.h</label>
      </node>
      <node id="96800">
        <label>THashList.h</label>
      </node>
      <node id="96801">
        <label>CalibrationDataInterface/CalibrationDataVariables.h</label>
        <link refid="d6/d96/CalibrationDataVariables_8h_source"/>
        <childnode refid="96798" relation="include">
        </childnode>
        <childnode refid="96802" relation="include">
        </childnode>
      </node>
      <node id="96803">
        <label>CalibrationDataInterface/CalibrationDataBackend.h</label>
        <link refid="d2/d82/CalibrationDataBackend_8h_source"/>
      </node>
      <node id="96798">
        <label>string</label>
      </node>
      <node id="96794">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/Root/CalibrationDataBackend.cxx</label>
        <link refid="CalibrationDataBackend.cxx"/>
        <childnode refid="96795" relation="include">
        </childnode>
        <childnode refid="96803" relation="include">
        </childnode>
        <childnode refid="96804" relation="include">
        </childnode>
        <childnode refid="96798" relation="include">
        </childnode>
        <childnode refid="96805" relation="include">
        </childnode>
        <childnode refid="96799" relation="include">
        </childnode>
        <childnode refid="96806" relation="include">
        </childnode>
        <childnode refid="96807" relation="include">
        </childnode>
      </node>
      <node id="96797">
        <label>map</label>
      </node>
      <node id="96807">
        <label>TDirectory.h</label>
      </node>
      <node id="96806">
        <label>TObjString.h</label>
      </node>
      <node id="96796">
        <label>vector</label>
      </node>
      <node id="96805">
        <label>TFile.h</label>
      </node>
      <node id="96802">
        <label>utility</label>
      </node>
      <node id="96795">
        <label>CalibrationDataInterface/CalibrationDataContainer.h</label>
        <link refid="d2/d74/CalibrationDataContainer_8h_source"/>
        <childnode refid="96796" relation="include">
        </childnode>
        <childnode refid="96797" relation="include">
        </childnode>
        <childnode refid="96798" relation="include">
        </childnode>
        <childnode refid="96799" relation="include">
        </childnode>
        <childnode refid="96800" relation="include">
        </childnode>
        <childnode refid="96801" relation="include">
        </childnode>
      </node>
      <node id="96804">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="db/d80/CalibrationDataBackend_8cxx_1a4d2469d13289d4c31e7a6523d0b2cb28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string hadronisationRefs</definition>
        <argsstring>(&quot;MChadronisation_ref&quot;)</argsstring>
        <name>hadronisationRefs</name>
        <param>
          <type>&quot;MChadronisation_ref&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/Root/CalibrationDataBackend.cxx" line="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;Back-end&apos;<sp/>utilities<sp/>for<sp/>the<sp/>CalibrationDataInterface<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CalibrationDataInterface/CalibrationDataContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CalibrationDataInterface/CalibrationDataBackend.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TObjString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TDirectory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Name<sp/>of<sp/>the<sp/>object<sp/>holding<sp/>the<sp/>MC<sp/>hadronisation<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(this<sp/>is<sp/>used<sp/>for<sp/>the<sp/>application<sp/>of<sp/>MC-to-MC<sp/>calibration<sp/>scale<sp/>factors)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>hadronisationRefs(</highlight><highlight class="stringliteral">&quot;MChadronisation_ref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Back-end<sp/>method<sp/>for<sp/>addition<sp/>of<sp/>a<sp/>container<sp/>to<sp/>an<sp/>existing<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Notes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>&quot;name&quot;<sp/>should<sp/>be<sp/>the<sp/>full<sp/>name<sp/>(i.e.,<sp/>include<sp/>the<sp/>&quot;_Eff&quot;<sp/>or<sp/>&quot;_SF&quot;<sp/>suffix)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>this<sp/>function<sp/>will<sp/>change<sp/>the<sp/>global<sp/>gDirectory.<sp/>If<sp/>the<sp/>working<sp/>directory<sp/>is<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>preserved<sp/>then<sp/>the<sp/>variable<sp/>needs<sp/>to<sp/>be<sp/>saved<sp/>by<sp/>the<sp/>user<sp/>prior<sp/>to<sp/>the<sp/>function<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal">Int_t</highlight></codeline>
<codeline lineno="30"><highlight class="normal">Analysis::addContainer(<ref refid="d5/d7b/classAnalysis_1_1CalibrationDataContainer" kindref="compound">Analysis::CalibrationDataContainer</ref>*<sp/>cnt,<sp/>TFile*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tagger,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>jetAuthor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>OP,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>flavour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isReference)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>file-&gt;cd(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);<sp/>TDirectory*<sp/>dir<sp/>=<sp/>gDirectory;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>level:<sp/>tagger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>TDirectory*<sp/>taggerDir<sp/>=<sp/>dir-&gt;GetDirectory(tagger);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>taggerDir)<sp/>taggerDir<sp/>=<sp/>dir-&gt;mkdir(tagger);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>then:<sp/>jet<sp/>author</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>TDirectory*<sp/>authorDir<sp/>=<sp/>taggerDir-&gt;GetDirectory(jetAuthor);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>authorDir)<sp/>authorDir<sp/>=<sp/>taggerDir-&gt;mkdir(jetAuthor);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>then:<sp/>operating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>TDirectory*<sp/>OPDir<sp/>=<sp/>authorDir-&gt;GetDirectory(OP);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>OPDir)<sp/>OPDir<sp/>=<sp/>authorDir-&gt;mkdir(OP);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finally:<sp/>flavour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>TDirectory*<sp/>flavourDir<sp/>=<sp/>OPDir-&gt;GetDirectory(flavour);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>flavourDir)<sp/>flavourDir<sp/>=<sp/>OPDir-&gt;mkdir(flavour);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>Int_t<sp/>nbytes<sp/>=<sp/>flavourDir-&gt;WriteTObject<sp/>(cnt,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;SingleKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isReference)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>retrieve<sp/>the<sp/>hadronisation<sp/>reference<sp/>for<sp/>this<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ref<sp/>=<sp/>cnt-&gt;<ref refid="d5/d7b/classAnalysis_1_1CalibrationDataContainer_1a78f8934ff9297011fb8bcb193cad4322" kindref="member" tooltip="retrieve the &amp;#39;hadronisation reference&amp;#39; entered for this calibration, if any...">getHadronisation</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>name<sp/>is<sp/>well<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cntname<sp/>=<sp/>(name)<sp/>?<sp/>name<sp/>:<sp/>cnt-&gt;GetName();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;addContainer():<sp/>container<sp/>does<sp/>not<sp/>have<sp/>a<sp/>MC<sp/>hadronisation<sp/>reference!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::string(cntname).find(</highlight><highlight class="stringliteral">&quot;_Eff&quot;</highlight><highlight class="normal">)<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;addContainer():<sp/>container<sp/>is<sp/>not<sp/>a<sp/>MC<sp/>efficiency<sp/>object!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>the<sp/>map<sp/>(or<sp/>create<sp/>it<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>already<sp/>exist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TMap*<sp/>map;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flavourDir-&gt;GetObject(hadronisationRefs.c_str(),<sp/>map);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!map)<sp/>map<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TMap;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>(or<sp/>replace,<sp/>if<sp/>it<sp/>already<sp/>exists)<sp/>the<sp/>histogram<sp/>name<sp/>for<sp/>this<sp/>hadronisation<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TPair*<sp/>p<sp/>=<sp/>(TPair*)<sp/>map-&gt;FindObject(ref.c_str()))<sp/>map-&gt;DeleteEntry(p-&gt;Key());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;Add(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TObjString(ref.c_str()),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TObjString(cntname));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>map<sp/>to<sp/>file<sp/>(deleting<sp/>any<sp/>previous<sp/>version)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flavourDir-&gt;WriteTObject<sp/>(map,<sp/>hadronisationRefs.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;WriteDelete<sp/>SingleKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbytes;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/Root/CalibrationDataBackend.cxx"/>
  </compounddef>
</doxygen>
