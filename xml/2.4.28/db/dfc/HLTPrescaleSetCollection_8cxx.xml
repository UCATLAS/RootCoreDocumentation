<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/dfc/HLTPrescaleSetCollection_8cxx" kind="file">
    <compoundname>HLTPrescaleSetCollection.cxx</compoundname>
    <includes refid="d8/dfe/HLTPrescaleSetCollection_8h" local="yes">TrigConfHLTData/HLTPrescaleSetCollection.h</includes>
    <includes refid="d0/dd3/HLTPrescaleSet_8h" local="yes">TrigConfHLTData/HLTPrescaleSet.h</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="309183">
        <label>list</label>
      </node>
      <node id="309194">
        <label>TrigConfHLTData/HLTLevel.h</label>
        <link refid="dc/d46/HLTLevel_8h_source"/>
        <childnode refid="309182" relation="include">
        </childnode>
      </node>
      <node id="309195">
        <label>iomanip</label>
      </node>
      <node id="309187">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="309179">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTPrescaleSetCollection.cxx</label>
        <link refid="HLTPrescaleSetCollection.cxx"/>
        <childnode refid="309180" relation="include">
        </childnode>
        <childnode refid="309188" relation="include">
        </childnode>
        <childnode refid="309195" relation="include">
        </childnode>
        <childnode refid="309196" relation="include">
        </childnode>
      </node>
      <node id="309190">
        <label>stdint.h</label>
      </node>
      <node id="309196">
        <label>stdexcept</label>
      </node>
      <node id="309182">
        <label>string</label>
      </node>
      <node id="309189">
        <label>map</label>
      </node>
      <node id="309192">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="309181" relation="include">
        </childnode>
        <childnode refid="309182" relation="include">
        </childnode>
      </node>
      <node id="309186">
        <label>exception</label>
      </node>
      <node id="309191">
        <label>TrigConfHLTData/HLTPrescale.h</label>
        <link refid="df/da4/HLTPrescale_8h_source"/>
        <childnode refid="309181" relation="include">
        </childnode>
        <childnode refid="309182" relation="include">
        </childnode>
        <childnode refid="309189" relation="include">
        </childnode>
        <childnode refid="309184" relation="include">
        </childnode>
        <childnode refid="309185" relation="include">
        </childnode>
        <childnode refid="309192" relation="include">
        </childnode>
        <childnode refid="309193" relation="include">
        </childnode>
      </node>
      <node id="309193">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="309184">
        <label>vector</label>
      </node>
      <node id="309185">
        <label>utility</label>
      </node>
      <node id="309181">
        <label>iosfwd</label>
      </node>
      <node id="309188">
        <label>TrigConfHLTData/HLTPrescaleSet.h</label>
        <link refid="d0/dd3/HLTPrescaleSet_8h_source"/>
        <childnode refid="309181" relation="include">
        </childnode>
        <childnode refid="309182" relation="include">
        </childnode>
        <childnode refid="309189" relation="include">
        </childnode>
        <childnode refid="309184" relation="include">
        </childnode>
        <childnode refid="309185" relation="include">
        </childnode>
        <childnode refid="309190" relation="include">
        </childnode>
        <childnode refid="309191" relation="include">
        </childnode>
        <childnode refid="309194" relation="include">
        </childnode>
        <childnode refid="309192" relation="include">
        </childnode>
        <childnode refid="309193" relation="include">
        </childnode>
      </node>
      <node id="309180">
        <label>TrigConfHLTData/HLTPrescaleSetCollection.h</label>
        <link refid="d8/dfe/HLTPrescaleSetCollection_8h_source"/>
        <childnode refid="309181" relation="include">
        </childnode>
        <childnode refid="309182" relation="include">
        </childnode>
        <childnode refid="309183" relation="include">
        </childnode>
        <childnode refid="309184" relation="include">
        </childnode>
        <childnode refid="309185" relation="include">
        </childnode>
        <childnode refid="309186" relation="include">
        </childnode>
        <childnode refid="309187" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTPrescaleSetCollection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTPrescaleSet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">TrigConf;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a3e4b5c61138e3f5b5da60623cf0b020e" kindref="member" tooltip="default constructor">TrigConf::HLTPrescaleSetCollection::HLTPrescaleSetCollection</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/>:<sp/>m_currentLB(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_currentPSS(<sp/>nullptr<sp/>),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_prescaleSets(),</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_prescaleSetCollection_mutex()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1aa9e357ab12fd2762deff812e9eb5af4b" kindref="member" tooltip="destructor">HLTPrescaleSetCollection::~HLTPrescaleSetCollection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a0807202b99bdca84776d4f9ca1eaf2a9" kindref="member" tooltip="Deletes all prescale sets.">clear</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a3e4b5c61138e3f5b5da60623cf0b020e" kindref="member" tooltip="default constructor">HLTPrescaleSetCollection::HLTPrescaleSetCollection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection" kindref="compound" tooltip="HLT chain configuration information.">HLTPrescaleSetCollection</ref><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;HLTPrescaleSetCollection::operator=<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection" kindref="compound" tooltip="HLT chain configuration information.">HLTPrescaleSetCollection</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">HLTPrescaleSetCollection::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection" kindref="compound" tooltip="HLT chain configuration information.">HLTPrescaleSetCollection</ref><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;HLTPrescaleSetCollection::operator=<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a0807202b99bdca84776d4f9ca1eaf2a9" kindref="member" tooltip="Deletes all prescale sets.">HLTPrescaleSetCollection::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(m_prescaleSetCollection_mutex);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cont&amp;<sp/>psinfo<sp/>:<sp/>m_prescaleSets)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>psinfo.pss;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>m_prescaleSets.clear();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>m_currentLB<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>m_currentPSS<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d82/classTrigConf_1_1HLTPrescaleSet" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTPrescaleSet</ref>*</highlight></codeline>
<codeline lineno="47"><highlight class="normal">TrigConf::HLTPrescaleSetCollection::prescaleSet(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lumiblock)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thePrescaleSet(lumiblock);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="d7/d82/classTrigConf_1_1HLTPrescaleSet" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTPrescaleSet</ref>*</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1ac9bcbe5171bfe2ebec57782308d1f12f" kindref="member" tooltip="access current prescale set (for current lumiblock)">TrigConf::HLTPrescaleSetCollection::thePrescaleSet</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lumiblock)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lumiblock<sp/>==<sp/>m_currentLB<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_currentPSS;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(m_prescaleSetCollection_mutex);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>m_currentLB<sp/>=<sp/>lumiblock;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>m_currentPSS<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_prescaleSets.empty())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>first<sp/>LB<sp/>of<sp/>the<sp/>prescale<sp/>set<sp/>collection<sp/>(minLB)<sp/>is<sp/>&lt;=<sp/>than<sp/>the<sp/>requested<sp/>lumiblock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minLB<sp/>=<sp/>m_prescaleSets.begin()-&gt;lb;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(minLB<sp/>&gt;<sp/>lumiblock)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;HLTPrescaleSetCollecion<sp/>access<sp/>with<sp/>LBN<sp/>which<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>first<sp/>prescale<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>the<sp/>right<sp/>prescale<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="d7/d82/classTrigConf_1_1HLTPrescaleSet" kindref="compound" tooltip="HLT chain configuration information.">HLTPrescaleSet</ref>*<sp/>pss<sp/>=<sp/>m_prescaleSets.begin()-&gt;pss;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cont&amp;<sp/>psinfo<sp/>:<sp/>m_prescaleSets)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>psinfo.lb<sp/>&gt;<sp/>lumiblock<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pss<sp/>=<sp/>psinfo.pss;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>the<sp/>PSS<sp/>that<sp/>covers<sp/>the<sp/>requested<sp/>LB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>m_currentPSS<sp/>=<sp/>pss;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_currentPSS;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="d7/d82/classTrigConf_1_1HLTPrescaleSet" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTPrescaleSet</ref>*</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a5ec4cf8068363db0ee47f16fc5751526" kindref="member" tooltip="Add prescale set for this lumiblock number.">TrigConf::HLTPrescaleSetCollection::setPrescaleSet</ref>(<sp/><ref refid="d7/d82/classTrigConf_1_1HLTPrescaleSet" kindref="compound" tooltip="HLT chain configuration information.">HLTPrescaleSet</ref>*<sp/>pss<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Lock<sp/>mutex<sp/>while<sp/>we<sp/>are<sp/>inserting<sp/>a<sp/>new<sp/>prescale<sp/>set.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Everybody<sp/>accessing<sp/>m_prescaleSetCollection<sp/>needs<sp/>to<sp/>obtain<sp/>this<sp/>mutex</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>before<sp/>accessing<sp/>this<sp/>list.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(m_prescaleSetCollection_mutex);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>m_prescaleSets.insert(m_prescaleSets.begin(),<sp/>cont(0,<sp/>pss-&gt;id(),<sp/>pss));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>m_currentLB<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>m_currentPSS<sp/>=<sp/>pss;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_currentPSS;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="d7/d82/classTrigConf_1_1HLTPrescaleSet" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTPrescaleSet</ref>*</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a9e4f80aac89613f15692e72b948fa3ff" kindref="member" tooltip="Add prescale set for this lumiblock number.">TrigConf::HLTPrescaleSetCollection::addPrescaleSet</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lumiblock,<sp/><ref refid="d7/d82/classTrigConf_1_1HLTPrescaleSet" kindref="compound" tooltip="HLT chain configuration information.">HLTPrescaleSet</ref>*<sp/>pss<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addPrescaleSet(cont(lumiblock,<sp/>pss?pss-&gt;id():0,<sp/>pss));</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="d7/d82/classTrigConf_1_1HLTPrescaleSet" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTPrescaleSet</ref>*</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a9e4f80aac89613f15692e72b948fa3ff" kindref="member" tooltip="Add prescale set for this lumiblock number.">TrigConf::HLTPrescaleSetCollection::addPrescaleSet</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cont&amp;<sp/>add_psinfo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>std::list&lt;cont&gt;::iterator<sp/>psinfo_it<sp/>=<sp/>m_prescaleSets.begin();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>psinfo_it!=m_prescaleSets.end();<sp/>++psinfo_it)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>psinfo_it-&gt;lb<sp/>&gt;=<sp/>add_psinfo.lb<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Lock<sp/>mutex<sp/>while<sp/>we<sp/>are<sp/>inserting<sp/>a<sp/>new<sp/>prescale<sp/>set.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Everybody<sp/>accessing<sp/>m_prescaleSetCollection<sp/>needs<sp/>to<sp/>obtain<sp/>this<sp/>mutex</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>before<sp/>accessing<sp/>this<sp/>list.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(m_prescaleSetCollection_mutex);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(psinfo_it<sp/>!=<sp/>m_prescaleSets.end())<sp/>&amp;&amp;<sp/>(psinfo_it-&gt;lb<sp/>==<sp/>add_psinfo.lb)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>psinfo_it-&gt;pss;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psinfo_it-&gt;pss<sp/>=<sp/>add_psinfo.pss;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(psinfo_it-&gt;pss<sp/>!=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psinfo_it-&gt;psk<sp/>=<sp/>add_psinfo.psk;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prescaleSets.insert(<sp/>psinfo_it,<sp/>add_psinfo<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adding<sp/>a<sp/>prescale<sp/>set<sp/>should<sp/>NOT<sp/>make<sp/>it<sp/>the<sp/>current<sp/>one!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>m_currentLB<sp/>=<sp/>add_psinfo.lb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>m_currentPSS<sp/>=<sp/>add_psinfo.pss;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_currentPSS;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">vector&lt;pair&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">TrigConf::HLTPrescaleSetCollection::prescale_keys()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>vector&lt;pair&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;<sp/>&gt;<sp/>lbpsk;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cont&amp;<sp/>psinfo<sp/>:<sp/>m_prescaleSets)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lbpsk.push_back(std::make_pair(psinfo.lb,psinfo.psk));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lbpsk;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">TrigConf::HLTPrescaleSetCollection::set_prescale_key_to_load(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hltpsk)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>vector&lt;pair&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;<sp/>&gt;<sp/>lbnpsk;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>lbnpsk.push_back(make_pair(0,hltpsk));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>set_prescale_keys_to_load(lbnpsk);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">TrigConf::HLTPrescaleSetCollection::set_prescale_keys_to_load(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;pair&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;<sp/>&gt;&amp;<sp/>lbnpsk)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(m_prescaleSets.size()&gt;0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::runtime_error(&quot;ERROR:<sp/>HLTPrescaleSetCollection:<sp/>set_prescale_keys_to_load<sp/>called<sp/>on<sp/>a<sp/>non-empty<sp/>collection.<sp/>clear()<sp/>needs<sp/>to<sp/>be<sp/>called<sp/>before&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>lbpsk<sp/>:<sp/>lbnpsk)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>contains(lbpsk.first,<sp/>lbpsk.second))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addPrescaleSet(<sp/>cont(lbpsk.first,<sp/>lbpsk.second,<sp/>0)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>register<sp/>empty<sp/>prescale<sp/>sets<sp/>with<sp/>lb<sp/>and<sp/>psk,<sp/>so<sp/>they<sp/>can<sp/>later<sp/>be<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">HLTPrescaleSetCollection::setCurrentToFirstIfUnset()<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentPSS<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/><sp/>&amp;&amp;<sp/><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a8bb1c49bc1d952f00145487ce2d5c707" kindref="member" tooltip="number of prescale sets">size</ref>()&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_currentLB<sp/>=<sp/>m_prescaleSets.front().lb;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_currentPSS<sp/>=<sp/>m_prescaleSets.front().pss;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1abdeea5117ba29e11efe026c2c48a9459" kindref="member" tooltip="Check if prescale set with this lumiblock and prescale keys exists.">TrigConf::HLTPrescaleSetCollection::contains</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lumiblock,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psk)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(m_prescaleSetCollection_mutex);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cont&amp;<sp/>psinfo:<sp/>m_prescaleSets)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>psinfo.lb==lumiblock<sp/>&amp;&amp;<sp/>psinfo.psk==psk<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1ac357f598a20a81b1b19e546b6abefca3" kindref="member" tooltip="Print the prescale set.">TrigConf::HLTPrescaleSetCollection::print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detail)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(m_prescaleSetCollection_mutex);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=1)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_loaded(0);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cont&amp;<sp/>psinfo<sp/>:<sp/>m_prescaleSets)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(psinfo.pss!=0)<sp/>count_loaded++;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HLTPrescaleSetCollection<sp/>has<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prescale<sp/>set(s)<sp/>defined,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>count_loaded<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>loaded.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size()&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LB<sp/><sp/><sp/><sp/><sp/><sp/>PSK<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loaded<sp/><sp/><sp/><sp/><sp/>Name&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cont&amp;<sp/>psinfo<sp/>:<sp/>m_prescaleSets)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/>setw(9)<sp/>&lt;&lt;<sp/>right<sp/>&lt;&lt;<sp/>psinfo.lb<sp/>&lt;&lt;<sp/>setw(9)<sp/>&lt;&lt;<sp/>right<sp/>&lt;&lt;<sp/>psinfo.psk<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(psinfo.pss!=0?</highlight><highlight class="stringliteral">&quot;yes&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;<sp/>no&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(psinfo.pss!=0?psinfo.pss-&gt;name():</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=2)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cont&amp;<sp/>psinfo<sp/>:<sp/>m_prescaleSets)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psinfo.pss-&gt;print(indent+</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>detail);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">TrigConf::operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection" kindref="compound" tooltip="HLT chain configuration information.">TrigConf::HLTPrescaleSetCollection</ref><sp/>&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>boost::recursive_mutex::scoped_lock<sp/>lock(c.m_prescaleSetCollection_mutex);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HLTPrescaleSetCollection<sp/>has<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c.<ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a8bb1c49bc1d952f00145487ce2d5c707" kindref="member" tooltip="number of prescale sets">size</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prescale<sp/>sets&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c.<ref refid="d5/d95/classTrigConf_1_1HLTPrescaleSetCollection_1a8bb1c49bc1d952f00145487ce2d5c707" kindref="member" tooltip="number of prescale sets">size</ref>()&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LB<sp/><sp/><sp/>Prescale<sp/>set<sp/>key<sp/><sp/><sp/>Loaded<sp/><sp/><sp/>Prescale<sp/>set&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d8e/structTrigConf_1_1HLTPrescaleSetCollection_1_1cont" kindref="compound">TrigConf::HLTPrescaleSetCollection::cont</ref>&amp;<sp/>psinfo<sp/>:<sp/>c.m_prescaleSets)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/>setw(9)<sp/>&lt;&lt;<sp/>psinfo.lb<sp/>&lt;&lt;<sp/>setw(19)<sp/>&lt;&lt;<sp/>psinfo.psk<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(psinfo.pss!=0?</highlight><highlight class="stringliteral">&quot;yes&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;<sp/>no&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(psinfo.pss!=0?psinfo.pss-&gt;name():</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">HLTPrescaleSetCollection::__str__()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>stringstream<sp/>s;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.str();</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTPrescaleSetCollection.cxx"/>
  </compounddef>
</doxygen>
