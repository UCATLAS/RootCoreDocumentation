<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/d4c/xAODFileReadTest_8cxx" kind="file">
    <compoundname>xAODFileReadTest.cxx</compoundname>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TError.h</includes>
    <includes local="no">TClass.h</includes>
    <includes refid="db/db1/Init_8h" local="yes">xAODRootAccess/Init.h</includes>
    <includes refid="de/d44/TEvent_8h" local="yes">xAODRootAccess/TEvent.h</includes>
    <includes refid="d6/d17/xAODRootAccess_2xAODRootAccess_2tools_2Message_8h" local="yes">xAODRootAccess/tools/Message.h</includes>
    <incdepgraph>
      <node id="412426">
        <label>AthContainersInterfaces/IAuxStoreHolder.h</label>
        <link refid="d7/dab/IAuxStoreHolder_8h_source"/>
      </node>
      <node id="412428">
        <label>xAODRootAccess/tools/Message.h</label>
        <link refid="d6/d17/xAODRootAccess_2xAODRootAccess_2tools_2Message_8h_source"/>
      </node>
      <node id="412414">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="412421">
        <label>stdint.h</label>
      </node>
      <node id="412427">
        <label>xAODRootAccessInterfaces/TVirtualEvent.h</label>
        <link refid="d7/d85/TVirtualEvent_8h_source"/>
        <childnode refid="412421" relation="include">
        </childnode>
      </node>
      <node id="412415">
        <label>xAODRootAccess/TEvent.h</label>
        <link refid="de/d44/TEvent_8h_source"/>
        <childnode refid="412416" relation="include">
        </childnode>
        <childnode refid="412417" relation="include">
        </childnode>
        <childnode refid="412408" relation="include">
        </childnode>
        <childnode refid="412407" relation="include">
        </childnode>
        <childnode refid="412406" relation="include">
        </childnode>
        <childnode refid="412418" relation="include">
        </childnode>
        <childnode refid="412419" relation="include">
        </childnode>
        <childnode refid="412426" relation="include">
        </childnode>
        <childnode refid="412427" relation="include">
        </childnode>
        <childnode refid="412414" relation="include">
        </childnode>
      </node>
      <node id="412408">
        <label>string</label>
      </node>
      <node id="412412">
        <label>xAODRootAccess/Init.h</label>
        <link refid="db/db1/Init_8h_source"/>
        <childnode refid="412413" relation="include">
        </childnode>
        <childnode refid="412414" relation="include">
        </childnode>
      </node>
      <node id="412416">
        <label>map</label>
      </node>
      <node id="412404">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/util/xAODFileReadTest.cxx</label>
        <link refid="xAODFileReadTest.cxx"/>
        <childnode refid="412405" relation="include">
        </childnode>
        <childnode refid="412406" relation="include">
        </childnode>
        <childnode refid="412407" relation="include">
        </childnode>
        <childnode refid="412408" relation="include">
        </childnode>
        <childnode refid="412409" relation="include">
        </childnode>
        <childnode refid="412410" relation="include">
        </childnode>
        <childnode refid="412411" relation="include">
        </childnode>
        <childnode refid="412412" relation="include">
        </childnode>
        <childnode refid="412415" relation="include">
        </childnode>
        <childnode refid="412428" relation="include">
        </childnode>
      </node>
      <node id="412423">
        <label>xAODEventFormat/EventFormatElement.h</label>
        <link refid="dc/dc1/EventFormatElement_8h_source"/>
        <childnode refid="412421" relation="include">
        </childnode>
        <childnode refid="412408" relation="include">
        </childnode>
        <childnode refid="412422" relation="include">
        </childnode>
      </node>
      <node id="412410">
        <label>TError.h</label>
      </node>
      <node id="412420">
        <label>xAODEventFormat/versions/EventFormat_v1.h</label>
        <link refid="d2/d41/EventFormat__v1_8h_source"/>
        <childnode refid="412421" relation="include">
        </childnode>
        <childnode refid="412407" relation="include">
        </childnode>
        <childnode refid="412408" relation="include">
        </childnode>
        <childnode refid="412416" relation="include">
        </childnode>
        <childnode refid="412422" relation="include">
        </childnode>
        <childnode refid="412423" relation="include">
        </childnode>
      </node>
      <node id="412425">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="412407">
        <label>vector</label>
      </node>
      <node id="412409">
        <label>TFile.h</label>
      </node>
      <node id="412418">
        <label>Rtypes.h</label>
      </node>
      <node id="412419">
        <label>xAODEventFormat/EventFormat.h</label>
        <link refid="d8/d71/EventFormat_8h_source"/>
        <childnode refid="412420" relation="include">
        </childnode>
        <childnode refid="412424" relation="include">
        </childnode>
      </node>
      <node id="412422">
        <label>iosfwd</label>
      </node>
      <node id="412413">
        <label>cstddef</label>
      </node>
      <node id="412411">
        <label>TClass.h</label>
      </node>
      <node id="412417">
        <label>set</label>
      </node>
      <node id="412424">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="412425" relation="include">
        </childnode>
      </node>
      <node id="412405">
        <label>cstring</label>
      </node>
      <node id="412406">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="d9/d22/classTEventClass" prot="public">TEventClass</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="db/d4c/xAODFileReadTest_8cxx_1ae109d580ef1fb3e24850f90e6b0a6063" prot="public" static="no">
        <name>R_CHECK</name>
        <param><defname>EXP</defname></param>
        <initializer>do {                                                                    \
      const auto result = EXP;                                             \
      if( ! result.isSuccess() ) {                                         \
         Error( APP_NAME, XAOD_MESSAGE( &quot;Failed to execute: %s&quot; ), #EXP ); \
         return 1;                                                         \
      }                                                                    \
   } while( 0 )</initializer>
        <briefdescription>
<para>Helper macro. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/util/xAODFileReadTest.cxx" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/util/xAODFileReadTest.cxx" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="db/d4c/xAODFileReadTest_8cxx_1ae91a24067772aea9da952f1fd740eed3" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* APP_NAME</definition>
        <argsstring></argsstring>
        <name>APP_NAME</name>
        <initializer> &quot;xAODFileReadTest&quot;</initializer>
        <briefdescription>
<para>The name of the application. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/util/xAODFileReadTest.cxx" line="20" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/util/xAODFileReadTest.cxx" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="db/d4c/xAODFileReadTest_8cxx_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/util/xAODFileReadTest.cxx" line="90" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/util/xAODFileReadTest.cxx" bodystart="90" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>xAODFileReadTest.cxx<sp/>778334<sp/>2016-10-13<sp/>17:31:15Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TError.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TClass.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/Init.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/TEvent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/Message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>APP_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;xAODFileReadTest&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor">#define<sp/>R_CHECK(<sp/>EXP<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>result<sp/>=<sp/>EXP;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>!<sp/>result.isSuccess()<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/>APP_NAME,<sp/>XAOD_MESSAGE(<sp/>&quot;Failed<sp/>to<sp/>execute:<sp/>%s&quot;<sp/>),<sp/>#EXP<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/>while(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="33" refid="d9/d22/classTEventClass" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d22/classTEventClass" kindref="compound" tooltip="Class used for the test.">TEventClass</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>xAOD::<ref refid="de/d95/classxAOD_1_1TEvent_1ac03a76128877ca2a1868459e7aefb3ad" kindref="member" tooltip="Default constructor.">TEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><ref refid="d9/d22/classTEventClass_1a674477d399017d5cc4d75bc45e08e9e8" kindref="member" tooltip="Constructor.">TEventClass</ref>(<sp/><ref refid="de/d95/classxAOD_1_1TEvent_1a02e3b91306a978cdbe478a5bdf03b348" kindref="member" tooltip="Auxiliary store &amp;quot;mode&amp;quot;.">xAOD::TEvent::EAuxMode</ref><sp/>mode<sp/>)<sp/>:<sp/><ref refid="de/d95/classxAOD_1_1TEvent_1ac03a76128877ca2a1868459e7aefb3ad" kindref="member" tooltip="Default constructor.">xAOD::TEvent</ref>(<sp/>mode<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">xAOD::TReturnCode</ref><sp/>loadInputObjects()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>event<sp/>format<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d1f/classxAOD_1_1EventFormat__v1" kindref="compound">xAOD::EventFormat</ref>*<sp/>ef<sp/>=<sp/>this-&gt;inputEventFormat();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>ef<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aa65103d5e226744ccf3bf1f920cac2075" kindref="member" tooltip="The function call failed.">xAOD::TReturnCode::kFailure</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>objects<sp/>of<sp/>the<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ef_itr<sp/>:<sp/>*ef<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d08/classxAOD_1_1EventFormatElement" kindref="compound">xAOD::EventFormatElement</ref>&amp;<sp/>efe<sp/>=<sp/>ef_itr.second;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>auxiliary<sp/>objects:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>efe.<ref refid="d3/d08/classxAOD_1_1EventFormatElement_1a950103d403b6e48ebd1b710715aaddc3" kindref="member" tooltip="Get the branch/key name.">branchName</ref>().rfind(<sp/></highlight><highlight class="stringliteral">&quot;Aux.&quot;</highlight><highlight class="normal"><sp/>)<sp/>==</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>efe.<ref refid="d3/d08/classxAOD_1_1EventFormatElement_1a950103d403b6e48ebd1b710715aaddc3" kindref="member" tooltip="Get the branch/key name.">branchName</ref>().size()<sp/>-<sp/>4<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>dynamic<sp/>variables:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>efe.<ref refid="d3/d08/classxAOD_1_1EventFormatElement_1a56f5119c315030d25d72baf90f3be717" kindref="member" tooltip="Get the name of the parent auxiliary object.">parentName</ref>()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>auxiliary<sp/>stores<sp/>with<sp/>non-standard<sp/>names:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::TClass*<sp/>cl<sp/>=<sp/>::TClass::GetClass(<sp/>efe.<ref refid="d3/d08/classxAOD_1_1EventFormatElement_1a93aa880cb22d13a7acc5bb721a017bf8" kindref="member" tooltip="Get the class name of this branch/key.">className</ref>().c_str(),<sp/>kTRUE,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>cl<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cl-&gt;InheritsFrom(<sp/></highlight><highlight class="stringliteral">&quot;SG::IConstAuxStore&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>type<sp/>of<sp/>the<sp/>branch:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/>ti<sp/>=<sp/>cl-&gt;GetTypeInfo();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>ti<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(<sp/></highlight><highlight class="stringliteral">&quot;TEventClass::loadInputObjects&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>std::type_info<sp/>object<sp/>for<sp/>type<sp/>%s<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(key=%s)&quot;</highlight><highlight class="normal">,<sp/>cl-&gt;GetName(),<sp/>efe.<ref refid="d3/d08/classxAOD_1_1EventFormatElement_1a950103d403b6e48ebd1b710715aaddc3" kindref="member" tooltip="Get the branch/key name.">branchName</ref>().c_str()<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>branch<sp/>exists<sp/>in<sp/>the<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>this-&gt;contains(<sp/>efe.<ref refid="d3/d08/classxAOD_1_1EventFormatElement_1a950103d403b6e48ebd1b710715aaddc3" kindref="member" tooltip="Get the branch/key name.">branchName</ref>(),<sp/>*ti<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>load<sp/>the<sp/>object/container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>this-&gt;getInputObject(<sp/>efe.<ref refid="d3/d08/classxAOD_1_1EventFormatElement_1a950103d403b6e48ebd1b710715aaddc3" kindref="member" tooltip="Get the branch/key name.">branchName</ref>(),<sp/>*ti<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="stringliteral">&quot;TEventClass::loadInputObjects&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Couldnt<sp/>load<sp/>object:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>efe.<ref refid="d3/d08/classxAOD_1_1EventFormatElement_1a950103d403b6e48ebd1b710715aaddc3" kindref="member" tooltip="Get the branch/key name.">branchName</ref>().c_str()<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aa65103d5e226744ccf3bf1f920cac2075" kindref="member" tooltip="The function call failed.">xAOD::TReturnCode::kFailure</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>gracefully:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aadf30f5028ade4d2f7dce8ab294d8400f" kindref="member">xAOD::TReturnCode::kSuccess</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>TEventClass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>environment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>R_CHECK(<sp/><ref refid="dd/d44/namespacexAOD_1a2b6ff6013c964ff2254bd3540cd1738d" kindref="member">xAOD::Init</ref>()<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provide<sp/>usage<sp/>instructions<sp/>if<sp/>not<sp/>enough<sp/>options<sp/>were<sp/>given:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>argc<sp/>&lt;<sp/>2<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>!<sp/>strcmp(<sp/>argv[<sp/>1<sp/>],<sp/></highlight><highlight class="stringliteral">&quot;-h&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>!<sp/>strcmp(<sp/>argv[<sp/>1<sp/>],<sp/></highlight><highlight class="stringliteral">&quot;--help&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>%s<sp/>[options]<sp/>&lt;file1&gt;<sp/>[file2]...&quot;</highlight><highlight class="normal">,<sp/>APP_NAME<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Options:&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>-m<sp/>&lt;access<sp/>mode&gt;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>0:<sp/>Branch<sp/>access&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>1:<sp/>Class<sp/>access<sp/>(default)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>2:<sp/>Athena<sp/>access&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decode<sp/>the<sp/>command<sp/>line<sp/>options:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>fileNames;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><ref refid="de/d95/classxAOD_1_1TEvent_1a02e3b91306a978cdbe478a5bdf03b348" kindref="member" tooltip="Auxiliary store &amp;quot;mode&amp;quot;.">xAOD::TEvent::EAuxMode</ref><sp/>auxMode<sp/>=<sp/><ref refid="de/d95/classxAOD_1_1TEvent_1a02e3b91306a978cdbe478a5bdf03b348aeafc802359754d9d902f97791f20d9ec" kindref="member" tooltip="Access auxiliary data using the aux containers.">xAOD::TEvent::kClassAccess</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>strcmp(<sp/>argv[<sp/>i<sp/>],<sp/></highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>+<sp/>1<sp/>&gt;=<sp/>argc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/>APP_NAME,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>access<sp/>mode<sp/>specified<sp/>after<sp/>-m&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>::strtol(<sp/>argv[<sp/>i<sp/>+<sp/>1<sp/>],<sp/>0,<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxMode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="de/d95/classxAOD_1_1TEvent_1a02e3b91306a978cdbe478a5bdf03b348" kindref="member" tooltip="Auxiliary store &amp;quot;mode&amp;quot;.">xAOD::TEvent::EAuxMode</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>mode<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNames.push_back(<sp/>argv[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>&quot;TEvent&quot;<sp/>object<sp/>used<sp/>for<sp/>the<sp/>test:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><ref refid="d9/d22/classTEventClass" kindref="compound" tooltip="Class used for the test.">TEventClass</ref><sp/>event(<sp/>auxMode<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>specified<sp/>input<sp/>files:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName<sp/>:<sp/>fileNames<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;<sp/>TFile<sp/>&gt;<sp/>ifile(<sp/>TFile::Open(<sp/>fileName.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>!<sp/>ifile.get()<sp/>)<sp/>||<sp/>ifile-&gt;IsZombie()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/>APP_NAME,<sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fileName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>it<sp/>to<sp/>TEvent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R_CHECK(<sp/>event.readFrom(<sp/>ifile.get()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>file&apos;s<sp/>events:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Long64_t<sp/>entries<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.getEntries();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>Long64_t<sp/>entry<sp/>=<sp/>0;<sp/>entry<sp/>&lt;<sp/>entries;<sp/>++entry<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>event.getEntry(<sp/>entry<sp/>)<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/>APP_NAME,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>entry<sp/>%i<sp/>from<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>entry<sp/>),<sp/>fileName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CHECK(<sp/>event.loadInputObjects()<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>user<sp/>where<sp/>we<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>(<sp/>entry<sp/>%<sp/>1000<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;===&gt;&gt;&gt;<sp/>Loaded<sp/>entry<sp/>%i<sp/>/<sp/>%i<sp/>&lt;&lt;&lt;===&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>entry<sp/>),<sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>entries<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>gracefully:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/util/xAODFileReadTest.cxx"/>
  </compounddef>
</doxygen>
