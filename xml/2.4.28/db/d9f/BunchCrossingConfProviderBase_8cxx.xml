<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/d9f/BunchCrossingConfProviderBase_8cxx" kind="file">
    <compoundname>BunchCrossingConfProviderBase.cxx</compoundname>
    <includes refid="dc/d79/BunchCrossingConfProviderBase_8h" local="yes">BunchCrossingConfProviderBase.h</includes>
    <includes refid="dc/ddd/BunchCrossing_8h" local="yes">TrigBunchCrossingTool/BunchCrossing.h</includes>
    <incdepgraph>
      <node id="308449">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="308450" relation="include">
        </childnode>
        <childnode refid="308451" relation="include">
        </childnode>
        <childnode refid="308452" relation="include">
        </childnode>
        <childnode refid="308453" relation="include">
        </childnode>
      </node>
      <node id="308453">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="308459">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="308450" relation="include">
        </childnode>
        <childnode refid="308451" relation="include">
        </childnode>
        <childnode refid="308460" relation="include">
        </childnode>
      </node>
      <node id="308454">
        <label>TrigAnalysisInterfaces/IBunchCrossingTool.h</label>
        <link refid="db/d9f/IBunchCrossingTool_8h_source"/>
        <childnode refid="308448" relation="include">
        </childnode>
        <childnode refid="308449" relation="include">
        </childnode>
      </node>
      <node id="308451">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="308450">
        <label>string</label>
      </node>
      <node id="308446">
        <label>BunchCrossingConfProviderBase.h</label>
        <link refid="dc/d79/BunchCrossingConfProviderBase_8h_source"/>
        <childnode refid="308447" relation="include">
        </childnode>
        <childnode refid="308454" relation="include">
        </childnode>
      </node>
      <node id="308460">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="308455">
        <label>TrigBunchCrossingTool/BunchCrossing.h</label>
        <link refid="dc/ddd/BunchCrossing_8h_source"/>
        <childnode refid="308456" relation="include">
        </childnode>
        <childnode refid="308457" relation="include">
        </childnode>
      </node>
      <node id="308448">
        <label>vector</label>
      </node>
      <node id="308458">
        <label>sstream</label>
      </node>
      <node id="308447">
        <label>TrigAnalysisInterfaces/IBunchCrossingConfProvider.h</label>
        <link refid="d7/d6d/IBunchCrossingConfProvider_8h_source"/>
        <childnode refid="308448" relation="include">
        </childnode>
        <childnode refid="308449" relation="include">
        </childnode>
      </node>
      <node id="308456">
        <label>iosfwd</label>
      </node>
      <node id="308461">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="308457">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="308450" relation="include">
        </childnode>
        <childnode refid="308458" relation="include">
        </childnode>
        <childnode refid="308451" relation="include">
        </childnode>
        <childnode refid="308459" relation="include">
        </childnode>
        <childnode refid="308449" relation="include">
        </childnode>
        <childnode refid="308461" relation="include">
        </childnode>
      </node>
      <node id="308452">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="308445">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx</label>
        <link refid="BunchCrossingConfProviderBase.cxx"/>
        <childnode refid="308446" relation="include">
        </childnode>
        <childnode refid="308455" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/d87/namespaceTrig">Trig</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>BunchCrossingConfProviderBase.cxx<sp/>511865<sp/>2012-07-31<sp/>08:44:12Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BunchCrossingConfProviderBase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigBunchCrossingTool/BunchCrossing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Trig<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>static<sp/>variable(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1af55d06296531100f4d78dfd5aee04e81" kindref="member" tooltip="Type name for the incident that such tools should emit.">BunchCrossingConfProviderBase::BUNCH_CONFIG_INCIDENT_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BunchConfig&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a6689dc298a887310e6a00df1fc14f8a2" kindref="member" tooltip="Function providing the BCIDs of the configured colliding bunches.">BunchCrossingConfProviderBase::configuredBCIDs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>bunches;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d6/db1/classTrig_1_1BunchCrossing_1a9008ae1417ffbe698a792bd4fc19caa7" kindref="member" tooltip="The maximum number of bunches that can be in the LHC.">BunchCrossing::MAX_BCID</ref>;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a7c2179ab680ba9b012c0dbd4b751b1e5" kindref="member" tooltip="The simplest query: Is the bunch crossing filled or not?">isFilled</ref>(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bunches.push_back(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bunches;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1ad54897be82f5d5133553ee08204d1ba5" kindref="member" tooltip="Function providing the intensities of the configured colliding bunches.">BunchCrossingConfProviderBase::configuredIntensitiesBeam1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>intensities;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BunchCrossing::MAX_BCID;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a7c2179ab680ba9b012c0dbd4b751b1e5" kindref="member" tooltip="The simplest query: Is the bunch crossing filled or not?">isFilled</ref>(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensities.push_back(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a760e3fa9d24099b4dc947a6275cdd510" kindref="member" tooltip="Function returning the &amp;quot;intensity&amp;quot; of a given bunch(-crossing).">bcIntensity</ref>(<sp/>i,<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a0a2435c329f92970602ae6a6c2f8165a" kindref="member" tooltip="The returned intensity should be for &amp;quot;beam 1&amp;quot;.">Beam1</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intensities;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1aadf2c635e6c68f7cdf722b528c51c6e3" kindref="member" tooltip="Function providing the intensities of the configured colliding bunches.">BunchCrossingConfProviderBase::configuredIntensitiesBeam2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>intensities;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BunchCrossing::MAX_BCID;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a7c2179ab680ba9b012c0dbd4b751b1e5" kindref="member" tooltip="The simplest query: Is the bunch crossing filled or not?">isFilled</ref>(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensities.push_back(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a760e3fa9d24099b4dc947a6275cdd510" kindref="member" tooltip="Function returning the &amp;quot;intensity&amp;quot; of a given bunch(-crossing).">bcIntensity</ref>(<sp/>i,<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a84657ab866c535aaaa27f007dd81b703" kindref="member" tooltip="The returned intensity should be for &amp;quot;beam 2&amp;quot;.">Beam2</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intensities;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a9717638b1e35b15c97fe603b9cd7841e" kindref="member" tooltip="Function providing the BCIDs of the configured unpaired bunches.">BunchCrossingConfProviderBase::configuredUnpairedBCIDsBeam1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>bunches;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BunchCrossing::MAX_BCID;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1aa7d0f434e5466858f541e72c58586bb6" kindref="member" tooltip="Function deciding if a given bunch crossing has an unpaired bunch.">isUnpaired</ref>(<sp/>i<sp/>)<sp/>&amp;&amp;<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ab435dc47478e51c53c9ed4e769bc50d6" kindref="member" tooltip="Function deciding if there was a bunch from &amp;quot;beam 1&amp;quot; in this bunch crossing...">isBeam1</ref>(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bunches.push_back(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bunches;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a5e78aba398533aad48f19e76012c4e80" kindref="member" tooltip="Function providing the BCIDs of the configured unpaired bunches.">BunchCrossingConfProviderBase::configuredUnpairedBCIDsBeam2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>bunches;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BunchCrossing::MAX_BCID;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1aa7d0f434e5466858f541e72c58586bb6" kindref="member" tooltip="Function deciding if a given bunch crossing has an unpaired bunch.">isUnpaired</ref>(<sp/>i<sp/>)<sp/>&amp;&amp;<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a77511f9866c93a734b9baf59cebba816" kindref="member" tooltip="Function deciding if there was a bunch from &amp;quot;beam 2&amp;quot; in this bunch crossing...">isBeam2</ref>(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bunches.push_back(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bunches;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a8aef723183a84775cd610e8573c438cd" kindref="member" tooltip="Function providing the intensities of the configured unpaired bunches.">BunchCrossingConfProviderBase::configuredUnpairedIntensitiesBeam1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>intensities;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BunchCrossing::MAX_BCID;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1aa7d0f434e5466858f541e72c58586bb6" kindref="member" tooltip="Function deciding if a given bunch crossing has an unpaired bunch.">isUnpaired</ref>(<sp/>i<sp/>)<sp/>&amp;&amp;<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ab435dc47478e51c53c9ed4e769bc50d6" kindref="member" tooltip="Function deciding if there was a bunch from &amp;quot;beam 1&amp;quot; in this bunch crossing...">isBeam1</ref>(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensities.push_back(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a760e3fa9d24099b4dc947a6275cdd510" kindref="member" tooltip="Function returning the &amp;quot;intensity&amp;quot; of a given bunch(-crossing).">bcIntensity</ref>(<sp/>i,<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a0a2435c329f92970602ae6a6c2f8165a" kindref="member" tooltip="The returned intensity should be for &amp;quot;beam 1&amp;quot;.">Beam1</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intensities;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a828136eed8341a683555a76e90e54c17" kindref="member" tooltip="Function providing the intensities of the configured unpaired bunches.">BunchCrossingConfProviderBase::configuredUnpairedIntensitiesBeam2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>intensities;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BunchCrossing::MAX_BCID;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1aa7d0f434e5466858f541e72c58586bb6" kindref="member" tooltip="Function deciding if a given bunch crossing has an unpaired bunch.">isUnpaired</ref>(<sp/>i<sp/>)<sp/>&amp;&amp;<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a77511f9866c93a734b9baf59cebba816" kindref="member" tooltip="Function deciding if there was a bunch from &amp;quot;beam 2&amp;quot; in this bunch crossing...">isBeam2</ref>(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensities.push_back(<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a760e3fa9d24099b4dc947a6275cdd510" kindref="member" tooltip="Function returning the &amp;quot;intensity&amp;quot; of a given bunch(-crossing).">bcIntensity</ref>(<sp/>i,<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a84657ab866c535aaaa27f007dd81b703" kindref="member" tooltip="The returned intensity should be for &amp;quot;beam 2&amp;quot;.">Beam2</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intensities;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Trig</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx"/>
  </compounddef>
</doxygen>
