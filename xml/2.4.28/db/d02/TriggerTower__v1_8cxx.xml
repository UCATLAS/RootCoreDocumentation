<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/d02/TriggerTower__v1_8cxx" kind="file">
    <compoundname>TriggerTower_v1.cxx</compoundname>
    <includes refid="d1/d0c/AuxStoreAccessorMacros_8h" local="yes">xAODCore/AuxStoreAccessorMacros.h</includes>
    <includes refid="db/d92/TriggerTower__v1_8h" local="yes">xAODTrigL1Calo/versions/TriggerTower_v1.h</includes>
    <incdepgraph>
      <node id="459162">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="459164">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="459123" relation="include">
        </childnode>
        <childnode refid="459125" relation="include">
        </childnode>
        <childnode refid="459131" relation="include">
        </childnode>
        <childnode refid="459132" relation="include">
        </childnode>
      </node>
      <node id="459165">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="459134">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="459119" relation="include">
        </childnode>
        <childnode refid="459121" relation="include">
        </childnode>
        <childnode refid="459135" relation="include">
        </childnode>
        <childnode refid="459133" relation="include">
        </childnode>
      </node>
      <node id="459130">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="459132">
        <label>functional</label>
      </node>
      <node id="459129">
        <label>limits</label>
      </node>
      <node id="459108">
        <label>xAODTrigL1Calo/versions/TriggerTower_v1.h</label>
        <link refid="db/d92/TriggerTower__v1_8h_source"/>
        <childnode refid="459109" relation="include">
        </childnode>
        <childnode refid="459117" relation="include">
        </childnode>
      </node>
      <node id="459135">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="459160">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="459126">
        <label>iterator</label>
      </node>
      <node id="459148">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="459111" relation="include">
        </childnode>
        <childnode refid="459149" relation="include">
        </childnode>
      </node>
      <node id="459172">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="459120" relation="include">
        </childnode>
        <childnode refid="459173" relation="include">
        </childnode>
        <childnode refid="459174" relation="include">
        </childnode>
        <childnode refid="459140" relation="include">
        </childnode>
        <childnode refid="459111" relation="include">
        </childnode>
      </node>
      <node id="459144">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="459145" relation="include">
        </childnode>
        <childnode refid="459127" relation="include">
        </childnode>
      </node>
      <node id="459110">
        <label>stdint.h</label>
      </node>
      <node id="459141">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="459121" relation="include">
        </childnode>
        <childnode refid="459140" relation="include">
        </childnode>
      </node>
      <node id="459114">
        <label>RVersion.h</label>
      </node>
      <node id="459122">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="459123" relation="include">
        </childnode>
        <childnode refid="459131" relation="include">
        </childnode>
        <childnode refid="459132" relation="include">
        </childnode>
      </node>
      <node id="459128">
        <label>cmath</label>
      </node>
      <node id="459176">
        <label>cassert</label>
      </node>
      <node id="459174">
        <label>stdexcept</label>
      </node>
      <node id="459163">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="459106">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx</label>
        <link refid="TriggerTower_v1.cxx"/>
        <childnode refid="459107" relation="include">
        </childnode>
        <childnode refid="459108" relation="include">
        </childnode>
      </node>
      <node id="459111">
        <label>string</label>
      </node>
      <node id="459166">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="459120" relation="include">
        </childnode>
        <childnode refid="459119" relation="include">
        </childnode>
        <childnode refid="459148" relation="include">
        </childnode>
        <childnode refid="459144" relation="include">
        </childnode>
        <childnode refid="459136" relation="include">
        </childnode>
        <childnode refid="459167" relation="include">
        </childnode>
        <childnode refid="459168" relation="include">
        </childnode>
        <childnode refid="459151" relation="include">
        </childnode>
        <childnode refid="459145" relation="include">
        </childnode>
        <childnode refid="459125" relation="include">
        </childnode>
        <childnode refid="459127" relation="include">
        </childnode>
        <childnode refid="459169" relation="include">
        </childnode>
        <childnode refid="459170" relation="include">
        </childnode>
        <childnode refid="459158" relation="include">
        </childnode>
        <childnode refid="459171" relation="include">
        </childnode>
      </node>
      <node id="459139">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="459121" relation="include">
        </childnode>
        <childnode refid="459140" relation="include">
        </childnode>
      </node>
      <node id="459169">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="459115">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="459155">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="459170">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="459152">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="459118">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="459113">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="459114" relation="include">
        </childnode>
        <childnode refid="459115" relation="include">
        </childnode>
      </node>
      <node id="459168">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="459161">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="459147">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="459148" relation="include">
        </childnode>
        <childnode refid="459129" relation="include">
        </childnode>
        <childnode refid="459110" relation="include">
        </childnode>
        <childnode refid="459150" relation="include">
        </childnode>
      </node>
      <node id="459120">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="459121" relation="include">
        </childnode>
        <childnode refid="459122" relation="include">
        </childnode>
      </node>
      <node id="459112">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="459110" relation="include">
        </childnode>
      </node>
      <node id="459123">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="459124" relation="include">
        </childnode>
        <childnode refid="459125" relation="include">
        </childnode>
        <childnode refid="459126" relation="include">
        </childnode>
        <childnode refid="459121" relation="include">
        </childnode>
        <childnode refid="459127" relation="include">
        </childnode>
        <childnode refid="459128" relation="include">
        </childnode>
        <childnode refid="459129" relation="include">
        </childnode>
        <childnode refid="459111" relation="include">
        </childnode>
        <childnode refid="459130" relation="include">
        </childnode>
      </node>
      <node id="459140">
        <label>typeinfo</label>
      </node>
      <node id="459175">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="459169" relation="include">
        </childnode>
        <childnode refid="459176" relation="include">
        </childnode>
      </node>
      <node id="459150">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="459116">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="459167">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="459137">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="459110" relation="include">
        </childnode>
      </node>
      <node id="459149">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="459154">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="459133">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="459138">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="459120" relation="include">
        </childnode>
        <childnode refid="459139" relation="include">
        </childnode>
        <childnode refid="459141" relation="include">
        </childnode>
        <childnode refid="459142" relation="include">
        </childnode>
        <childnode refid="459156" relation="include">
        </childnode>
        <childnode refid="459158" relation="include">
        </childnode>
        <childnode refid="459121" relation="include">
        </childnode>
        <childnode refid="459140" relation="include">
        </childnode>
        <childnode refid="459145" relation="include">
        </childnode>
        <childnode refid="459164" relation="include">
        </childnode>
        <childnode refid="459165" relation="include">
        </childnode>
      </node>
      <node id="459145">
        <label>vector</label>
      </node>
      <node id="459125">
        <label>utility</label>
      </node>
      <node id="459151">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="459159">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="459143">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="459158">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="459159" relation="include">
        </childnode>
        <childnode refid="459160" relation="include">
        </childnode>
        <childnode refid="459161" relation="include">
        </childnode>
        <childnode refid="459162" relation="include">
        </childnode>
        <childnode refid="459163" relation="include">
        </childnode>
      </node>
      <node id="459127">
        <label>cstdlib</label>
      </node>
      <node id="459173">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="459119">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="459120" relation="include">
        </childnode>
        <childnode refid="459121" relation="include">
        </childnode>
        <childnode refid="459133" relation="include">
        </childnode>
      </node>
      <node id="459121">
        <label>cstddef</label>
      </node>
      <node id="459171">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="459138" relation="include">
        </childnode>
        <childnode refid="459134" relation="include">
        </childnode>
        <childnode refid="459119" relation="include">
        </childnode>
        <childnode refid="459169" relation="include">
        </childnode>
        <childnode refid="459170" relation="include">
        </childnode>
      </node>
      <node id="459107">
        <label>xAODCore/AuxStoreAccessorMacros.h</label>
        <link refid="d1/d0c/AuxStoreAccessorMacros_8h_source"/>
      </node>
      <node id="459142">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="459139" relation="include">
        </childnode>
        <childnode refid="459143" relation="include">
        </childnode>
        <childnode refid="459144" relation="include">
        </childnode>
        <childnode refid="459146" relation="include">
        </childnode>
        <childnode refid="459151" relation="include">
        </childnode>
        <childnode refid="459140" relation="include">
        </childnode>
        <childnode refid="459145" relation="include">
        </childnode>
        <childnode refid="459124" relation="include">
        </childnode>
        <childnode refid="459110" relation="include">
        </childnode>
        <childnode refid="459153" relation="include">
        </childnode>
        <childnode refid="459154" relation="include">
        </childnode>
        <childnode refid="459155" relation="include">
        </childnode>
      </node>
      <node id="459153">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="459157">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="459146">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="459143" relation="include">
        </childnode>
        <childnode refid="459147" relation="include">
        </childnode>
        <childnode refid="459151" relation="include">
        </childnode>
        <childnode refid="459145" relation="include">
        </childnode>
        <childnode refid="459152" relation="include">
        </childnode>
      </node>
      <node id="459124">
        <label>algorithm</label>
      </node>
      <node id="459117">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="459118" relation="include">
        </childnode>
        <childnode refid="459119" relation="include">
        </childnode>
        <childnode refid="459134" relation="include">
        </childnode>
        <childnode refid="459136" relation="include">
        </childnode>
        <childnode refid="459138" relation="include">
        </childnode>
        <childnode refid="459166" relation="include">
        </childnode>
        <childnode refid="459144" relation="include">
        </childnode>
        <childnode refid="459172" relation="include">
        </childnode>
        <childnode refid="459169" relation="include">
        </childnode>
        <childnode refid="459121" relation="include">
        </childnode>
        <childnode refid="459175" relation="include">
        </childnode>
      </node>
      <node id="459136">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="459110" relation="include">
        </childnode>
        <childnode refid="459111" relation="include">
        </childnode>
        <childnode refid="459137" relation="include">
        </childnode>
        <childnode refid="459113" relation="include">
        </childnode>
      </node>
      <node id="459109">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="459110" relation="include">
        </childnode>
        <childnode refid="459111" relation="include">
        </childnode>
        <childnode refid="459112" relation="include">
        </childnode>
        <childnode refid="459113" relation="include">
        </childnode>
        <childnode refid="459116" relation="include">
        </childnode>
      </node>
      <node id="459131">
        <label>memory</label>
      </node>
      <node id="459156">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="459141" relation="include">
        </childnode>
        <childnode refid="459142" relation="include">
        </childnode>
        <childnode refid="459157" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TriggerTower_v1.cxx<sp/>638578<sp/>2015-01-09<sp/>17:00:15Z<sp/>morrisj<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>includes(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxStoreAccessorMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigL1Calo/versions/TriggerTower_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD{<sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>TriggerTower_v1::TriggerTower_v1()<sp/>:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>SG::AuxElement()</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/>std::vector&lt;int&gt;,<sp/>emLUT<sp/>,<sp/>setEmLUT<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>hadLUT<sp/>,<sp/>setHadLUT<sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>emADC<sp/>,<sp/>setEmADC<sp/>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>hadADC<sp/>,<sp/>setHadADC<sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>emBCIDvec<sp/>,<sp/>setEmBCIDvec<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>hadBCIDvec<sp/>,<sp/>setHadBCIDvec<sp/>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>emBCIDext<sp/>,<sp/>setEmBCIDext<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>hadBCIDext<sp/>,<sp/>setHadBCIDext<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>phi,<sp/>setPhi<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>eta,<sp/>setEta<sp/>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>key<sp/>,<sp/>setKey<sp/>)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>emError<sp/>,<sp/>setEmError<sp/>)<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>hadError<sp/>,<sp/>setHadError<sp/>)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>emPeak<sp/>,<sp/>setEmPeak<sp/>)<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>emADCPeak<sp/>,<sp/>setEmADCPeak<sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>hadPeak<sp/>,<sp/>setHadPeak<sp/>)<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>hadADCPeak<sp/>,<sp/>setHadADCPeak<sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TriggerTower_v1::addEM(const<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;&amp;<sp/>digits,<sp/>const<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;&amp;<sp/>et,<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;&amp;<sp/>digits_bcid,<sp/>const<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;&amp;<sp/>bcid,<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peak,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adc_peak)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmADC(<sp/>digits<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmLUT(<sp/>et<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmBCIDvec(<sp/>bcid<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmBCIDext(<sp/>digits_bcid<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmError(<sp/>error<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmPeak(<sp/>peak<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmADCPeak(<sp/>adc_peak<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TriggerTower_v1::addHad(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>digits,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>et,<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>digits_bcid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>bcid,<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peak,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adc_peak)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadADC(<sp/>digits<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadLUT(<sp/>et<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadBCIDvec(<sp/>bcid<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadBCIDext(<sp/>digits_bcid<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadError(<sp/>error<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadPeak(<sp/>peak<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadADCPeak(<sp/>adc_peak<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TriggerTower_v1::setCoord(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>setEta(<sp/>eta<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>setPhi(<sp/>phi<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TriggerTower_v1::emEnergy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emLUT()[<sp/>emPeak()<sp/>];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TriggerTower_v1::hadEnergy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hadLUT()[<sp/>hadPeak()<sp/>];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TriggerTower_v1::emBCID()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="83"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>for<sp/>misfilled<sp/>MC<sp/>TriggerTowers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>emBCIDvec().size()<sp/>!=<sp/>emLUT().size()<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>emBCIDvec().size()<sp/>==<sp/>emADC().size()<sp/>)<sp/>){<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emBCIDvec()[<sp/>emADCPeak()<sp/>];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emBCIDvec()[<sp/>emPeak()<sp/>];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TriggerTower_v1::hadBCID()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>for<sp/>misfilled<sp/>MC<sp/>TriggerTowers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>hadBCIDvec().size()<sp/>!=<sp/>hadLUT().size()<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>hadBCIDvec().size()<sp/>==<sp/>hadADC().size()<sp/>)<sp/>){<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hadBCIDvec()[<sp/>hadADCPeak()<sp/>];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hadBCIDvec()[<sp/>hadPeak()<sp/>];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TriggerTower_v1::isEMSaturated()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="105"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>the<sp/>TriggerTower<sp/>is<sp/>saturated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>it<sp/>has<sp/>an<sp/>energy<sp/>greater<sp/>than<sp/>the<sp/>saturation<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>emEnergy()<sp/>&gt;=<sp/>m_saturation<sp/>){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TriggerTower_v1::isHadSaturated()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>the<sp/>TriggerTower<sp/>is<sp/>saturated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>it<sp/>has<sp/>an<sp/>energy<sp/>greater<sp/>than<sp/>the<sp/>saturation<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hadEnergy()<sp/>&gt;=<sp/>m_saturation<sp/>){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx"/>
  </compounddef>
</doxygen>
