<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/d02/xAthExample_8cxx" kind="file">
    <compoundname>xAthExample.cxx</compoundname>
    <includes refid="d3/d7a/xAthExample_8h" local="yes">CPAnalysisExamples/xAthExample.h</includes>
    <includes refid="da/d33/xExampleEDM_8h" local="yes">CPAnalysisExamples/xExampleEDM.h</includes>
    <includes refid="de/d4b/xExampleUtils_8h" local="yes">CPAnalysisExamples/xExampleUtils.h</includes>
    <includes local="yes">GaudiKernel/ITHistSvc.h</includes>
    <includes local="yes">GaudiKernel/IJobOptionsSvc.h</includes>
    <includes local="yes">GaudiKernel/AlgTool.h</includes>
    <includes local="no">ctime</includes>
    <incdepgraph>
      <node id="104155">
        <label>list</label>
      </node>
      <node id="104164">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="104149" relation="include">
        </childnode>
        <childnode refid="104156" relation="include">
        </childnode>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104145" relation="include">
        </childnode>
        <childnode refid="104085" relation="include">
        </childnode>
      </node>
      <node id="104149">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="104125">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="104171">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="104172" relation="include">
        </childnode>
        <childnode refid="104150" relation="include">
        </childnode>
        <childnode refid="104092" relation="include">
        </childnode>
        <childnode refid="104173" relation="include">
        </childnode>
      </node>
      <node id="104226">
        <label>xAODMuon/versions/MuonContainer_v1.h</label>
        <link refid="da/d0b/MuonContainer__v1_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104186" relation="include">
        </childnode>
      </node>
      <node id="104127">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="104084" relation="include">
        </childnode>
        <childnode refid="104086" relation="include">
        </childnode>
        <childnode refid="104092" relation="include">
        </childnode>
        <childnode refid="104093" relation="include">
        </childnode>
      </node>
      <node id="104324">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104325" relation="include">
        </childnode>
        <childnode refid="104326" relation="include">
        </childnode>
        <childnode refid="104327" relation="include">
        </childnode>
      </node>
      <node id="104071">
        <label>xAODEventInfo/EventInfo.h</label>
        <link refid="d9/d60/EventInfo_8h_source"/>
        <childnode refid="104072" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104128">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="104095">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="104080" relation="include">
        </childnode>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104096" relation="include">
        </childnode>
        <childnode refid="104094" relation="include">
        </childnode>
      </node>
      <node id="104195">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="104196" relation="include">
        </childnode>
        <childnode refid="104197" relation="include">
        </childnode>
        <childnode refid="104198" relation="include">
        </childnode>
      </node>
      <node id="104302">
        <label>xAODMissingET/versions/MissingETAuxContainer_v1.h</label>
        <link refid="d9/d36/MissingETAuxContainer__v1_8h_source"/>
        <childnode refid="104229" relation="include">
        </childnode>
        <childnode refid="104298" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104091">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="104184">
        <label>xAODMuon/MuonContainer.h</label>
        <link refid="dc/dd9/MuonContainer_8h_source"/>
        <childnode refid="104185" relation="include">
        </childnode>
        <childnode refid="104226" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104093">
        <label>functional</label>
      </node>
      <node id="104146">
        <label>boost/version.hpp</label>
      </node>
      <node id="104090">
        <label>limits</label>
      </node>
      <node id="104331">
        <label>JetCalibTools/JetEventInfo.h</label>
        <link refid="de/d2d/JetEventInfo_8h_source"/>
      </node>
      <node id="104096">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="104065">
        <label>CPAnalysisExamples/xAthExample.h</label>
        <link refid="d3/d7a/xAthExample_8h_source"/>
        <childnode refid="104066" relation="include">
        </childnode>
        <childnode refid="104067" relation="include">
        </childnode>
        <childnode refid="104068" relation="include">
        </childnode>
      </node>
      <node id="104321">
        <label>xAODCore/ShallowAuxInfo.h</label>
        <link refid="da/d3b/ShallowAuxInfo_8h_source"/>
        <childnode refid="104320" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104271">
        <label>xAODBTagging/versions/BTaggingContainer_v1.h</label>
        <link refid="d9/d93/BTaggingContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104251" relation="include">
        </childnode>
      </node>
      <node id="104237">
        <label>xAODTruth/TruthVertexFwd.h</label>
        <link refid="d5/d1a/TruthVertexFwd_8h_source"/>
      </node>
      <node id="104123">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="104303">
        <label>xAODTau/TauJetContainer.h</label>
        <link refid="dd/d08/TauJetContainer_8h_source"/>
        <childnode refid="104304" relation="include">
        </childnode>
        <childnode refid="104315" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104327">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="104070">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="104087">
        <label>iterator</label>
      </node>
      <node id="104216">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="104213" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
      </node>
      <node id="104229">
        <label>xAODCore/AuxContainerBase.h</label>
        <link refid="d0/d70/AuxContainerBase_8h_source"/>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104095" relation="include">
        </childnode>
        <childnode refid="104230" relation="include">
        </childnode>
        <childnode refid="104231" relation="include">
        </childnode>
        <childnode refid="104121" relation="include">
        </childnode>
        <childnode refid="104109" relation="include">
        </childnode>
        <childnode refid="104130" relation="include">
        </childnode>
        <childnode refid="104232" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104111">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104112" relation="include">
        </childnode>
      </node>
      <node id="104246">
        <label>xAODJet/Jet.h</label>
        <link refid="da/db7/Jet_8h_source"/>
        <childnode refid="104247" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104231">
        <label>AthContainersInterfaces/IAuxStoreHolder.h</label>
        <link refid="d7/dab/IAuxStoreHolder_8h_source"/>
      </node>
      <node id="104338">
        <label>SGTools/ClassID_traits.h</label>
      </node>
      <node id="104218">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="104269">
        <label>xAODBTagging/versions/BTagVertex_v1.h</label>
        <link refid="d6/df4/BTagVertex__v1_8h_source"/>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104254" relation="include">
        </childnode>
        <childnode refid="104253" relation="include">
        </childnode>
        <childnode refid="104248" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104094" relation="include">
        </childnode>
      </node>
      <node id="104277">
        <label>xAODJet/versions/JetContainer_v1.h</label>
        <link refid="df/d28/JetContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104247" relation="include">
        </childnode>
      </node>
      <node id="104299">
        <label>xAODMissingET/versions/MissingETBase.h</label>
        <link refid="d4/da9/MissingETBase_8h_source"/>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104089" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104070" relation="include">
        </childnode>
      </node>
      <node id="104332">
        <label>JetInterface/IJetSelector.h</label>
        <link refid="d8/ded/IJetSelector_8h_source"/>
        <childnode refid="104324" relation="include">
        </childnode>
        <childnode refid="104246" relation="include">
        </childnode>
      </node>
      <node id="104286">
        <label>CxxUtils/final.h</label>
        <link refid="da/d9b/final_8h"/>
      </node>
      <node id="104170">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="104238">
        <label>xAODTruth/versions/TruthParticleContainer_v1.h</label>
        <link refid="dd/d30/TruthParticleContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104235" relation="include">
        </childnode>
        <childnode refid="104239" relation="include">
        </childnode>
      </node>
      <node id="104185">
        <label>xAODMuon/Muon.h</label>
        <link refid="d2/dfd/Muon_8h_source"/>
        <childnode refid="104186" relation="include">
        </childnode>
      </node>
      <node id="104176">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="104177" relation="include">
        </childnode>
        <childnode refid="104144" relation="include">
        </childnode>
        <childnode refid="104090" relation="include">
        </childnode>
        <childnode refid="104093" relation="include">
        </childnode>
        <childnode refid="104178" relation="include">
        </childnode>
      </node>
      <node id="104135">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="104081" relation="include">
        </childnode>
        <childnode refid="104136" relation="include">
        </childnode>
        <childnode refid="104137" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
      </node>
      <node id="104108">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104088" relation="include">
        </childnode>
      </node>
      <node id="104339">
        <label>AthContainers/ConstDataVector.icc</label>
        <link refid="d2/d61/ConstDataVector_8icc"/>
        <childnode refid="104340" relation="include">
        </childnode>
        <childnode refid="104093" relation="include">
        </childnode>
      </node>
      <node id="104073">
        <label>stdint.h</label>
      </node>
      <node id="104329">
        <label>JetInterface/IJetPseudojetRetriever.h</label>
        <link refid="db/dbd/IJetPseudojetRetriever_8h_source"/>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104324" relation="include">
        </childnode>
        <childnode refid="104245" relation="include">
        </childnode>
      </node>
      <node id="104156">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="104090" relation="include">
        </childnode>
        <childnode refid="104157" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
        <childnode refid="104088" relation="include">
        </childnode>
        <childnode refid="104082" relation="include">
        </childnode>
      </node>
      <node id="104142">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="104105">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
      </node>
      <node id="104257">
        <label>Eigen/Geometry</label>
      </node>
      <node id="104230">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="104081" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
        <childnode refid="104074" relation="include">
        </childnode>
        <childnode refid="104094" relation="include">
        </childnode>
      </node>
      <node id="104100">
        <label>RVersion.h</label>
      </node>
      <node id="104280">
        <label>xAODEgamma/ElectronContainer.h</label>
        <link refid="df/dea/ElectronContainer_8h_source"/>
        <childnode refid="104281" relation="include">
        </childnode>
        <childnode refid="104287" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104290">
        <label>xAODEgamma/EgammaFwd.h</label>
        <link refid="dc/d0f/EgammaFwd_8h_source"/>
      </node>
      <node id="104309">
        <label>xAODPFlow/versions/PFO_v1.h</label>
        <link refid="d0/d00/PFO__v1_8h_source"/>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104310" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104312" relation="include">
        </childnode>
        <childnode refid="104211" relation="include">
        </childnode>
        <childnode refid="104210" relation="include">
        </childnode>
        <childnode refid="104253" relation="include">
        </childnode>
        <childnode refid="104200" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104313" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
      </node>
      <node id="104083">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="104084" relation="include">
        </childnode>
        <childnode refid="104092" relation="include">
        </childnode>
        <childnode refid="104093" relation="include">
        </childnode>
      </node>
      <node id="104330">
        <label>JetInterface/ISingleJetModifier.h</label>
        <link refid="d9/d5c/ISingleJetModifier_8h_source"/>
        <childnode refid="104324" relation="include">
        </childnode>
        <childnode refid="104246" relation="include">
        </childnode>
      </node>
      <node id="104219">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104212" relation="include">
        </childnode>
      </node>
      <node id="104089">
        <label>cmath</label>
      </node>
      <node id="104139">
        <label>cassert</label>
      </node>
      <node id="104227">
        <label>xAODMuon/MuonAuxContainer.h</label>
        <link refid="d0/d36/MuonAuxContainer_8h_source"/>
        <childnode refid="104228" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104147">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="104166">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="104340">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="104221">
        <label>xAODMuon/MuonSegment.h</label>
        <link refid="de/d5b/MuonSegment_8h_source"/>
        <childnode refid="104222" relation="include">
        </childnode>
      </node>
      <node id="104137">
        <label>stdexcept</label>
      </node>
      <node id="104296">
        <label>xAODMissingET/MissingETContainer.h</label>
        <link refid="d5/d10/MissingETContainer_8h_source"/>
        <childnode refid="104297" relation="include">
        </childnode>
        <childnode refid="104300" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104126">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="104197">
        <label>Eigen/Core</label>
      </node>
      <node id="104153">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="104202">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104203" relation="include">
        </childnode>
      </node>
      <node id="104207">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104209" relation="include">
        </childnode>
      </node>
      <node id="104161">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="104192">
        <label>TLorentzVector.h</label>
      </node>
      <node id="104235">
        <label>xAODTruth/versions/TruthParticle_v1.h</label>
        <link refid="d3/d3b/TruthParticle__v1_8h_source"/>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104193" relation="include">
        </childnode>
        <childnode refid="104236" relation="include">
        </childnode>
      </node>
      <node id="104325">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="104242">
        <label>xAODTruth/TruthVertex.h</label>
        <link refid="dc/dcc/TruthVertex_8h_source"/>
        <childnode refid="104243" relation="include">
        </childnode>
      </node>
      <node id="104213">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104214" relation="include">
        </childnode>
      </node>
      <node id="104076">
        <label>string</label>
      </node>
      <node id="104129">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="104081" relation="include">
        </childnode>
        <childnode refid="104080" relation="include">
        </childnode>
        <childnode refid="104111" relation="include">
        </childnode>
        <childnode refid="104108" relation="include">
        </childnode>
        <childnode refid="104097" relation="include">
        </childnode>
        <childnode refid="104130" relation="include">
        </childnode>
        <childnode refid="104131" relation="include">
        </childnode>
        <childnode refid="104114" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104086" relation="include">
        </childnode>
        <childnode refid="104088" relation="include">
        </childnode>
        <childnode refid="104132" relation="include">
        </childnode>
        <childnode refid="104133" relation="include">
        </childnode>
        <childnode refid="104121" relation="include">
        </childnode>
        <childnode refid="104134" relation="include">
        </childnode>
      </node>
      <node id="104103">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
      </node>
      <node id="104319">
        <label>CxxUtils/make_unique.h</label>
        <link refid="d3/d77/make__unique_8h"/>
      </node>
      <node id="104201">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="104188" relation="include">
        </childnode>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104194" relation="include">
        </childnode>
        <childnode refid="104202" relation="include">
        </childnode>
        <childnode refid="104204" relation="include">
        </childnode>
        <childnode refid="104205" relation="include">
        </childnode>
      </node>
      <node id="104132">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="104225">
        <label>xAODMuon/versions/MuonSegmentContainer_v1.h</label>
        <link refid="dd/dcd/MuonSegmentContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104222" relation="include">
        </childnode>
      </node>
      <node id="104251">
        <label>xAODBTagging/versions/BTagging_v1.h</label>
        <link refid="dc/da1/BTagging__v1_8h_source"/>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104252" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104253" relation="include">
        </childnode>
        <childnode refid="104267" relation="include">
        </childnode>
        <childnode refid="104248" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104168" relation="include">
        </childnode>
        <childnode refid="104094" relation="include">
        </childnode>
      </node>
      <node id="104247">
        <label>xAODJet/versions/Jet_v1.h</label>
        <link refid="df/d71/Jet__v1_8h_source"/>
        <childnode refid="104248" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104249" relation="include">
        </childnode>
        <childnode refid="104272" relation="include">
        </childnode>
        <childnode refid="104275" relation="include">
        </childnode>
        <childnode refid="104273" relation="include">
        </childnode>
        <childnode refid="104276" relation="include">
        </childnode>
      </node>
      <node id="104228">
        <label>xAODMuon/versions/MuonAuxContainer_v3.h</label>
        <link refid="da/dd8/MuonAuxContainer__v3_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104229" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104210" relation="include">
        </childnode>
        <childnode refid="104220" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104294">
        <label>xAODEgamma/versions/ElectronAuxContainer_v3.h</label>
        <link refid="d2/d62/ElectronAuxContainer__v3_8h_source"/>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104229" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104210" relation="include">
        </childnode>
        <childnode refid="104295" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104281">
        <label>xAODEgamma/Electron.h</label>
        <link refid="dc/db4/Electron_8h_source"/>
        <childnode refid="104282" relation="include">
        </childnode>
      </node>
      <node id="104158">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="104141" relation="include">
        </childnode>
        <childnode refid="104156" relation="include">
        </childnode>
        <childnode refid="104159" relation="include">
        </childnode>
        <childnode refid="104161" relation="include">
        </childnode>
        <childnode refid="104146" relation="include">
        </childnode>
        <childnode refid="104087" relation="include">
        </childnode>
        <childnode refid="104088" relation="include">
        </childnode>
      </node>
      <node id="104172">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="104248">
        <label>map</label>
      </node>
      <node id="104189">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="104239">
        <label>xAODTruth/TruthParticleContainerFwd.h</label>
        <link refid="dd/d8f/TruthParticleContainerFwd_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104240" relation="include">
        </childnode>
      </node>
      <node id="104173">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="104174" relation="include">
        </childnode>
      </node>
      <node id="104187">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="104188" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
      </node>
      <node id="104301">
        <label>xAODMissingET/MissingETAuxContainer.h</label>
        <link refid="dd/db4/MissingETAuxContainer_8h_source"/>
        <childnode refid="104297" relation="include">
        </childnode>
        <childnode refid="104302" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104174">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="104101">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="104118">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="104291">
        <label>xAODEgamma/ElectronContainerFwd.h</label>
        <link refid="de/d36/ElectronContainerFwd_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104292" relation="include">
        </childnode>
        <childnode refid="104289" relation="include">
        </childnode>
      </node>
      <node id="104258">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="104163">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="104158" relation="include">
        </childnode>
        <childnode refid="104087" relation="include">
        </childnode>
        <childnode refid="104085" relation="include">
        </childnode>
        <childnode refid="104164" relation="include">
        </childnode>
      </node>
      <node id="104133">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="104222">
        <label>versions/MuonSegment_v1.h</label>
        <link refid="df/d0d/MuonSegment__v1_8h_source"/>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104223" relation="include">
        </childnode>
        <childnode refid="104224" relation="include">
        </childnode>
      </node>
      <node id="104274">
        <label>Math/Vector4D.h</label>
      </node>
      <node id="104115">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="104253">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="104254" relation="include">
        </childnode>
        <childnode refid="104266" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104159">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="104141" relation="include">
        </childnode>
        <childnode refid="104099" relation="include">
        </childnode>
        <childnode refid="104092" relation="include">
        </childnode>
        <childnode refid="104160" relation="include">
        </childnode>
      </node>
      <node id="104069">
        <label>CPAnalysisExamples/xExampleEDM.h</label>
        <link refid="da/d33/xExampleEDM_8h_source"/>
        <childnode refid="104070" relation="include">
        </childnode>
        <childnode refid="104071" relation="include">
        </childnode>
        <childnode refid="104184" relation="include">
        </childnode>
        <childnode refid="104227" relation="include">
        </childnode>
        <childnode refid="104233" relation="include">
        </childnode>
        <childnode refid="104241" relation="include">
        </childnode>
        <childnode refid="104189" relation="include">
        </childnode>
        <childnode refid="104245" relation="include">
        </childnode>
        <childnode refid="104278" relation="include">
        </childnode>
        <childnode refid="104275" relation="include">
        </childnode>
        <childnode refid="104273" relation="include">
        </childnode>
        <childnode refid="104250" relation="include">
        </childnode>
        <childnode refid="104280" relation="include">
        </childnode>
        <childnode refid="104293" relation="include">
        </childnode>
        <childnode refid="104296" relation="include">
        </childnode>
        <childnode refid="104301" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104253" relation="include">
        </childnode>
        <childnode refid="104194" relation="include">
        </childnode>
        <childnode refid="104303" relation="include">
        </childnode>
        <childnode refid="104316" relation="include">
        </childnode>
        <childnode refid="104318" relation="include">
        </childnode>
        <childnode refid="104322" relation="include">
        </childnode>
        <childnode refid="104332" relation="include">
        </childnode>
        <childnode refid="104333" relation="include">
        </childnode>
        <childnode refid="104343" relation="include">
        </childnode>
      </node>
      <node id="104079">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="104099">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="104100" relation="include">
        </childnode>
        <childnode refid="104101" relation="include">
        </childnode>
      </node>
      <node id="104131">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="104124">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="104223">
        <label>MuonIdHelpers/MuonStationIndex.h</label>
        <link refid="d5/d3f/MuonStationIndex_8h_source"/>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
      </node>
      <node id="104209">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="104252">
        <label>xAODBTagging/BTaggingEnums.h</label>
        <link refid="dd/de5/BTaggingEnums_8h_source"/>
      </node>
      <node id="104157">
        <label>limits.h</label>
      </node>
      <node id="104220">
        <label>xAODMuon/MuonSegmentContainer.h</label>
        <link refid="d5/d26/MuonSegmentContainer_8h_source"/>
        <childnode refid="104221" relation="include">
        </childnode>
        <childnode refid="104225" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104317">
        <label>xAODTau/versions/TauJetAuxContainer_v2.h</label>
        <link refid="d9/d17/TauJetAuxContainer__v2_8h_source"/>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104306" relation="include">
        </childnode>
        <childnode refid="104229" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104253" relation="include">
        </childnode>
        <childnode refid="104245" relation="include">
        </childnode>
        <childnode refid="104307" relation="include">
        </childnode>
        <childnode refid="104096" relation="include">
        </childnode>
      </node>
      <node id="104288">
        <label>xAODEgamma/versions/EgammaContainer_v1.h</label>
        <link refid="d0/d71/EgammaContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104283" relation="include">
        </childnode>
        <childnode refid="104289" relation="include">
        </childnode>
      </node>
      <node id="104151">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="104152" relation="include">
        </childnode>
      </node>
      <node id="104186">
        <label>versions/Muon_v1.h</label>
        <link refid="da/dde/Muon__v1_8h_source"/>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104187" relation="include">
        </childnode>
        <childnode refid="104189" relation="include">
        </childnode>
        <childnode refid="104190" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104194" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104210" relation="include">
        </childnode>
        <childnode refid="104220" relation="include">
        </childnode>
        <childnode refid="104188" relation="include">
        </childnode>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
      </node>
      <node id="104266">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104255" relation="include">
        </childnode>
      </node>
      <node id="104067">
        <label>TH1.h</label>
      </node>
      <node id="104110">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="104111" relation="include">
        </childnode>
        <childnode refid="104090" relation="include">
        </childnode>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104113" relation="include">
        </childnode>
      </node>
      <node id="104343">
        <label>GaudiKernel/ToolHandle.h</label>
      </node>
      <node id="104081">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104083" relation="include">
        </childnode>
      </node>
      <node id="104289">
        <label>xAODEgamma/EgammaContainerFwd.h</label>
        <link refid="d3/d76/EgammaContainerFwd_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104290" relation="include">
        </childnode>
      </node>
      <node id="104313">
        <label>TVector3.h</label>
      </node>
      <node id="104180">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
      </node>
      <node id="104198">
        <label>Eigen/Dense</label>
      </node>
      <node id="104084">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="104085" relation="include">
        </childnode>
        <childnode refid="104086" relation="include">
        </childnode>
        <childnode refid="104087" relation="include">
        </childnode>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104088" relation="include">
        </childnode>
        <childnode refid="104089" relation="include">
        </childnode>
        <childnode refid="104090" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104091" relation="include">
        </childnode>
      </node>
      <node id="104144">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="104139" relation="include">
        </childnode>
      </node>
      <node id="104241">
        <label>xAODTruth/TruthVertexContainer.h</label>
        <link refid="d4/d34/TruthVertexContainer_8h_source"/>
        <childnode refid="104242" relation="include">
        </childnode>
        <childnode refid="104244" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104191">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="104192" relation="include">
        </childnode>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104193" relation="include">
        </childnode>
        <childnode refid="104096" relation="include">
        </childnode>
      </node>
      <node id="104193">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="104077" relation="include">
        </childnode>
      </node>
      <node id="104072">
        <label>xAODEventInfo/versions/EventInfo_v1.h</label>
        <link refid="d4/da0/EventInfo__v1_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104074" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104077" relation="include">
        </childnode>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104306">
        <label>xAODTau/TauDefs.h</label>
        <link refid="da/df4/TauDefs_8h_source"/>
        <childnode refid="104274" relation="include">
        </childnode>
        <childnode refid="104188" relation="include">
        </childnode>
      </node>
      <node id="104212">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104188" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104213" relation="include">
        </childnode>
        <childnode refid="104215" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104217" relation="include">
        </childnode>
        <childnode refid="104218" relation="include">
        </childnode>
      </node>
      <node id="104275">
        <label>xAODJet/JetAttributes.h</label>
        <link refid="d3/df8/JetAttributes_8h"/>
      </node>
      <node id="104323">
        <label>PATInterfaces/CorrectionCode.h</label>
        <link refid="d8/dab/CorrectionCode_8h_source"/>
      </node>
      <node id="104160">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="104156" relation="include">
        </childnode>
        <childnode refid="104144" relation="include">
        </childnode>
      </node>
      <node id="104282">
        <label>xAODEgamma/versions/Electron_v1.h</label>
        <link refid="df/d27/Electron__v1_8h_source"/>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104283" relation="include">
        </childnode>
        <childnode refid="104285" relation="include">
        </childnode>
        <childnode refid="104194" relation="include">
        </childnode>
        <childnode refid="104200" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104286" relation="include">
        </childnode>
        <childnode refid="104114" relation="include">
        </childnode>
      </node>
      <node id="104104">
        <label>typeinfo</label>
      </node>
      <node id="104194">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="104195" relation="include">
        </childnode>
      </node>
      <node id="104138">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="104132" relation="include">
        </childnode>
        <childnode refid="104139" relation="include">
        </childnode>
      </node>
      <node id="104310">
        <label>AthLinks/ElementLinkVector.h</label>
        <link refid="de/df1/ElementLinkVector_8h_source"/>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104311" relation="include">
        </childnode>
        <childnode refid="104099" relation="include">
        </childnode>
      </node>
      <node id="104211">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="104212" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104140">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="104135" relation="include">
        </childnode>
        <childnode refid="104141" relation="include">
        </childnode>
        <childnode refid="104142" relation="include">
        </childnode>
        <childnode refid="104143" relation="include">
        </childnode>
        <childnode refid="104149" relation="include">
        </childnode>
        <childnode refid="104150" relation="include">
        </childnode>
        <childnode refid="104156" relation="include">
        </childnode>
        <childnode refid="104158" relation="include">
        </childnode>
        <childnode refid="104162" relation="include">
        </childnode>
        <childnode refid="104163" relation="include">
        </childnode>
        <childnode refid="104159" relation="include">
        </childnode>
        <childnode refid="104165" relation="include">
        </childnode>
        <childnode refid="104099" relation="include">
        </childnode>
        <childnode refid="104166" relation="include">
        </childnode>
        <childnode refid="104167" relation="include">
        </childnode>
        <childnode refid="104161" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
        <childnode refid="104093" relation="include">
        </childnode>
        <childnode refid="104168" relation="include">
        </childnode>
        <childnode refid="104085" relation="include">
        </childnode>
        <childnode refid="104137" relation="include">
        </childnode>
        <childnode refid="104087" relation="include">
        </childnode>
        <childnode refid="104096" relation="include">
        </childnode>
        <childnode refid="104169" relation="include">
        </childnode>
        <childnode refid="104171" relation="include">
        </childnode>
        <childnode refid="104175" relation="include">
        </childnode>
        <childnode refid="104176" relation="include">
        </childnode>
      </node>
      <node id="104260">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="104261" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104188">
        <label>bitset</label>
      </node>
      <node id="104113">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="104181">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="104130">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="104348">
        <label>ctime</label>
      </node>
      <node id="104098">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
      </node>
      <node id="104255">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104195" relation="include">
        </childnode>
        <childnode refid="104256" relation="include">
        </childnode>
        <childnode refid="104258" relation="include">
        </childnode>
        <childnode refid="104194" relation="include">
        </childnode>
        <childnode refid="104207" relation="include">
        </childnode>
        <childnode refid="104259" relation="include">
        </childnode>
        <childnode refid="104193" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104112">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="104117">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="104316">
        <label>xAODTau/TauJetAuxContainer.h</label>
        <link refid="d1/dff/TauJetAuxContainer_8h_source"/>
        <childnode refid="104317" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104328">
        <label>JetInterface/IJetModifier.h</label>
        <link refid="de/df5/IJetModifier_8h_source"/>
        <childnode refid="104324" relation="include">
        </childnode>
        <childnode refid="104245" relation="include">
        </childnode>
        <childnode refid="104329" relation="include">
        </childnode>
      </node>
      <node id="104150">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="104151" relation="include">
        </childnode>
        <childnode refid="104143" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104091" relation="include">
        </childnode>
        <childnode refid="104153" relation="include">
        </childnode>
        <childnode refid="104116" relation="include">
        </childnode>
        <childnode refid="104154" relation="include">
        </childnode>
      </node>
      <node id="104094">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="104196">
        <label>unistd.h</label>
      </node>
      <node id="104169">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="104170" relation="include">
        </childnode>
      </node>
      <node id="104102">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="104081" relation="include">
        </childnode>
        <childnode refid="104103" relation="include">
        </childnode>
        <childnode refid="104105" relation="include">
        </childnode>
        <childnode refid="104106" relation="include">
        </childnode>
        <childnode refid="104119" relation="include">
        </childnode>
        <childnode refid="104121" relation="include">
        </childnode>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104127" relation="include">
        </childnode>
        <childnode refid="104128" relation="include">
        </childnode>
      </node>
      <node id="104075">
        <label>vector</label>
      </node>
      <node id="104208">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104094" relation="include">
        </childnode>
      </node>
      <node id="104177">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="104085" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
      </node>
      <node id="104254">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="104255" relation="include">
        </childnode>
      </node>
      <node id="104263">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104261" relation="include">
        </childnode>
        <childnode refid="104264" relation="include">
        </childnode>
      </node>
      <node id="104276">
        <label>xAODJet/JetContainerInfo.h</label>
        <link refid="d8/d2a/JetContainerInfo_8h_source"/>
        <childnode refid="104076" relation="include">
        </childnode>
      </node>
      <node id="104337">
        <label>AthContainers/ConstDataVector.h</label>
        <link refid="d2/d0d/ConstDataVector_8h"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104338" relation="include">
        </childnode>
        <childnode refid="104339" relation="include">
        </childnode>
      </node>
      <node id="104318">
        <label>xAODCore/ShallowCopy.h</label>
        <link refid="d8/d71/ShallowCopy_8h_source"/>
        <childnode refid="104248" relation="include">
        </childnode>
        <childnode refid="104168" relation="include">
        </childnode>
        <childnode refid="104319" relation="include">
        </childnode>
        <childnode refid="104097" relation="include">
        </childnode>
        <childnode refid="104080" relation="include">
        </childnode>
        <childnode refid="104320" relation="include">
        </childnode>
        <childnode refid="104321" relation="include">
        </childnode>
      </node>
      <node id="104178">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="104278">
        <label>xAODJet/JetAuxContainer.h</label>
        <link refid="d6/d1b/JetAuxContainer_8h_source"/>
        <childnode refid="104279" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104311">
        <label>AthLinks/ElementLinkVectorBase.h</label>
        <link refid="dc/d52/ElementLinkVectorBase_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
      </node>
      <node id="104249">
        <label>xAODBTagging/BTaggingContainer.h</label>
        <link refid="d8/d3b/BTaggingContainer_8h_source"/>
        <childnode refid="104250" relation="include">
        </childnode>
        <childnode refid="104271" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104215">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="104216" relation="include">
        </childnode>
      </node>
      <node id="104086">
        <label>utility</label>
      </node>
      <node id="104175">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="104243">
        <label>xAODTruth/versions/TruthVertex_v1.h</label>
        <link refid="d8/d84/TruthVertex__v1_8h_source"/>
        <childnode refid="104192" relation="include">
        </childnode>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104193" relation="include">
        </childnode>
        <childnode refid="104239" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104114">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="104283">
        <label>xAODEgamma/versions/Egamma_v1.h</label>
        <link refid="d9/d42/Egamma__v1_8h_source"/>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104284" relation="include">
        </childnode>
        <childnode refid="104285" relation="include">
        </childnode>
        <childnode refid="104211" relation="include">
        </childnode>
        <childnode refid="104210" relation="include">
        </childnode>
        <childnode refid="104187" relation="include">
        </childnode>
        <childnode refid="104189" relation="include">
        </childnode>
        <childnode refid="104190" relation="include">
        </childnode>
        <childnode refid="104195" relation="include">
        </childnode>
        <childnode refid="104286" relation="include">
        </childnode>
        <childnode refid="104114" relation="include">
        </childnode>
        <childnode refid="104073" relation="include">
        </childnode>
      </node>
      <node id="104333">
        <label>METInterface/IMETRebuilder.h</label>
        <link refid="d8/d6d/IMETRebuilder_8h_source"/>
        <childnode refid="104324" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104296" relation="include">
        </childnode>
        <childnode refid="104334" relation="include">
        </childnode>
        <childnode refid="104341" relation="include">
        </childnode>
        <childnode refid="104245" relation="include">
        </childnode>
      </node>
      <node id="104210">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="104211" relation="include">
        </childnode>
        <childnode refid="104219" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104304">
        <label>xAODTau/TauJet.h</label>
        <link refid="de/d61/TauJet_8h_source"/>
        <childnode refid="104305" relation="include">
        </childnode>
      </node>
      <node id="104233">
        <label>xAODTruth/TruthParticleContainer.h</label>
        <link refid="d9/dbc/TruthParticleContainer_8h_source"/>
        <childnode refid="104234" relation="include">
        </childnode>
        <childnode refid="104238" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104298">
        <label>xAODMissingET/versions/MissingET_v1.h</label>
        <link refid="df/d79/MissingET__v1_8h_source"/>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104299" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104093" relation="include">
        </childnode>
        <childnode refid="104086" relation="include">
        </childnode>
      </node>
      <node id="104236">
        <label>xAODTruth/TruthVertexContainerFwd.h</label>
        <link refid="da/ddf/TruthVertexContainerFwd_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104237" relation="include">
        </childnode>
      </node>
      <node id="104256">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="104196" relation="include">
        </childnode>
        <childnode refid="104257" relation="include">
        </childnode>
      </node>
      <node id="104308">
        <label>xAODPFlow/PFO.h</label>
        <link refid="d1/d98/PFO_8h_source"/>
        <childnode refid="104309" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104203">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="104148">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="104122">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="104297">
        <label>xAODMissingET/MissingET.h</label>
        <link refid="d0/d22/MissingET_8h_source"/>
        <childnode refid="104298" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104268">
        <label>xAODBTagging/BTagVertex.h</label>
        <link refid="d4/d51/BTagVertex_8h_source"/>
        <childnode refid="104269" relation="include">
        </childnode>
      </node>
      <node id="104107">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="104300">
        <label>xAODMissingET/versions/MissingETContainer_v1.h</label>
        <link refid="df/df3/MissingETContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104299" relation="include">
        </childnode>
        <childnode refid="104298" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104121">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="104122" relation="include">
        </childnode>
        <childnode refid="104123" relation="include">
        </childnode>
        <childnode refid="104124" relation="include">
        </childnode>
        <childnode refid="104125" relation="include">
        </childnode>
        <childnode refid="104126" relation="include">
        </childnode>
      </node>
      <node id="104346">
        <label>GaudiKernel/IJobOptionsSvc.h</label>
      </node>
      <node id="104293">
        <label>xAODEgamma/ElectronAuxContainer.h</label>
        <link refid="d0/d13/ElectronAuxContainer_8h_source"/>
        <childnode refid="104294" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104068">
        <label>TH2.h</label>
      </node>
      <node id="104214">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="104335">
        <label>xAODMissingET/versions/MissingETComponent_v1.h</label>
        <link refid="d1/d98/MissingETComponent__v1_8h"/>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104336" relation="include">
        </childnode>
        <childnode refid="104296" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
      </node>
      <node id="104077">
        <label>iosfwd</label>
      </node>
      <node id="104088">
        <label>cstdlib</label>
      </node>
      <node id="104305">
        <label>xAODTau/versions/TauJet_v2.h</label>
        <link refid="d0/d82/TauJet__v2_8h_source"/>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104306" relation="include">
        </childnode>
        <childnode refid="104199" relation="include">
        </childnode>
        <childnode refid="104253" relation="include">
        </childnode>
        <childnode refid="104245" relation="include">
        </childnode>
        <childnode refid="104307" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
      </node>
      <node id="104232">
        <label>xAODCore/AuxSelection.h</label>
        <link refid="d3/dd4/AuxSelection_8h_source"/>
        <childnode refid="104074" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104081" relation="include">
        </childnode>
      </node>
      <node id="104320">
        <label>xAODCore/ShallowAuxContainer.h</label>
        <link refid="d8/d42/ShallowAuxContainer_8h_source"/>
        <childnode refid="104097" relation="include">
        </childnode>
        <childnode refid="104095" relation="include">
        </childnode>
        <childnode refid="104230" relation="include">
        </childnode>
        <childnode refid="104231" relation="include">
        </childnode>
        <childnode refid="104121" relation="include">
        </childnode>
        <childnode refid="104130" relation="include">
        </childnode>
        <childnode refid="104232" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104200">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="104201" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104168">
        <label>iostream</label>
      </node>
      <node id="104136">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="104206">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104201" relation="include">
        </childnode>
        <childnode refid="104207" relation="include">
        </childnode>
      </node>
      <node id="104345">
        <label>GaudiKernel/ITHistSvc.h</label>
      </node>
      <node id="104080">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="104081" relation="include">
        </childnode>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104094" relation="include">
        </childnode>
      </node>
      <node id="104082">
        <label>cstddef</label>
      </node>
      <node id="104134">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="104102" relation="include">
        </childnode>
        <childnode refid="104095" relation="include">
        </childnode>
        <childnode refid="104080" relation="include">
        </childnode>
        <childnode refid="104132" relation="include">
        </childnode>
        <childnode refid="104133" relation="include">
        </childnode>
      </node>
      <node id="104326">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="104285">
        <label>xAODEgamma/EgammaEnums.h</label>
        <link refid="d4/d8f/EgammaEnums_8h_source"/>
      </node>
      <node id="104182">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="104096" relation="include">
        </childnode>
      </node>
      <node id="104314">
        <label>xAODPFlow/versions/PFOContainer_v1.h</label>
        <link refid="d7/d93/PFOContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104309" relation="include">
        </childnode>
      </node>
      <node id="104250">
        <label>xAODBTagging/BTagging.h</label>
        <link refid="d2/d81/BTagging_8h_source"/>
        <childnode refid="104251" relation="include">
        </childnode>
      </node>
      <node id="104344">
        <label>CPAnalysisExamples/xExampleUtils.h</label>
        <link refid="de/d4b/xExampleUtils_8h_source"/>
        <childnode refid="104075" relation="include">
        </childnode>
      </node>
      <node id="104273">
        <label>xAODJet/JetTypes.h</label>
        <link refid="d6/d2a/JetTypes_8h_source"/>
        <childnode refid="104274" relation="include">
        </childnode>
      </node>
      <node id="104312">
        <label>xAODPFlow/PFODefs.h</label>
        <link refid="de/d76/xAODPFlow_2xAODPFlow_2PFODefs_8h_source"/>
        <childnode refid="104274" relation="include">
        </childnode>
      </node>
      <node id="104272">
        <label>xAODJet/JetConstituentVector.h</label>
        <link refid="de/dd4/JetConstituentVector_8h_source"/>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104273" relation="include">
        </childnode>
      </node>
      <node id="104279">
        <label>xAODJet/versions/JetAuxContainer_v1.h</label>
        <link refid="db/dc5/JetAuxContainer__v1_8h_source"/>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104274" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104229" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104273" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104262">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="104154">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="104141" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104155" relation="include">
        </childnode>
        <childnode refid="104139" relation="include">
        </childnode>
        <childnode refid="104088" relation="include">
        </childnode>
        <childnode refid="104096" relation="include">
        </childnode>
      </node>
      <node id="104106">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="104103" relation="include">
        </childnode>
        <childnode refid="104107" relation="include">
        </childnode>
        <childnode refid="104108" relation="include">
        </childnode>
        <childnode refid="104109" relation="include">
        </childnode>
        <childnode refid="104114" relation="include">
        </childnode>
        <childnode refid="104104" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104085" relation="include">
        </childnode>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104116" relation="include">
        </childnode>
        <childnode refid="104117" relation="include">
        </childnode>
        <childnode refid="104118" relation="include">
        </childnode>
      </node>
      <node id="104336">
        <label>xAODMissingET/versions/MissingETCompositionBase.h</label>
        <link refid="d9/d25/MissingETCompositionBase_8h_source"/>
        <childnode refid="104299" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104337" relation="include">
        </childnode>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104296" relation="include">
        </childnode>
        <childnode refid="104245" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104087" relation="include">
        </childnode>
      </node>
      <node id="104224">
        <label>TrkSegment/SegmentCollection.h</label>
      </node>
      <node id="104204">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="104064">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/src/xAthExample.cxx</label>
        <link refid="xAthExample.cxx"/>
        <childnode refid="104065" relation="include">
        </childnode>
        <childnode refid="104069" relation="include">
        </childnode>
        <childnode refid="104344" relation="include">
        </childnode>
        <childnode refid="104345" relation="include">
        </childnode>
        <childnode refid="104346" relation="include">
        </childnode>
        <childnode refid="104347" relation="include">
        </childnode>
        <childnode refid="104348" relation="include">
        </childnode>
      </node>
      <node id="104334">
        <label>xAODMissingET/MissingETComponent.h</label>
        <link refid="d5/d39/MissingETComponent_8h_source"/>
        <childnode refid="104335" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104245">
        <label>xAODJet/JetContainer.h</label>
        <link refid="d5/d55/JetContainer_8h_source"/>
        <childnode refid="104246" relation="include">
        </childnode>
        <childnode refid="104277" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104234">
        <label>xAODTruth/TruthParticle.h</label>
        <link refid="dd/d44/TruthParticle_8h_source"/>
        <childnode refid="104235" relation="include">
        </childnode>
      </node>
      <node id="104284">
        <label>xAODEgamma/EgammaDefs.h</label>
        <link refid="dd/d34/EgammaDefs_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
      </node>
      <node id="104261">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="104179" relation="include">
        </childnode>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104191" relation="include">
        </childnode>
        <childnode refid="104194" relation="include">
        </childnode>
        <childnode refid="104202" relation="include">
        </childnode>
        <childnode refid="104188" relation="include">
        </childnode>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104262" relation="include">
        </childnode>
      </node>
      <node id="104265">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="104066">
        <label>AthenaBaseComps/AthAlgorithm.h</label>
      </node>
      <node id="104315">
        <label>xAODTau/versions/TauJetContainer_v2.h</label>
        <link refid="d5/d28/TauJetContainer__v2_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104305" relation="include">
        </childnode>
      </node>
      <node id="104292">
        <label>xAODEgamma/ElectronFwd.h</label>
        <link refid="db/d18/ElectronFwd_8h_source"/>
      </node>
      <node id="104116">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="104259">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="104260" relation="include">
        </childnode>
        <childnode refid="104263" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104143">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="104129" relation="include">
        </childnode>
        <childnode refid="104141" relation="include">
        </childnode>
        <childnode refid="104142" relation="include">
        </childnode>
        <childnode refid="104078" relation="include">
        </childnode>
        <childnode refid="104102" relation="include">
        </childnode>
        <childnode refid="104135" relation="include">
        </childnode>
        <childnode refid="104144" relation="include">
        </childnode>
        <childnode refid="104095" relation="include">
        </childnode>
        <childnode refid="104145" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104148" relation="include">
        </childnode>
      </node>
      <node id="104190">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="104074">
        <label>set</label>
      </node>
      <node id="104295">
        <label>xAODEgamma/versions/EgammaAuxVariables_v3.def</label>
      </node>
      <node id="104183">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="104094" relation="include">
        </childnode>
      </node>
      <node id="104120">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="104109">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="104107" relation="include">
        </childnode>
        <childnode refid="104110" relation="include">
        </childnode>
        <childnode refid="104114" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104115" relation="include">
        </childnode>
      </node>
      <node id="104085">
        <label>algorithm</label>
      </node>
      <node id="104217">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="104165">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="104205">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="104287">
        <label>xAODEgamma/versions/ElectronContainer_v1.h</label>
        <link refid="dc/d7f/ElectronContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104282" relation="include">
        </childnode>
        <childnode refid="104288" relation="include">
        </childnode>
        <childnode refid="104291" relation="include">
        </childnode>
      </node>
      <node id="104078">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="104079" relation="include">
        </childnode>
        <childnode refid="104080" relation="include">
        </childnode>
        <childnode refid="104095" relation="include">
        </childnode>
        <childnode refid="104097" relation="include">
        </childnode>
        <childnode refid="104102" relation="include">
        </childnode>
        <childnode refid="104129" relation="include">
        </childnode>
        <childnode refid="104108" relation="include">
        </childnode>
        <childnode refid="104135" relation="include">
        </childnode>
        <childnode refid="104132" relation="include">
        </childnode>
        <childnode refid="104082" relation="include">
        </childnode>
        <childnode refid="104138" relation="include">
        </childnode>
      </node>
      <node id="104097">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104098" relation="include">
        </childnode>
        <childnode refid="104099" relation="include">
        </childnode>
      </node>
      <node id="104244">
        <label>xAODTruth/versions/TruthVertexContainer_v1.h</label>
        <link refid="db/d70/TruthVertexContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104243" relation="include">
        </childnode>
        <childnode refid="104236" relation="include">
        </childnode>
      </node>
      <node id="104162">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="104158" relation="include">
        </childnode>
        <childnode refid="104144" relation="include">
        </childnode>
        <childnode refid="104087" relation="include">
        </childnode>
      </node>
      <node id="104141">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="104179">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="104073" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104180" relation="include">
        </childnode>
        <childnode refid="104099" relation="include">
        </childnode>
        <childnode refid="104181" relation="include">
        </childnode>
      </node>
      <node id="104270">
        <label>xAODBTagging/versions/BTagVertexContainer_v1.h</label>
        <link refid="d1/d37/BTagVertexContainer__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104269" relation="include">
        </childnode>
      </node>
      <node id="104307">
        <label>xAODPFlow/PFOContainer.h</label>
        <link refid="dd/d85/PFOContainer_8h_source"/>
        <childnode refid="104308" relation="include">
        </childnode>
        <childnode refid="104314" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104199">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="104200" relation="include">
        </childnode>
        <childnode refid="104206" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104152">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="104347">
        <label>GaudiKernel/AlgTool.h</label>
      </node>
      <node id="104342">
        <label>xAODMissingET/versions/MissingETComponentMap_v1.h</label>
        <link refid="dd/ddb/MissingETComponentMap__v1_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104193" relation="include">
        </childnode>
        <childnode refid="104336" relation="include">
        </childnode>
        <childnode refid="104297" relation="include">
        </childnode>
        <childnode refid="104335" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
        <childnode refid="104075" relation="include">
        </childnode>
        <childnode refid="104248" relation="include">
        </childnode>
        <childnode refid="104182" relation="include">
        </childnode>
      </node>
      <node id="104322">
        <label>JetCalibTools/IJetCalibrationTool.h</label>
        <link refid="d5/d22/JetCalibTools_2JetCalibTools_2IJetCalibrationTool_8h_source"/>
        <childnode refid="104323" relation="include">
        </childnode>
        <childnode refid="104324" relation="include">
        </childnode>
        <childnode refid="104328" relation="include">
        </childnode>
        <childnode refid="104330" relation="include">
        </childnode>
        <childnode refid="104246" relation="include">
        </childnode>
        <childnode refid="104331" relation="include">
        </childnode>
      </node>
      <node id="104167">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="104092">
        <label>memory</label>
      </node>
      <node id="104264">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="104140" relation="include">
        </childnode>
        <childnode refid="104208" relation="include">
        </childnode>
        <childnode refid="104265" relation="include">
        </childnode>
      </node>
      <node id="104341">
        <label>xAODMissingET/MissingETComponentMap.h</label>
        <link refid="d9/d23/MissingETComponentMap_8h_source"/>
        <childnode refid="104334" relation="include">
        </childnode>
        <childnode refid="104342" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
      <node id="104119">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="104105" relation="include">
        </childnode>
        <childnode refid="104106" relation="include">
        </childnode>
        <childnode refid="104120" relation="include">
        </childnode>
      </node>
      <node id="104240">
        <label>xAODTruth/TruthParticleFwd.h</label>
        <link refid="de/d03/TruthParticleFwd_8h_source"/>
      </node>
      <node id="104145">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="104079" relation="include">
        </childnode>
        <childnode refid="104095" relation="include">
        </childnode>
        <childnode refid="104080" relation="include">
        </childnode>
        <childnode refid="104116" relation="include">
        </childnode>
        <childnode refid="104146" relation="include">
        </childnode>
        <childnode refid="104147" relation="include">
        </childnode>
        <childnode refid="104076" relation="include">
        </childnode>
      </node>
      <node id="104267">
        <label>xAODBTagging/BTagVertexContainer.h</label>
        <link refid="d5/da2/BTagVertexContainer_8h_source"/>
        <childnode refid="104268" relation="include">
        </childnode>
        <childnode refid="104270" relation="include">
        </childnode>
        <childnode refid="104183" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>CPAnalysisExamples<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CPAnalysisExamples/xAthExample.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CPAnalysisExamples/xExampleEDM.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CPAnalysisExamples/xExampleUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GaudiKernel/ITHistSvc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GaudiKernel/IJobOptionsSvc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GaudiKernel/AlgTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">xAthExample::xAthExample(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>ISvcLocator*<sp/>pSvcLocator<sp/>)<sp/>:<sp/>AthAlgorithm(<sp/>name,<sp/>pSvcLocator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">StatusCode<sp/><ref refid="d1/da4/classxAthExample_1a5a8e2602f1c6f9dffa9377614a18ee3e" kindref="member">xAthExample::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO<sp/>(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/><sp/>IMETRebuilder*<sp/>tmpTool<sp/>=<sp/>dynamic_cast&lt;IMETRebuilder*&gt;(AlgTool::Factory::create(&quot;met::METRebuilder&quot;,<sp/>&quot;met::METRebuilder&quot;,<sp/>&quot;myTool&quot;,<sp/>this));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//tmpTool-&gt;setProperty(&quot;JetColl&quot;,&quot;oo&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>ServiceHandle&lt;IJobOptionsSvc&gt;<sp/>joSvc(&quot;JobOptionsSvc&quot;,name());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>CHECK(<sp/>joSvc-&gt;addPropertyToCatalogue(&quot;myTool&quot;,StringProperty(&quot;JetColl&quot;,&quot;Blah&quot;))<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>CHECK(<sp/>joSvc-&gt;setMyProperties(<sp/>tmpTool-&gt;name(),<sp/>dynamic_cast&lt;IProperty*&gt;(tmpTool)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pt<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xxLim[17]<sp/>=<sp/>{9.9999,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20.00,<sp/>30.00,<sp/>40.00,<sp/>60.00,<sp/>80.00,<sp/>120.0,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>160.0,<sp/>240.0,<sp/>320.0,<sp/>480.0,<sp/>640.0,<sp/>960.0,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1280.,<sp/>1920.,<sp/>2560.,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10000.1};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::string<sp/>xxStr[17]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;0000&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0020&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0030&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0040&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0060&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0080&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0120&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0160&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0240&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0320&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0480&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0640&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;0960&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1280&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;1920&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;2560&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0000&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;17;<sp/>++i){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ptLim[i]<sp/>=<sp/>xxLim[i];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ptStr[i]<sp/>=<sp/>xxStr[i];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Primary<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intactual&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;intactual&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;intactual&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intaverage&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;intaverage&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;intaverage&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intdiff&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;intdiff&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;intdiff&quot;</highlight><highlight class="normal">,100,-50.,50.);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxidx&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxidx&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxidx&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxz0&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxz0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxz0&quot;</highlight><highlight class="normal">,100,-200.,200.);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxn2&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxn2&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxn2&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxn5&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxn5&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxn5&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxntrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;privtxntrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;privtxntrk&quot;</highlight><highlight class="normal">,100,0.,200.);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mupt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mupt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mupt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0.,<sp/>500.<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mueta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mueta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mueta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muphi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;muphi&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;muphi&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-1.,<sp/>1.);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mutype&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mutype&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mutype&quot;</highlight><highlight class="normal">,5,0.,5.);<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muquality&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;muquality&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;muquality&quot;</highlight><highlight class="normal">,5,0.,5.);<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mugoodpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mugoodpt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mugoodpt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0.,<sp/>500.<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mugoodeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mugoodeta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mugoodeta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muidrat&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;muidrat&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;muidrat&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muptc30&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;muptc30&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;muptc30&quot;</highlight><highlight class="normal">,100,0.,20.);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elpt&quot;</highlight><highlight class="normal">,100,<sp/>0.,<sp/>500.);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eleta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;eleta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;eleta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elphi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elphi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elphi&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-1.,<sp/>1.);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elauthor&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elauthor&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elauthor&quot;</highlight><highlight class="normal">,16,0,16.);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elntrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elntrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elntrk&quot;</highlight><highlight class="normal">,20,0,20.);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eleoverp&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;eleoverp&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;eleoverp&quot;</highlight><highlight class="normal">,100,0,5.);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eletc30&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;eletc30&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;eletc30&quot;</highlight><highlight class="normal">,100,0.,20.);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgood&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elgood&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elgood&quot;</highlight><highlight class="normal">,2,0.,2.);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgoodpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elgoodpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elgoodpt&quot;</highlight><highlight class="normal">,100,<sp/>0.,<sp/>500.);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgoodeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elgoodeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elgoodeta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eldrtrue&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;eldrtrue&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;eldrtrue&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elptrat&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;elptrat&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;elptrat&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4LCTopo<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptjmax<sp/>=<sp/>2000.;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptjlomax<sp/>=<sp/>200.;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4pt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4pt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4pt&quot;</highlight><highlight class="normal">,100,0.,ptjmax);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4ptlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4ptlo&quot;</highlight><highlight class="normal">,100,0.,ptjlomax);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4eta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4eta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4eta&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4phi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4phi&quot;</highlight><highlight class="normal">,100,-1.,1.);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4rlep&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4rlep&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4rlep&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4calibrlep&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4calibrlep&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4calibrlep&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptbad&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4ptbad&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4ptbad&quot;</highlight><highlight class="normal">,100,0.,ptjmax);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4etabad&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4etabad&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4etabad&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4drelvpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;akt4drelvpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4drelvpt&quot;</highlight><highlight class="normal">,50,0.,200.,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50,0.,2.);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4calib&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str.c_str(),str.c_str(),100,0.,2.);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal">,110,-1.,1.19999);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvfx&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4jvfx&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4jvfx&quot;</highlight><highlight class="normal">,110,-1.,1.19999);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvftot&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4jvftot&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4jvftot&quot;</highlight><highlight class="normal">,110,0.,1.09999);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str.c_str(),str.c_str(),110,-1.,1.19999);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4trueid&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4trueid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4trueid&quot;</highlight><highlight class="normal">,18,-2.,16.);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptb&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4ptb&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4ptb&quot;</highlight><highlight class="normal">,100,0.,ptjmax);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4etab&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4etab&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4etab&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4mv1&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4mv1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4mv1&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4sv1b&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4sv1b&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4sv1b&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4sv1u&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4sv1u&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4sv1u&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4sv1uvb&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;akt4sv1uvb&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4sv1uvb&quot;</highlight><highlight class="normal">,80,0.,0.4,50,0.,1.);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ntrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4ntrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4ntrk&quot;</highlight><highlight class="normal">,50,0.,50.);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4nsitrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4nsitrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4nsitrk&quot;</highlight><highlight class="normal">,20,0.,20.);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4z0trk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4z0trk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4z0trk&quot;</highlight><highlight class="normal">,100,-200.,200.);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4dz0trk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4dz0trk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4dz0trk&quot;</highlight><highlight class="normal">,200,-5.,5.);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4z0vz0&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;akt4z0vz0&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4z0vz0&quot;</highlight><highlight class="normal">,25,-50.,50.,25,-50.,50.);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str.c_str(),str.c_str(),100,0.,2.);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4drtrue&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4drtrue&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4drtrue&quot;</highlight><highlight class="normal">,100,0.,2.0);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4drtruecalib&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;akt4drtruecalib&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4drtruecalib&quot;</highlight><highlight class="normal">,100,0.,2.0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jes&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str.c_str(),str.c_str(),100,0.,2.);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jescalib&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[str2.c_str()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(str2.c_str(),str2.c_str(),100,0.,2.);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4jesvpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;akt4jesvpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;akt4jesvpt&quot;</highlight><highlight class="normal">,50,0.,500,50,0.,2.);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4Truth<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4pt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktT4pt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktT4pt&quot;</highlight><highlight class="normal">,100,0.,ptjmax);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4ptlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktT4ptlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktT4ptlo&quot;</highlight><highlight class="normal">,100,0.,ptjlomax);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4eta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktT4eta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktT4eta&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktT4phi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktT4phi&quot;</highlight><highlight class="normal">,100,-1.,1.);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4EMTopo<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktem4n100&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktem4n100&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktem4n100&quot;</highlight><highlight class="normal">,20,0.,20.);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktem4ncalib100&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;aktem4ncalib100&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aktem4ncalib100&quot;</highlight><highlight class="normal">,20,0.,20.);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TauJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taupt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taupt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;taupt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0.,<sp/>500.<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taueta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taueta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;taueta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauphi&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauphi&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tauphi&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>-1.,<sp/>1.);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">,5,0.,5.);<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taubdt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taubdt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;taubdt&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;taudrelvpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;taudrelvpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;taudrelvpt&quot;</highlight><highlight class="normal">,50,0.,200.,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50,0.,2.);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tautruept&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tautruept&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tautruept&quot;</highlight><highlight class="normal">,100,0.,500.);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tautrueeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tautrueeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tautrueeta&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taugoodpt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;taugoodpt&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>0.,<sp/>500.<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taugoodeta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;taugoodeta&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>-3.,<sp/>3.<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodbdt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taugoodbdt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;taugoodbdt&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauntrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauntrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tauntrk&quot;</highlight><highlight class="normal">,10,0.,10.);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauptrtrk&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauptrtrk&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tauptrtrk&quot;</highlight><highlight class="normal">,120,0.,1.2);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taudrtrue&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;taudrtrue&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;taudrtrue&quot;</highlight><highlight class="normal">,100,0.,1.);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauptrat&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tauptrat&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tauptrat&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Met</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metet&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metet&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metet&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metetlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metetlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metetlo&quot;</highlight><highlight class="normal">,100,0.,200.);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metsum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metsum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metsum&quot;</highlight><highlight class="normal">,100,0.,2000.);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettrueet&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mettrueet&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mettrueet&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettrueetlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mettrueetlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mettrueetlo&quot;</highlight><highlight class="normal">,100,0.,200.);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettruesum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;mettruesum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;mettruesum&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibet&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metcalibet&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metcalibet&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibetlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metcalibetlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metcalibetlo&quot;</highlight><highlight class="normal">,100,0.,100.);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibsum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;metcalibsum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;metcalibsum&quot;</highlight><highlight class="normal">,100,0.,2000.);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tppt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tppt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tppt&quot;</highlight><highlight class="normal">,100,0.,500.);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpptlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpptlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpptlo&quot;</highlight><highlight class="normal">,100,0.,2.);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpeta&quot;</highlight><highlight class="normal">,70,-7.,7.);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpnum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpnum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpnum&quot;</highlight><highlight class="normal">,100,0.,1000.);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpsum&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpsum&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpsum&quot;</highlight><highlight class="normal">,100,-100.,100.);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpsumlo&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpsumlo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpsumlo&quot;</highlight><highlight class="normal">,100,-1.,1.);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpbpt&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpbpt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpbpt&quot;</highlight><highlight class="normal">,100,0.,500.);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpbeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpbeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpbeta&quot;</highlight><highlight class="normal">,100,-5.,5.);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpwkid&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpwkid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpwkid&quot;</highlight><highlight class="normal">,50,-25.,25.);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Interactions<sp/>from<sp/>Geant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxr&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpvxr&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpvxr&quot;</highlight><highlight class="normal">,100,0.,500.);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxeta&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpvxeta&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpvxeta&quot;</highlight><highlight class="normal">,60,-3.,3.);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxidin&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight><highlight class="stringliteral">&quot;tpvxidin&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tpvxidin&quot;</highlight><highlight class="normal">,100,0.,100.);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>histograms<sp/>to<sp/>job<sp/>and<sp/>set<sp/>Sumw2</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>ServiceHandle&lt;ITHistSvc&gt;<sp/>histSvc(</highlight><highlight class="stringliteral">&quot;THistSvc&quot;</highlight><highlight class="normal">,name());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,TH1*&gt;::iterator<sp/>h1Itr<sp/>=<sp/>m_TH1.begin();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,TH1*&gt;::iterator<sp/>h1ItrE<sp/>=<sp/>m_TH1.end();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>h1Itr<sp/>!=<sp/>h1ItrE;<sp/>++h1Itr){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1*<sp/>h1<sp/>=<sp/>(*h1Itr).second;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>h1-&gt;Sumw2();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(<sp/>histSvc-&gt;regHist(std::string(</highlight><highlight class="stringliteral">&quot;/MYSTREAM/&quot;</highlight><highlight class="normal">)+h1-&gt;GetName(),h1)<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,TH2*&gt;::iterator<sp/>h2Itr<sp/>=<sp/>m_TH2.begin();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,TH2*&gt;::iterator<sp/>h2ItrE<sp/>=<sp/>m_TH2.end();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>h2Itr<sp/>!=<sp/>h2ItrE;<sp/>++h2Itr){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>TH2*<sp/>h2<sp/>=<sp/>(*h2Itr).second;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>h2-&gt;Sumw2();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(<sp/>histSvc-&gt;regHist(std::string(</highlight><highlight class="stringliteral">&quot;/MYSTREAM/&quot;</highlight><highlight class="normal">)+h2-&gt;GetName(),h2)<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wanted<sp/>to<sp/>restructure<sp/>this<sp/>more<sp/>like<sp/>real<sp/>analysis:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(1)<sp/>Get<sp/>objects<sp/>and<sp/>apply<sp/>CP<sp/>tools<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(2)<sp/>Remove<sp/>overlaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(3)<sp/>Make<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>many<sp/>tools<sp/>missing,<sp/>and<sp/>intermediate<sp/>plots<sp/>useful.<sp/>Have<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>collections<sp/>to<sp/>xExampleEDM.h<sp/>to<sp/>facilitate<sp/>this<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>m_eventCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>m_warnCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>m_warnLimit<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//initialize<sp/>all<sp/>the<sp/>tools<sp/>(configured<sp/>in<sp/>the<sp/>job<sp/>options)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>m_jetCleaningTool.setTypeAndName(</highlight><highlight class="stringliteral">&quot;JetCleaningTool/JetCleaning&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>CHECK(<sp/>m_jetCleaningTool.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>m_akt4LCTopoCalibrationTool.setTypeAndName(</highlight><highlight class="stringliteral">&quot;JetCalibrationTool/JetCalibLCTopo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>CHECK(<sp/>m_akt4LCTopoCalibrationTool.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool.setTypeAndName(</highlight><highlight class="stringliteral">&quot;JetCalibrationTool/JetCalibEMTopo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>CHECK(<sp/>m_akt4EMTopoCalibrationTool.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>m_metRebuilder.setTypeAndName(</highlight><highlight class="stringliteral">&quot;met::METRebuilder/metRebuilder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>CHECK(<sp/>m_metRebuilder.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>new<sp/>object<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>clear<sp/>them<sp/>after<sp/>each<sp/>execute()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>for<sp/>Muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>m_newMuons<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>m_newMuonsAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/d01/classxAOD_1_1MuonAuxContainer__v3" kindref="compound">xAOD::MuonAuxContainer</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>m_newMuons-&gt;setStore(m_newMuonsAux);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>for<sp/>Electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>m_newElectrons<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>m_newElectronsAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/dde/classxAOD_1_1ElectronAuxContainer__v3" kindref="compound">xAOD::ElectronAuxContainer</ref>();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>m_newElectrons-&gt;setStore(m_newElectronsAux);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>for<sp/>TauJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>m_newTauJets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TauJetContainer</ref>();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>m_newTauJetsAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d84/classxAOD_1_1TauJetAuxContainer__v2" kindref="compound">xAOD::TauJetAuxContainer</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>m_newTauJets-&gt;setStore(m_newTauJetsAux);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shallow<sp/>copy<sp/>used<sp/>for<sp/>AntiKt4LCTopo<sp/>jets.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_akt4CopyJets<sp/>in<sp/>xExampleEDM.h<sp/>includes<sp/>all<sp/>jets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>View<sp/>container<sp/>provides<sp/>access<sp/>to<sp/>selected<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>m_akt4ViewJets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>used<sp/>for<sp/>AntiKt4EMTopo<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>m_aktem4NewJets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>m_aktem4NewJetsAux<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/dc1/classxAOD_1_1JetAuxContainer__v1" kindref="compound">xAOD::JetAuxContainer</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>m_aktem4NewJets-&gt;setStore(m_aktem4NewJetsAux);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>NOT<sp/>initialize<sp/>containers<sp/>for<sp/>rebuilt<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>done<sp/>in<sp/>METRebuilder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">StatusCode<sp/>xAthExample::finalize()<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO<sp/>(</highlight><highlight class="stringliteral">&quot;Finalizing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Finished<sp/>processing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_eventCounter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>events&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Produced<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_warnCounter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>retrieve<sp/>warnings&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">StatusCode<sp/>xAthExample::execute()<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG<sp/>(</highlight><highlight class="stringliteral">&quot;Executing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_eventCounter==0)<sp/>m_startTime<sp/>=<sp/>time(NULL);<sp/></highlight><highlight class="comment">//time<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(m_eventCounter<sp/>%<sp/>100)<sp/>==0<sp/>){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Event<sp/>number<sp/>=<sp/>%i&quot;</highlight><highlight class="normal">,<sp/>m_eventCounter<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>m_eventCounter++;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>EventInfo</highlight></codeline>
<codeline lineno="317"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>*<sp/>eventInfo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(<sp/>eventInfo,<sp/></highlight><highlight class="stringliteral">&quot;EventInfo&quot;</highlight><highlight class="normal">).isSuccess()<sp/>){</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>EventInfo<sp/>collection.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMC<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a58b04e0f3b70be5c1b2cb7ec1b12f7a0" kindref="member" tooltip="Check for one particular bitmask value.">eventType</ref>(<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ac05adfe37c466a5eedbb5991a0063481aab5db53c3e4e61ccac5962fb23fa3771" kindref="member" tooltip="true: simulation, false: data">xAOD::EventInfo::IS_SIMULATION</ref>)<sp/>)<sp/>isMC<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>relative<sp/>event<sp/>weights,<sp/>necessary<sp/>for<sp/>JZxW<sp/>jets,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Overall<sp/>weight<sp/>is<sp/>sigma*efficiency/Nevent,<sp/>where<sp/>sigma<sp/>and<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>efficiency<sp/>are<sp/>gotten<sp/>from<sp/>AMI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>weights<sp/>=<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1aaa66353a56b59ede862025d543c2f97f" kindref="member" tooltip="The weights of all the MC events used in the simulation.">mcEventWeights</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>weights.size()<sp/>&gt;<sp/>0<sp/>)<sp/>wt<sp/>=<sp/>weights[0];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pileup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intactual&quot;</highlight><highlight class="normal">]-&gt;Fill(eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a83e577703e798c1f1ae1fb42df600d0f" kindref="member">actualInteractionsPerCrossing</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intaverage&quot;</highlight><highlight class="normal">]-&gt;Fill(eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ab1793eb8b17b868d32f441dea04c7a31" kindref="member">averageInteractionsPerCrossing</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;intdiff&quot;</highlight><highlight class="normal">]-&gt;Fill(eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a83e577703e798c1f1ae1fb42df600d0f" kindref="member">actualInteractionsPerCrossing</ref>()<sp/>-<sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ab1793eb8b17b868d32f441dea04c7a31" kindref="member">averageInteractionsPerCrossing</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Primary<sp/>vertices</highlight></codeline>
<codeline lineno="346"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>primary<sp/>vertices.<sp/>First<sp/>vertex<sp/>has<sp/>\max<sp/>\sum<sp/>p_T^2?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>cache<sp/>\sum<sp/>pt^2<sp/>--<sp/>xAOD::Vertex<sp/>only<sp/>has<sp/>multiplicity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::VertexContainer</ref>*<sp/>pVertices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(pVertices,</highlight><highlight class="stringliteral">&quot;PrimaryVertices&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>PrimaryVertices.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>first<sp/>vertex<sp/>is<sp/>correct<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>pVertex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pVertices-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>()<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>pVertex<sp/>=<sp/>(*pVertices)[0];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>primary<sp/>vertex.<sp/>Exiting&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>\sum<sp/>pt^2<sp/>for<sp/>vertices.<sp/>Will<sp/>be<sp/>incorrect<sp/>if<sp/>tracks<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thinned,<sp/>so<sp/>do<sp/>not<sp/>replace<sp/>primary<sp/>vertex<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>check<sp/>validity<sp/>of<sp/>*all*<sp/>ElementLinks.<sp/>Otherwise<sp/>code<sp/>may<sp/>die</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>run<sp/>on<sp/>derived<sp/>xAOD<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>nv2<sp/>and<sp/>nv5<sp/>will<sp/>be<sp/>*wrong*<sp/>if<sp/>tracks<sp/>are<sp/>thinned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iVertex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pt2PV<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nv2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nv5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::VertexContainer::const_iterator</ref><sp/>vtxItr<sp/>=<sp/>pVertices-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::VertexContainer::const_iterator</ref><sp/>vtxItrE<sp/>=<sp/>pVertices-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivtx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>vtxItr!=vtxItrE;<sp/>++vtxItr){</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>++ivtx;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntrkv<sp/>=<sp/>(*vtxItr)-&gt;nTrackParticles();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ntrkv<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ntrkv<sp/>&gt;<sp/>1<sp/>)<sp/>++nv2;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ntrkv<sp/>&gt;<sp/>4<sp/>)<sp/>++nv5;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>primary<sp/>vertex<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>ElementLink&lt;xAOD::TrackParticleContainer&gt;<sp/>&gt;<sp/>vxTracks<sp/>=<sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*vtxItr)-&gt;trackParticleLinks();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptsum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>it=0;<sp/>it&lt;vxTracks.size();<sp/>++it){</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(vxTracks[it]).isValid()<sp/>){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dereference<sp/>an<sp/>ElementLink<sp/>to<sp/>get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>trkit<sp/>=<sp/>*(vxTracks[it]);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>trkit<sp/>)<sp/>ptsum<sp/>+=<sp/>trkit-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a604c64ea8bf6798578e67def61bd6389" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>().Perp2();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptsum<sp/>&gt;<sp/>pt2PV<sp/>){</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pt2PV<sp/>=<sp/>ptsum;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iVertex<sp/>=<sp/>ivtx;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z0PV<sp/>=<sp/>pVertex-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a9173ecba7b08275d3438d274a4869814" kindref="member" tooltip="Returns the z position.">z</ref>();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntrkVertex<sp/>=<sp/>pVertex-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a24fcd904109cdb65100d8087d7d2caf1" kindref="member" tooltip="Get the number of tracks associated with this vertex.">nTrackParticles</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>histograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxntrk&quot;</highlight><highlight class="normal">]-&gt;Fill(ntrkVertex,<sp/>wt);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxidx&quot;</highlight><highlight class="normal">]-&gt;Fill(std::min(iVertex,49),<sp/>wt);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxz0&quot;</highlight><highlight class="normal">]-&gt;Fill(z0PV,<sp/>wt);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxn2&quot;</highlight><highlight class="normal">]-&gt;Fill(nv2,<sp/>wt);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;privtxn5&quot;</highlight><highlight class="normal">]-&gt;Fill(nv5,<sp/>wt);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>particles</highlight></codeline>
<codeline lineno="418"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>information<sp/>in<sp/>xAOD<sp/>has<sp/>linked<sp/>TruthParticle<sp/>and<sp/>TruthVertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>containers.<sp/>Particles<sp/>have<sp/>parent<sp/>and<sp/>decay<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>follow<sp/>sequence<sp/>of<sp/>decays<sp/>to<sp/>find<sp/>all<sp/>descendants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TruthParticleContainer</ref>*<sp/>truths<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Following<sp/>mainly<sp/>relevant<sp/>to<sp/>ttbar<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>const<sp/>xAOD::TruthParticle*<sp/>&gt;<sp/>bHadrons;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>wLeptons;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>wElectrons;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>wMuons;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>wTauJets;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>const<sp/>xAOD::TruthParticle*<sp/>&gt;<sp/>wkids;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isMC<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eTruth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTruth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>TruthParticle,<sp/>NOT<sp/>TruthParticles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>contains()<sp/>test<sp/>to<sp/>avoid<sp/>warning<sp/>message<sp/>for<sp/>each<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;xAOD::TruthParticleContainer&gt;(</highlight><highlight class="stringliteral">&quot;TruthParticle&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(<sp/>truths,<sp/></highlight><highlight class="stringliteral">&quot;TruthParticle&quot;</highlight><highlight class="normal"><sp/>)<sp/>){</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>TruthParticle.<sp/>Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>TruthParticle.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MC<sp/>samples<sp/>may<sp/>not<sp/>contain<sp/>truth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>truths<sp/>){</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::TruthParticleContainer::const_iterator</ref><sp/>tpItr<sp/>=<sp/>truths-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::TruthParticleContainer::const_iterator</ref><sp/>tpItrE<sp/>=<sp/>truths-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stable<sp/>particles<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>for<sp/>PowhegPythia<sp/>ttbar!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Powheg<sp/>has<sp/>detached<sp/>W&apos;s<sp/>with<sp/>status==3<sp/>children<sp/>and<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stable<sp/>descendants.<sp/>Remove<sp/>status!=1<sp/>and<sp/>no<sp/>decayVtx().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>tpItr<sp/>!=<sp/>tpItrE;<sp/>++tpItr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(*tpItr)-&gt;m()<sp/>gives<sp/>ZERO<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generator<sp/>stable<sp/>particles<sp/>have<sp/><sp/>status==1<sp/>&amp;&amp;<sp/>barcode&lt;100000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>status==1<sp/>particles<sp/>are<sp/>from<sp/>pileup<sp/>or<sp/>Geant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGS<sp/>=<sp/>(*tpItr)-&gt;status()==1<sp/>&amp;&amp;<sp/>(*tpItr)-&gt;barcode()&lt;100000;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isGS<sp/>){</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tppt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpptlo&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*tpItr)-&gt;pt()<sp/>&gt;<sp/>0<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nTruth;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTruth<sp/>+=<sp/>(*tpItr)-&gt;e();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>isGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stable<sp/>particles<sp/>with<sp/>decay<sp/>vertex<sp/>give<sp/>Geant<sp/>secondaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>vertex<sp/>location<sp/>and<sp/>particle<sp/>type<sp/>to<sp/>see<sp/>what<sp/>is<sp/>being<sp/>kept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isGS<sp/>&amp;&amp;<sp/>(*tpItr)-&gt;hasDecayVtx()<sp/>){</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1" kindref="compound">xAOD::TruthVertex</ref>*<sp/>dvtx<sp/>=<sp/>(*tpItr)-&gt;decayVtx();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dvtx<sp/>){</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxr&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>dvtx-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1af35117431775cc1c1f3e75851bff8f76" kindref="member" tooltip="Vertex transverse distance from the beam line.">perp</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dvtx-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1af35117431775cc1c1f3e75851bff8f76" kindref="member" tooltip="Vertex transverse distance from the beam line.">perp</ref>()<sp/>&gt;<sp/>0<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>dvtx-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1a14ffef8b6d1e8c59193c7dc0b19db428" kindref="member" tooltip="Vertex pseudorapidity.">eta</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idabs<sp/>=<sp/>std::abs(<sp/>(*tpItr)-&gt;pdgId()<sp/>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>all<sp/>hadrons<sp/>as<sp/>id=99</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpvxidin&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>std::min(idabs,99)<sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B<sp/>hadrons<sp/>-<sp/>plot<sp/>and<sp/>save<sp/>TruthParticle*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isBHadron(*tpItr)<sp/>){</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpbpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpbeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tpItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bHadrons.push_back(*tpItr);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W<sp/>leptonic<sp/>decays<sp/>-<sp/>e/mu/tau<sp/>among<sp/>first<sp/>generation<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generator<sp/>specific:<sp/>used<sp/>mainly<sp/>with<sp/>PowhegPythia6<sp/>ttbar<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>possible<sp/>virtual<sp/>W<sp/>in<sp/>B<sp/>decays<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>abs((*tpItr)-&gt;pdgId())<sp/>==<sp/>24<sp/>&amp;&amp;<sp/>(*tpItr)-&gt;p4().M()<sp/>&gt;<sp/>5000<sp/>){</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>badW<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hadW<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1" kindref="compound">xAOD::TruthVertex</ref>*<sp/>dvtx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*tpItr)-&gt;hasDecayVtx()<sp/>)<sp/>(*tpItr)-&gt;decayVtx();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>valid<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dvtx<sp/>){</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>ElementLink&lt;xAOD::TruthParticleContainer&gt;<sp/>&gt;&amp;<sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outPart<sp/>=<sp/>dvtx-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1a176e729a6c2fbcc9ccd2a96c1fce1d05" kindref="member" tooltip="Get all the outgoing particles.">outgoingParticleLinks</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lepIda<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;outPart.size();<sp/>++k){</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>(outPart[k]).isValid()<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>kid<sp/>=<sp/>*(outPart[k]);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>kid<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kidId<sp/>=<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1acb4c67ce31fc8b37847f8a31e79a4c" kindref="member" tooltip="PDG ID code.">pdgId</ref>();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kidIda<sp/>=<sp/>std::abs(kidId);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>self-decays,<sp/>W<sp/>-&gt;<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kidId<sp/>==<sp/>(*tpItr)-&gt;pdgId()<sp/>)<sp/>badW<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PowhegPythia6<sp/>has<sp/>W&apos;s<sp/>with<sp/>no<sp/>real<sp/>descendants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>!(kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a13d49b87d6fd9148a716341be8253ed9" kindref="member" tooltip="The decay vertex of this particle.">decayVtx</ref>())<sp/>)<sp/>badW<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!badW<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpwkid&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1acb4c67ce31fc8b37847f8a31e79a4c" kindref="member" tooltip="PDG ID code.">pdgId</ref>()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>leptonic<sp/>W<sp/>decays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kidIda==11<sp/>||<sp/>kidIda==13<sp/>||<sp/>kidIda==15<sp/>){</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hadW<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lepIda<sp/>=<sp/>std::abs(kidId);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wLeptons.push_back(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>()<sp/>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>non-neutrino<sp/>stable<sp/>descendants,<sp/>including<sp/>leptons,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>photons,<sp/>and<sp/>hadrons<sp/>from<sp/>taus.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getDescendants<sp/>replaces<sp/>HepMC<sp/>descendants<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!hadW<sp/>&amp;&amp;<sp/>!badW<sp/>){</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDescendants(<sp/>(*tpItr),<sp/>wkids<sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pwvis;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nuemu<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wkids.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>kid<sp/>=<sp/>wkids[kk];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ida<sp/>=<sp/>std::abs(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1acb4c67ce31fc8b37847f8a31e79a4c" kindref="member" tooltip="PDG ID code.">pdgId</ref>()<sp/>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ida==12<sp/>||<sp/>ida==14<sp/>)<sp/>nuemu<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()==1<sp/>&amp;&amp;<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a67b81d8c6616ba826f9694ff24b613d4" kindref="member">barcode</ref>()&lt;100000<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ida!=12<sp/>&amp;&amp;<sp/>ida!=14<sp/>&amp;&amp;<sp/>ida!=16<sp/>){</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwvis<sp/>+=<sp/>kid-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lepIda==11<sp/>)<sp/>wElectrons.push_back(<sp/>pwvis<sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lepIda==13<sp/>)<sp/><sp/>wMuons.push_back(<sp/>pwvis<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lepIda==15<sp/>&amp;&amp;<sp/>!nuemu<sp/>)<sp/>wTauJets.push_back(<sp/>pwvis<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>id==24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>tpItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>multiplicity<sp/>and<sp/>energy<sp/>(Ecm<sp/>hard<sp/>coded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expect<sp/>eTruth<sp/>=<sp/>Ecm,<sp/>but<sp/>not<sp/>true<sp/>for<sp/>PowhegPythia6<sp/>ttbar<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Ecm<sp/>=<sp/>8000.;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpnum&quot;</highlight><highlight class="normal">]-&gt;Fill(nTruth,<sp/>wt);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpsum&quot;</highlight><highlight class="normal">]-&gt;Fill(eTruth/1000.<sp/>-<sp/>Ecm,<sp/>wt);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tpsumlo&quot;</highlight><highlight class="normal">]-&gt;Fill(eTruth/1000.<sp/>-<sp/>Ecm,<sp/>wt);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>truths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>isMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Muons</highlight></codeline>
<codeline lineno="575"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>Muons<sp/>from<sp/>the<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>m_muons<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;xAOD::MuonContainer&gt;(</highlight><highlight class="stringliteral">&quot;Muons&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(m_muons,<sp/></highlight><highlight class="stringliteral">&quot;Muons&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>Muons.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>Muons.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_muons<sp/>){</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>muItr<sp/>=<sp/>m_muons-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::MuonContainer::const_iterator</ref><sp/>muItrE<sp/>=<sp/>m_muons-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>muItr<sp/>!=<sp/>muItrE;<sp/>++muItr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mupt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*muItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mueta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*muItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muphi&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*muItr)-&gt;phi()/M_PI<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mutype<sp/>=<sp/>(*muItr)-&gt;muonType();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mutype&quot;</highlight><highlight class="normal">]-&gt;Fill(mutype,<sp/>wt);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>muquality<sp/>=<sp/>(*muItr)-&gt;quality();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muquality&quot;</highlight><highlight class="normal">]-&gt;Fill(muquality,<sp/>wt);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mutype!=xAOD::Muon::Combined<sp/>||<sp/>muquality!=xAOD::Muon::Tight)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>have<sp/>Muon<sp/>CP<sp/>tools<sp/>yet,<sp/>so<sp/>just<sp/>copy&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Would<sp/>be<sp/>done<sp/>internally<sp/>by<sp/>CP<sp/>correctedCopy()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>*<sp/>tmpmu<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpmu-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(**muItr);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_newMuons-&gt;push_back(tmpmu);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>muItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>from<sp/>m_newMuons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>muItr<sp/>=<sp/>m_newMuons-&gt;begin();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>muItrE<sp/>=<sp/>m_newMuons-&gt;end();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>muItr!=muItrE;<sp/>++muItr){</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>*<sp/>amuon<sp/>=<sp/>(*muItr);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()<sp/>&lt;<sp/>20000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mugoodpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mugoodeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Isolation<sp/>variables<sp/>are<sp/>track<sp/>ptcone20,ptcone30,ptcone40<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calorimeter<sp/>etcone20,etcone30,etcone40.<sp/>Do<sp/>just<sp/>one:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptc30<sp/>=<sp/>-666.;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a0f955a0deee65306b56220533b4d7cd9" kindref="member" tooltip="Accessor for Isolation values. If &amp;#39;information&amp;#39; is stored in this xAOD::Muon...">isolation</ref>(ptc30,<sp/>xAOD::Iso::ptcone30);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muptc30&quot;</highlight><highlight class="normal">]-&gt;Fill(ptc30/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dereference<sp/>an<sp/>ElementLink<sp/>to<sp/>get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>pt<sp/>of<sp/>inner<sp/>detector<sp/>track<sp/>and<sp/>muon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>idlink<sp/>=</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>idlink.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>idtrack<sp/>=<sp/>*idlink;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>idtrack<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;muidrat&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>idtrack-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a4354004bc5b79bf39d3ea87ed4347387" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/amuon-&gt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>muItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Electrons</highlight></codeline>
<codeline lineno="648"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>m_electrons<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;ElectronCollection&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(m_electrons,<sp/></highlight><highlight class="stringliteral">&quot;ElectronCollection&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>ElectronCollection.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>ElectronCollection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_electrons<sp/>){</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Electron<sp/>inherits<sp/>from<sp/>Egamma,<sp/>which<sp/>contains<sp/>most<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isolation<sp/>for<sp/>Muon<sp/>but<sp/>isolationValue<sp/>for<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iso<sp/>for<sp/>Muon<sp/>but<sp/>EgammaParameters<sp/>for<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>eItr<sp/>=<sp/>m_electrons-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::ElectronContainer::const_iterator</ref><sp/>eItrE<sp/>=<sp/>m_electrons-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>eItr<sp/>!=<sp/>eItrE;<sp/>++eItr){</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pel<sp/>=<sp/>(*eItr)-&gt;p4();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*eItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eleta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*eItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elphi&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*eItr)-&gt;phi()/M_PI<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elauthor&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*eItr)-&gt;author()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>good<sp/>electrons<sp/>-<sp/>no<sp/>CP<sp/>tools<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>egood<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*eItr)-&gt;auxdata&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;Tight&quot;</highlight><highlight class="normal">)<sp/>)<sp/>egood<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgood&quot;</highlight><highlight class="normal">]-&gt;Fill(egood,<sp/>wt);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!egood<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>have<sp/>Electron<sp/>CP<sp/>tools<sp/>yet,<sp/>so<sp/>just<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Would<sp/>be<sp/>done<sp/>internally<sp/>by<sp/>CP<sp/>correctedCopy()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>tmpel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpel-&gt;makePrivateStore(**eItr);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(tmpel);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>from<sp/>m_newElectrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>eItr<sp/>=<sp/>m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>eItrE<sp/>=<sp/>m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>eItr!=eItrE;<sp/>++eItr){</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>anelectron<sp/>=<sp/>(*eItr);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>anelectron-&gt;pt()<sp/>&lt;<sp/>20000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pel<sp/>=<sp/>anelectron-&gt;p4();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgoodpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>anelectron-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elgoodeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>anelectron-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elntrk&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>anelectron-&gt;nTrackParticles()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pttrk<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>anelectron-&gt;nTrackParticles()<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pttrk<sp/>=<sp/>fabs(<sp/>anelectron-&gt;trackParticle(0)-&gt;pt()<sp/>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pttrk&gt;0<sp/>)<sp/>pttrk<sp/>=<sp/>anelectron-&gt;pt()/pttrk;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eleoverp&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>pttrk<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>isolation<sp/>variables<sp/>as<sp/>for<sp/>muon<sp/>but<sp/>different<sp/>syntax:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isolation<sp/>for<sp/>Muon<sp/>but<sp/>isolationValue<sp/>for<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iso<sp/>for<sp/>Muon<sp/>but<sp/>EgammaParameters<sp/>for<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>etc30<sp/>=<sp/>-666.;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>anelectron-&gt;isolationValue(etc30,<sp/>xAOD::Iso::etcone30);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eletc30&quot;</highlight><highlight class="normal">]-&gt;Fill(etc30,<sp/>wt);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>to<sp/>truth<sp/>electrons<sp/>from<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>4-vector<sp/>is<sp/>sum<sp/>of<sp/>e<sp/>+<sp/>gammas<sp/>from<sp/>W<sp/>descendants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtrue<sp/>=<sp/>0.999;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pttrue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wElectrons.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drkk<sp/>=<sp/>pel.DeltaR(<sp/>wElectrons[kk]<sp/>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>drkk<sp/>&lt;<sp/>rtrue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtrue<sp/>=<sp/>drkk;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pttrue<sp/>=<sp/>wElectrons[kk].Perp();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;eldrtrue&quot;</highlight><highlight class="normal">]-&gt;Fill(rtrue,wt);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rtrue<sp/>&lt;<sp/>0.1<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;elptrat&quot;</highlight><highlight class="normal">]-&gt;Fill(anelectron-&gt;pt()/pttrue,<sp/>wt);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>for<sp/>eItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TauJets</highlight></codeline>
<codeline lineno="740"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>TauJets<sp/>from<sp/>the<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>m_tauJets<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TauJetContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;TauRecContainer&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(m_tauJets,<sp/></highlight><highlight class="stringliteral">&quot;TauRecContainer&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>TauRecContainer.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>TauRecContainer.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_tauJets<sp/>){</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::TauJetContainer::const_iterator</ref><sp/>tauItr<sp/>=<sp/>m_tauJets-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::TauJetContainer::const_iterator</ref><sp/>tauItrE<sp/>=<sp/>m_tauJets-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>tauItr<sp/>!=<sp/>tauItrE;<sp/>++tauItr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>ptau<sp/>=<sp/>(*tauItr)-&gt;p4();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taupt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*tauItr)-&gt;pt()<sp/>&lt;<sp/>20000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taueta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauphi&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;phi()/M_PI<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TauID<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tauLoose<sp/>=<sp/></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tauItr)-&gt;isTau(<sp/>xAOD::TauJetParameters::JetBDTSigLoose<sp/>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tauMedium<sp/>=<sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tauItr)-&gt;isTau(<sp/>xAOD::TauJetParameters::JetBDTSigMedium<sp/>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tauTight<sp/>=<sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tauItr)-&gt;isTau(<sp/>xAOD::TauJetParameters::JetBDTSigTight<sp/>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tauLoose<sp/>)<sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">]-&gt;Fill(1,<sp/>wt);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tauMedium<sp/>)<sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">]-&gt;Fill(2,<sp/>wt);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tauTight<sp/>)<sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauid&quot;</highlight><highlight class="normal">]-&gt;Fill(3,<sp/>wt);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bdt<sp/>=<sp/>(*tauItr)-&gt;discriminant(<sp/>xAOD::TauJetParameters::BDTJetScore<sp/>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taubdt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>bdt<sp/>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!tauTight<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>tight<sp/>Electron<sp/>overlaps,<sp/>DeltaR<sp/>&lt;<sp/>0.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtaue<sp/>=<sp/>1.999;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ie=0;<sp/>ie&lt;m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>();<sp/>++ie){</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>elie<sp/>=<sp/>(*m_newElectrons)[ie];</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dr<sp/>=<sp/>ptau.DeltaR(elie-&gt;p4());</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dr<sp/>&lt;<sp/>rtaue<sp/>)<sp/>rtaue<sp/>=<sp/>dr;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;taudrelvpt&quot;</highlight><highlight class="normal">]-&gt;Fill(ptau.Perp()/1000.,rtaue,wt);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rtaue<sp/>&lt;<sp/>0.2<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>have<sp/>TauJet<sp/>CP<sp/>tools<sp/>yet,<sp/>so<sp/>just<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Would<sp/>be<sp/>done<sp/>internally<sp/>by<sp/>CP<sp/>correctedCopy()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>*<sp/>tmptau<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmptau-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(**tauItr);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_newTauJets-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(tmptau);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>for<sp/>tauItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>from<sp/>m_newTauJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>tauItr<sp/>=<sp/>m_newTauJets-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>tauItrE<sp/>=<sp/>m_newTauJets-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>tauItr!=tauItrE;<sp/>++tauItr){</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*tauItr)-&gt;pt()<sp/>&lt;<sp/>40000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>ptau<sp/>=<sp/>(*tauItr)-&gt;p4();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodpt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;eta()<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bdt<sp/>=<sp/>(*tauItr)-&gt;discriminant(<sp/>xAOD::TauJetParameters::BDTJetScore<sp/>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taugoodbdt&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>bdt<sp/>);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exercise<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tau-&gt;nTracks()<sp/>gives<sp/>segfault.<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>true<sp/>in<sp/>_r5591_r5625</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/***********</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[&quot;taugoodntrk&quot;]-&gt;Fill(<sp/>(*tauItr)-&gt;nTracks()<sp/>);</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>ElementLink&lt;xAOD::TrackParticleContainer&gt;<sp/>&gt;<sp/>tautrks<sp/>=</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tauItr)-&gt;trackLinks();</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for(unsigned<sp/>int<sp/>it=0;<sp/>it&lt;tautrks.size();<sp/>++it){</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>!(tautrks[it]).isValid()<sp/>)<sp/>continue;</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>xAOD::TrackParticle*<sp/>trk<sp/>=<sp/>*(tautrks[it]);</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>trk<sp/>)<sp/>m_TH1[&quot;taugoodptrtrk&quot;]-&gt;Fill(<sp/>trk-&gt;pt()/(*tauItr)-&gt;pt(),<sp/>wt);</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>***********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>to<sp/>W<sp/>-&gt;<sp/>hadtau<sp/>nu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rtrue<sp/>=<sp/>0.999;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pttrue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wTauJets.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>wTauJets[kk].Perp()&lt;=0<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drkk<sp/>=<sp/>ptau.DeltaR(<sp/>wTauJets[kk]<sp/>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>drkk<sp/>&lt;<sp/>rtrue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtrue<sp/>=<sp/>drkk;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pttrue<sp/>=<sp/>wTauJets[kk].Perp();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>to<sp/>truth<sp/>W<sp/>-&gt;<sp/>tau<sp/>nu,<sp/>!tau<sp/>-&gt;<sp/>e,mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>all<sp/>isGenStable<sp/>decay<sp/>products<sp/>other<sp/>than<sp/>neutrinos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;taudrtrue&quot;</highlight><highlight class="normal">]-&gt;Fill(rtrue,<sp/>wt);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rtrue&lt;0.1<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tauptrat&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>(*tauItr)-&gt;pt()/pttrue<sp/>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>for<sp/>tauItr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;wTauJets.size();<sp/>++i){</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tautruept&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>wTauJets[i].Perp()/1000.<sp/>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>wTauJets[i].Perp()&lt;=<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;tautrueeta&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>wTauJets[i].PseudoRapidity()<sp/>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_tauJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4Truth<sp/>Jets</highlight></codeline>
<codeline lineno="856"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>m_akt4TruthJets<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isMC<sp/>){</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;xAOD::JetContainer&gt;(</highlight><highlight class="stringliteral">&quot;AntiKt4TruthJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(m_akt4TruthJets,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4TruthJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>AntiKt4TruthJets.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>AntiKt4TruthJets.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_akt4TruthJets<sp/>){</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>aktT4Itr<sp/>=<sp/>m_akt4TruthJets-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>aktT4ItrE<sp/>=<sp/>m_akt4TruthJets-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>aktT4Itr<sp/>!=<sp/>aktT4ItrE;<sp/>++aktT4Itr){</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>(*aktT4Itr)-&gt;p4();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>leptonic<sp/>W<sp/>decays<sp/>from<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rlep<sp/>=<sp/>1.999;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wLeptons.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drkk<sp/>=<sp/>pjet.DeltaR(<sp/>wLeptons[kk]<sp/>);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlep<sp/>=<sp/>TMath::Min(rlep,drkk);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rlep<sp/>&lt;<sp/>0.4<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptj<sp/>=<sp/>(*aktT4Itr)-&gt;pt()/1000.;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4pt&quot;</highlight><highlight class="normal">]-&gt;Fill(ptj,<sp/>wt);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4ptlo&quot;</highlight><highlight class="normal">]-&gt;Fill(ptj,<sp/>wt);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4eta&quot;</highlight><highlight class="normal">]-&gt;Fill((*aktT4Itr)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktT4phi&quot;</highlight><highlight class="normal">]-&gt;Fill((*aktT4Itr)-&gt;phi()/M_PI,<sp/>wt);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_akt4TruthJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>isMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4LCTopo<sp/>Jets<sp/>and<sp/>B<sp/>jets</highlight></codeline>
<codeline lineno="900"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;<ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;AntiKt4LCTopoJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(m_akt4Jets,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4LCTopoJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>AntiKt4LCTopoJets.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>AntiKt4LCTopoJets.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reconstructed<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>shallow<sp/>copy<sp/>using<sp/>variables<sp/>in<sp/>xExampleEDM.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>m_badJetPtMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_akt4Jets<sp/>){</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>m_akt4CopyJets<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a085ed78569d97f9ff21bea6a65b4aea3" kindref="member">xAOD::shallowCopyContainer</ref>(<sp/>*m_akt4Jets<sp/>);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">xAOD::JetContainer::iterator</ref><sp/>akt4Itr<sp/>=<sp/><sp/>(m_akt4CopyJets.first)-&gt;begin();</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">xAOD::JetContainer::iterator</ref><sp/>akt4ItrE<sp/>=<sp/>(m_akt4CopyJets.first)-&gt;end();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>akt4Itr<sp/>!=<sp/>akt4ItrE;<sp/>++akt4Itr){</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGood<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>(*akt4Itr)-&gt;p4();</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref><sp/>p4aod<sp/>=<sp/>(*akt4Itr)-&gt;jetP4();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptj<sp/>=<sp/>(*akt4Itr)-&gt;pt()/1000.;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>cleaning<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_jetCleaningTool-&gt;keep(**akt4Itr)<sp/>){</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptbad&quot;</highlight><highlight class="normal">]-&gt;Fill(ptj,<sp/>wt);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4etabad&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isGood<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Appropriate<sp/>scale<sp/>for<sp/>bad<sp/>jet?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_badJetPtMax<sp/>=<sp/>std::max(m_badJetPtMax,<sp/>ptj);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>JetCalibration<sp/>tool.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibration<sp/>already<sp/>applied<sp/>in<sp/>valid1<sp/>samples;<sp/>applying<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>makes<sp/>JES<sp/>worse.<sp/>Should<sp/>apply<sp/>to<sp/>old<sp/>scale.<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JetArea<sp/>pileup<sp/>subtraction<sp/>applied<sp/>in<sp/>mc14<sp/>samples,<sp/>so<sp/>omit<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>xExample::initialize().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>jetP4(),<sp/>setJetP4()<sp/>use<sp/>JetFourMom_t,<sp/>which<sp/>is<sp/>a<sp/>Math::LorentzVector,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>a<sp/>TLorentzVector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_akt4LCTopoCalibrationTool-&gt;applyCalibration(**akt4Itr)<sp/>){</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>apply<sp/>shallow-copy<sp/>calibration.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*akt4Itr)-&gt;setJetP4(</highlight><highlight class="stringliteral">&quot;xaodscale&quot;</highlight><highlight class="normal">,p4aod);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>to<sp/>original<sp/>jets<sp/>needed<sp/>for<sp/>METRebuilder.<sp/>See<sp/>setObjLink<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://twiki.cern.ch/twiki/bin/viewauth/AtlasProtected/METUtilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>do<sp/>this<sp/>for<sp/>EVERY<sp/>jet<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::IParticleContainer &gt;</ref><sp/>link(*m_akt4Jets,(*akt4Itr)-&gt;index());</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_objLinkAcc(**akt4Itr)<sp/>=<sp/>link;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibration<sp/>factors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptj&gt;ptLim[ib]<sp/>&amp;&amp;<sp/>ptj&lt;ptLim[ib+1]<sp/>){</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4calib&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calib<sp/>=<sp/>(*akt4Itr)-&gt;pt()/p4aod.pt();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]-&gt;Fill(calib,<sp/>wt);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>electron<sp/>overlaps<sp/>after<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>omit<sp/>jet<sp/>from<sp/>view<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rjete<sp/>=<sp/>1.999;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ie=0;<sp/>ie&lt;m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>();<sp/>++ie){</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>elie<sp/>=<sp/>(*m_newElectrons)[ie];</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dr<sp/>=<sp/>pjet.DeltaR(elie-&gt;p4());</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dr<sp/>&lt;<sp/>rjete<sp/>)<sp/>rjete<sp/>=<sp/>dr;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4drelvpt&quot;</highlight><highlight class="normal">]-&gt;Fill(pjet.Perp()/1000.,<sp/>rjete,<sp/>wt);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>jet<sp/>if<sp/>not<sp/>removed<sp/>by<sp/>cleaning<sp/>and<sp/>does<sp/>not<sp/>match<sp/>electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rjete<sp/>&gt;<sp/>0.2<sp/>&amp;&amp;<sp/>isGood<sp/>)<sp/>m_akt4ViewJets-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>((*akt4Itr));</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>for<sp/>akt4Itr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>calibrated<sp/>jets<sp/>in<sp/>TStore<sp/>for<sp/>METRebuilder<sp/>in<sp/>evtStore()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hence<sp/>do<sp/>NOT<sp/>delete<sp/>them<sp/>at<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;record(m_akt4CopyJets.first,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4LCCalibJets&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!evtStore()-&gt;record(m_akt4CopyJets.second,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4LCCalibJetsAux.&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>record<sp/>AntiKt4LCCalibJets.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>calibration<sp/>plots<sp/>with<sp/>recalibrated<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>akt4Itr2=(m_akt4ViewJets)-&gt;begin();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>akt4Itr2E=(m_akt4ViewJets)-&gt;end();</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>akt4Itr2!=akt4Itr2E;<sp/>++akt4Itr2){</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>ajet<sp/>=<sp/>(*akt4Itr2);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>ajet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1aa8e568b53d3eef9e2a5df94b9dfac8d5" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref><sp/>p4aod<sp/>=<sp/>ajet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a166db7944b9111045c827ad664fc7883" kindref="member" tooltip="The full 4-momentum of the particle : internal jet type.">jetP4</ref>(</highlight><highlight class="stringliteral">&quot;xaodscale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>calibrated<sp/>to<sp/>truth<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bin<sp/>in<sp/>pttrue,<sp/>so<sp/>do<sp/>before<sp/>pt<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_akt4TruthJets<sp/>){</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drtrue<sp/>=<sp/>666.;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itrue<sp/>=<sp/>-666;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>it=0;<sp/>it&lt;m_akt4TruthJets-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>();<sp/>++it){</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>jit<sp/>=<sp/>(*m_akt4TruthJets)[it];</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drit<sp/>=<sp/>pjet.DeltaR(jit-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1aa8e568b53d3eef9e2a5df94b9dfac8d5" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>());</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>drit<sp/>&lt;<sp/>drtrue<sp/>){</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drtrue<sp/>=<sp/>drit;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itrue<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itrue<sp/>&gt;<sp/>-1<sp/>){</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4drtruecalib&quot;</highlight><highlight class="normal">]-&gt;Fill(drtrue,<sp/>wt);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptjT<sp/>=<sp/>((*m_akt4TruthJets)[itrue])-&gt;pt();</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jescalib<sp/>=<sp/>ajet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/ptjT;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jesaod<sp/>=<sp/>p4aod.pt()/ptjT;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptjT<sp/>=<sp/>ptjT/1000.;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>drtrue<sp/>&lt;<sp/>0.1<sp/>){</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4jesvpt&quot;</highlight><highlight class="normal">]-&gt;Fill(ptjT,jesaod,<sp/>wt);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptjT&gt;ptLim[ib]<sp/>&amp;&amp;<sp/>ptjT&lt;ptLim[ib+1]){</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jescalib&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]-&gt;Fill(jescalib,<sp/>wt);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jes&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str2.c_str()]-&gt;Fill(jesaod,<sp/>wt);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_akt4TruthJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>akt4Itr2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>valid1<sp/>samples<sp/>are<sp/>produced<sp/>with<sp/>calibration;<sp/>applying<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>made<sp/>JES<sp/>worse.<sp/>Hence<sp/>akt4Itr3<sp/>with<sp/>various<sp/>options.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>is<sp/>for<sp/>MC14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>with<sp/>original<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xAOD::JetContainer::const_iterator<sp/>akt4Itr3<sp/>=<sp/>m_akt4Jets-&gt;begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xAOD::JetContainer::const_iterator<sp/>akt4Itr3E<sp/>=<sp/>m_akt4Jets-&gt;end();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>remaining<sp/>plots<sp/>with<sp/>recalibrated<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>akt4Itr3=(m_akt4ViewJets)-&gt;begin();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>akt4Itr3E=(m_akt4ViewJets)-&gt;end();</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>akt4Itr3!=akt4Itr3E;<sp/>++akt4Itr3){</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>ajet<sp/>=<sp/>(*akt4Itr3);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>ajet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1aa8e568b53d3eef9e2a5df94b9dfac8d5" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>leptonic<sp/>W<sp/>decays<sp/>from<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rlep<sp/>=<sp/>1.999;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;<sp/>kk&lt;wLeptons.size();<sp/>++kk){</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>drkk<sp/>=<sp/>pjet.DeltaR(<sp/>wLeptons[kk]<sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlep<sp/>=<sp/>std::min(rlep,drkk);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4rlep&quot;</highlight><highlight class="normal">]-&gt;Fill(rlep,<sp/>wt);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rlep<sp/>&lt;<sp/>0.4<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptj<sp/>=<sp/>(*akt4Itr3)-&gt;pt()/1000.;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4pt&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptlo&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4eta&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4phi&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;phi()/M_PI,<sp/>wt);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>jet<sp/>cuts<sp/>for<sp/>remaining<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*akt4Itr3)-&gt;pt()&lt;20000.<sp/>||<sp/>fabs((*akt4Itr3)-&gt;eta())&gt;2.5<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Jet<sp/>moment<sp/>keys<sp/>listed<sp/>in<sp/>xAODJet/JetAttributes.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>JVF<sp/>for<sp/>all<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>jvfvec<sp/>=<sp/></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*akt4Itr3)-&gt;getAttribute&lt;<sp/>std::vector&lt;float&gt;<sp/>&gt;(xAOD::JetAttribute::JVF);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jvf0<sp/>=<sp/>-666;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)jvfvec.size()<sp/>&gt;<sp/>iVertex<sp/>){</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jvf0<sp/>=<sp/>jvfvec[iVertex];</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>JVF<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iVertex<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jvfvec.size());</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>primary<sp/>vertex<sp/>JVF<sp/>inclusive<sp/>and<sp/>binned<sp/>in<sp/>ptj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal">]-&gt;Fill(jvf0,<sp/>wt);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptj&gt;ptLim[ib]<sp/>&amp;&amp;<sp/>ptj&lt;ptLim[ib+1]<sp/>){</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4jvf&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]-&gt;Fill(jvf0,<sp/>wt);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jvfmax<sp/>=<sp/>-666;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jvfsum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Dummy<sp/>vertex<sp/>at<sp/>end?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii=0;<sp/>ii&lt;jvfvec.size();<sp/>++ii){</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jvfsum<sp/>+=<sp/>jvfvec[ii];</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>jvfvec[ii]<sp/>&gt;<sp/>jvfmax<sp/>)<sp/>jvfmax<sp/>=<sp/>jvfvec[ii];</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>primary<sp/>vertex<sp/>is<sp/>dummy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvftot&quot;</highlight><highlight class="normal">]-&gt;Fill(jvfsum,<sp/>wt);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii=0;<sp/>ii&lt;jvfvec.size()-1;<sp/>++ii<sp/>){</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ii<sp/>!=<sp/>iVertex<sp/>)<sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4jvfx&quot;</highlight><highlight class="normal">]-&gt;Fill(jvfvec[ii]<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Truth<sp/>flavor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trueid<sp/>=<sp/>(*akt4Itr3)-&gt;getAttribute&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;TruthLabelID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4trueid&quot;</highlight><highlight class="normal">]-&gt;Fill(trueid,<sp/>wt);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>trueid<sp/>==<sp/>5<sp/>){</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ptb&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;pt()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4etab&quot;</highlight><highlight class="normal">]-&gt;Fill((*akt4Itr3)-&gt;eta(),<sp/>wt);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flavor<sp/>tagging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;Probabilities&quot;<sp/>for<sp/>SV1<sp/>and<sp/>IP3D<sp/>make<sp/>no<sp/>sense<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MV1<sp/>is<sp/>always<sp/>zero<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/ded/classxAOD_1_1BTagging" kindref="compound" tooltip="Class for xAOD b-tagging information.">xAOD::BTagging</ref>*<sp/>btag<sp/>=(*akt4Itr3)-&gt;btagging();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mv1<sp/>=<sp/>btag-&gt;MV1_discriminant();</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4mv1&quot;</highlight><highlight class="normal">]-&gt;Fill(mv1,<sp/>wt);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4sv1b&quot;</highlight><highlight class="normal">]-&gt;Fill(btag-&gt;SV1_pb(),<sp/>wt);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4sv1u&quot;</highlight><highlight class="normal">]-&gt;Fill(btag-&gt;SV1_pu(),<sp/>wt);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH2[</highlight><highlight class="stringliteral">&quot;akt4sv1uvb&quot;</highlight><highlight class="normal">]-&gt;Fill(btag-&gt;SV1_pb(),btag-&gt;SV1_pu(),<sp/>wt);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Associated<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>only<sp/>tracks<sp/>with<sp/>at<sp/>least<sp/>1pixel/6SCT<sp/>hits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>pileup<sp/>need<sp/>Delta<sp/>z0<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>work<sp/>with<sp/>thinned<sp/>tracks<sp/>-<sp/>FIXME.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>xAOD::IParticle*&gt;<sp/>jtracks;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jtracks<sp/>=<sp/>(*akt4Itr3)-&gt;getAssociatedObjects&lt;<ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref>&gt;(<sp/>xAOD::JetAttribute::GhostTrack<sp/>);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntracks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>psum(0,0,0,0);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj=0;<sp/>jj&lt;jtracks.size();<sp/>++jj){</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>trkjj<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(jtracks[jj]);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a4354004bc5b79bf39d3ea87ed4347387" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()<sp/>&lt;<sp/>1000<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>npix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>nsct<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(npix,<ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(nsct,<ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4nsitrk&quot;</highlight><highlight class="normal">]-&gt;Fill(npix+nsct,<sp/>wt);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>npix&lt;1<sp/>||<sp/>nsct&lt;6<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>z<sp/>for<sp/>track<sp/>and<sp/>primary<sp/>vertex<sp/>in<sp/>different<sp/>frames<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dz0<sp/>=<sp/>trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a17b0af19adc8a9e13083248aba0b023e" kindref="member" tooltip="Returns the  parameter.">z0</ref>()+trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1ada1ab6f889a4c21e0512a1593cb3d446" kindref="member" tooltip="The z origin for the parameters.">vz</ref>()<sp/>-<sp/>z0PV;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4dz0trk&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>dz0,<sp/>wt);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>std::abs(<sp/>dz0*sin(trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1ab5db486ec9a6ccb7a882fc8fe3cef999" kindref="member" tooltip="Returns the  parameter, which has range 0 to .">theta</ref>()))<sp/>&gt;<sp/>1.5<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ntracks;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>ptrk<sp/>=<sp/>trkjj-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a604c64ea8bf6798578e67def61bd6389" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>();</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psum<sp/>+=<sp/>ptrk;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>pjet.DeltaR(ptrk)<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Protect<sp/>against<sp/>occasional<sp/>track<sp/>pt<sp/>&gt;&gt;<sp/>1TeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rat<sp/>=<sp/>psum.Pt()<sp/>/<sp/>(*akt4Itr3)-&gt;pt();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rat<sp/>=<sp/>std::min(rat,3.0);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib=1;<sp/>ib&lt;16;<sp/>++ib){</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptj&gt;ptLim[ib]<sp/>&amp;&amp;<sp/>ptj&lt;ptLim[ib+1]<sp/>){</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;akt4rtrk&quot;</highlight><highlight class="normal"><sp/>+<sp/>ptStr[ib];</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[str.c_str()]-&gt;Fill(rat,<sp/>wt);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;akt4ntrk&quot;</highlight><highlight class="normal">]-&gt;Fill(ntracks<sp/>,<sp/>wt);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>for<sp/>akt4Itr3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_akt4Jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4EMTopo<sp/>Jets</highlight></codeline>
<codeline lineno="1173"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>m_aktem4Jets<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;xAOD::JetContainer&gt;(</highlight><highlight class="stringliteral">&quot;AntiKt4EMTopoJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(m_aktem4Jets,<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4EMTopoJets&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>AntiKt4EMTopoJets.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>AntiKt4EMTopoJets.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_aktem4Jets<sp/>){</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>aktem4Itr<sp/>=<sp/>m_aktem4Jets-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::JetContainer::const_iterator</ref><sp/>aktem4ItrE<sp/>=<sp/>m_aktem4Jets-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>simple<sp/>example<sp/>utilizing<sp/>a<sp/>deep<sp/>copy<sp/>for<sp/>jets<sp/>to<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uncalibrated<sp/>and<sp/>calibrated<sp/>jets<sp/>with<sp/>pt<sp/>&gt;<sp/>100GeV.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>an<sp/>efficient<sp/>way<sp/>to<sp/>make<sp/>this<sp/>trivial<sp/>plot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>njet100<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>aktem4Itr<sp/>!=<sp/>aktem4ItrE;<sp/>++aktem4Itr){</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>pjet<sp/>=<sp/>(*aktem4Itr)-&gt;p4();</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref><sp/>p4aod<sp/>=<sp/>(*aktem4Itr)-&gt;jetP4();</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*aktem4Itr)-&gt;pt()<sp/>&gt;<sp/>100000<sp/>)<sp/>++njet100;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>deep<sp/>copy.<sp/>MUST<sp/>initialize<sp/>pointer<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>calibJet<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_akt4EMTopoCalibrationTool-&gt;calibratedCopy(**aktem4Itr,<sp/>calibJet);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calibJet-&gt;setJetP4(</highlight><highlight class="stringliteral">&quot;xaodscale&quot;</highlight><highlight class="normal">,p4aod);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ALWAYS<sp/>give<sp/>ownership<sp/>to<sp/>a<sp/>DataVector,<sp/>which<sp/>can<sp/>delete<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;delete<sp/>calibJet&quot;<sp/>does<sp/>NOT<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_aktem4NewJets-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(calibJet);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>unwanted<sp/>jet.<sp/>STL<sp/>methods<sp/>for<sp/>removing<sp/>items<sp/>from<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>overloaded<sp/>to<sp/>work<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>calibJet-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()<sp/>&lt;<sp/>100000<sp/>)<sp/>m_aktem4NewJets-&gt;<ref refid="d0/d4d/classDataVector_1a52881ff983e0d0dd21b23c4d03824b68" kindref="member" tooltip="Remove the last element from the collection.">pop_back</ref>();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktem4n100&quot;</highlight><highlight class="normal">]-&gt;Fill(njet100,<sp/>wt);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;aktem4ncalib100&quot;</highlight><highlight class="normal">]-&gt;Fill(m_aktem4NewJets-&gt;<ref refid="d0/d4d/classDataVector_1aa4d259c267222003a6d2592fbe9809af" kindref="member" tooltip="Returns the number of elements in the collection.">size</ref>(),<sp/>wt);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>m_aktem4Jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>ET</highlight></codeline>
<codeline lineno="1223"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>just<sp/>plot<sp/>(uncalibrated)<sp/>MET<sp/>from<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>*<sp/>METFinals<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;<ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>&gt;(</highlight><highlight class="stringliteral">&quot;MET_RefFinal&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(METFinals,<sp/></highlight><highlight class="stringliteral">&quot;MET_RefFinal&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>MET_RefFinal.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>MET_RefFinal.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>*<sp/>METTruths<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evtStore()-&gt;contains&lt;xAOD::MissingETContainer&gt;(</highlight><highlight class="stringliteral">&quot;MET_Truth&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(METTruths,<sp/></highlight><highlight class="stringliteral">&quot;MET_Truth&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>MET_Truth.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_warnCounter<sp/>&lt;<sp/>m_warnLimit<sp/>){</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>MET_Truth.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_warnCounter;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>MissingETContainer<sp/>has<sp/>multiple<sp/>versions<sp/>labeled<sp/>by<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>METReaderAlg.cxx.<sp/>Examples<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;Final&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*METTruths)[&quot;NonInt&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;RefEle&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*METTruths)[&quot;Int&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;RefGamma&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*METTruths)[&quot;IntOut&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;RefTau&quot;]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*METTruths)[&quot;IntMuons&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;RefJet&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;Muons&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;SoftClus&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(*METFinals)[&quot;SoftClus&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref>*<sp/>metRefFinal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>METFinals<sp/>)<sp/>metRefFinal<sp/>=<sp/>(*METFinals)[</highlight><highlight class="stringliteral">&quot;Final&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref>*<sp/>metTruth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>METTruths<sp/>)<sp/>metTruth<sp/>=<sp/>(*METTruths)[</highlight><highlight class="stringliteral">&quot;NonInt&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>metRefFinal<sp/>){</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metet&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metRefFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metetlo&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metRefFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metsum&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metRefFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1af3599113dcc06aabf7010c053057e488" kindref="member" tooltip="Returns.">sumet</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>metTruth<sp/>){</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettrueet&quot;</highlight><highlight class="normal">]-&gt;Fill(metTruth-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettrueetlo&quot;</highlight><highlight class="normal">]-&gt;Fill(metTruth-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;mettruesum&quot;</highlight><highlight class="normal">]-&gt;Fill(metTruth-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1af3599113dcc06aabf7010c053057e488" kindref="member" tooltip="Returns.">sumet</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalculate<sp/>MET<sp/>with<sp/>calibrated<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remaining<sp/>inputs<sp/>are<sp/>default<sp/>-<sp/>see<sp/>initialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_metRebuilder-&gt;execute()<sp/>){</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>execute<sp/>METRebuilder.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>new<sp/>MET<sp/>-<sp/>name<sp/>set<sp/>in<sp/>initialize().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>m_metCalibs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtStore()-&gt;retrieve(m_metCalibs,<sp/></highlight><highlight class="stringliteral">&quot;MET_CalibFinal&quot;</highlight><highlight class="normal">)<sp/>){</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>MET_CalibFinal.<sp/>Exiting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref>*<sp/>metCalibFinal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_metCalibs<sp/>)<sp/>metCalibFinal<sp/>=<sp/>(*m_metCalibs)[</highlight><highlight class="stringliteral">&quot;Final&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Histogram<sp/>new<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>metCalibFinal<sp/>){</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibet&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metCalibFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibetlo&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metCalibFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TH1[</highlight><highlight class="stringliteral">&quot;metcalibsum&quot;</highlight><highlight class="normal">]-&gt;Fill(<sp/>metCalibFinal-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1af3599113dcc06aabf7010c053057e488" kindref="member" tooltip="Returns.">sumet</ref>()/1000.,<sp/>wt);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>copy<sp/>containers</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copies.<sp/>Clearing<sp/>containers<sp/>deletes<sp/>contents<sp/>including<sp/>AuxStore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>m_newMuons-&gt;clear();</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>m_newElectrons-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>m_newTauJets-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>AntiKt4LCTopo<sp/>shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clearing<sp/>view<sp/>container<sp/>does<sp/>not<sp/>delete<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_akt4CopyJets<sp/>saved<sp/>in<sp/>TStore<sp/>so<sp/>NOT<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>m_akt4ViewJets-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>AntiKt4EMTopo<sp/>deep<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clearing<sp/>container<sp/>deletes<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>m_aktem4NewJets-&gt;<ref refid="d0/d4d/classDataVector_1af2b028c097d741794a59b03c184fb70a" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>with<sp/>a<sp/>message:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>((m_eventCounter-1)<sp/>%<sp/>100)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>Info(<sp/></highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;===&gt;&gt;&gt;<sp/><sp/>done<sp/>processing<sp/>event<sp/>#%i,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;run<sp/>#%i<sp/>%i<sp/>events<sp/>processed<sp/>so<sp/>far<sp/><sp/>&lt;&lt;&lt;===&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a383bbb9559f9603d5ca13f8a2eb9e280" kindref="member" tooltip="The current event&amp;#39;s event number.">eventNumber</ref>()<sp/>),</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>eventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a53c034dc7ca12355747c9d2756627254" kindref="member" tooltip="The current event&amp;#39;s run number.">runNumber</ref>()<sp/>),</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>m_eventCounter<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;execute()&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Processing<sp/>rate<sp/>=<sp/>%f<sp/>Hz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(m_eventCounter)/(time(NULL)-m_startTime));</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/src/xAthExample.cxx"/>
  </compounddef>
</doxygen>
