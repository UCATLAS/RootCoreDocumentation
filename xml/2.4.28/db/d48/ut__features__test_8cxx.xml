<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/d48/ut__features__test_8cxx" kind="file">
    <compoundname>ut_features_test.cxx</compoundname>
    <includes local="no">stdexcept</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="da/dfe/StandaloneNavigation_8h" local="yes">TrigNavStructure/StandaloneNavigation.h</includes>
    <includes refid="df/d30/TypelessHolder_8h" local="yes">TrigNavStructure/TypelessHolder.h</includes>
    <includes refid="d3/d1a/testutils_8h" local="yes">testutils.h</includes>
    <incdepgraph>
      <node id="328616">
        <label>TrigNavStructure/TrigNavStructure.h</label>
        <link refid="d2/db8/TrigNavStructure_8h_source"/>
        <childnode refid="328617" relation="include">
        </childnode>
        <childnode refid="328618" relation="include">
        </childnode>
        <childnode refid="328624" relation="include">
        </childnode>
        <childnode refid="328625" relation="include">
        </childnode>
        <childnode refid="328626" relation="include">
        </childnode>
      </node>
      <node id="328633">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="328620" relation="include">
        </childnode>
        <childnode refid="328628" relation="include">
        </childnode>
        <childnode refid="328634" relation="include">
        </childnode>
        <childnode refid="328635" relation="include">
        </childnode>
      </node>
      <node id="328641">
        <label>iomanip</label>
      </node>
      <node id="328635">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="328625">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="328620" relation="include">
        </childnode>
        <childnode refid="328617" relation="include">
        </childnode>
        <childnode refid="328622" relation="include">
        </childnode>
      </node>
      <node id="328613">
        <label>stdint.h</label>
      </node>
      <node id="328638">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="328612">
        <label>stdexcept</label>
      </node>
      <node id="328631">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="328620" relation="include">
        </childnode>
        <childnode refid="328628" relation="include">
        </childnode>
        <childnode refid="328632" relation="include">
        </childnode>
      </node>
      <node id="328628">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328624">
        <label>TrigNavStructure/TriggerElementFactory.h</label>
        <link refid="d1/dc0/TriggerElementFactory_8h_source"/>
        <childnode refid="328617" relation="include">
        </childnode>
        <childnode refid="328622" relation="include">
        </childnode>
        <childnode refid="328618" relation="include">
        </childnode>
      </node>
      <node id="328620">
        <label>string</label>
      </node>
      <node id="328619">
        <label>map</label>
      </node>
      <node id="328623">
        <label>boost/variant.hpp</label>
      </node>
      <node id="328614">
        <label>TrigNavStructure/StandaloneNavigation.h</label>
        <link refid="da/dfe/StandaloneNavigation_8h_source"/>
        <childnode refid="328615" relation="include">
        </childnode>
        <childnode refid="328616" relation="include">
        </childnode>
      </node>
      <node id="328632">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="328622">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="328613" relation="include">
        </childnode>
        <childnode refid="328623" relation="include">
        </childnode>
      </node>
      <node id="328626">
        <label>TrigNavStructure/TrigHolderStructure.h</label>
        <link refid="df/ded/TrigHolderStructure_8h_source"/>
        <childnode refid="328615" relation="include">
        </childnode>
        <childnode refid="328619" relation="include">
        </childnode>
        <childnode refid="328620" relation="include">
        </childnode>
        <childnode refid="328623" relation="include">
        </childnode>
        <childnode refid="328627" relation="include">
        </childnode>
        <childnode refid="328622" relation="include">
        </childnode>
        <childnode refid="328625" relation="include">
        </childnode>
        <childnode refid="328618" relation="include">
        </childnode>
      </node>
      <node id="328618">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="328619" relation="include">
        </childnode>
        <childnode refid="328617" relation="include">
        </childnode>
        <childnode refid="328620" relation="include">
        </childnode>
        <childnode refid="328613" relation="include">
        </childnode>
        <childnode refid="328621" relation="include">
        </childnode>
        <childnode refid="328622" relation="include">
        </childnode>
      </node>
      <node id="328637">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="328628" relation="include">
        </childnode>
        <childnode refid="328631" relation="include">
        </childnode>
        <childnode refid="328638" relation="include">
        </childnode>
      </node>
      <node id="328617">
        <label>vector</label>
      </node>
      <node id="328630">
        <label>sstream</label>
      </node>
      <node id="328621">
        <label>iostream</label>
      </node>
      <node id="328639">
        <label>TrigNavStructure/TypelessHolder.h</label>
        <link refid="df/d30/TypelessHolder_8h_source"/>
        <childnode refid="328625" relation="include">
        </childnode>
      </node>
      <node id="328636">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="328629">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="328620" relation="include">
        </childnode>
        <childnode refid="328630" relation="include">
        </childnode>
        <childnode refid="328628" relation="include">
        </childnode>
        <childnode refid="328631" relation="include">
        </childnode>
        <childnode refid="328633" relation="include">
        </childnode>
        <childnode refid="328636" relation="include">
        </childnode>
      </node>
      <node id="328634">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328627">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="328620" relation="include">
        </childnode>
        <childnode refid="328628" relation="include">
        </childnode>
        <childnode refid="328629" relation="include">
        </childnode>
        <childnode refid="328637" relation="include">
        </childnode>
      </node>
      <node id="328640">
        <label>testutils.h</label>
        <link refid="d3/d1a/testutils_8h_source"/>
        <childnode refid="328621" relation="include">
        </childnode>
        <childnode refid="328641" relation="include">
        </childnode>
      </node>
      <node id="328611">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx</label>
        <link refid="ut_features_test.cxx"/>
        <childnode refid="328612" relation="include">
        </childnode>
        <childnode refid="328613" relation="include">
        </childnode>
        <childnode refid="328614" relation="include">
        </childnode>
        <childnode refid="328639" relation="include">
        </childnode>
        <childnode refid="328640" relation="include">
        </childnode>
      </node>
      <node id="328615">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="d9/d9a/structTestTNS" prot="public">TestTNS</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="db/d48/ut__features__test_8cxx_1abc7d5e0fd19f6534676c43da2652e54c" prot="public" static="no" mutable="no">
        <type><ref refid="d9/d9a/structTestTNS" kindref="compound">TestTNS</ref></type>
        <definition>TestTNS tns</definition>
        <argsstring></argsstring>
        <name>tns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d48/ut__features__test_8cxx_1a816e3375f7f7b899e5227b948e0a43ad" prot="public" static="yes" mutable="no">
        <type>const class_id_type</type>
        <definition>const class_id_type roi_clid</definition>
        <argsstring></argsstring>
        <name>roi_clid</name>
        <initializer> 6171771</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d48/ut__features__test_8cxx_1a2fac74c1471ef01cb58d19d6b84bbaf8" prot="public" static="yes" mutable="no">
        <type>const class_id_type</type>
        <definition>const class_id_type cluster_clid</definition>
        <argsstring></argsstring>
        <name>cluster_clid</name>
        <initializer> 19188792</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d48/ut__features__test_8cxx_1a4604a1fb695f3e466535a5d05692e7e3" prot="public" static="yes" mutable="no">
        <type>const class_id_type</type>
        <definition>const class_id_type track_clid</definition>
        <argsstring></argsstring>
        <name>track_clid</name>
        <initializer> 472619874</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d48/ut__features__test_8cxx_1a9dfcf8fe363942f03285c244fe16d0df" prot="public" static="yes" mutable="no">
        <type>const class_id_type</type>
        <definition>const class_id_type electron_clid</definition>
        <argsstring></argsstring>
        <name>electron_clid</name>
        <initializer> 788776</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1a5c6e5792787e3b52834c24fc84a1e7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="49" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1ac48bc90206f501548cc12392c7aae873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">TriggerElement</ref> *</type>
        <definition>TriggerElement* getById</definition>
        <argsstring>(te_id_type id)</argsstring>
        <name>getById</name>
        <param>
          <type>te_id_type</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="79" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1adc9375c770b8210ccfd52f75c61c8e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool attach</definition>
        <argsstring>()</argsstring>
        <name>attach</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="90" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="90" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1ad57f363ecfa4b218c7dcfc421365e743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isGoodFeature</definition>
        <argsstring>(const HLT::TriggerElement::FeatureAccessHelper &amp;fea, class_id_type clid, sub_index_type sub, index_type begin, index_type end)</argsstring>
        <name>isGoodFeature</name>
        <param>
          <type>const <ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper" kindref="compound">HLT::TriggerElement::FeatureAccessHelper</ref> &amp;</type>
          <declname>fea</declname>
        </param>
        <param>
          <type>class_id_type</type>
          <declname>clid</declname>
        </param>
        <param>
          <type>sub_index_type</type>
          <declname>sub</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="125" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="123" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1a5b330783f8b4123d07bfd6c3c4f5b1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool getFromExplicitTE</definition>
        <argsstring>()</argsstring>
        <name>getFromExplicitTE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="146" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="146" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1a496af65f7c77c072c5a1c1dffd9cb37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool getRecursivelyTEbyCLID</definition>
        <argsstring>()</argsstring>
        <name>getRecursivelyTEbyCLID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="192" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="192" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1a54675e6d0579e1f78c582b47ecfa0c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool getRecursivelyTEbyLabel</definition>
        <argsstring>()</argsstring>
        <name>getRecursivelyTEbyLabel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="232" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="232" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1a05b5463671ed3c59e555d0b6c8b9b2ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ser</definition>
        <argsstring>()</argsstring>
        <name>ser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="259" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="259" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="db/d48/ut__features__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" line="291" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx" bodystart="291" bodyend="328"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/StandaloneNavigation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TypelessHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">HLT;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="d9/d9a/structTestTNS" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/d9a/structTestTNS" kindref="compound">TestTNS</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref>*<sp/>addHolder(class_id_type<sp/>clid,<sp/>sub_index_type<sp/>sub,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>std::make_shared&lt;TypelessHolder&gt;(clid,<sp/>label,<sp/>sub);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;DEBUG&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;added<sp/>holder<sp/>for<sp/>clid/label/sub:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>clid<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>label<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sub);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad5b7156154b1a4272cf7e9e4c3b174a2" kindref="member" tooltip="structure for feature holders">m_holderstorage</ref>.registerHolder(th);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>th.get();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addFeature(<ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te,<sp/>class_id_type<sp/>clid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>index_type<sp/>begin,<sp/>index_type<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>sub_index_type<sp/>sub<sp/>=<sp/>invalid_sub_index;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holder:<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad5b7156154b1a4272cf7e9e4c3b174a2" kindref="member" tooltip="structure for feature holders">m_holderstorage</ref>.getAllHolders()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clid<sp/>==<sp/>holder-&gt;typeClid()<sp/>and<sp/>label<sp/>==<sp/>holder-&gt;label()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>sub<sp/>=<sp/>holder-&gt;subTypeIndex();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sub<sp/>==<sp/>invalid_sub_index<sp/>)<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>te-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1ab8133c4624015a6be64e059174fb512f" kindref="member" tooltip="add helper for new feature">addFeature</ref>(clid,<sp/><ref refid="dc/d50/classHLT_1_1TriggerElement_1_1ObjectIndex" kindref="compound" tooltip="Helper class for conversion from/to int stored in TE and pair of ints used in Navigation...">TriggerElement::ObjectIndex</ref>(sub,<sp/>begin,<sp/>end));<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dumpHolders()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;DEBUG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dumpHolders&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holder:<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad5b7156154b1a4272cf7e9e4c3b174a2" kindref="member" tooltip="structure for feature holders">m_holderstorage</ref>.getAllHolders())<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;DEBUG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Holder<sp/>CLID:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>holder-&gt;typeClid()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>label:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>holder-&gt;label()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sub:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>holder-&gt;subTypeIndex()<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="d9/d9a/structTestTNS" kindref="compound">TestTNS</ref><sp/>tns;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>class_id_type<sp/>roi_clid<sp/>=<sp/>6171771;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>class_id_type<sp/>cluster_clid<sp/>=<sp/>19188792;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>class_id_type<sp/>track_clid<sp/>=<sp/>472619874;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>class_id_type<sp/>electron_clid<sp/>=<sp/>788776;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>build()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a23f79a5e2e5b4c5e5d0d5523d3465083" kindref="member" tooltip="resets all the navigation, goes to the factory and asks to withdraw all produced...">reset</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi1<sp/><sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>th1<sp/><sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi1,<sp/>10);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>clu1<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(th1,<sp/>11);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>trk1<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(clu1,<sp/>12);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>__attribute__((__unused__))</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>el1<sp/><sp/>=<sp/>tns.addNode(trk1,<sp/>13);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi2<sp/>=<sp/>tns.addRoINode(tns.getInitialNode());<sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>th2<sp/><sp/>=<sp/>tns.addNode(roi2,<sp/>20);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>clu2<sp/>=<sp/>tns.addNode(th2,<sp/>21);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>trk2<sp/>=<sp/>tns.addNode(clu2,<sp/>22);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>__attribute__((__unused__))</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>el2<sp/><sp/>=<sp/>tns.addNode(trk2,<sp/>23);<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>el2=0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>tns.addHolder(roi_clid,<sp/>0,<sp/>&quot;initial&quot;);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>tns.addHolder(roi_clid,<sp/>1,<sp/>&quot;secondary&quot;);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>tns.addHolder(cluster_clid,<sp/>3,<sp/>&quot;L2ElectronClusters&quot;);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>assume<sp/>some<sp/>of<sp/>other<sp/>clusters<sp/>were<sp/>slimmed<sp/>out<sp/>therefore<sp/>we<sp/>give<sp/>it<sp/>sub==3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>tns.addHolder(track_clid,<sp/>0,<sp/>&quot;L2ElectronTracks&quot;);<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>tns.addHolder(electron_clid,<sp/>0,<sp/>&quot;L2Electrons&quot;);<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref><sp/>*<sp/>getById(te_id_type<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>std::vector&lt;TriggerElement*&gt;<sp/>tes;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a311c58edad4dbe23f12bec046283c82d" kindref="member" tooltip="The query returning a collection of all TriggerElements if name is given.">getAllOfType</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>tes);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tes.size()<sp/>!=<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>TEs<sp/>is<sp/>not<sp/>1<sp/>but<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tes.size());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;assumption<sp/>of<sp/>the<sp/>single<sp/>TE<sp/>of<sp/>given<sp/>ID<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tes[0];</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>attach()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>roi1<sp/>=<sp/>TrigNavStructure::getDirectSuccessors(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>())[0];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tns.addFeature(roi1,<sp/>roi_clid,<sp/></highlight><highlight class="stringliteral">&quot;initial&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1)<sp/>==<sp/>false<sp/>)<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;attach<sp/>to<sp/>RoI<sp/>node<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>roi2<sp/>=<sp/>TrigNavStructure::getDirectSuccessors(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>())[0];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tns.addFeature(roi2,<sp/>roi_clid,<sp/></highlight><highlight class="stringliteral">&quot;initial&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2)<sp/>==<sp/>false<sp/>)<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;attach<sp/>to<sp/>RoI<sp/>node<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>used<sp/>for<sp/>the<sp/>test<sp/>TEs<sp/>ID<sp/>they<sp/>have<sp/>convention<sp/>that<sp/>the<sp/>for<sp/>digit<sp/>labels<sp/>RoI<sp/>second<sp/>labels<sp/>step<sp/>of<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tns.addFeature(getById(11),<sp/>cluster_clid,<sp/></highlight><highlight class="stringliteral">&quot;L2ElectronClusters&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1)<sp/>==<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Cluster<sp/>attach<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tns.addFeature(getById(21),<sp/>cluster_clid,<sp/></highlight><highlight class="stringliteral">&quot;L2ElectronClusters&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2)<sp/>==<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Cluster<sp/>attach<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tns.addFeature(getById(12),<sp/>track_clid,<sp/></highlight><highlight class="stringliteral">&quot;L2ElectronTracks&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>10)<sp/>==<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Tracks<sp/>attach<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tns.addFeature(getById(22),<sp/>track_clid,<sp/></highlight><highlight class="stringliteral">&quot;L2ElectronTracks&quot;</highlight><highlight class="normal">,<sp/>27,<sp/>32)<sp/>==<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Tracks<sp/>attach<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tns.addFeature(getById(13),<sp/>electron_clid,<sp/></highlight><highlight class="stringliteral">&quot;L2Electrons&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>10)<sp/>==<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Electrons<sp/>attach<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tns.addFeature(getById(23),<sp/>electron_clid,<sp/></highlight><highlight class="stringliteral">&quot;L2Electrons&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>25)<sp/>==<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Electrons<sp/>attach<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGoodFeature(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper" kindref="compound" tooltip="the FeatureAccessHelper is a class used to keep track of features attached to this...">HLT::TriggerElement::FeatureAccessHelper</ref>&amp;<sp/>fea,<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id_type<sp/>clid,<sp/>sub_index_type<sp/>sub,<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_type<sp/>begin,<sp/>index_type<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>fea.valid()<sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>state<sp/>of<sp/>Feature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clid<sp/>!=<sp/>invalid_class_id<sp/>and<sp/>fea.<ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper_1ac7c82a5161490126e1b08b334cc360f6" kindref="member" tooltip="Class ID of object.">getCLID</ref>()<sp/>!=<sp/>clid<sp/>)<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>CLID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sub<sp/>!=<sp/>invalid_sub_index<sp/>and<sp/>fea.<ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper_1a0913495e5649fb557666ab8a460aa839" kindref="member" tooltip="index in the external ojects array">getIndex</ref>().subTypeIndex()<sp/>!=<sp/>sub<sp/>)<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>SubTypeIndex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>begin<sp/>!=<sp/>invalid_index<sp/>and<sp/>fea.<ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper_1a0913495e5649fb557666ab8a460aa839" kindref="member" tooltip="index in the external ojects array">getIndex</ref>().objectsBegin()<sp/>!=<sp/>begin<sp/>)<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>objectsBegin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>end<sp/>!=<sp/>invalid_index<sp/>and<sp/>fea.<ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper_1a0913495e5649fb557666ab8a460aa839" kindref="member" tooltip="index in the external ojects array">getIndex</ref>().objectsEnd()<sp/>!=<sp/>end<sp/>)<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>objectsEnd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getFromExplicitTE()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>from<sp/>valid<sp/>TE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a39a7a11f23cb6aba63f0e47b63aedc23" kindref="member" tooltip="typeless feature access metod">getFeature</ref>(getById(11),<sp/>cluster_clid,<sp/>3);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>isGoodFeature(fea,<sp/>cluster_clid,<sp/>3,<sp/>0,<sp/>1)<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Valid<sp/>request<sp/>to<sp/>get<sp/>clusters<sp/>fails&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holder<sp/>=<sp/>tns.getHolder(fea);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>holder<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>holder<sp/>for<sp/>features:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fea);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>holder-&gt;label()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;L2ElectronClusters&quot;</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Holder<sp/>has<sp/>wrong<sp/>label&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>from<sp/>valid<sp/>TE<sp/>neglecting<sp/>the<sp/>sub<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a39a7a11f23cb6aba63f0e47b63aedc23" kindref="member" tooltip="typeless feature access metod">getFeature</ref>(getById(12),<sp/>track_clid,<sp/>invalid_sub_index);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>isGoodFeature(fea,<sp/>track_clid,<sp/>0,<sp/>0,<sp/>10)<sp/>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Valid<sp/>request<sp/>(neglecting<sp/>sub<sp/>index)<sp/>to<sp/>get<sp/>tracks<sp/>fails&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>requests<sp/>below<sp/>shuld<sp/>be<sp/>failing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>wrong<sp/>subType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a39a7a11f23cb6aba63f0e47b63aedc23" kindref="member" tooltip="typeless feature access metod">getFeature</ref>(getById(10),<sp/>cluster_clid,<sp/>1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fea.valid()<sp/>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Got<sp/>feature<sp/>while<sp/>should<sp/>obtain<sp/>nothing<sp/>using<sp/>this<sp/>sub<sp/>type<sp/>ID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>earlier<sp/>TE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a39a7a11f23cb6aba63f0e47b63aedc23" kindref="member" tooltip="typeless feature access metod">getFeature</ref>(getById(10),<sp/>cluster_clid,<sp/>3);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fea.valid()<sp/>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Got<sp/>feature<sp/>while<sp/>should<sp/>obtain<sp/>nothing<sp/>from<sp/>this<sp/>TE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>latter<sp/>TE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a39a7a11f23cb6aba63f0e47b63aedc23" kindref="member" tooltip="typeless feature access metod">getFeature</ref>(getById(12),<sp/>cluster_clid,<sp/>3);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fea.valid()<sp/>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Got<sp/>feature<sp/>while<sp/>should<sp/>obtain<sp/>nothing<sp/>from<sp/>this<sp/>TE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getRecursivelyTEbyCLID()<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>source<sp/>{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>recursion<sp/>goes<sp/>in<sp/>correct<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0a01b892f2170773ba260d1aa990e34" kindref="member" tooltip="recursive search for features the function is similar to the above butif th features...">getFeatureRecursively</ref>(getById(20),<sp/>cluster_clid,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fea.valid()<sp/>)<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Recursion<sp/>goes<sp/>in<sp/>the<sp/>wrong<sp/>direction,<sp/>we<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>get<sp/>cluster<sp/>from<sp/>RoI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>recursion<sp/>starts<sp/>well<sp/>(i.e.<sp/>the<sp/>TE<sp/>where<sp/>objects<sp/>is<sp/>available<sp/>should<sp/>be<sp/>covered<sp/>as<sp/>well)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0a01b892f2170773ba260d1aa990e34" kindref="member" tooltip="recursive search for features the function is similar to the above butif th features...">getFeatureRecursively</ref>(getById(21),<sp/>cluster_clid,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>isGoodFeature(fea,<sp/>cluster_clid,<sp/>3,<sp/>1,<sp/>2)<sp/>)<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Recursion<sp/>does<sp/>not<sp/>start<sp/>properly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>source<sp/>!=<sp/>getById(21)<sp/>)<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;In<sp/>no-recursion<sp/>case,<sp/>the<sp/>source<sp/>is<sp/>wrong&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>finally<sp/>check<sp/>if<sp/>the<sp/>recursion<sp/>works<sp/>well<sp/>(one<sp/>step<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0a01b892f2170773ba260d1aa990e34" kindref="member" tooltip="recursive search for features the function is similar to the above butif th features...">getFeatureRecursively</ref>(getById(23),<sp/>track_clid,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>isGoodFeature(fea,<sp/>track_clid,<sp/>0,<sp/>27,<sp/>32)<sp/>)<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Recursion<sp/>does<sp/>not<sp/>descend<sp/>properly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>source<sp/>!=<sp/>getById(22)<sp/>)<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;In<sp/>one<sp/>step<sp/>recursion<sp/>case,<sp/>the<sp/>source<sp/>is<sp/>wrong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>steps<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0a01b892f2170773ba260d1aa990e34" kindref="member" tooltip="recursive search for features the function is similar to the above butif th features...">getFeatureRecursively</ref>(getById(23),<sp/>cluster_clid,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>isGoodFeature(fea,<sp/>cluster_clid,<sp/>3,<sp/>1,<sp/>2)<sp/>)<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Recursion<sp/>does<sp/>not<sp/>descend<sp/>properly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>source<sp/>!=<sp/>getById(21)<sp/>)<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;In<sp/>more<sp/>step<sp/>recursion<sp/>case,<sp/>the<sp/>source<sp/>is<sp/>wrong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getRecursivelyTEbyLabel()<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>source<sp/>{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>let&apos;s<sp/>try<sp/>invalid<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0a01b892f2170773ba260d1aa990e34" kindref="member" tooltip="recursive search for features the function is similar to the above butif th features...">getFeatureRecursively</ref>(getById(23),<sp/>cluster_clid,<sp/></highlight><highlight class="stringliteral">&quot;invalid&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fea.valid()<sp/>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Feature<sp/>found<sp/>irrespectively<sp/>of<sp/>incorrect(1)<sp/>label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>other<sp/>lable<sp/>used<sp/>by<sp/>another<sp/>feature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0a01b892f2170773ba260d1aa990e34" kindref="member" tooltip="recursive search for features the function is similar to the above butif th features...">getFeatureRecursively</ref>(getById(23),<sp/>cluster_clid,<sp/></highlight><highlight class="stringliteral">&quot;L2Electrons&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fea.valid()<sp/>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Feature<sp/>found<sp/>irrespectively<sp/>of<sp/>incorrect(2)<sp/>label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>finally<sp/>good<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>fea<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0a01b892f2170773ba260d1aa990e34" kindref="member" tooltip="recursive search for features the function is similar to the above butif th features...">getFeatureRecursively</ref>(getById(23),<sp/>cluster_clid,<sp/></highlight><highlight class="stringliteral">&quot;L2ElectronClusters&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>isGoodFeature(fea,<sp/>cluster_clid,<sp/>3,<sp/>1,<sp/>2)<sp/>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Feature<sp/>not<sp/>found<sp/>using<sp/>label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ser()<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>std::vector&lt;TriggerElement*&gt;<sp/>tes;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1afcabcd4847b6d6fabce69b6e4d8d836c" kindref="member" tooltip="The query returning a collection of all TriggerElements.">getAll</ref>(tes,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>TEs<sp/>before<sp/>re-serailziation<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tes.size()<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nTEs<sp/>=<sp/>tes.size();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>data;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>tns.<ref refid="de/d28/classHLT_1_1StandaloneNavigation_1aa206a44ccf10cd94cd95a3018d0ab489" kindref="member" tooltip="method serizlizes entire navigation">serialize</ref>(data)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Serialization<sp/>fails&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;size<sp/>of<sp/>serialzied<sp/>navigation<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data.size());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;elements:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;data[3]);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a23f79a5e2e5b4c5e5d0d5523d3465083" kindref="member" tooltip="resets all the navigation, goes to the factory and asks to withdraw all produced...">reset</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>tns.deserialize(data)<sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;De-serialization<sp/>fails&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>check<sp/>number<sp/>of<sp/>all<sp/>TEs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TriggerElement*&gt;<sp/>tes;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1afcabcd4847b6d6fabce69b6e4d8d836c" kindref="member" tooltip="The query returning a collection of all TriggerElements.">getAll</ref>(tes,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>TEs<sp/>after<sp/>deserailziation<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tes.size()<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tes.size()<sp/>!=<sp/>nTEs<sp/>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Different<sp/>number<sp/>of<sp/>TEs<sp/>after<sp/>re-serialization&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>build()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;not<sp/>strictly<sp/>a<sp/>test<sp/>but<sp/>pre-conditions,<sp/>nonetheless<sp/>fails&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>attach()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;not<sp/>strictly<sp/>a<sp/>test<sp/>but<sp/>pre-conditions,<sp/>nonetheless<sp/>fails&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;build<sp/>navigation.<sp/>test.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>getFromExplicitTE()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;basic<sp/>get<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>getRecursivelyTEbyCLID()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;Get<sp/>by<sp/>CLID<sp/>failed&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>getRecursivelyTEbyLabel()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;Get<sp/>by<sp/>label<sp/>failed&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>is<sp/>the<sp/>trick,<sp/>we<sp/>serialize<sp/>the<sp/>navigation<sp/>and<sp/>scratch<sp/>the<sp/>old<sp/>content.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>we<sp/>deserailize<sp/>into<sp/>it<sp/>the<sp/>old<sp/>content<sp/>and<sp/>see<sp/>if<sp/>the<sp/>tests<sp/>still<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ser()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;Issue<sp/>wiht<sp/>serialziation-&gt;reset-&gt;deserialization<sp/>cycle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tests<sp/>after<sp/>serialization,<sp/>deserialization&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>tns.dumpHolders();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>getFromExplicitTE()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;basic<sp/>get<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>getRecursivelyTEbyCLID()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;Get<sp/>by<sp/>CLID<sp/>failed&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>getRecursivelyTEbyLabel()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;Get<sp/>by<sp/>label<sp/>failed&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_features_test.cxx"/>
  </compounddef>
</doxygen>
