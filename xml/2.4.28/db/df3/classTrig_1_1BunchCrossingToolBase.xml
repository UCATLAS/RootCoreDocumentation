<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/df3/classTrig_1_1BunchCrossingToolBase" kind="class" prot="public">
    <compoundname>Trig::BunchCrossingToolBase</compoundname>
    <basecompoundref refid="d0/d67/classTrig_1_1IBunchCrossingTool" prot="public" virt="virtual">Trig::IBunchCrossingTool</basecompoundref>
    <basecompoundref refid="da/dfd/classasg_1_1AsgMetadataTool" prot="public" virt="non-virtual">asg::AsgMetadataTool</basecompoundref>
    <derivedcompoundref refid="df/d21/classTrig_1_1D3PDBunchCrossingTool" prot="public" virt="non-virtual">Trig::D3PDBunchCrossingTool</derivedcompoundref>
    <derivedcompoundref refid="d0/d98/classTrig_1_1LHCBunchCrossingTool" prot="public" virt="non-virtual">Trig::LHCBunchCrossingTool</derivedcompoundref>
    <derivedcompoundref refid="da/dfc/classTrig_1_1MCBunchCrossingTool" prot="public" virt="non-virtual">Trig::MCBunchCrossingTool</derivedcompoundref>
    <derivedcompoundref refid="d9/dd8/classTrig_1_1StaticBunchCrossingTool" prot="public" virt="non-virtual">Trig::StaticBunchCrossingTool</derivedcompoundref>
    <derivedcompoundref refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool" prot="public" virt="non-virtual">Trig::TrigConfBunchCrossingTool</derivedcompoundref>
    <derivedcompoundref refid="d6/d13/classTrig_1_1WebBunchCrossingTool" prot="public" virt="non-virtual">Trig::WebBunchCrossingTool</derivedcompoundref>
    <derivedcompoundref refid="db/d39/classTrig_1_1xAODBunchCrossingTool" prot="public" virt="non-virtual">Trig::xAODBunchCrossingTool</derivedcompoundref>
    <includes refid="db/d0d/BunchCrossingToolBase_8h" local="no">BunchCrossingToolBase.h</includes>
      <sectiondef kind="user-defined">
      <header>Variables holding the decoded bunch structure</header>
      <description><para><anchor id="_1amgrp262917781ad1b5e2d6357ed30385fba3"/> </para></description>
      <memberdef kind="variable" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ad78f428d02ca4832fd663378e552fa65" prot="protected" static="no" mutable="no">
        <type>std::set&lt; <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">Trig::BunchCrossing</ref> &gt;</type>
        <definition>std::set&lt; Trig::BunchCrossing &gt; Trig::BunchCrossingToolBase::m_filledBunches</definition>
        <argsstring></argsstring>
        <name>m_filledBunches</name>
        <reimplementedby refid="d0/d98/classTrig_1_1LHCBunchCrossingTool_1a0433bdfe62c010c0dfaef432851469fd">m_filledBunches</reimplementedby>
        <briefdescription>
<para>List of colliding bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="146" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a129a33228220d9f1124b656e142d8470" prot="protected" static="no" mutable="no">
        <type>std::set&lt; <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">Trig::BunchCrossing</ref> &gt;</type>
        <definition>std::set&lt; Trig::BunchCrossing &gt; Trig::BunchCrossingToolBase::m_singleBunches</definition>
        <argsstring></argsstring>
        <name>m_singleBunches</name>
        <briefdescription>
<para>Internal list of single bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="148" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df3/classTrig_1_1BunchCrossingToolBase_1aac29b06ab503bf643bdaa72d8768f674" prot="protected" static="no" mutable="no">
        <type>std::set&lt; <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">Trig::BunchCrossing</ref> &gt;</type>
        <definition>std::set&lt; Trig::BunchCrossing &gt; Trig::BunchCrossingToolBase::m_unpairedBunches</definition>
        <argsstring></argsstring>
        <name>m_unpairedBunches</name>
        <briefdescription>
<para>Internal list of unpaired bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="150" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df3/classTrig_1_1BunchCrossingToolBase_1aeacbab34ba7a65f9672a6822d01249b9" prot="protected" static="no" mutable="no">
        <type>std::set&lt; <ref refid="d2/d3e/classTrig_1_1BunchTrain" kindref="compound">Trig::BunchTrain</ref> &gt;</type>
        <definition>std::set&lt; Trig::BunchTrain &gt; Trig::BunchCrossingToolBase::m_bunchTrains</definition>
        <argsstring></argsstring>
        <name>m_bunchTrains</name>
        <briefdescription>
<para>Internal list of bunch trains. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="152" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Configurable tool properties</header>
      <description><para><anchor id="_1amgrpd09e75f059d7045ba981aff1496340b2"/> </para></description>
      <memberdef kind="variable" id="db/df3/classTrig_1_1BunchCrossingToolBase_1acc703223701968694a4f2d576b84c1d7" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::m_maxBunchSpacing</definition>
        <argsstring></argsstring>
        <name>m_maxBunchSpacing</name>
        <briefdescription>
<para>The maximum bunch spacing that the tool should consider. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="160" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ad7b926a368d2961e6ce655c9d81dd89d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::m_frontLength</definition>
        <argsstring></argsstring>
        <name>m_frontLength</name>
        <briefdescription>
<para>Length of the &quot;front&quot; of a bunch train. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="162" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df3/classTrig_1_1BunchCrossingToolBase_1afca1209ab406f0572af565103c65ca62" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::m_tailLength</definition>
        <argsstring></argsstring>
        <name>m_tailLength</name>
        <briefdescription>
<para>Length of the &quot;tail&quot; of a bunch train. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="164" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the IBunchCrossingTool interface</header>
      <description><para><anchor id="_1amgrp910218c269e810b1d1525b566444d531"/> </para></description>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a9db99df0515f2acd26a50da37f168d95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Trig::BunchCrossingToolBase::isFilled</definition>
        <argsstring>(bcid_type bcid) const </argsstring>
        <name>isFilled</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a7c2179ab680ba9b012c0dbd4b751b1e5">isFilled</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1ac60e00c69517d711b7bd22672e58e86c">isFilled</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac8fde5be2aa2f7589131ccf6589662ed">isFilled</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <briefdescription>
<para>The simplest query: Is the bunch crossing filled or not? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ac0290e90cf90bd34d70b99cc3efab88d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Trig::BunchCrossingToolBase::isInTrain</definition>
        <argsstring>(bcid_type bcid) const </argsstring>
        <name>isInTrain</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a5753926d25f7a318875739938b227b0a">isInTrain</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1a2b2c6892c395f6a537932fc2cb4c447a">isInTrain</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <briefdescription>
<para>Function deciding if a given bunch crossing is in a filled train. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="40" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a5f7ea73dc415f2e16a6de8be234e03d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Trig::BunchCrossingToolBase::isUnpaired</definition>
        <argsstring>(bcid_type bcid) const </argsstring>
        <name>isUnpaired</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1aa7d0f434e5466858f541e72c58586bb6">isUnpaired</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1a6fa978933b9ec279b6bd2372dd2e6dc0">isUnpaired</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <briefdescription>
<para>Function deciding if a given bunch crossing has an unpaired bunch. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ae20e96672675556eddbad87a3bd40df7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Trig::BunchCrossingToolBase::isBeam1</definition>
        <argsstring>(bcid_type bcid) const </argsstring>
        <name>isBeam1</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ab435dc47478e51c53c9ed4e769bc50d6">isBeam1</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1a0d9cbf05eaf230f1007dc65bdc5915f0">isBeam1</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a3ab0a18ef9d9bdc06b4c18acddfc36f3">isBeam1</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <briefdescription>
<para>Function deciding if there was a bunch from &quot;beam 1&quot; in this bunch crossing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="64" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a774292ba2828a939fb69402d5401718d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Trig::BunchCrossingToolBase::isBeam2</definition>
        <argsstring>(bcid_type bcid) const </argsstring>
        <name>isBeam2</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a77511f9866c93a734b9baf59cebba816">isBeam2</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1a7196112304bacbaf155385ad8ce2e195">isBeam2</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac9ae6d6ba637900092c1d26b1d82c217">isBeam2</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <briefdescription>
<para>Function deciding if there was a bunch from &quot;beam 2&quot; in this bunch crossing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="84" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a01e68f99e0c68f4badf7d9c2e087de84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float Trig::BunchCrossingToolBase::bcIntensity</definition>
        <argsstring>(bcid_type bcid, BeamType type=Crossing) const </argsstring>
        <name>bcIntensity</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a760e3fa9d24099b4dc947a6275cdd510">bcIntensity</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1a2abbcb9b662f3fba39a8326d88f46efb">bcIntensity</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a461c2b1eb11d7c3333b0229923d034f2">bcIntensity</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" kindref="member">BeamType</ref></type>
          <declname>type</declname>
          <defval>Crossing</defval>
        </param>
        <briefdescription>
<para>Function returning the &quot;intensity&quot; of a given bunch crossing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="104" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a15997803b368bc9a3fc27f6ebd3486f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cf" kindref="member">BunchCrossingType</ref></type>
        <definition>IBunchCrossingTool::BunchCrossingType Trig::BunchCrossingToolBase::bcType</definition>
        <argsstring>(bcid_type bcid) const </argsstring>
        <name>bcType</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ab7712c5f48072fcdfd415d3cee7e0f77">bcType</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1ac2a4e69dd2e8c229d856e5103108d350">bcType</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ae73075ec935b72664f7a585414372693">bcType</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <briefdescription>
<para>Get the type of the specific bunch crossing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="66" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="164" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1af3f021e1433c5d1c820fc8d28aade214" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::distanceFromFront</definition>
        <argsstring>(bcid_type bcid, BunchDistanceType type=NanoSec) const </argsstring>
        <name>distanceFromFront</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a3960b800e724afb817abd3963249bc88">distanceFromFront</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>type</declname>
          <defval>NanoSec</defval>
        </param>
        <briefdescription>
<para>The distance of the specific bunch crossing from the front of the train. </para>        </briefdescription>
        <detaileddescription>
<para>This is one of the most tricky functions of this class.</para><para>When the user wants to ask the distance of a bunch crossing from the front of its train in units of nano seconds or bunch crossings, the main part of the logic is propagated to the algebra defined for the <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> class.</para><para>But when the user wants to know the distance in terms of filled bunches, the code has to treat 3 different bunch train configurations:</para><para><itemizedlist>
<listitem><para>First is when the bunch train doesn&apos;t spread across the &quot;BCID
    turnover&quot;. The code in this case just has to see how many steps it is from <computeroutput>bunchtrain-&gt;begin()</computeroutput>.</para></listitem><listitem><para>If the bunch train spreads across the &quot;BCID turnover&quot;, and the bcid is after BCID==0, the code has to count the filled bunches from <computeroutput>bunchtrain-&gt;train_front()</computeroutput> to <computeroutput>bunchtrain-&gt;end()</computeroutput>, plus the filled bunches from <computeroutput>bunchtrain-&gt;begin()</computeroutput> to the bcid in question.</para></listitem><listitem><para>If the bunch train spreads across the &quot;BCID turnover&quot;, and the bcid is &quot;before&quot; BCID==0, the code has to count the filled bunches from <computeroutput>bunchtrain-&gt;train_front()</computeroutput> to the bcid in question.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bcid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bcid that should be checked </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the requested return value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The distance of the bcid in question from the front of its bunch train </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="237" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a55ded04a49420061e42910f6d4a72863" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::distanceFromTail</definition>
        <argsstring>(bcid_type bcid, BunchDistanceType type=NanoSec) const </argsstring>
        <name>distanceFromTail</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a533b45046a65adfc428082ccabb77906">distanceFromTail</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>type</declname>
          <defval>NanoSec</defval>
        </param>
        <briefdescription>
<para>The distance of the specific bunch crossing from the tail of the train. </para>        </briefdescription>
        <detaileddescription>
<para>This is one of the most tricky functions of this class.</para><para>When the user wants to ask the distance of a bunch crossing from the tail of its train in units of nano seconds or bunch crossings, the main part of the logic is propagated to the algebra defined for the <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> class.</para><para>But when the user wants to know the distance in terms of filled bunches, the code has to treat 3 different bunch train configurations:</para><para><itemizedlist>
<listitem><para>First is when the bunch train doesn&apos;t spread across the &quot;BCID
    turnover&quot;. The code in this case just has to see how many steps it is from <computeroutput>bunchtrain-&gt;end()</computeroutput>.</para></listitem><listitem><para>If the bunch train spreads across the &quot;BCID turnover&quot;, and the bcid is &quot;before&quot; BCID==0, the code has to count the filled bunches from the bcid in question to <computeroutput>bunchtrain-&gt;end()</computeroutput>, plus the filled bunches from <computeroutput>bunchtrain-&gt;begin()</computeroutput> to <computeroutput>bunchtrain-&gt;train_back()</computeroutput>.</para></listitem><listitem><para>If the bunch train spreads across the &quot;BCID turnover&quot;, and the bcid is after BCID==0, the code has to count the filled bunches from the bcid in question to <computeroutput>bunchtrain-&gt;train_back()</computeroutput>.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bcid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bcid that should be checked </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the requested return value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The distance of the bcid in question from the tail of its bunch train </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="314" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a4c8ce18adcca57ed5391d77aab064d1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::gapBeforeTrain</definition>
        <argsstring>(bcid_type bcid, BunchDistanceType type=NanoSec) const </argsstring>
        <name>gapBeforeTrain</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a6d39ace87896f9396921ad2209fc9232">gapBeforeTrain</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>type</declname>
          <defval>NanoSec</defval>
        </param>
        <briefdescription>
<para>Gap before the train this BCID is in. </para>        </briefdescription>
        <detaileddescription>
<para>The function first finds the train that the specified BCID is in. Then it calculates the size of the gap before this train. It can return the size of the gap either in nanoseconds or in BCIDs (25 ns steps).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bcid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bcid whose train should be investigated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the requested return value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The gap before the train of the specified bcid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="77" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="372" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a25f17b451a8b4d86553d10956d92c269" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::gapAfterTrain</definition>
        <argsstring>(bcid_type bcid, BunchDistanceType type=NanoSec) const </argsstring>
        <name>gapAfterTrain</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ad301df3a422a287ab80cd8dc2d4da82f">gapAfterTrain</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>type</declname>
          <defval>NanoSec</defval>
        </param>
        <briefdescription>
<para>Gap after the train this BCID is in. </para>        </briefdescription>
        <detaileddescription>
<para>The function first finds the train that the specified BCID is in. Then it calculates the size of the gap after this train. It can return the size of the gap either in nanoseconds or in BCIDs (25 ns steps).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bcid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bcid whose train should be investigated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the requested return value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The gap after the train of the specified bcid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="427" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ab8ac1297dd93899e04e68622530dab18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::gapBeforeBunch</definition>
        <argsstring>(bcid_type bcid, BunchDistanceType dtype=NanoSec, BunchFillType ftype=CollidingBunch) const </argsstring>
        <name>gapBeforeBunch</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a69819252a847d2d5aaec204a153b25b3">gapBeforeBunch</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1a364eacf6c9bcdd5d9b1f9b1272721d92">gapBeforeBunch</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1acc68b272d6f04a98fd8cc147833b6a64">gapBeforeBunch</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>dtype</declname>
          <defval>NanoSec</defval>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8" kindref="member">BunchFillType</ref></type>
          <declname>ftype</declname>
          <defval>CollidingBunch</defval>
        </param>
        <briefdescription>
<para>Gap before a particular bunch. </para>        </briefdescription>
        <detaileddescription>
<para>The function creates a smart <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> out of the BCID provided, then it goes looking for the previous bunch crossing of the specified type. Finally it just calculates the distance between the two bunch crossings in the requested units. It can return the size of the gap either in nanoseconds or in BCIDs (25 ns steps).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bcid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bcid that should be investigated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the requested return value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ftype</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the previous bunch to consider </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The gap before the specified bcid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="485" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a5684c852a799a421c09b4bb1d6f5c70d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::gapAfterBunch</definition>
        <argsstring>(bcid_type bcid, BunchDistanceType dtype=NanoSec, BunchFillType ftype=CollidingBunch) const </argsstring>
        <name>gapAfterBunch</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a723c1d3dfaac4768515d5b527e6b8f7e">gapAfterBunch</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1a323ad5d29b3aaa7983e86371ba736dc7">gapAfterBunch</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a8f78cac1b71b78cf767767524ed199d7">gapAfterBunch</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>dtype</declname>
          <defval>NanoSec</defval>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8" kindref="member">BunchFillType</ref></type>
          <declname>ftype</declname>
          <defval>CollidingBunch</defval>
        </param>
        <briefdescription>
<para>Gap after a particular bunch. </para>        </briefdescription>
        <detaileddescription>
<para>The function creates a smart <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> out of the BCID provided, then it goes looking for the next bunch crossing of the specified type. Finally it just calculates the distance between the two bunch crossings in the requested units. It can return the size of the gap either in nanoseconds or in BCIDs (25 ns steps).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bcid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bcid that should be investigated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the requested return value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ftype</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the previous bunch to consider </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The gap after the specified bcid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="89" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="606" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a7791e0d9ee813c1679bac22c859de01e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; Trig::BunchCrossingToolBase::bunchesInFront</definition>
        <argsstring>(bcid_type bcid, int bunches=10) const </argsstring>
        <name>bunchesInFront</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a103fecb7204fa81dc8b2c398ef0f3183">bunchesInFront</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1ad2fd35b09c76ac2f5dad451480121477">bunchesInFront</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1acd8316f25da4cce67f4bb9f2d9c0201b">bunchesInFront</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bunches</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Function returning whether the previous bunches were filled, and how. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="93" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="716" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ab4dafc695308b9f4e5795bf2e3f9566c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; Trig::BunchCrossingToolBase::bunchesAfter</definition>
        <argsstring>(bcid_type bcid=0, int bunches=10) const </argsstring>
        <name>bunchesAfter</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1afc8451f6e92ed0a676598621438ec2dc">bunchesAfter</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1af37671ba0dd338c80d91b37a9fe498bd">bunchesAfter</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a259a9ab1e51ad92af759b09309fb4845">bunchesAfter</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>bunches</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Function returning whether the following bunches were filled, and how. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="732" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a53c0b29db0a8d7393822a57015d56bcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::BunchCrossingToolBase::bunchIntInFront</definition>
        <argsstring>(bcid_type bcid, int bunches=10, BeamType type=Crossing) const </argsstring>
        <name>bunchIntInFront</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac185c0256246a03769092c5237a6cad8">bunchIntInFront</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1ad6c384e34b86d2406cc44737c2e0c307">bunchIntInFront</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a2371cd65b547f431e0781fda40f991c9">bunchIntInFront</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bunches</declname>
          <defval>10</defval>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" kindref="member">BeamType</ref></type>
          <declname>type</declname>
          <defval>Crossing</defval>
        </param>
        <briefdescription>
<para>Function returning the intensities of the bunch crossings before the reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="748" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a053165be519af8e4be49ce77c5c0c7bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::BunchCrossingToolBase::bunchIntAfter</definition>
        <argsstring>(bcid_type bcid, int bunches=10, BeamType type=Crossing) const </argsstring>
        <name>bunchIntAfter</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a312370389d80790d1137a923b2cb4a88">bunchIntAfter</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1ae754a9b1dcc4381474b84e265a284feb">bunchIntAfter</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a5cc5fa16b7c9746c169e0d3bf48e63f9">bunchIntAfter</reimplementedby>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" kindref="member">bcid_type</ref></type>
          <declname>bcid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bunches</declname>
          <defval>10</defval>
        </param>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" kindref="member">BeamType</ref></type>
          <declname>type</declname>
          <defval>Crossing</defval>
        </param>
        <briefdescription>
<para>Function returning the intensities of the bunch crossings after the reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="105" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="779" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ad27cf24864c23bd5e90fa6342e71b6bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int Trig::BunchCrossingToolBase::numberOfFilledBunches</definition>
        <argsstring>() const </argsstring>
        <name>numberOfFilledBunches</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a339f4fd855c9d8e1b391731a4defb887">numberOfFilledBunches</reimplements>
        <reimplementedby refid="df/d21/classTrig_1_1D3PDBunchCrossingTool_1a4a7df6cf70beb8dbb1fa48c104ca0636">numberOfFilledBunches</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1adcd6b90147d8f2f57488fe486288e1cb">numberOfFilledBunches</reimplementedby>
        <briefdescription>
<para>Get the number of filled bunches in the current configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="809" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a48c96620cc51f7682c51cbed180e77aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int Trig::BunchCrossingToolBase::numberOfUnpairedBunches</definition>
        <argsstring>() const </argsstring>
        <name>numberOfUnpairedBunches</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ae67d39ce5d3984b1698b1b07d5fd120e">numberOfUnpairedBunches</reimplements>
        <briefdescription>
<para>Get the number of unpaired bunches in the current configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="110" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="814" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a8da99b872d015c8275a79b4334c40e63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int Trig::BunchCrossingToolBase::numberOfBunchTrains</definition>
        <argsstring>() const </argsstring>
        <name>numberOfBunchTrains</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a8b7bcafa2c0ea0ba0a5b01cf3934f677">numberOfBunchTrains</reimplements>
        <briefdescription>
<para>Get the number of the bunch trains in the current configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="112" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="819" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a59de0d5fe70c893874b0418ce294d5a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Trig::BunchCrossingToolBase::bunchTrainSpacing</definition>
        <argsstring>(BunchDistanceType type=NanoSec) const </argsstring>
        <name>bunchTrainSpacing</name>
        <reimplements refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4d37090ab8e03977c565c46c0d6343d8">bunchTrainSpacing</reimplements>
        <param>
          <type><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" kindref="member">BunchDistanceType</ref></type>
          <declname>type</declname>
          <defval>NanoSec</defval>
        </param>
        <briefdescription>
<para>Get the bunch spacing in the trains. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="825" bodyend="853"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a9e4363277c1d17205c7b10b714b07e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Trig::BunchCrossingToolBase::BunchCrossingToolBase</definition>
        <argsstring>(const std::string &amp;name=&quot;BunchCrossingToolBase&quot;)</argsstring>
        <name>BunchCrossingToolBase</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <defval>&quot;BunchCrossingToolBase&quot;</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The class needs an explicit constructor because some of the member variables really need to be initialized at construction. </para>        </detaileddescription>
        <inbodydescription>
<para>Declare the properties of the tool: </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="19" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ac983cbae796e341d7371902b41a4587c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode Trig::BunchCrossingToolBase::loadSingleBunches</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;bunches, const std::vector&lt; float &gt; &amp;bunch_int1=std::vector&lt; float &gt;(), const std::vector&lt; float &gt; &amp;bunch_int2=std::vector&lt; float &gt;())</argsstring>
        <name>loadSingleBunches</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>bunches</declname>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>bunch_int1</declname>
          <defval>std::vector&lt; float &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>bunch_int2</declname>
          <defval>std::vector&lt; float &gt;()</defval>
        </param>
        <briefdescription>
<para>Interpret the configuration for single bunches. </para>        </briefdescription>
        <detaileddescription>
<para>This function takes care of selecting the single bunches from the paired bunches. These will then not be taken into account in the train finding algorithm.</para><para>The bunch intensity parameter is optional. If it&apos;s not specified, the code will assign an intensity of &quot;1.0&quot; to all the bunch crossings.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bunches</parametername>
</parameternamelist>
<parameterdescription>
<para>The paired bunches </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bunch_int</parametername>
</parameternamelist>
<parameterdescription>
<para>The &quot;intensities&quot; of the paired bunches </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>StatusCode::SUCCESS</computeroutput> if the interpretation was successful, <computeroutput>StatusCode::FAILURE</computeroutput> otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="124" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="869" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a289406fc3f36e544aa02e16673dd3a04" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode Trig::BunchCrossingToolBase::loadBunchTrains</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;bunches, const std::vector&lt; float &gt; &amp;bunch_int1=std::vector&lt; float &gt;(), const std::vector&lt; float &gt; &amp;bunch_int2=std::vector&lt; float &gt;())</argsstring>
        <name>loadBunchTrains</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>bunches</declname>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>bunch_int1</declname>
          <defval>std::vector&lt; float &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>bunch_int2</declname>
          <defval>std::vector&lt; float &gt;()</defval>
        </param>
        <briefdescription>
<para>Interpret the configuration for bunch trains. </para>        </briefdescription>
        <detaileddescription>
<para>This function takes care of identifying the bunch trains in the configuration. The algorithm is quite simple. It starts off with all the filled bunches that have not been identified as single bunches by the loadSingleBunches(...) function. It takes the first available bunch crossing, then loops over the rest of them. When it finds a BC that&apos;s &quot;close enough&quot; to the current bunch train, then the bunch train is extended. From there on the algorithm continues with this extended bunch train. When the loop reaches the end of the available bunches, the created bunch train is added to the cache, and the algorithms starts again with the first still available bunch crossing.</para><para>The bunch intensity parameter is optional. If it&apos;s not specified, the code will assign an intensity of &quot;1.0&quot; to all the bunch crossings.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bunches</parametername>
</parameternamelist>
<parameterdescription>
<para>The filled bunch crossings </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bunch_int</parametername>
</parameternamelist>
<parameterdescription>
<para>The &quot;intensities&quot; of the paired bunches </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>StatusCode::SUCCESS</computeroutput> if the interpretation was successful, <computeroutput>StatusCode::FAILURE</computeroutput> otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="130" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="986" bodyend="1104"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1ad84da5ff8344107234e53aeff5e18bee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode Trig::BunchCrossingToolBase::loadUnpairedBunches</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;beam1, const std::vector&lt; int &gt; &amp;beam2, const std::vector&lt; float &gt; &amp;bunch_int1=std::vector&lt; float &gt;(), const std::vector&lt; float &gt; &amp;bunch_int2=std::vector&lt; float &gt;())</argsstring>
        <name>loadUnpairedBunches</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>beam1</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>beam2</declname>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>bunch_int1</declname>
          <defval>std::vector&lt; float &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>bunch_int2</declname>
          <defval>std::vector&lt; float &gt;()</defval>
        </param>
        <briefdescription>
<para>Interpret the configuration for unpaired bunches. </para>        </briefdescription>
        <detaileddescription>
<para>This function just caches the unpaired bunches internally. It doesn&apos;t have to do anything as fancy as the other two load functions, it just takes the BCIDs as they are.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bunches</parametername>
</parameternamelist>
<parameterdescription>
<para>The unpaired bunch crossings </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bunch_int</parametername>
</parameternamelist>
<parameterdescription>
<para>The &quot;intensities&quot; of the unpaired bunches </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>StatusCode::SUCCESS</computeroutput> if the caching was successful, <computeroutput>StatusCode::FAILURE</computeroutput> otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="137" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="1117" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/classTrig_1_1BunchCrossingToolBase_1a29b990621fc9b619cf2b7bd653a36c1d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Trig::BunchCrossingToolBase::printConfig</definition>
        <argsstring>() const </argsstring>
        <name>printConfig</name>
        <briefdescription>
<para>Function printing the configuration of the tool. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used to print the overall configuration in a format very similar to how atlas-runqery.cern.ch started showing this information recently. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="140" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossingToolBase.cxx" bodystart="1198" bodyend="1210"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all BunchCrossingTool implementations. </para>    </briefdescription>
    <detaileddescription>
<para>This class holds the logic of the bunch crossing tool. The concrete implementations have to supply it with a vector of the filled bunches and optionally their intensities, which they can get from any location they want.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>618331 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-09-24 13:55:26 +0200 (Wed, 24 Sep 2014) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2770">
        <label>asg::AsgMetadataTool</label>
        <link refid="da/dfd/classasg_1_1AsgMetadataTool"/>
        <childnode refid="2771" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2767">
        <label>Trig::BunchCrossingToolBase</label>
        <link refid="db/df3/classTrig_1_1BunchCrossingToolBase"/>
        <childnode refid="2768" relation="public-inheritance">
        </childnode>
        <childnode refid="2770" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2778">
        <label>Trig::xAODBunchCrossingTool</label>
        <link refid="db/d39/classTrig_1_1xAODBunchCrossingTool"/>
        <childnode refid="2767" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2777">
        <label>Trig::WebBunchCrossingTool</label>
        <link refid="d6/d13/classTrig_1_1WebBunchCrossingTool"/>
        <childnode refid="2767" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2771">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="2769" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2769">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="2774">
        <label>Trig::MCBunchCrossingTool</label>
        <link refid="da/dfc/classTrig_1_1MCBunchCrossingTool"/>
        <childnode refid="2767" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2772">
        <label>Trig::D3PDBunchCrossingTool</label>
        <link refid="df/d21/classTrig_1_1D3PDBunchCrossingTool"/>
        <childnode refid="2767" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2768">
        <label>Trig::IBunchCrossingTool</label>
        <link refid="d0/d67/classTrig_1_1IBunchCrossingTool"/>
        <childnode refid="2769" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2773">
        <label>Trig::LHCBunchCrossingTool</label>
        <link refid="d0/d98/classTrig_1_1LHCBunchCrossingTool"/>
        <childnode refid="2767" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2776">
        <label>Trig::TrigConfBunchCrossingTool</label>
        <link refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool"/>
        <childnode refid="2767" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2775">
        <label>Trig::StaticBunchCrossingTool</label>
        <link refid="d9/dd8/classTrig_1_1StaticBunchCrossingTool"/>
        <childnode refid="2767" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2782">
        <label>asg::AsgMetadataTool</label>
        <link refid="da/dfd/classasg_1_1AsgMetadataTool"/>
        <childnode refid="2783" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2779">
        <label>Trig::BunchCrossingToolBase</label>
        <link refid="db/df3/classTrig_1_1BunchCrossingToolBase"/>
        <childnode refid="2780" relation="public-inheritance">
        </childnode>
        <childnode refid="2782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2783">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="2781" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2781">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="2780">
        <label>Trig::IBunchCrossingTool</label>
        <link refid="d0/d67/classTrig_1_1IBunchCrossingTool"/>
        <childnode refid="2781" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/TrigBunchCrossingTool/BunchCrossingToolBase.h" bodystart="36" bodyend="168"/>
    <listofallmembers>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a59a741dd8ea7efecf776cc39470c87de" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>AsgMetadataTool</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>AsgTool</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>bcid_type</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a01e68f99e0c68f4badf7d9c2e087de84" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>bcIntensity</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a15997803b368bc9a3fc27f6ebd3486f2" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>bcType</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a0a2435c329f92970602ae6a6c2f8165a" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Beam1</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a84657ab866c535aaaa27f007dd81b703" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Beam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>BeamType</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a197cfa14f94c758c53a770544b7dad88" prot="protected" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>beginEvent</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a0f88194c53ae0af538819858bdff07da" prot="protected" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>beginInputFile</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea0a64ff40e0cd130bf46a4dc695842780" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>BunchCrossings</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a9e4363277c1d17205c7b10b714b07e3d" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>BunchCrossingToolBase</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cf" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>BunchCrossingType</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>BunchDistanceType</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ab4dafc695308b9f4e5795bf2e3f9566c" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>bunchesAfter</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a7791e0d9ee813c1679bac22c859de01e" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>bunchesInFront</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>BunchFillType</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a053165be519af8e4be49ce77c5c0c7bf" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>bunchIntAfter</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a53c0b29db0a8d7393822a57015d56bcc" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>bunchIntInFront</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a59de0d5fe70c893874b0418ce294d5a5" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>bunchTrainSpacing</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a521766e927f41055758f34ee58b5d012" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>CollidingBunch</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a9d05da22e67bd5be8ea2807a72563690" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Crossing</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1af3f021e1433c5d1c820fc8d28aade214" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>distanceFromFront</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a55ded04a49420061e42910f6d4a72863" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>distanceFromTail</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa4b0c804ae3e2125b4c260b6fefd79ea8" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Empty</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a8ddf98c396a923c2e48174e4ddfcf0a5" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>EmptyBunch</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a96c1e806bc026046faec3c695ca1fa2b" prot="protected" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>endInputFile</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea8110a0e05955daca343f82a4ae037873" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>FilledBunches</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa259bae7213f9b2ee63d726133b5ccd54" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>FirstEmpty</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa5581dfb9e92aa4e7c3bb185de93bc21c" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Front</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a5684c852a799a421c09b4bb1d6f5c70d" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>gapAfterBunch</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a25f17b451a8b4d86553d10956d92c269" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>gapAfterTrain</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ab8ac1297dd93899e04e68622530dab18" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>gapBeforeBunch</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a4c8ce18adcca57ed5391d77aab064d1d" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>gapBeforeTrain</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a5d9d9eae0988784fb6c257e0a2440ca6" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>getProperty</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a530a60a4a450f07baec2e3895f567656" prot="protected" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>handle</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a55b3c013a3e54ae4c1d0d76de8e1e726" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>initialize</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1ae352e92bf7637cdd3fec63ca2df4bb79" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>inputMetaStore</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ae20e96672675556eddbad87a3bd40df7" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>isBeam1</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a774292ba2828a939fb69402d5401718d" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>isBeam2</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a9db99df0515f2acd26a50da37f168d95" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>isFilled</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ac0290e90cf90bd34d70b99cc3efab88d" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>isInTrain</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a5f7ea73dc415f2e16a6de8be234e03d5" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>isUnpaired</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a289406fc3f36e544aa02e16673dd3a04" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>loadBunchTrains</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ac983cbae796e341d7371902b41a4587c" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>loadSingleBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad84da5ff8344107234e53aeff5e18bee" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>loadUnpairedBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1aeacbab34ba7a65f9672a6822d01249b9" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>m_bunchTrains</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad78f428d02ca4832fd663378e552fa65" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>m_filledBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad7b926a368d2961e6ce655c9d81dd89d" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>m_frontLength</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1acc703223701968694a4f2d576b84c1d7" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>m_maxBunchSpacing</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a129a33228220d9f1124b656e142d8470" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>m_singleBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1afca1209ab406f0572af565103c65ca62" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>m_tailLength</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1aac29b06ab503bf643bdaa72d8768f674" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>m_unpairedBunches</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1abb00c6ab139868a879d647adabbddc2c" prot="protected" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>metaDataStop</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa8b13f6fcb97a797aba6ce81089e63f18" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Middle</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfae196bca5223029fbfbd4543646fcf793" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>MiddleEmpty</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a3aeba8f7ad5ade0197f5848fe9e4480e" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>msg_level_name</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea5e0331cbdd292eb12a1834b835bd79c7" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>NanoSec</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a8da99b872d015c8275a79b4334c40e63" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>numberOfBunchTrains</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad27cf24864c23bd5e90fa6342e71b6bf" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>numberOfFilledBunches</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a48c96620cc51f7682c51cbed180e77aa" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>numberOfUnpairedBunches</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1aecc5130b7f5a7e9342e974891b562e1c" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>outputMetaStore</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1af1aac990b958e92bf38123318d926e67" prot="public" virt="pure-virtual" ambiguityscope="Trig::"><scope>Trig::BunchCrossingToolBase</scope><name>print</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1af4cc6ba53b6505045c2866d4e30e821d" prot="public" virt="virtual" ambiguityscope="asg::AsgMetadataTool::"><scope>Trig::BunchCrossingToolBase</scope><name>print</name></member>
      <member refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a29b990621fc9b619cf2b7bd653a36c1d" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>printConfig</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1abe82065a516344e4f0f0abb2f23d9f8a" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>retrieveMetadata</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfad69950ed575625ca7e0c9905bb99f14d" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Single</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1af0c49a5d93cf0f25cbb0a2f12e5394d9" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>sysInitialize</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa334a589a59f6cd4362f4b5afaedc356f" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Tail</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa17f24a20f1378fd1e9542d078133778b" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>Unpaired</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a955e2b8f3446de622b29908f7843b2f5" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>UnpairedBeam1</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8ac260bfad34a78e1b5076eb998c6aa417" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>UnpairedBeam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a5ad3382c869d5996cd7cc6e69d7affd8" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>UnpairedBunch</name></member>
      <member refid="da/dfd/classasg_1_1AsgMetadataTool_1a5e5666d87754b5f3b8d572512c41d5af" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>~AsgMetadataTool</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1abf22f7aa60258c67b79cf67bf70a3a5b" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingToolBase</scope><name>~AsgTool</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>Trig::BunchCrossingToolBase</scope><name>~IAsgTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
