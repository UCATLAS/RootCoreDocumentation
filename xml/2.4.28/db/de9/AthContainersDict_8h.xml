<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="db/de9/AthContainersDict_8h" kind="file">
    <compoundname>AthContainersDict.h</compoundname>
    <includes refid="d3/d80/UserDataStore_8h" local="yes">AthContainers/UserDataStore.h</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes refid="d9/df2/AuxVectorData_8h" local="yes">AthContainers/AuxVectorData.h</includes>
    <includes refid="d7/d18/AuxVectorBase_8h" local="yes">AthContainers/AuxVectorBase.h</includes>
    <includes refid="d1/d6f/AuxElement_8h" local="yes">AthContainers/AuxElement.h</includes>
    <includes refid="dd/d7a/IAuxElement_8h" local="yes">AthContainersInterfaces/IAuxElement.h</includes>
    <includes refid="d6/d3e/IAuxStore_8h" local="yes">AthContainersInterfaces/IAuxStore.h</includes>
    <includes refid="d7/d3a/IConstAuxStore_8h" local="yes">AthContainersInterfaces/IConstAuxStore.h</includes>
    <includes refid="d9/db5/IAuxStoreIO_8h" local="yes">AthContainersInterfaces/IAuxStoreIO.h</includes>
    <includes refid="d7/dab/IAuxStoreHolder_8h" local="yes">AthContainersInterfaces/IAuxStoreHolder.h</includes>
    <includes refid="d7/d7e/IAuxSetOption_8h" local="yes">AthContainersInterfaces/IAuxSetOption.h</includes>
    <includes refid="d3/d0f/AuxStoreInternal_8h" local="yes">AthContainers/AuxStoreInternal.h</includes>
    <includes refid="d3/da4/OwnershipPolicy_8h" local="yes">AthContainers/OwnershipPolicy.h</includes>
    <includes refid="d4/d43/PackedParameters_8h" local="yes">AthContainers/PackedParameters.h</includes>
    <includes refid="d6/dda/PackedContainer_8h" local="yes">AthContainers/PackedContainer.h</includes>
    <includes refid="da/de8/DataLink_8h" local="yes">AthLinks/DataLink.h</includes>
    <incdepgraph>
      <node id="21701">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="21703">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="21668" relation="include">
        </childnode>
        <childnode refid="21670" relation="include">
        </childnode>
        <childnode refid="21676" relation="include">
        </childnode>
        <childnode refid="21677" relation="include">
        </childnode>
      </node>
      <node id="21717">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="21706" relation="include">
        </childnode>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21718" relation="include">
        </childnode>
        <childnode refid="21662" relation="include">
        </childnode>
      </node>
      <node id="21704">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="21675">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="21677">
        <label>functional</label>
      </node>
      <node id="21731">
        <label>boost/version.hpp</label>
      </node>
      <node id="21674">
        <label>limits</label>
      </node>
      <node id="21718">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="21699">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="21671">
        <label>iterator</label>
      </node>
      <node id="21687">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="21657" relation="include">
        </childnode>
        <childnode refid="21688" relation="include">
        </childnode>
      </node>
      <node id="21736">
        <label>AthContainersInterfaces/IAuxStoreHolder.h</label>
        <link refid="d7/dab/IAuxStoreHolder_8h_source"/>
      </node>
      <node id="21724">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="21665" relation="include">
        </childnode>
        <childnode refid="21725" relation="include">
        </childnode>
        <childnode refid="21726" relation="include">
        </childnode>
        <childnode refid="21679" relation="include">
        </childnode>
        <childnode refid="21657" relation="include">
        </childnode>
      </node>
      <node id="21653">
        <label>AthContainers/UserDataStore.h</label>
        <link refid="d3/d80/UserDataStore_8h_source"/>
        <childnode refid="21654" relation="include">
        </childnode>
        <childnode refid="21655" relation="include">
        </childnode>
        <childnode refid="21656" relation="include">
        </childnode>
        <childnode refid="21657" relation="include">
        </childnode>
        <childnode refid="21658" relation="include">
        </childnode>
        <childnode refid="21659" relation="include">
        </childnode>
        <childnode refid="21662" relation="include">
        </childnode>
        <childnode refid="21663" relation="include">
        </childnode>
      </node>
      <node id="21683">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="21684" relation="include">
        </childnode>
        <childnode refid="21672" relation="include">
        </childnode>
      </node>
      <node id="21661">
        <label>stdint.h</label>
      </node>
      <node id="21721">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="21680">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21679" relation="include">
        </childnode>
      </node>
      <node id="21734">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="21665" relation="include">
        </childnode>
        <childnode refid="21679" relation="include">
        </childnode>
        <childnode refid="21735" relation="include">
        </childnode>
        <childnode refid="21662" relation="include">
        </childnode>
      </node>
      <node id="21710">
        <label>RVersion.h</label>
      </node>
      <node id="21667">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="21668" relation="include">
        </childnode>
        <childnode refid="21676" relation="include">
        </childnode>
        <childnode refid="21677" relation="include">
        </childnode>
      </node>
      <node id="21673">
        <label>cmath</label>
      </node>
      <node id="21728">
        <label>cassert</label>
      </node>
      <node id="21732">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="21726">
        <label>stdexcept</label>
      </node>
      <node id="21702">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="21657">
        <label>string</label>
      </node>
      <node id="21705">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="21665" relation="include">
        </childnode>
        <childnode refid="21706" relation="include">
        </childnode>
        <childnode refid="21687" relation="include">
        </childnode>
        <childnode refid="21683" relation="include">
        </childnode>
        <childnode refid="21707" relation="include">
        </childnode>
        <childnode refid="21712" relation="include">
        </childnode>
        <childnode refid="21713" relation="include">
        </childnode>
        <childnode refid="21690" relation="include">
        </childnode>
        <childnode refid="21684" relation="include">
        </childnode>
        <childnode refid="21670" relation="include">
        </childnode>
        <childnode refid="21672" relation="include">
        </childnode>
        <childnode refid="21714" relation="include">
        </childnode>
        <childnode refid="21715" relation="include">
        </childnode>
        <childnode refid="21697" relation="include">
        </childnode>
        <childnode refid="21716" relation="include">
        </childnode>
      </node>
      <node id="21678">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21679" relation="include">
        </childnode>
      </node>
      <node id="21714">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="21658">
        <label>map</label>
      </node>
      <node id="21660">
        <label>SGTools/crc64.h</label>
      </node>
      <node id="21711">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="21694">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="21715">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="21691">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="21723">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="21709">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="21710" relation="include">
        </childnode>
        <childnode refid="21711" relation="include">
        </childnode>
      </node>
      <node id="21713">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="21700">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="21663">
        <label>boost/any.hpp</label>
      </node>
      <node id="21686">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="21687" relation="include">
        </childnode>
        <childnode refid="21674" relation="include">
        </childnode>
        <childnode refid="21661" relation="include">
        </childnode>
        <childnode refid="21689" relation="include">
        </childnode>
      </node>
      <node id="21665">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21667" relation="include">
        </childnode>
      </node>
      <node id="21668">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="21669" relation="include">
        </childnode>
        <childnode refid="21670" relation="include">
        </childnode>
        <childnode refid="21671" relation="include">
        </childnode>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21672" relation="include">
        </childnode>
        <childnode refid="21673" relation="include">
        </childnode>
        <childnode refid="21674" relation="include">
        </childnode>
        <childnode refid="21657" relation="include">
        </childnode>
        <childnode refid="21675" relation="include">
        </childnode>
      </node>
      <node id="21729">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="21728" relation="include">
        </childnode>
      </node>
      <node id="21655">
        <label>AthenaKernel/IAthenaBarCode.h</label>
      </node>
      <node id="21679">
        <label>typeinfo</label>
      </node>
      <node id="21727">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="21714" relation="include">
        </childnode>
        <childnode refid="21728" relation="include">
        </childnode>
      </node>
      <node id="21689">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="21712">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="21708">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="21661" relation="include">
        </childnode>
      </node>
      <node id="21688">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="21693">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="21662">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="21664">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="21665" relation="include">
        </childnode>
        <childnode refid="21678" relation="include">
        </childnode>
        <childnode refid="21680" relation="include">
        </childnode>
        <childnode refid="21681" relation="include">
        </childnode>
        <childnode refid="21695" relation="include">
        </childnode>
        <childnode refid="21697" relation="include">
        </childnode>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21679" relation="include">
        </childnode>
        <childnode refid="21684" relation="include">
        </childnode>
        <childnode refid="21703" relation="include">
        </childnode>
        <childnode refid="21704" relation="include">
        </childnode>
      </node>
      <node id="21684">
        <label>vector</label>
      </node>
      <node id="21670">
        <label>utility</label>
      </node>
      <node id="21690">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="21733">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="21698">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="21682">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="21697">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="21698" relation="include">
        </childnode>
        <childnode refid="21699" relation="include">
        </childnode>
        <childnode refid="21700" relation="include">
        </childnode>
        <childnode refid="21701" relation="include">
        </childnode>
        <childnode refid="21702" relation="include">
        </childnode>
      </node>
      <node id="21672">
        <label>cstdlib</label>
      </node>
      <node id="21725">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="21706">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="21665" relation="include">
        </childnode>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21662" relation="include">
        </childnode>
      </node>
      <node id="21666">
        <label>cstddef</label>
      </node>
      <node id="21656">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="21716">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="21664" relation="include">
        </childnode>
        <childnode refid="21717" relation="include">
        </childnode>
        <childnode refid="21706" relation="include">
        </childnode>
        <childnode refid="21714" relation="include">
        </childnode>
        <childnode refid="21715" relation="include">
        </childnode>
      </node>
      <node id="21659">
        <label>AthContainers/tools/UDSLabelHashTable.h</label>
        <link refid="d7/d98/UDSLabelHashTable_8h_source"/>
        <childnode refid="21660" relation="include">
        </childnode>
        <childnode refid="21658" relation="include">
        </childnode>
        <childnode refid="21657" relation="include">
        </childnode>
        <childnode refid="21656" relation="include">
        </childnode>
        <childnode refid="21661" relation="include">
        </childnode>
      </node>
      <node id="21681">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="21678" relation="include">
        </childnode>
        <childnode refid="21682" relation="include">
        </childnode>
        <childnode refid="21683" relation="include">
        </childnode>
        <childnode refid="21685" relation="include">
        </childnode>
        <childnode refid="21690" relation="include">
        </childnode>
        <childnode refid="21679" relation="include">
        </childnode>
        <childnode refid="21684" relation="include">
        </childnode>
        <childnode refid="21669" relation="include">
        </childnode>
        <childnode refid="21661" relation="include">
        </childnode>
        <childnode refid="21692" relation="include">
        </childnode>
        <childnode refid="21693" relation="include">
        </childnode>
        <childnode refid="21694" relation="include">
        </childnode>
      </node>
      <node id="21654">
        <label>GaudiKernel/StatusCode.h</label>
      </node>
      <node id="21692">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="21719">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="21705" relation="include">
        </childnode>
        <childnode refid="21720" relation="include">
        </childnode>
        <childnode refid="21721" relation="include">
        </childnode>
        <childnode refid="21722" relation="include">
        </childnode>
        <childnode refid="21664" relation="include">
        </childnode>
        <childnode refid="21724" relation="include">
        </childnode>
        <childnode refid="21729" relation="include">
        </childnode>
        <childnode refid="21717" relation="include">
        </childnode>
        <childnode refid="21730" relation="include">
        </childnode>
        <childnode refid="21684" relation="include">
        </childnode>
        <childnode refid="21733" relation="include">
        </childnode>
      </node>
      <node id="21735">
        <label>set</label>
      </node>
      <node id="21696">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="21685">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="21682" relation="include">
        </childnode>
        <childnode refid="21686" relation="include">
        </childnode>
        <childnode refid="21690" relation="include">
        </childnode>
        <childnode refid="21684" relation="include">
        </childnode>
        <childnode refid="21691" relation="include">
        </childnode>
      </node>
      <node id="21669">
        <label>algorithm</label>
      </node>
      <node id="21737">
        <label>AthContainers/AuxStoreInternal.h</label>
        <link refid="d3/d0f/AuxStoreInternal_8h"/>
        <childnode refid="21717" relation="include">
        </childnode>
        <childnode refid="21734" relation="include">
        </childnode>
        <childnode refid="21697" relation="include">
        </childnode>
        <childnode refid="21690" relation="include">
        </childnode>
        <childnode refid="21684" relation="include">
        </childnode>
        <childnode refid="21718" relation="include">
        </childnode>
        <childnode refid="21662" relation="include">
        </childnode>
      </node>
      <node id="21722">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="21723" relation="include">
        </childnode>
        <childnode refid="21706" relation="include">
        </childnode>
        <childnode refid="21717" relation="include">
        </childnode>
        <childnode refid="21707" relation="include">
        </childnode>
        <childnode refid="21664" relation="include">
        </childnode>
        <childnode refid="21705" relation="include">
        </childnode>
        <childnode refid="21683" relation="include">
        </childnode>
        <childnode refid="21724" relation="include">
        </childnode>
        <childnode refid="21714" relation="include">
        </childnode>
        <childnode refid="21666" relation="include">
        </childnode>
        <childnode refid="21727" relation="include">
        </childnode>
      </node>
      <node id="21707">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="21661" relation="include">
        </childnode>
        <childnode refid="21657" relation="include">
        </childnode>
        <childnode refid="21708" relation="include">
        </childnode>
        <childnode refid="21709" relation="include">
        </childnode>
      </node>
      <node id="21720">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="21652">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h</label>
        <link refid="AthContainersDict.h"/>
        <childnode refid="21653" relation="include">
        </childnode>
        <childnode refid="21664" relation="include">
        </childnode>
        <childnode refid="21705" relation="include">
        </childnode>
        <childnode refid="21719" relation="include">
        </childnode>
        <childnode refid="21722" relation="include">
        </childnode>
        <childnode refid="21723" relation="include">
        </childnode>
        <childnode refid="21717" relation="include">
        </childnode>
        <childnode refid="21706" relation="include">
        </childnode>
        <childnode refid="21734" relation="include">
        </childnode>
        <childnode refid="21736" relation="include">
        </childnode>
        <childnode refid="21682" relation="include">
        </childnode>
        <childnode refid="21737" relation="include">
        </childnode>
        <childnode refid="21720" relation="include">
        </childnode>
        <childnode refid="21686" relation="include">
        </childnode>
        <childnode refid="21685" relation="include">
        </childnode>
        <childnode refid="21707" relation="include">
        </childnode>
      </node>
      <node id="21676">
        <label>memory</label>
      </node>
      <node id="21695">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="21680" relation="include">
        </childnode>
        <childnode refid="21681" relation="include">
        </childnode>
        <childnode refid="21696" relation="include">
        </childnode>
      </node>
      <node id="21730">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="21723" relation="include">
        </childnode>
        <childnode refid="21717" relation="include">
        </childnode>
        <childnode refid="21706" relation="include">
        </childnode>
        <childnode refid="21692" relation="include">
        </childnode>
        <childnode refid="21731" relation="include">
        </childnode>
        <childnode refid="21732" relation="include">
        </childnode>
        <childnode refid="21657" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d9/db4/structAthContainersInstan" prot="public">AthContainersInstan</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="db/de9/AthContainersDict_8h_1a92a8caa7e96c113e2092aff75d94abfe" prot="public" static="no">
        <name>ARGS1</name>
        <initializer>(const std::string&amp;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="db/de9/AthContainersDict_8h_1a3c2193ee6442d5d002801aa46fba8a49" prot="public" static="no">
        <name>ARGS2</name>
        <initializer>(const std::string&amp;, const std::string&amp;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="db/de9/AthContainersDict_8h_1a3102b66de34f777c84bb7272de1e4398" prot="public" static="no">
        <name>INSTAN_TYPE</name>
        <param><defname>TYP</defname></param>
        <initializer>template class <ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor</ref>&lt;TYP&gt;; \
  template class <ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor</ref>&lt;TYP&gt;; \
  template class <ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator</ref>&lt;TYP&gt;; \
  template TYP&amp; SG::AuxElement::auxdata&lt;TYP&gt; ARGS1; \
  template TYP&amp; SG::AuxElement::auxdata&lt;TYP&gt; ARGS2; \
  template const TYP&amp; SG::AuxElement::auxdata&lt;TYP&gt; ARGS1 const; \
  template const TYP&amp; SG::AuxElement::auxdata&lt;TYP&gt; ARGS2 const; \
  template const TYP&amp; SG::AuxElement::auxdataConst&lt;TYP&gt; ARGS1 const; \
  template const TYP&amp; SG::AuxElement::auxdataConst&lt;TYP&gt; ARGS2 const; \
  template TYP&amp; SG::AuxElement::auxdecor&lt;TYP&gt; ARGS1 const; \
  template TYP&amp; SG::AuxElement::auxdecor&lt;TYP&gt; ARGS2 const</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1af6707903c3b7ea1d5780d505f7dbe480" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CxxUtils_Internal::hashtable_iterator&lt; unsigned long, true, false &gt; &amp;x, const CxxUtils_Internal::hashtable_iterator&lt; unsigned long, true, false &gt; &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d6/de1/structCxxUtils__Internal_1_1hashtable__iterator" kindref="compound">CxxUtils_Internal::hashtable_iterator</ref>&lt; unsigned long, true, false &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="d6/de1/structCxxUtils__Internal_1_1hashtable__iterator" kindref="compound">CxxUtils_Internal::hashtable_iterator</ref>&lt; unsigned long, true, false &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a927c3522a153ca0ff8ae813e0789752c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const CxxUtils_Internal::hashtable_const_iterator&lt; unsigned long, true, false &gt; &amp;x, const CxxUtils_Internal::hashtable_const_iterator&lt; unsigned long, true, false &gt; &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d2/d21/structCxxUtils__Internal_1_1hashtable__const__iterator" kindref="compound">CxxUtils_Internal::hashtable_const_iterator</ref>&lt; unsigned long, true, false &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d21/structCxxUtils__Internal_1_1hashtable__const__iterator" kindref="compound">CxxUtils_Internal::hashtable_const_iterator</ref>&lt; unsigned long, true, false &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" bodystart="37" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a28bc46bf943f7257e351e78dd45b7de9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CxxUtils_Internal::hashtable_iterator&lt; unsigned long, true, false &gt; &amp;x, const CxxUtils_Internal::hashtable_iterator&lt; unsigned long, true, false &gt; &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d6/de1/structCxxUtils__Internal_1_1hashtable__iterator" kindref="compound">CxxUtils_Internal::hashtable_iterator</ref>&lt; unsigned long, true, false &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="d6/de1/structCxxUtils__Internal_1_1hashtable__iterator" kindref="compound">CxxUtils_Internal::hashtable_iterator</ref>&lt; unsigned long, true, false &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a8e8179f89846e7a7e491d0b0691047e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const CxxUtils_Internal::hashtable_const_iterator&lt; unsigned long, true, false &gt; &amp;x, const CxxUtils_Internal::hashtable_const_iterator&lt; unsigned long, true, false &gt; &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d2/d21/structCxxUtils__Internal_1_1hashtable__const__iterator" kindref="compound">CxxUtils_Internal::hashtable_const_iterator</ref>&lt; unsigned long, true, false &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d21/structCxxUtils__Internal_1_1hashtable__const__iterator" kindref="compound">CxxUtils_Internal::hashtable_const_iterator</ref>&lt; unsigned long, true, false &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a97b50987005dd6c1ee0359089d821a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(char)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a4dd0d9bbd84c27d403e0932ceb1380dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(unsigned char)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>unsigned</type>
          <declname>char</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="111"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1aaaa6fe0934f2e7ae2d3160f84cee719e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(int)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1aa6cb4f2ae5f3a1113f6058a421f54297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(short)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>short</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a1de56d230a2299289c4c4f748588acac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(long)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>long</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a6e45cac8a7a70b4700196c2f413acc8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(unsigned long long)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>unsigned long</type>
          <declname>long</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a7fb318c62dd62aaabfb09b5a6e502890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(float)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a34f866f2f359c184c1f2a975211921db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(double)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a1fc7d545c6cf1b7dda8b1ee5a219b444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(bool)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a4397d3ae491382eb5417599f0df9eb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::string)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1ac3fc8ccbb09ce0990a9e589c27c04417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; char &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; char &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a54432130be61ca062229c42cb0cae080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; unsigned char &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; unsigned char &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a9c145960e41d219813695872776c6161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; int &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="126"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a10110d94fb5e0add7de1da8c1667e4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; short &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; short &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a2935741e75714c7e10b32cbffebfdb0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; long &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; long &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1ae04c911d212eb1acb8ec64d6b5f9eb1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; unsigned int &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; unsigned int &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="129"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1ab3d222264fcce78873511ec84002c84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; unsigned short &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; unsigned short &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="130"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a5ac278d2b612d5923c168fa6fb26a985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; unsigned long &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; unsigned long &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a07f14e47f74b4ae3e40eacf329a9fecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; unsigned long long &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; unsigned long long &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1ad318e4082468466ca2c2e3db6ef6dbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; float &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; float &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="133"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a12e34cc954acf3f672edf7ee226554e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; double &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1aea902a98f455824d3f3660599171133e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; bool &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; bool &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="135"/>
      </memberdef>
      <memberdef kind="function" id="db/de9/AthContainersDict_8h_1a59569196836d9e05a39c8f588b398b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INSTAN_TYPE</definition>
        <argsstring>(std::vector&lt; std::string &gt;)</argsstring>
        <name>INSTAN_TYPE</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h" line="136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthContainers/UserDataStore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/df2/AuxVectorData_8h" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AthContainers/AuxVectorData.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d18/AuxVectorBase_8h" kindref="compound" tooltip="Manage index tracking and synchronization of auxiliary data.">AthContainers/AuxVectorBase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d6f/AuxElement_8h" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">AthContainers/AuxElement.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d7a/IAuxElement_8h" kindref="compound" tooltip="Flag that a class may have auxiliary data associated with it.">AthContainersInterfaces/IAuxElement.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d3e/IAuxStore_8h" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">AthContainersInterfaces/IAuxStore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d3a/IConstAuxStore_8h" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">AthContainersInterfaces/IConstAuxStore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/db5/IAuxStoreIO_8h" kindref="compound" tooltip="Interface providing I/O for a generic auxiliary store.">AthContainersInterfaces/IAuxStoreIO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthContainersInterfaces/IAuxStoreHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d7e/IAuxSetOption_8h" kindref="compound" tooltip="Abstract interface for setting a option on a aux data container.">AthContainersInterfaces/IAuxSetOption.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d0f/AuxStoreInternal_8h" kindref="compound" tooltip="An auxiliary data store that holds data internally.">AthContainers/AuxStoreInternal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthContainers/OwnershipPolicy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d43/PackedParameters_8h" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">AthContainers/PackedParameters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/dda/PackedContainer_8h" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">AthContainers/PackedContainer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthLinks/DataLink.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="d9/db4/structAthContainersInstan" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/db4/structAthContainersInstan" kindref="compound">AthContainersInstan</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>std::pair&lt;SG::auxid_set_t::iterator,<sp/>bool&gt;<sp/>p1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>std::pair&lt;SG::auxid_set_t::const_iterator,<sp/>bool&gt;<sp/>p2;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="d1/d43/DataList_8h_1aa7a25d1b36f44af915a534c124985c2b" kindref="member" tooltip="Based on operator==.">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/de1/structCxxUtils__Internal_1_1hashtable__iterator" kindref="compound">CxxUtils_Internal::hashtable_iterator&lt;unsigned long, true, false&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/de1/structCxxUtils__Internal_1_1hashtable__iterator" kindref="compound">CxxUtils_Internal::hashtable_iterator&lt;unsigned long, true, false&gt;</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d5/d44/structCxxUtils__Internal_1_1hashtable__iterator__base" kindref="compound">CxxUtils_Internal::hashtable_iterator_base&lt;unsigned long, false&gt;</ref><sp/>base;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">base&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>!=<sp/>static_cast&lt;const<sp/>base&amp;&gt;(y);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="d1/d43/DataList_8h_1aa7a25d1b36f44af915a534c124985c2b" kindref="member" tooltip="Based on operator==.">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d21/structCxxUtils__Internal_1_1hashtable__const__iterator" kindref="compound">CxxUtils_Internal::hashtable_const_iterator&lt;unsigned long, true, false&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d21/structCxxUtils__Internal_1_1hashtable__const__iterator" kindref="compound">CxxUtils_Internal::hashtable_const_iterator&lt;unsigned long, true, false&gt;</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d5/d44/structCxxUtils__Internal_1_1hashtable__iterator__base" kindref="compound">CxxUtils_Internal::hashtable_iterator_base&lt;unsigned long, false&gt;</ref><sp/>base;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">base&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>!=<sp/>static_cast&lt;const<sp/>base&amp;&gt;(y);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="d1/d43/DataList_8h_1a2f4af3db6bca5dc8d962d673635f0865" kindref="member" tooltip="List equality comparison.">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/de1/structCxxUtils__Internal_1_1hashtable__iterator" kindref="compound">CxxUtils_Internal::hashtable_iterator&lt;unsigned long, true, false&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/de1/structCxxUtils__Internal_1_1hashtable__iterator" kindref="compound">CxxUtils_Internal::hashtable_iterator&lt;unsigned long, true, false&gt;</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d5/d44/structCxxUtils__Internal_1_1hashtable__iterator__base" kindref="compound">CxxUtils_Internal::hashtable_iterator_base&lt;unsigned long, false&gt;</ref><sp/>base;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">base&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>==<sp/>static_cast&lt;const<sp/>base&amp;&gt;(y);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="d1/d43/DataList_8h_1a2f4af3db6bca5dc8d962d673635f0865" kindref="member" tooltip="List equality comparison.">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d21/structCxxUtils__Internal_1_1hashtable__const__iterator" kindref="compound">CxxUtils_Internal::hashtable_const_iterator&lt;unsigned long, true, false&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d21/structCxxUtils__Internal_1_1hashtable__const__iterator" kindref="compound">CxxUtils_Internal::hashtable_const_iterator&lt;unsigned long, true, false&gt;</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d5/d44/structCxxUtils__Internal_1_1hashtable__iterator__base" kindref="compound">CxxUtils_Internal::hashtable_iterator_base&lt;unsigned long, false&gt;</ref><sp/>base;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">base&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x)<sp/>==<sp/>static_cast&lt;const<sp/>base&amp;&gt;(y);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GCCXML_DUMMY_INSTANTIATION_ATHCONTAINERS<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/da2/classDataLink" kindref="compound">DataLink&lt;SG::IConstAuxStore&gt;</ref><sp/>dummy1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;char&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pchar;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;unsigned char&gt;</ref><sp/><sp/>puchar;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;short&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pshort;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;unsigned short&gt;</ref><sp/>pushort;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pint;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;unsigned int&gt;</ref><sp/><sp/><sp/>puint;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;float&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfloat;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdouble;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;char&gt;</ref><sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvchar;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;unsigned char&gt;</ref><sp/>&gt;<sp/><sp/>pvuchar;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;short&gt;</ref><sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvshort;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;unsigned short&gt;</ref><sp/>&gt;<sp/>pvushort;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;int&gt;</ref><sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvint;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;unsigned int&gt;</ref><sp/>&gt;<sp/><sp/><sp/>pvuint;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;float&gt;</ref><sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvfloat;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;double&gt;</ref><sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvdouble;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;char&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvvchar;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;unsigned char&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><sp/>pvvuchar;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;short&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvvshort;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;unsigned short&gt;</ref><sp/>&gt;<sp/>&gt;<sp/>pvvushort;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;int&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvvint;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;unsigned int&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><sp/><sp/>pvvuint;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvvfloat;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;std::vector&lt;std::vector&lt;double&gt;</ref><sp/>&gt;<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvvdouble;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARGS1<sp/>(const<sp/>std::string&amp;)</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ARGS2<sp/>(const<sp/>std::string&amp;,<sp/>const<sp/>std::string&amp;)</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INSTAN_TYPE(TYP)<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/>template<sp/>class<sp/>SG::AuxElement::ConstAccessor&lt;TYP&gt;;<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/>template<sp/>class<sp/>SG::AuxElement::Accessor&lt;TYP&gt;;<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>template<sp/>class<sp/>SG::AuxElement::Decorator&lt;TYP&gt;;<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/>template<sp/>TYP&amp;<sp/>SG::AuxElement::auxdata&lt;TYP&gt;<sp/>ARGS1;<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/>template<sp/>TYP&amp;<sp/>SG::AuxElement::auxdata&lt;TYP&gt;<sp/>ARGS2;<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/>template<sp/>const<sp/>TYP&amp;<sp/>SG::AuxElement::auxdata&lt;TYP&gt;<sp/>ARGS1<sp/>const;<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/>template<sp/>const<sp/>TYP&amp;<sp/>SG::AuxElement::auxdata&lt;TYP&gt;<sp/>ARGS2<sp/>const;<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/>template<sp/>const<sp/>TYP&amp;<sp/>SG::AuxElement::auxdataConst&lt;TYP&gt;<sp/>ARGS1<sp/>const;<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/>template<sp/>const<sp/>TYP&amp;<sp/>SG::AuxElement::auxdataConst&lt;TYP&gt;<sp/>ARGS2<sp/>const;<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/>template<sp/>TYP&amp;<sp/>SG::AuxElement::auxdecor&lt;TYP&gt;<sp/>ARGS1<sp/>const;<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/>template<sp/>TYP&amp;<sp/>SG::AuxElement::auxdecor&lt;TYP&gt;<sp/>ARGS2<sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">INSTAN_TYPE(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">INSTAN_TYPE(std::string);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">INSTAN_TYPE(std::vector&lt;char&gt;);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">INSTAN_TYPE(std::vector&lt;unsigned<sp/>char&gt;);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">INSTAN_TYPE(std::vector&lt;int&gt;);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">INSTAN_TYPE(std::vector&lt;short&gt;);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">INSTAN_TYPE(std::vector&lt;long&gt;);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">INSTAN_TYPE(std::vector&lt;unsigned<sp/>int&gt;);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">INSTAN_TYPE(std::vector&lt;unsigned<sp/>short&gt;);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">INSTAN_TYPE(std::vector&lt;unsigned<sp/>long&gt;);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">INSTAN_TYPE(std::vector&lt;unsigned<sp/>long<sp/>long&gt;);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">INSTAN_TYPE(std::vector&lt;float&gt;);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">INSTAN_TYPE(std::vector&lt;double&gt;);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">INSTAN_TYPE(std::vector&lt;bool&gt;);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">INSTAN_TYPE(std::vector&lt;std::string&gt;);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ARGS1</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>ARGS2</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>INSTAN_TYPE</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h"/>
  </compounddef>
</doxygen>
