<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/db2/TGoodRunsList_8h" kind="file">
    <compoundname>TGoodRunsList.h</compoundname>
    <includes refid="df/d5b/TGoodRun_8h" local="yes">GoodRunsLists/TGoodRun.h</includes>
    <includes local="yes">TNamed.h</includes>
    <includes local="yes">TString.h</includes>
    <includes local="no">map</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includedby refid="d1/d2a/DQHelperFunctions_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/DQHelperFunctions.h</includedby>
    <includedby refid="d3/dca/TGoodRunsListWriter_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsListWriter.h</includedby>
    <includedby refid="d7/dd9/TGRLCollection_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGRLCollection.h</includedby>
    <includedby refid="d0/d59/TGoodRunsList_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsList.cxx</includedby>
    <includedby refid="dd/dac/TGoodRunsListReader_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsListReader.cxx</includedby>
    <includedby refid="db/d28/TGoodRunsListWriter_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsListWriter.cxx</includedby>
    <incdepgraph>
      <node id="134703">
        <label>string</label>
      </node>
      <node id="134702">
        <label>map</label>
      </node>
      <node id="134695">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h</label>
        <link refid="TGoodRunsList.h"/>
        <childnode refid="134696" relation="include">
        </childnode>
        <childnode refid="134700" relation="include">
        </childnode>
        <childnode refid="134701" relation="include">
        </childnode>
        <childnode refid="134702" relation="include">
        </childnode>
        <childnode refid="134699" relation="include">
        </childnode>
        <childnode refid="134703" relation="include">
        </childnode>
      </node>
      <node id="134696">
        <label>GoodRunsLists/TGoodRun.h</label>
        <link refid="df/d5b/TGoodRun_8h_source"/>
        <childnode refid="134697" relation="include">
        </childnode>
        <childnode refid="134698" relation="include">
        </childnode>
        <childnode refid="134699" relation="include">
        </childnode>
      </node>
      <node id="134697">
        <label>GoodRunsLists/TLumiBlockRange.h</label>
        <link refid="d9/df8/TLumiBlockRange_8h_source"/>
        <childnode refid="134698" relation="include">
        </childnode>
        <childnode refid="134699" relation="include">
        </childnode>
      </node>
      <node id="134698">
        <label>TObject.h</label>
      </node>
      <node id="134699">
        <label>vector</label>
      </node>
      <node id="134700">
        <label>TNamed.h</label>
      </node>
      <node id="134701">
        <label>TString.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="134705">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/DQHelperFunctions.h</label>
        <link refid="d1/d2a/DQHelperFunctions_8h_source"/>
      </node>
      <node id="134710">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsListReader.h</label>
        <link refid="d7/d46/TGoodRunsListReader_8h_source"/>
      </node>
      <node id="134704">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h</label>
        <link refid="TGoodRunsList.h"/>
        <childnode refid="134705" relation="include">
        </childnode>
        <childnode refid="134706" relation="include">
        </childnode>
        <childnode refid="134707" relation="include">
        </childnode>
      </node>
      <node id="134707">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGRLCollection.h</label>
        <link refid="d7/dd9/TGRLCollection_8h_source"/>
        <childnode refid="134708" relation="include">
        </childnode>
        <childnode refid="134710" relation="include">
        </childnode>
        <childnode refid="134706" relation="include">
        </childnode>
      </node>
      <node id="134708">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/GoodRunsListSelectionTool.h</label>
        <link refid="d3/dc1/GoodRunsListSelectionTool_8h_source"/>
        <childnode refid="134709" relation="include">
        </childnode>
      </node>
      <node id="134709">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/GoodRunsListsDict.h</label>
        <link refid="dc/d9a/GoodRunsListsDict_8h_source"/>
      </node>
      <node id="134706">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsListWriter.h</label>
        <link refid="d3/dca/TGoodRunsListWriter_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="df/d0c/classRoot_1_1TGoodRunsList" prot="public">Root::TGoodRunsList</innerclass>
    <innernamespace refid="d2/d60/namespaceRoot">Root</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Class<sp/><sp/>:<sp/>TGoodRunsList<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Authors<sp/>(alphabetical):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/>Baak<sp/>&lt;mbaak@cern.ch&gt;<sp/>-<sp/>CERN,<sp/>Switzerland<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__TGoodRunsList__</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__TGoodRunsList__</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TGoodRun.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TNamed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Root<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="df/d0c/classRoot_1_1TGoodRunsList" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>Int_t,<sp/>TGoodRun<sp/>&gt;,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TNamed<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref>&amp;<sp/>other)<sp/>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>other)<sp/>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddGRL(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref><sp/>GetOverlapWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref><sp/>GetSumWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref><sp/>GetPartOnlyIn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref><sp/>GetPartNotIn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>HasTriggerInfo()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>HasRun(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>runnr<sp/>)<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>HasRunLumiBlock(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>runnr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>lumiblocknr<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList_1ad57ffc3186e8782b8e44184b4daecdc3" kindref="member">HasSameGRLInfo</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>other<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>HasOverlapWith(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>&amp;<sp/>other,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verb=</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddRunLumiBlock(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>runnr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Int_t&amp;<sp/>lumiblocknr<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetVersion(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>version)<sp/>{<sp/>m_version<sp/>=<sp/>version;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddMetaData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>value)<sp/>{<sp/>m_metadata[key]<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMetaData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;TString,TString&gt;&amp;<sp/>metadata)<sp/>{<sp/>m_metadata<sp/>=<sp/>metadata;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCheckGRLInfo(Bool_t<sp/>check=kTRUE)<sp/>{<sp/>m_checkGRLInfo=check;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Bool_t&amp;<sp/>GetCheckGRLInfo()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_checkGRLInfo;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>GetVersion()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_version;<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;TString,TString&gt;&amp;<sp/>GetMetaData()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_metadata;<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetMetaDataSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_metadata.size();<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Summary(Bool_t<sp/>verbose<sp/>=<sp/>kFALSE)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>IsEmpty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>GetRunlist()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Root::TGoodRun&gt;<sp/>GetGoodRuns()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>GetTriggerList()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>GetStreamList()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>GetSuggestedName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Compress();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>m_version;<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;TString,TString&gt;<sp/>m_metadata;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_checkGRLInfo;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>Bool_t<sp/>m_hasRun;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>Bool_t<sp/>m_hasLB;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>Int_t<sp/>m_prevRun;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>Int_t<sp/>m_prevLB;<sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClassDef(<ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">TGoodRunsList</ref>,1)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/GoodRunsLists/TGoodRunsList.h"/>
  </compounddef>
</doxygen>
