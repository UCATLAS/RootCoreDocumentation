<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/dcf/TPileupReweighting_8cxx" kind="file">
    <compoundname>TPileupReweighting.cxx</compoundname>
    <includes refid="d4/d1c/TPileupReweighting_8h" local="yes">PileupReweighting/TPileupReweighting.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">TROOT.h</includes>
    <includes local="no">TChain.h</includes>
    <includes local="no">TLeaf.h</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TH1.h</includes>
    <includes local="no">TH1D.h</includes>
    <includes local="no">TH2D.h</includes>
    <includes local="no">TH3D.h</includes>
    <includes local="no">TAxis.h</includes>
    <includes local="no">TString.h</includes>
    <includes local="no">TRandom3.h</includes>
    <incdepgraph>
      <node id="232515">
        <label>PileupReweighting/TPileupReweighting.h</label>
        <link refid="d4/d1c/TPileupReweighting_8h_source"/>
        <childnode refid="232516" relation="include">
        </childnode>
        <childnode refid="232517" relation="include">
        </childnode>
        <childnode refid="232518" relation="include">
        </childnode>
        <childnode refid="232519" relation="include">
        </childnode>
        <childnode refid="232520" relation="include">
        </childnode>
        <childnode refid="232521" relation="include">
        </childnode>
        <childnode refid="232522" relation="include">
        </childnode>
        <childnode refid="232523" relation="include">
        </childnode>
        <childnode refid="232524" relation="include">
        </childnode>
        <childnode refid="232525" relation="include">
        </childnode>
      </node>
      <node id="232533">
        <label>TAxis.h</label>
      </node>
      <node id="232530">
        <label>TH1D.h</label>
      </node>
      <node id="232524">
        <label>stdexcept</label>
      </node>
      <node id="232531">
        <label>TH2D.h</label>
      </node>
      <node id="232520">
        <label>map</label>
      </node>
      <node id="232514">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/Root/TPileupReweighting.cxx</label>
        <link refid="TPileupReweighting.cxx"/>
        <childnode refid="232515" relation="include">
        </childnode>
        <childnode refid="232526" relation="include">
        </childnode>
        <childnode refid="232527" relation="include">
        </childnode>
        <childnode refid="232528" relation="include">
        </childnode>
        <childnode refid="232529" relation="include">
        </childnode>
        <childnode refid="232517" relation="include">
        </childnode>
        <childnode refid="232525" relation="include">
        </childnode>
        <childnode refid="232530" relation="include">
        </childnode>
        <childnode refid="232531" relation="include">
        </childnode>
        <childnode refid="232532" relation="include">
        </childnode>
        <childnode refid="232533" relation="include">
        </childnode>
        <childnode refid="232518" relation="include">
        </childnode>
        <childnode refid="232522" relation="include">
        </childnode>
      </node>
      <node id="232532">
        <label>TH3D.h</label>
      </node>
      <node id="232525">
        <label>TH1.h</label>
      </node>
      <node id="232527">
        <label>TROOT.h</label>
      </node>
      <node id="232528">
        <label>TChain.h</label>
      </node>
      <node id="232521">
        <label>vector</label>
      </node>
      <node id="232517">
        <label>TFile.h</label>
      </node>
      <node id="232526">
        <label>math.h</label>
      </node>
      <node id="232529">
        <label>TLeaf.h</label>
      </node>
      <node id="232523">
        <label>iostream</label>
      </node>
      <node id="232516">
        <label>TNamed.h</label>
      </node>
      <node id="232518">
        <label>TString.h</label>
      </node>
      <node id="232519">
        <label>TVectorD.h</label>
      </node>
      <node id="232522">
        <label>TRandom3.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d0/dcf/TPileupReweighting_8cxx_1affe37e3257afd18c5df96b7a2211b8ce" prot="public" static="no">
        <name>XXX</name>
        <initializer>std::cout &lt;&lt; &quot; I am here: &quot; &lt;&lt; __FILE__ &lt;&lt; &quot;:&quot; &lt;&lt; __LINE__ &lt;&lt; std::endl;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/Root/TPileupReweighting.cxx" line="11" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/Root/TPileupReweighting.cxx" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/dcf/TPileupReweighting_8cxx_1ab6914a675cdc1c17309a01acbab8ede2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(CP::TPileupReweighting) CP</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">CP::TPileupReweighting</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/Root/TPileupReweighting.cxx" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/Root/TPileupReweighting.cxx" bodystart="35" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Name:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPileupReweighting</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Author:<sp/><sp/><sp/><sp/><sp/><sp/>Will<sp/>Buttinger</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Created:<sp/><sp/><sp/><sp/><sp/>October<sp/>2011</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Description:<sp/>Tool<sp/>to<sp/>get<sp/>the<sp/>calculated<sp/>MC<sp/>pileup<sp/>weight.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Preprocessor<sp/>magic<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XXX<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>I<sp/>am<sp/>here:<sp/>&quot;<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class&apos;<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PileupReweighting/TPileupReweighting.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TROOT.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TChain.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TLeaf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH1D.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH2D.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH3D.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TAxis.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TRandom3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">ClassImp(<ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">CP::TPileupReweighting</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">CP::<ref refid="d4/d68/classTPileupReweighting" kindref="compound" tooltip="Tool to get the calculated MC pileup weight. Also does custom weights and other useful...">TPileupReweighting</ref>::<ref refid="d4/d68/classTPileupReweighting" kindref="compound" tooltip="Tool to get the calculated MC pileup weight. Also does custom weights and other useful...">TPileupReweighting</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>TNamed(name,&quot;notitle&quot;),<sp/>m_parentTool(this),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>m_SetWarnings(true),m_debugging(false),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>m_countingMode(true),m_unrepresentedDataAction(0),m_isInitialized(false),m_lumiVectorIsLoaded(false),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>m_dataScaleFactorX(1.),m_dataScaleFactorY(1.),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>m_mcScaleFactorX(1.),m_mcScaleFactorY(1.),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>m_nextPeriodNumber(1),m_ignoreFilePeriods(false),m_metadatatree(0),m_unrepDataTolerance(0.05),m_doGlobalDataWeight(false),m_lumicalcRunNumberOffset(0),<sp/>m_emptyHistogram(0),<sp/>m_random3(0),<sp/>m_ignoreBadChannels(false)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>m_random3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TRandom3(0);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>m_random3-&gt;SetSeed(1);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>the<sp/>global<sp/>period<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>m_periods[-1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Period(-1,0,9999999,0</highlight><highlight class="comment">/*<sp/>the<sp/>global<sp/>default<sp/>channel*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//MC12ab<sp/>merger<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//RemapPeriod(195848,195847);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="da/dd0/classCP_1_1TPileupReweighting_1aa84bd421bb8304579d18fe2d39ecaac4" kindref="member">CP::TPileupReweighting::~TPileupReweighting</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_random3;<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a0d51e18ec83ecce3f22fd7b8c8de678d" kindref="member">CP::TPileupReweighting::RemapPeriod</ref>(Int_t<sp/>periodNumber1,<sp/>Int_t<sp/>periodNumber2)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>periodNumber2<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_periods.find(periodNumber2)==m_periods.end())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[periodNumber2]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Period(periodNumber2,0,0,GetDefaultChannel(-1)</highlight><highlight class="comment">/*m_periods[-1]-&gt;defaultChannel*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>m_periods[periodNumber1]<sp/>=<sp/>m_periods[periodNumber2];</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a585909623c73bfae6f34deea054e5155" kindref="member">CP::TPileupReweighting::SetDefaultChannel</ref>(Int_t<sp/>channel,<sp/>Int_t<sp/>periodNumber)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>periodNumber2<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_periods.find(periodNumber)==m_periods.end())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[periodNumber]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Period(periodNumber,0,0,channel);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[periodNumber]-&gt;SetDefaultChannel(channel);<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ab3c46f45895b4645c77db41e1e5e143e" kindref="member">CP::TPileupReweighting::SetBinning</ref>(Int_t<sp/>nbinsx,<sp/>Double_t*<sp/>xbins,<sp/>Int_t<sp/>nbinsy,<sp/>Double_t*<sp/>ybins)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_emptyHistogram)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_emptyHistogram;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbinsy&gt;0)<sp/>m_emptyHistogram<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2D(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,nbinsx,xbins,nbinsy,ybins);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>m_emptyHistogram<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1D(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,nbinsx,xbins);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>m_emptyHistogram-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::SetUniformBinning(Int_t<sp/>nbinsx,<sp/>Double_t<sp/>xlow,<sp/>Double_t<sp/>xup,<sp/>Int_t<sp/>nbinsy,<sp/>Double_t<sp/>ylow,<sp/>Double_t<sp/>yup)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>xbins(nbinsx+1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>ybins(nbinsy+1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nbinsx+1;i++)<sp/>xbins[i]<sp/>=<sp/>xlow<sp/>+<sp/>i*(xup-xlow)/nbinsx;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbinsy<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nbinsy+1;i++)<sp/>ybins[i]<sp/>=<sp/>ylow<sp/>+<sp/>i*(yup-ylow)/nbinsy;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ab3c46f45895b4645c77db41e1e5e143e" kindref="member">SetBinning</ref>(nbinsx,&amp;xbins[0],nbinsy,&amp;ybins[0]);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ab3c46f45895b4645c77db41e1e5e143e" kindref="member">CP::TPileupReweighting::SetBinning</ref>(TH1*<sp/>hist)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hist)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_emptyHistogram)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_emptyHistogram;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>m_emptyHistogram<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hist-&gt;Clone(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_emptyHistogram)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_emptyHistogram-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::GetDefaultChannel(Int_t<sp/>mcRunNumber)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_parentTool<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_parentTool-&gt;GetDefaultChannel(mcRunNumber);<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_periods[mcRunNumber]-&gt;defaultChannel;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a67eaa496d5897c42eee1ae8560120ee9" kindref="member">CP::TPileupReweighting::GetIntegratedLumi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger)<sp/>{<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_lumiVectorIsLoaded)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;No<sp/>UNPRESCALED<sp/>(Trigger=None)<sp/>Lumicalc<sp/>file<sp/>loaded,<sp/>so<sp/>cannot<sp/>get<sp/>integrated<sp/>lumi,<sp/>returning<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trigger==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>||<sp/>trigger==</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetSumOfEventWeights(-1)/1E6;<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>the<sp/>triggerPrimaryDistributions<sp/>in<sp/>the<sp/>global<sp/>period,<sp/>if<sp/>not<sp/>present,<sp/>build<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Period*<sp/>global<sp/>=<sp/>m_periods[-1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_triggerObjs.find(trigger)==m_triggerObjs.end())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CalculatePrescaledLuminosityHistograms(trigger);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>m_triggerObjs[trigger]-&gt;triggerHists[-1][m_triggerObjs[trigger]-&gt;getBits(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h-&gt;Integral(0,h-&gt;GetNbinsX()+1)/1E6;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a67eaa496d5897c42eee1ae8560120ee9" kindref="member">CP::TPileupReweighting::GetIntegratedLumi</ref>(Int_t<sp/>periodNumber,<sp/>UInt_t<sp/>start,<sp/>UInt_t<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//look<sp/>through<sp/>dataPeriodRunTotals[&quot;pileup&quot;][periodNumber]<sp/>for<sp/>runs<sp/>inside<sp/>the<sp/>given<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>:<sp/>m_periods[periodNumber]-&gt;runNumbers)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run<sp/>&gt;=<sp/>start<sp/>&amp;&amp;<sp/>run<sp/>&lt;=<sp/>end)<sp/>total<sp/>+=<sp/>m_runs[run].inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;GetSumOfWeights();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total*1E-6;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a07b5283228640baf0e3be49a867bfef7" kindref="member">CP::TPileupReweighting::GetLumiBlockIntegratedLumi</ref>(Int_t<sp/>runNumber,<sp/>UInt_t<sp/>lb)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_runs.find(runNumber)==m_runs.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>run<sp/>=<sp/>m_runs[runNumber];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run.lumiByLbn.find(lb)==run.lumiByLbn.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>run.lumiByLbn[lb].first*1E-6;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">Float_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ab21d13e94541e769af4fd01b908a7cef" kindref="member">CP::TPileupReweighting::GetLumiBlockMu</ref>(Int_t<sp/>runNumber,<sp/>UInt_t<sp/>lb)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetLumiBlockMu&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_runs.find(runNumber)==m_runs.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>run<sp/>=<sp/>m_runs[runNumber];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run.lumiByLbn.find(lb)==run.lumiByLbn.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>run.lumiByLbn[lb].second;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a12a4e1d2aa06e4a9aac883e217cc5739" kindref="member">CP::TPileupReweighting::GetIntegratedLumiFraction</ref>(Int_t<sp/>periodNumber,<sp/>UInt_t<sp/>start,<sp/>UInt_t<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumiFraction&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_lumiVectorIsLoaded)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumiFraction&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;No<sp/>UNPRESCALED<sp/>(Trigger=None)<sp/>Lumicalc<sp/>file<sp/>loaded,<sp/>so<sp/>no<sp/>lumi<sp/>fraction<sp/>possible,<sp/>returning<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//total<sp/>lumi<sp/>in<sp/>period<sp/>is<sp/>given<sp/>by<sp/>sumOfWeights[-1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>m_periods[periodNumber]-&gt;sumOfWeights[-1];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>through<sp/>associated<sp/>runs,<sp/>adding<sp/>up<sp/>lumi<sp/>from<sp/>all<sp/>within<sp/>start<sp/>and<sp/>end<sp/>(inclusive)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numer(0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>:<sp/>m_periods[periodNumber]-&gt;runNumbers)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run<sp/>&gt;=<sp/>start<sp/>&amp;&amp;<sp/>run<sp/>&lt;=<sp/>end)<sp/>numer<sp/>+=<sp/>m_runs[run].inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;GetSumOfWeights();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numer<sp/>/<sp/>total;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a12a4e1d2aa06e4a9aac883e217cc5739" kindref="member">CP::TPileupReweighting::GetIntegratedLumiFraction</ref>(Int_t<sp/>periodNumber,<sp/>Double_t<sp/>mu,<sp/>UInt_t<sp/>start,<sp/>UInt_t<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumiFraction&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_lumiVectorIsLoaded)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumiFraction&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;No<sp/>UNPRESCALED<sp/>(Trigger=None)<sp/>Lumicalc<sp/>file<sp/>loaded,<sp/>so<sp/>no<sp/>lumi<sp/>fraction<sp/>possible,<sp/>returning<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//determine<sp/>the<sp/>mubin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_emptyHistogram)<sp/>{<sp/>Error(</highlight><highlight class="stringliteral">&quot;GetIntegratedLumiFraction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>do<sp/>this<sp/>without<sp/>a<sp/>lumicalc<sp/>file!&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>muBin<sp/>=<sp/>m_emptyHistogram-&gt;FindFixBin(mu);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>total<sp/>mu<sp/>in<sp/>this<sp/>bin<sp/>in<sp/>this<sp/>period<sp/>is<sp/>given<sp/>by<sp/>the<sp/>triggerHist<sp/>=<sp/>&quot;None&quot;<sp/>hist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>m_triggerObjs[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;triggerHists[periodNumber][0]-&gt;GetBinContent(muBin);<sp/></highlight><highlight class="comment">//m_periods[periodNumber]-&gt;triggerHists[&quot;None&quot;]-&gt;GetBinContent(muBin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>assigned<sp/>runs,<sp/>if<sp/>in<sp/>range<sp/>then<sp/>include<sp/>in<sp/>numerator<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>:<sp/>m_periods[periodNumber]-&gt;runNumbers)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run<sp/>&gt;=<sp/>start<sp/>&amp;&amp;<sp/>run<sp/>&lt;=<sp/>end)<sp/>numer<sp/>+=<sp/>m_runs[run].muDist-&gt;GetBinContent(muBin);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numer<sp/>/<sp/>total;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a53439cc702167c8b89f07ac1cf20148d" kindref="member">CP::TPileupReweighting::UsePeriodConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>configName)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configName==</highlight><highlight class="stringliteral">&quot;MC11a&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(180164,<sp/>177986,180481);<sp/></highlight><highlight class="comment">//associates<sp/>mc<sp/>runnumber<sp/>180164<sp/>with<sp/>data<sp/>period<sp/>177986<sp/>to<sp/>180481<sp/>(period<sp/>B-D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(183003,<sp/>180614,184169);<sp/></highlight><highlight class="comment">//period<sp/>E-H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(185649,<sp/>185353,186934);<sp/></highlight><highlight class="comment">//period<sp/>I-K1.<sp/>For<sp/>I-K<sp/>you<sp/>would<sp/>change<sp/>the<sp/>last<sp/>number<sp/>to<sp/>187815</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(185761,<sp/>186935,191933);<sp/></highlight><highlight class="comment">//everything<sp/>else.<sp/>Thanks<sp/>Ellie!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUniformBinning(100,0,50);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Using<sp/>MC11a<sp/>Period<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configName==</highlight><highlight class="stringliteral">&quot;MC11b&quot;</highlight><highlight class="normal"><sp/>||<sp/>configName==</highlight><highlight class="stringliteral">&quot;MC11c&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(180164,<sp/>177986,<sp/>180481);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(183003,<sp/>180614,<sp/>184169);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(186169,<sp/>185353,<sp/>187815);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(189751,<sp/>188902,<sp/>191933);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUniformBinning(100,0,50);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Using<sp/>MC11b/c<sp/>Period<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configName==</highlight><highlight class="stringliteral">&quot;MC12a&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(195847,200804,216432);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mc12a<sp/>binning<sp/>is<sp/>in<sp/>integer<sp/>values<sp/>of<sp/>mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_emptyHistogram<sp/>&amp;&amp;<sp/>(m_emptyHistogram-&gt;GetNbinsX()!=50<sp/>||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinLowEdge(1)+0.5)&gt;0.01||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinUpEdge(50)-49.5)&gt;0.01)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>MC12a,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>13:<sp/>Cannot<sp/>use<sp/>MC14,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUniformBinning(50,-0.5,49.5);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Using<sp/>MC12a<sp/>Period<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configName==</highlight><highlight class="stringliteral">&quot;MC12b&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(195848,200804,216432);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mc12b<sp/>binning<sp/>is<sp/>in<sp/>integer<sp/>values<sp/>of<sp/>mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_emptyHistogram<sp/>&amp;&amp;<sp/>(m_emptyHistogram-&gt;GetNbinsX()!=50<sp/>||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinLowEdge(1)+0.5)&gt;0.01||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinUpEdge(50)-49.5)&gt;0.01)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>MC12b,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>13:<sp/>Cannot<sp/>use<sp/>MC14,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUniformBinning(50,-0.5,49.5);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Using<sp/>MC12b<sp/>Period<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configName==</highlight><highlight class="stringliteral">&quot;MC12ab&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(195847,200804,216432);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(195848,200804,216432);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_emptyHistogram<sp/>&amp;&amp;<sp/>(m_emptyHistogram-&gt;GetNbinsX()!=50<sp/>||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinLowEdge(1)+0.5)&gt;0.01||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinUpEdge(50)-49.5)&gt;0.01)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>MC12ab,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>13:<sp/>Cannot<sp/>use<sp/>MC14,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mc12a/b<sp/>binning<sp/>is<sp/>in<sp/>integer<sp/>values<sp/>of<sp/>mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUniformBinning(50,-0.5,49.5);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Using<sp/>MC12ab<sp/>Period<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configName==</highlight><highlight class="stringliteral">&quot;MC14_8TeV&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(212272,200804,216432);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_emptyHistogram<sp/>&amp;&amp;<sp/>(m_emptyHistogram-&gt;GetNbinsX()!=50<sp/>||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinLowEdge(1)+0.5)&gt;0.01<sp/>||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinUpEdge(50)-49.5)&gt;0.01)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>MC14_8TeV,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>13:<sp/>Cannot<sp/>use<sp/>MC14_8TeV,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUniformBinning(50,-0.5,49.5);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Using<sp/>MC14_8TeV<sp/>Period<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configName==</highlight><highlight class="stringliteral">&quot;MC14_13TeV&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(222222,222222,999999);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_emptyHistogram<sp/>&amp;&amp;<sp/>(m_emptyHistogram-&gt;GetNbinsX()!=100<sp/>||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinLowEdge(1)+0.5)&gt;0.01||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinUpEdge(100)-99.5)&gt;0.01)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>MC14_13TeV,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>13:<sp/>Cannot<sp/>use<sp/>MC14_13TeV,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUniformBinning(100,-0.5,99.5);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Using<sp/>MC14_13TeV<sp/>Period<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configName==</highlight><highlight class="stringliteral">&quot;MC15&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(222510,222222,999999);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(222525,222222,999999);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(222526,222222,999999);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(284500,222222,999999);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_emptyHistogram<sp/>&amp;&amp;<sp/>(m_emptyHistogram-&gt;GetNbinsX()!=100<sp/>||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinLowEdge(1))&gt;0.01<sp/>||<sp/>fabs(m_emptyHistogram-&gt;GetXaxis()-&gt;GetBinUpEdge(100)-100.)&gt;0.01)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>use<sp/>MC15,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>13:<sp/>Cannot<sp/>use<sp/>MC15,<sp/>an<sp/>incompatible<sp/>config<sp/>has<sp/>already<sp/>been<sp/>set<sp/>up&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetUniformBinning(100,0,100);<sp/></highlight><highlight class="comment">//Thanks<sp/>Eric<sp/>&lt;/sarcasm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Using<sp/>MC15<sp/>Period<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;UsePeriodConfig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>period<sp/>config&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">CP::TPileupReweighting::AddPeriod</ref>(Int_t<sp/>periodNumber,<sp/>UInt_t<sp/>start,<sp/>UInt_t<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//you<sp/>can<sp/>add<sp/>more<sp/>periods<sp/>only<sp/>in<sp/>counting<sp/>mode,<sp/>but<sp/>they<sp/>must<sp/>not<sp/>be<sp/>with<sp/>subperiods!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_isInitialized<sp/>&amp;&amp;<sp/>!m_countingMode)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddPeriod&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>AddPeriod<sp/>after<sp/>initializing<sp/>the<sp/>tool,<sp/>except<sp/>when<sp/>in<sp/>config<sp/>file<sp/>generating<sp/>mode.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>You<sp/>cannot<sp/>AddPeriod<sp/>after<sp/>initializing<sp/>the<sp/>tool,<sp/>except<sp/>when<sp/>in<sp/>config<sp/>file<sp/>generating<sp/>mode.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_periods.find(periodNumber)==m_periods.end())<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[periodNumber]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Period(periodNumber,start,end,GetDefaultChannel(-1));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>periodNumber;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>period<sp/>exists<sp/>but<sp/>both<sp/>start<sp/>and<sp/>end<sp/>are<sp/>zero,<sp/>then<sp/>just<sp/>assign<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;subPeriods.size()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>p-&gt;start==0<sp/>&amp;&amp;<sp/>p-&gt;end==0)<sp/>{<sp/>p-&gt;start=start;<sp/>p-&gt;end=end;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>periodNumber;<sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>period<sp/>already<sp/>contained<sp/>(i.e.<sp/>same<sp/>period<sp/>or<sp/>one<sp/>of<sp/>the<sp/>existing<sp/>subperiods)<sp/>...<sp/>if<sp/>it<sp/>is,<sp/>do<sp/>nothing<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;start==start<sp/>&amp;&amp;<sp/>p-&gt;end==end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>periodNumber;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pp<sp/>:<sp/>p-&gt;subPeriods)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pp-&gt;start==start<sp/>&amp;&amp;<sp/>pp-&gt;end==end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pp-&gt;id;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>get<sp/>here,<sp/>and<sp/>in<sp/>counting<sp/>mode,<sp/>this<sp/>isn&apos;t<sp/>allowed!<sp/>..<sp/>i.e.<sp/>we<sp/>can&apos;t<sp/>have<sp/>subperiods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_isInitialized<sp/>&amp;&amp;<sp/>m_countingMode)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddPeriod&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>have<sp/>subperiods<sp/>when<sp/>in<sp/>Config<sp/>File<sp/>Generating<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>44:<sp/>In<sp/>Config<sp/>File<sp/>Generating<sp/>mode,<sp/>but<sp/>detected<sp/>subperiods<sp/>in<sp/>the<sp/>period<sp/>definition.<sp/>This<sp/>is<sp/>not<sp/>allowed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>period<sp/>is<sp/>already<sp/>defined,<sp/>we<sp/>create<sp/>a<sp/>new<sp/>period<sp/>with<sp/>start<sp/>and<sp/>end,<sp/>and<sp/>assign<sp/>our<sp/>period<sp/>to<sp/>this<sp/>one<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//also<sp/>create<sp/>a<sp/>new<sp/>period<sp/>for<sp/>the<sp/>existing<sp/>period<sp/>configuration<sp/>of<sp/>this<sp/>period<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;subPeriods.size()==0)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(m_periods.find(m_nextPeriodNumber)<sp/>!=<sp/>m_periods.end())<sp/>m_nextPeriodNumber++;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[m_nextPeriodNumber]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Period(m_nextPeriodNumber,p-&gt;start,p-&gt;end,p-&gt;defaultChannel);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;subPeriods.push_back(m_periods[m_nextPeriodNumber]);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;start<sp/>=<sp/>0;<sp/>p-&gt;end=0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(m_periods.find(m_nextPeriodNumber)<sp/>!=<sp/>m_periods.end())<sp/>m_nextPeriodNumber++;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>m_periods[m_nextPeriodNumber]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Period(m_nextPeriodNumber,start,end,<sp/>p-&gt;defaultChannel);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>p-&gt;subPeriods.push_back(m_periods[m_nextPeriodNumber]);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nextPeriodNumber;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1aa6c5faa164c4ac197a809bdb9b278112" kindref="member">CP::TPileupReweighting::GetFirstFoundPeriodNumber</ref>(UInt_t<sp/>runNumber)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>through<sp/>periods,<sp/>first<sp/>period<sp/>that<sp/>includes<sp/>this<sp/>runNumber<sp/>wins!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//otherwise<sp/>it<sp/>returns<sp/>the<sp/>&apos;global<sp/>period<sp/>number&apos;:<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.second-&gt;id==-1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.second-&gt;contains(runNumber))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>period.second-&gt;id;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">TH1*<sp/>CP::TPileupReweighting::CloneEmptyHistogram(Int_t<sp/>runNumber,<sp/>Int_t<sp/>channelNumber)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>TString<sp/>s(</highlight><highlight class="stringliteral">&quot;pileup&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelNumber&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_chan&quot;</highlight><highlight class="normal">;<sp/>s<sp/>+=<sp/>channelNumber;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>s+=</highlight><highlight class="stringliteral">&quot;_run&quot;</highlight><highlight class="normal">;<sp/>s+=<sp/>runNumber;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>empty<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_emptyHistogram)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CloneEmptyHistogram&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>binning<sp/>info<sp/>-<sp/>use<sp/>SetBinning/SetUniformBinning<sp/>or<sp/>load<sp/>a<sp/>prw<sp/>config<sp/>file<sp/>(This<sp/>usually<sp/>means<sp/>you<sp/>need<sp/>to<sp/>call<sp/>AddConfigFile<sp/>BEFORE<sp/>AddLumiCalcFile)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>47:<sp/>There<sp/>is<sp/>no<sp/>binning<sp/>info<sp/>-<sp/>use<sp/>SetBinning/SetUniformBinning<sp/>or<sp/>load<sp/>a<sp/>prw<sp/>config<sp/>file<sp/>(This<sp/>usually<sp/>means<sp/>you<sp/>need<sp/>to<sp/>call<sp/>AddConfigFile<sp/>BEFORE<sp/>AddLumiCalcFile)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/>TH1*<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_emptyHistogram-&gt;Clone(s));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out-&gt;SetTitle(s);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out-&gt;SetDirectory(0);<sp/></highlight><highlight class="comment">//take<sp/>ownership</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>out-&gt;SetEntries(0);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::GenerateMetaDataFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fileName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>channelBranchName)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/>TTree<sp/>inTree(</highlight><highlight class="stringliteral">&quot;in&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;in&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>inTree.ReadFile(fileName);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/>TTree<sp/>outTree(</highlight><highlight class="stringliteral">&quot;ChannelMetaData&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ChannelMetaData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>chanNum;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;TString,<sp/>Double_t&gt;<sp/>data;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TObjArray<sp/>*leaves<sp/>=<sp/>inTree.GetListOfLeaves();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(leaves==0)<sp/>{Error(</highlight><highlight class="stringliteral">&quot;GenerateMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;No<sp/>leaves&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(Int_t<sp/>i=0;i&lt;leaves-&gt;GetEntries();++i)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLeaf<sp/>*leaf<sp/>=<sp/>(TLeaf<sp/>*)leaves-&gt;At(i);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(leaf)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TBranch<sp/>*branch<sp/>=<sp/>leaf-&gt;GetBranch();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(branch-&gt;GetName(),channelBranchName)==0)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>the<sp/>channel<sp/>branch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(leaf-&gt;GetTypeName(),</highlight><highlight class="stringliteral">&quot;Int_t&quot;</highlight><highlight class="normal">)!=0)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GenerateMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Channel<sp/>Branch<sp/>must<sp/>be<sp/>type<sp/>Int_t&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch-&gt;SetAddress(&amp;chanNum);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTree.Branch(channelBranchName,&amp;chanNum);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(leaf-&gt;GetTypeName(),</highlight><highlight class="stringliteral">&quot;Double_t&quot;</highlight><highlight class="normal">)!=0)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;GenerateMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>non-double<sp/>branch:<sp/>%s&quot;</highlight><highlight class="normal">,branch-&gt;GetName());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch-&gt;SetAddress(&amp;(data[branch-&gt;GetName()]));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTree.Branch(branch-&gt;GetName(),&amp;(data[branch-&gt;GetName()]));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>tree<sp/>entries<sp/>and<sp/>read<sp/>in<sp/>the<sp/>values<sp/>according<sp/>to<sp/>property<sp/>type<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(Int_t<sp/>i=0;i&lt;inTree.GetEntries();++i)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inTree.GetEntry(i);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTree.Fill();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>the<sp/>file<sp/>extension<sp/>and<sp/>replace<sp/>with<sp/>.root<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>outName<sp/>=<sp/>fileName(0,fileName.Last(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.prw.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TFile<sp/>f1(outName,</highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outTree.Write();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f1.Close();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;GenerateMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Succesfully<sp/>Generated<sp/>File<sp/>%s&quot;</highlight><highlight class="normal">,outName.Data());<sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::AddMetaDataFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fileName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>channelBranchName)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>TDirectory*<sp/>origDir<sp/>=<sp/>gDirectory;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/>TTree*<sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>TFile*<sp/>rootFile<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileName.EndsWith(</highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//looks<sp/>for<sp/>ChannelMetaData<sp/>ttree<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>data<sp/>ROOT<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rootFile<sp/>=<sp/>TFile::Open(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rootFile-&gt;IsZombie()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,fileName.Data());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>get<sp/>the<sp/>the<sp/>known<sp/>TTrees<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/></highlight><highlight class="stringliteral">&quot;ChannelMetaData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!tmp)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%s<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>metadata<sp/>file.<sp/>Should<sp/>have<sp/>a<sp/>ChannelMetaData<sp/>TTree&quot;</highlight><highlight class="normal">,fileName.Data());</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>make<sp/>the<sp/>TTree<sp/>by<sp/>reading<sp/>the<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree(</highlight><highlight class="stringliteral">&quot;ChannelMetaData&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ChannelMetaData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp-&gt;ReadFile(fileName);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>chanNum;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;TString,<sp/>Double_t&gt;<sp/>data;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>TObjArray<sp/>*leaves<sp/>=<sp/>tmp-&gt;GetListOfLeaves();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(leaves==0)<sp/>{Error(</highlight><highlight class="stringliteral">&quot;AddMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;No<sp/>leaves&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(Int_t<sp/>i=0;i&lt;leaves-&gt;GetEntries();++i)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLeaf<sp/>*leaf<sp/>=<sp/>(TLeaf<sp/>*)leaves-&gt;At(i);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(leaf)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TBranch<sp/>*branch<sp/>=<sp/>leaf-&gt;GetBranch();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(branch-&gt;GetName(),channelBranchName)==0)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>the<sp/>channel<sp/>branch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(leaf-&gt;GetTypeName(),</highlight><highlight class="stringliteral">&quot;Int_t&quot;</highlight><highlight class="normal">)!=0)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Channel<sp/>Branch<sp/>must<sp/>be<sp/>type<sp/>Int_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch-&gt;SetAddress(&amp;chanNum);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(leaf-&gt;GetTypeName(),</highlight><highlight class="stringliteral">&quot;Double_t&quot;</highlight><highlight class="normal">)!=0)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;AddMetaDataFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>non-double<sp/>branch:<sp/>%s&quot;</highlight><highlight class="normal">,branch-&gt;GetName());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch-&gt;SetAddress(&amp;(data[branch-&gt;GetName()]));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>tree<sp/>entries<sp/>and<sp/>read<sp/>in<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(Int_t<sp/>i=0;i&lt;tmp-&gt;GetEntries();++i)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::map&lt;TString,<sp/>Double_t&gt;::iterator<sp/>it<sp/>=<sp/>data.begin();it!=data.end();++it)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>.find(it-&gt;first)!=<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>.end()&amp;&amp;<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[it-&gt;first].find(chanNum)!=<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[it-&gt;first].end()<sp/>&amp;&amp;<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[it-&gt;first][chanNum]!=it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;AddMetaDataFile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Overriding<sp/>metadata<sp/>[%s,%d].<sp/>%f<sp/>becomes<sp/>%f&quot;</highlight><highlight class="normal">,(it-&gt;first).Data(),chanNum,<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[it-&gt;first][chanNum],it-&gt;second);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[it-&gt;first][chanNum]<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rootFile)<sp/>{<sp/>rootFile-&gt;Close();</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rootFile;}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>to<sp/>the<sp/>original<sp/>ROOT<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/>gDirectory<sp/>=<sp/>origDir;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">TTree*<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ac0a7571c5fe1c31a579619e8d07bfef5" kindref="member">CP::TPileupReweighting::GetMetaDataTree</ref>()<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_metadatatree)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_metadatatree;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/>m_metadatatree<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree(TString(this-&gt;GetName())+</highlight><highlight class="stringliteral">&quot;MetaData&quot;</highlight><highlight class="normal">,TString(this-&gt;GetName())+</highlight><highlight class="stringliteral">&quot;MetaData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>m_metadatatree-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>channel=0;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/>m_metadatatree-&gt;Branch(</highlight><highlight class="stringliteral">&quot;mc_channel_number&quot;</highlight><highlight class="normal">,&amp;channel);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;TString,Double_t&gt;<sp/>data;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;Int_t,bool&gt;<sp/>channels;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>a<sp/>branch<sp/>for<sp/>each<sp/>metadata<sp/>item<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::map&lt;TString,std::map&lt;Int_t,Double_t&gt;<sp/>&gt;::iterator<sp/>it=<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>.begin();it!=<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>.end();++it)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::map&lt;Int_t,Double_t&gt;::iterator<sp/>it2=(it-&gt;second).begin();it2!=(it-&gt;second).end();++it2)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels[it2-&gt;first]=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//records<sp/>which<sp/>channels<sp/>we<sp/>have<sp/>metadata<sp/>for<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data.find(it-&gt;first)==data.end())<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>branch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[it-&gt;first]=0.;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_metadatatree-&gt;Branch(it-&gt;first,&amp;(data[it-&gt;first]));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//also<sp/>create<sp/>branches<sp/>for<sp/>the<sp/>NumberOfEvents<sp/>and<sp/>SumOfEventWeights<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;NumberOfEvents&quot;</highlight><highlight class="normal">]=0.;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/>m_metadatatree-&gt;Branch(</highlight><highlight class="stringliteral">&quot;NumberOfEvents&quot;</highlight><highlight class="normal">,&amp;(data[</highlight><highlight class="stringliteral">&quot;NumberOfEvents&quot;</highlight><highlight class="normal">]));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/>data[</highlight><highlight class="stringliteral">&quot;SumOfEventWeights&quot;</highlight><highlight class="normal">]=0.;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/>m_metadatatree-&gt;Branch(</highlight><highlight class="stringliteral">&quot;SumOfEventWeights&quot;</highlight><highlight class="normal">,&amp;(data[</highlight><highlight class="stringliteral">&quot;SumOfEventWeights&quot;</highlight><highlight class="normal">]));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>add<sp/>to<sp/>channels<sp/>list<sp/>any<sp/>channels<sp/>that<sp/>have<sp/>events<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>myMap<sp/>=<sp/>m_periods[-1]-&gt;sumOfWeights;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::map&lt;Int_t,Double_t&gt;::iterator<sp/>it=myMap.begin();it!=myMap.end();++it)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;first&gt;=0<sp/>&amp;&amp;<sp/>it-&gt;second&gt;0.)<sp/>channels[it-&gt;first]=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>loop<sp/>over<sp/>the<sp/>channels<sp/>and<sp/>fill<sp/>the<sp/>TTree<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::map&lt;Int_t,bool&gt;::iterator<sp/>it=channels.begin();it!=channels.end();++it)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>channel=it-&gt;first;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::map&lt;TString,Double_t&gt;::iterator<sp/>it2=data.begin();it2!=data.end();++it2)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it2-&gt;first==</highlight><highlight class="stringliteral">&quot;NumberOfEvents&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>for<sp/>this<sp/>in<sp/>globalNumberOfEntries<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myMap.find(channel)==myMap.end())<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[it2-&gt;first]=0.;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;GetMetaDataTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Channel<sp/>%d<sp/>does<sp/>not<sp/>have<sp/>MetaData<sp/>%s&quot;</highlight><highlight class="normal">,it-&gt;first,(it2-&gt;first).Data());</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[it2-&gt;first]=m_periods[-1]-&gt;numberOfEntries[channel];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it2-&gt;first==</highlight><highlight class="stringliteral">&quot;SumOfEventWeights&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>for<sp/>this<sp/>in<sp/>globalTotals<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>myMap2<sp/>=<sp/>m_periods[-1]-&gt;sumOfWeights;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myMap2.find(channel)==myMap2.end())<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[it2-&gt;first]=0.;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;GetMetaDataTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Channel<sp/>%d<sp/>does<sp/>not<sp/>have<sp/>MetaData<sp/>%s&quot;</highlight><highlight class="normal">,it-&gt;first,(it2-&gt;first).Data());</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[it2-&gt;first]=m_periods[-1]-&gt;sumOfWeights[channel];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>myMap2<sp/>=<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[it2-&gt;first];</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myMap2.find(channel)==myMap2.end())<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>channel<sp/>doesn&apos;t<sp/>have<sp/>this<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[it2-&gt;first]=0.;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;GetMetaDataTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Channel<sp/>%d<sp/>does<sp/>not<sp/>have<sp/>MetaData<sp/>%s&quot;</highlight><highlight class="normal">,it-&gt;first,(it2-&gt;first).Data());</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[it2-&gt;first]=myMap2[channel];</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_metadatatree-&gt;Fill();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/>m_metadatatree-&gt;BuildIndex(</highlight><highlight class="stringliteral">&quot;mc_channel_number&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/>m_metadatatree-&gt;ResetBranchAddresses();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_metadatatree;</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CP::TPileupReweighting::AddDistributionTree(TTree<sp/>*tree,<sp/>TFile<sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMC=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>have<sp/>the<sp/>standard<sp/>structure<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>channel<sp/>=<sp/>0;<sp/>UInt_t<sp/>runNbr<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;UInt_t&gt;*<sp/>pStarts<sp/>=<sp/>0;std::vector&lt;UInt_t&gt;*<sp/>pEnds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/>Char_t<sp/>histName[150];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/>Char_t<sp/>customName[150];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>Bool_t<sp/>isDefaultForRunNumber(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasDefaultsBranch=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(tree-&gt;GetName(),</highlight><highlight class="stringliteral">&quot;MCPileupReweighting&quot;</highlight><highlight class="normal">)==0)<sp/>{strcpy(customName,</highlight><highlight class="stringliteral">&quot;pileup&quot;</highlight><highlight class="normal">);isMC=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;CustomName&quot;</highlight><highlight class="normal">,&amp;customName)!=0)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistributionTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>CustomName<sp/>branch<sp/>in<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(tree-&gt;GetName(),</highlight><highlight class="stringliteral">&quot;DataCustomReweighting&quot;</highlight><highlight class="normal">)==0)<sp/>{channel=-1;isMC=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;Channel&quot;</highlight><highlight class="normal">,&amp;channel)!=0)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistributionTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>Channel<sp/>branch<sp/>in<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;RunNumber&quot;</highlight><highlight class="normal">,&amp;runNbr)!=0)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistributionTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>RunNumber<sp/>branch<sp/>in<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isMC)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;PeriodStarts&quot;</highlight><highlight class="normal">,&amp;pStarts)!=0)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistributionTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>PeriodStarts<sp/>branch<sp/>in<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;PeriodEnds&quot;</highlight><highlight class="normal">,&amp;pEnds)!=0)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistributionTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>PeriodEnds<sp/>branch<sp/>in<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tree-&gt;FindBranch(</highlight><highlight class="stringliteral">&quot;IsDefaultForRunNumber&quot;</highlight><highlight class="normal">)!=0)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;IsDefaultForRunNumber&quot;</highlight><highlight class="normal">,&amp;isDefaultForRunNumber);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasDefaultsBranch=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;HistName&quot;</highlight><highlight class="normal">,&amp;histName)!=0)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistributionTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>HistName<sp/>branch<sp/>in<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>tree-&gt;GetEntries();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;TString,bool&gt;<sp/>loadedHistos;<sp/></highlight><highlight class="comment">//avoid<sp/>double-loading<sp/>from<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i=0;i&lt;n;i++)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tree-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>sHistName(histName);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>weightName(customName);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(loadedHistos.find(sHistName)==loadedHistos.end())<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadedHistos[sHistName]=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_ignoreFilePeriods<sp/>&amp;&amp;<sp/>isMC)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;pStarts-&gt;size();j++)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>pStarts-&gt;at(j);</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>pEnds-&gt;at(j);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(runNbr,start,end);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//load<sp/>the<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1<sp/>*histo<sp/>=<sp/>(TH1*)file-&gt;Get(<sp/>sHistName<sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!histo)<sp/>histo<sp/>=<sp/>(TH1*)file-&gt;Get(<sp/>TString::Format(</highlight><highlight class="stringliteral">&quot;%sPileupReweighting/%s&quot;</highlight><highlight class="normal">,m_prwFilesPathPrefix.c_str(),sHistName.Data())<sp/>);<sp/></highlight><highlight class="comment">//try<sp/>from<sp/>subdir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!histo)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistributionTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>the<sp/>histogram<sp/>%s<sp/>in<sp/>the<sp/>File<sp/>%s&quot;</highlight><highlight class="normal">,sHistName.Data(),file-&gt;GetName());</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>21&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>it<sp/>to<sp/>the<sp/>histograms<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddDistribution(histo,<sp/>runNbr,<sp/>channel);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>also<sp/>add<sp/>it<sp/>to<sp/>the<sp/>global<sp/>count,<sp/>if<sp/>this<sp/>isn&apos;t<sp/>data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channel&gt;=0)<sp/>AddDistribution(histo,-1,channel);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasDefaultsBranch)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDefaultForRunNumber<sp/>&amp;&amp;<sp/>m_periods.find(runNbr)!=m_periods.end())<sp/>m_periods[runNbr]-&gt;defaultChannel=channel;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">//data<sp/>is<sp/>signalled<sp/>by<sp/>a<sp/>negative<sp/>channel<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::AddDistribution(TH1*<sp/>hist,Int_t<sp/>runNumber,<sp/>Int_t<sp/>channelNumber)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_isInitialized)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistribution&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>AddDistribution<sp/>after<sp/>initializing<sp/>the<sp/>tool.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>5:<sp/>You<sp/>cannot<sp/>AddLumiCalcFile<sp/>after<sp/>initializing<sp/>the<sp/>tool.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelNumber&gt;=0<sp/>&amp;&amp;<sp/>!m_periods[runNumber])<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistribution&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d<sp/>..<sp/>please<sp/>use<sp/>AddPeriod<sp/>to<sp/>define<sp/>a<sp/>period&quot;</highlight><highlight class="normal">,runNumber);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>6:<sp/>Unrecognised<sp/>periodNumber.<sp/>Please<sp/>use<sp/>AddPeriod<sp/>to<sp/>define<sp/>a<sp/>period&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_useMultiPeriods<sp/>&amp;&amp;<sp/>runNumber&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>allowing<sp/>multi<sp/>periods<sp/>in<sp/>a<sp/>single<sp/>channel,<sp/>so<sp/>before<sp/>we<sp/>go<sp/>any<sp/>further,<sp/>require<sp/>no<sp/>periods<sp/>other<sp/>than<sp/>this<sp/>incoming<sp/>one<sp/>to<sp/>have<sp/>a<sp/>hist<sp/>defined<sp/>for<sp/>this<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>global<sp/>one<sp/>can<sp/>though</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//global<sp/>sum<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first==runNumber)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//ok<sp/>to<sp/>add<sp/>to<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.second-&gt;inputHists.find(channelNumber)!=period.second-&gt;inputHists.end())<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>myMsg<sp/>=<sp/>TString::Format(</highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>add<sp/>distribution<sp/>for<sp/>channel<sp/>%d<sp/>to<sp/>period<sp/>%d,<sp/>but<sp/>this<sp/>channels<sp/>already<sp/>has<sp/>period<sp/>%d<sp/>defined.\nThis<sp/>is<sp/>indicative<sp/>of<sp/>use<sp/>of<sp/>incompatible<sp/>PRW<sp/>config<sp/>files,<sp/>please<sp/>check<sp/>your<sp/>config<sp/>files<sp/>for<sp/>multiple<sp/>periods/runNumbers<sp/>for<sp/>the<sp/>same<sp/>channel.&quot;</highlight><highlight class="normal">,channelNumber,runNumber,period.first);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistribution&quot;</highlight><highlight class="normal">,myMsg);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(myMsg.Data());</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/>TH1*&amp;<sp/>inputHist<sp/>=<sp/>(channelNumber&lt;0)<sp/>?<sp/>m_runs[runNumber].inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]<sp/>:<sp/>m_periods[runNumber]-&gt;inputHists[channelNumber];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!inputHist)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>no<sp/>emptyHistogram<sp/>specified,<sp/>we<sp/>will<sp/>use<sp/>this<sp/>histogram<sp/>as<sp/>the<sp/>structure<sp/>for<sp/>the<sp/>empty;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_emptyHistogram)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>the<sp/>input<sp/>histogram<sp/>is<sp/>a<sp/>TH1D<sp/>or<sp/>not.<sp/>We<sp/>like<sp/>TH1D,<sp/>not<sp/>yucky<sp/>TH1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(hist-&gt;IsA()-&gt;GetName(),</highlight><highlight class="stringliteral">&quot;TH1D&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>strcmp(hist-&gt;IsA()-&gt;GetName(),</highlight><highlight class="stringliteral">&quot;TH2D&quot;</highlight><highlight class="normal">)==0)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_emptyHistogram<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hist-&gt;Clone(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>dimensionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;GetDimension()==1)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Double_t&gt;<sp/>binsX;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;=hist-&gt;GetNbinsX();i++)<sp/>binsX.push_back(hist-&gt;GetXaxis()-&gt;GetBinLowEdge(i+1));</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1D<sp/>tmpHist(</highlight><highlight class="stringliteral">&quot;tmpHist&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tmpHist&quot;</highlight><highlight class="normal">,binsX.size()-1,&amp;binsX[0]);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_emptyHistogram<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tmpHist.Clone(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;GetDimension()==2)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Double_t&gt;<sp/>binsX;std::vector&lt;Double_t&gt;<sp/>binsY;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;=hist-&gt;GetNbinsX();i++)<sp/>binsX.push_back(hist-&gt;GetXaxis()-&gt;GetBinLowEdge(i+1));</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;=hist-&gt;GetNbinsY();i++)<sp/>binsY.push_back(hist-&gt;GetYaxis()-&gt;GetBinLowEdge(i+1));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH2D<sp/>tmpHist(</highlight><highlight class="stringliteral">&quot;tmpHist&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tmpHist&quot;</highlight><highlight class="normal">,binsX.size()-1,&amp;binsX[0],binsY.size()-1,&amp;binsY[0]);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_emptyHistogram<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tmpHist.Clone(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddDistribution&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unknown<sp/>input<sp/>histogram<sp/>dimensionality:<sp/>%d&quot;</highlight><highlight class="normal">,hist-&gt;GetDimension());</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>98&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_emptyHistogram)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_emptyHistogram-&gt;Reset();m_emptyHistogram-&gt;SetEntries(0);m_emptyHistogram-&gt;SetDirectory(0);</highlight><highlight class="comment">//clear<sp/>the<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inputHist<sp/>=<sp/>CloneEmptyHistogram(runNumber,channelNumber);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//iterator<sp/>over<sp/>bins<sp/>of<sp/>histogram,<sp/>filling<sp/>the<sp/>TH1<sp/>stored<sp/>in<sp/>the<sp/>data<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/>Double_t<sp/>numEntries<sp/>=<sp/>inputHist-&gt;GetEntries();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>bin,binx,biny;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(biny=1;<sp/>biny&lt;=hist-&gt;GetNbinsY();<sp/>biny++)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(binx=1;<sp/>binx&lt;=hist-&gt;GetNbinsX();<sp/>binx++)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin<sp/>=<sp/>hist-&gt;GetBin(binx,biny);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>value<sp/>=<sp/>hist-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>x<sp/>=<sp/>hist-&gt;GetXaxis()-&gt;GetBinCenter(binx);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>y<sp/>=<sp/>hist-&gt;GetYaxis()-&gt;GetBinCenter(biny);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//shift<sp/>x,y,z<sp/>by<sp/>the<sp/>MCScaleFactors<sp/>as<sp/>appropriate<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelNumber&gt;=0)<sp/>{x<sp/>*=<sp/>m_mcScaleFactorX;<sp/>y<sp/>*=<sp/>m_mcScaleFactorY;}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>x<sp/>*=<sp/>m_dataScaleFactorX;<sp/>y<sp/>*=<sp/>m_dataScaleFactorY;<sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>inBin<sp/>=<sp/>inputHist-&gt;FindFixBin(x,y);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>inValue<sp/>=<sp/>inputHist-&gt;GetBinContent(inBin);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputHist-&gt;SetBinContent(inBin,inValue+value);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//also<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>number<sp/>of<sp/>entries<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//SetBinContent<sp/>screws<sp/>with<sp/>the<sp/>entry<sp/>count,<sp/>so<sp/>had<sp/>to<sp/>record<sp/>it<sp/>before<sp/>the<sp/>loops<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/>inputHist-&gt;SetEntries(numEntries+hist-&gt;GetEntries());</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/>m_countingMode=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::AddLumiCalcFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fileName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_isInitialized)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddLumiCalcFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>AddLumiCalcFile<sp/>after<sp/>initializing<sp/>the<sp/>tool.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>5:<sp/>You<sp/>cannot<sp/>AddLumiCalcFile<sp/>after<sp/>initializing<sp/>the<sp/>tool.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/>TDirectory*<sp/>origDir<sp/>=<sp/>gDirectory;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>data<sp/>ROOT<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/>TFile*<sp/>rootFile<sp/>=<sp/>TFile::Open(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rootFile-&gt;IsZombie()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddConfigFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,fileName.Data());</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>toThrow<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Throwing<sp/>6:<sp/>Could<sp/>not<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal">;<sp/>toThrow<sp/>+=<sp/>fileName;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(toThrow);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>get<sp/>the<sp/>the<sp/>known<sp/>TTrees<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TTree<sp/>*tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/></highlight><highlight class="stringliteral">&quot;LumiMetaData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ad8ff01dfb40bdd39d0d9ffa285bee4fc" kindref="member">m_lumicalcFiles</ref>[trigger].push_back(fileName);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trigger==</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;AddLumiCalcFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Adding<sp/>LumiMetaData<sp/>(scale<sp/>factor=%f)...&quot;</highlight><highlight class="normal">,m_dataScaleFactorX);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//structure<sp/>expected<sp/>is<sp/>as<sp/>given<sp/>by<sp/>iLumiCalc:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>RunNbr,<sp/>AvergeInteractionPerXing,<sp/>IntLumi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/>runNbr=0;Float_t<sp/>intLumi=0;UInt_t<sp/>lbn=0;TBranch<sp/>*b_runNbr=0;TBranch<sp/>*b_intLumi=0;TBranch<sp/>*b_lbn=0;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>mu=0.;<sp/>TBranch<sp/>*b_mu=0;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;RunNbr&quot;</highlight><highlight class="normal">,&amp;runNbr,&amp;b_runNbr)!=0)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddLumiCalcFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>RunNbr<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>RunNbr<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;AvergeInteractionPerXing&quot;</highlight><highlight class="normal">,&amp;mu,&amp;b_mu)!=0)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddLumiCalcFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>AvergeInteractionPerXing<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>AvergeInteractionPerXing<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;IntLumi&quot;</highlight><highlight class="normal">,&amp;intLumi,&amp;b_intLumi)!=0)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddLumiCalcFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>IntLumi<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>IntLumi<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;LBStart&quot;</highlight><highlight class="normal">,&amp;lbn,&amp;b_lbn)!=0)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddLumiCalcFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>LBStart<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>LBStart<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nEntries<sp/>=<sp/>tmp-&gt;GetEntries();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i=0;i&lt;nEntries;i++)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_runNbr-&gt;GetEntry(i);b_intLumi-&gt;GetEntry(i);b_mu-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runNbr<sp/>+=<sp/>m_lumicalcRunNumberOffset;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//save<sp/>the<sp/>lumi<sp/>by<sp/>run<sp/>and<sp/>lbn<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_lbn-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//before<sp/>going<sp/>any<sp/>further,<sp/>check<sp/>the<sp/>runnbr<sp/>and<sp/>lbn<sp/>are<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_parentTool-&gt;runLbnOK(runNbr,lbn))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Run&amp;<sp/>r<sp/>=<sp/>m_runs[runNbr];</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trigger==</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/>{r.lumiByLbn[lbn].first<sp/>+=<sp/>intLumi;<sp/>r.lumiByLbn[lbn].second<sp/>=<sp/>mu;}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rescale<sp/>the<sp/>mu<sp/>value<sp/><sp/>...<sp/>do<sp/>this<sp/>*after*<sp/>having<sp/>stored<sp/>the<sp/>mu<sp/>value<sp/>in<sp/>the<sp/>lumiByLbn<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu<sp/>*=<sp/>m_dataScaleFactorX;<sp/></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fill<sp/>into<sp/>input<sp/>data<sp/>histograms<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>create<sp/>an<sp/>empty<sp/>histogram<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.inputHists.find(trigger)<sp/>==<sp/>r.inputHists.end())<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.inputHists[trigger]<sp/>=<sp/>CloneEmptyHistogram(runNbr,-1);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.inputHists[trigger]-&gt;Fill(mu,intLumi);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_countingMode=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lumiVectorIsLoaded=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;AddLumiCalcFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Adding<sp/>LumiMetaData<sp/>for<sp/>DataWeight<sp/>(trigger=%s)<sp/>(scale<sp/>factor=%f)...&quot;</highlight><highlight class="normal">,trigger.Data(),m_dataScaleFactorX);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rootFile;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>to<sp/>the<sp/>original<sp/>ROOT<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/>gDirectory<sp/>=<sp/>origDir;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::AddConfigFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fileName)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//open<sp/>the<sp/>file<sp/>and<sp/>look<sp/>for<sp/>config<sp/>TTrees<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//recognised<sp/>TTrees<sp/>are:<sp/>ChannelMetaData,<sp/>MCPileupReweighting,<sp/>MCCustomReweighting,<sp/>DataCustomReweighting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_isInitialized)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddConfigFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>AddConfigFile<sp/>after<sp/>initializing<sp/>the<sp/>tool.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>5:<sp/>You<sp/>cannot<sp/>AddConfigFile<sp/>after<sp/>initializing<sp/>the<sp/>tool.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/>TDirectory*<sp/>origDir<sp/>=<sp/>gDirectory;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>data<sp/>ROOT<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/>TFile*<sp/>rootFile<sp/>=<sp/>TFile::Open(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rootFile-&gt;IsZombie()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;AddConfigFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,fileName.Data());</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>toThrow<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Throwing<sp/>6:<sp/>Could<sp/>not<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal">;<sp/>toThrow<sp/>+=<sp/>fileName;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(toThrow);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>get<sp/>the<sp/>the<sp/>known<sp/>TTrees<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TTree<sp/>*tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/>std::string(m_prwFilesPathPrefix+</highlight><highlight class="stringliteral">&quot;MCPileupReweighting&quot;</highlight><highlight class="normal">).c_str()<sp/>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;AddConfigFile&quot;,&quot;Adding<sp/>MCPileupReweighting...&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddDistributionTree(tmp,rootFile);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_countingMode=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>0;tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/>std::string(m_prwFilesPathPrefix+</highlight><highlight class="stringliteral">&quot;MCCustomReweighting&quot;</highlight><highlight class="normal">).c_str()<sp/>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;AddConfigFile&quot;,&quot;Adding<sp/>MCCustomReweighting...&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddDistributionTree(tmp,rootFile);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_countingMode=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>0;tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/>std::string(m_prwFilesPathPrefix+</highlight><highlight class="stringliteral">&quot;DataCustomReweighting&quot;</highlight><highlight class="normal">).c_str()<sp/>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;AddConfigFile&quot;,&quot;Adding<sp/>DataCustomReweighting...&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddDistributionTree(tmp,rootFile);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_countingMode=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp=0;<sp/>tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/>std::string(m_prwFilesPathPrefix+</highlight><highlight class="stringliteral">&quot;PileupReweighting/MCPileupReweighting&quot;</highlight><highlight class="normal">).c_str()<sp/>);<sp/></highlight><highlight class="comment">//allow<sp/>trees<sp/>in<sp/>the<sp/>PileupReweighting<sp/>dir<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;AddConfigFile&quot;,&quot;Adding<sp/>MCPileupReweighting...&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddDistributionTree(tmp,rootFile);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_countingMode=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>0;tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/>std::string(m_prwFilesPathPrefix+</highlight><highlight class="stringliteral">&quot;PileupReweighting/MCCustomReweighting&quot;</highlight><highlight class="normal">).c_str()<sp/>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;AddConfigFile&quot;,&quot;Adding<sp/>MCCustomReweighting...&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddDistributionTree(tmp,rootFile);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_countingMode=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>0;tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/>std::string(m_prwFilesPathPrefix+</highlight><highlight class="stringliteral">&quot;PileupReweighting/DataCustomReweighting&quot;</highlight><highlight class="normal">).c_str()<sp/>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;AddConfigFile&quot;,&quot;Adding<sp/>DataCustomReweighting...&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddDistributionTree(tmp,rootFile);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_countingMode=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rootFile;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>to<sp/>the<sp/>original<sp/>ROOT<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/>gDirectory<sp/>=<sp/>origDir;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal">Bool_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a7a4de37c555bf7af25fe9867bf6f9172" kindref="member">CP::TPileupReweighting::RemoveChannel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chanNum)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_isInitialized)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;RemoveChannel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>RemoveChannel<sp/>after<sp/>initializing<sp/>the<sp/>tool.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>5:<sp/>You<sp/>cannot<sp/>RemoveChannel<sp/>after<sp/>initializing<sp/>the<sp/>tool.<sp/>Reorder<sp/>your<sp/>code!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>period.second-&gt;inputHists.begin();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(itr<sp/>!=<sp/>period.second-&gt;inputHists.end())<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(itr-&gt;first!=chanNum)<sp/>++itr;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(itr-&gt;second)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>itr-&gt;second;<sp/></highlight><highlight class="comment">//delete<sp/>the<sp/>hist<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>period.second-&gt;inputHists.erase(itr);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>found;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal">Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">CP::TPileupReweighting::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>calculate<sp/>a<sp/>period<sp/>weight<sp/>for<sp/>each<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>a<sp/>reweighting<sp/>histogram<sp/>for<sp/>each<sp/>period<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>merged<sp/>mc<sp/>run<sp/>numbers,<sp/>we<sp/>must<sp/>generate<sp/>or<sp/>modify<sp/>the<sp/>existing<sp/>mc<sp/>distributions<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>out<sp/>the<sp/>period<sp/>assignments<sp/>if<sp/>in<sp/>debug<sp/>mode<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debugging)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PrintPeriods();</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;In<sp/>Config<sp/>File<sp/>Generating<sp/>mode.<sp/>Remember<sp/>to<sp/>call<sp/>WriteToFile!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>to<sp/>check<sp/>no<sp/>periods<sp/>have<sp/>subperiods,<sp/>this<sp/>is<sp/>not<sp/>allowed<sp/>in<sp/>counting<sp/>mode<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.second-&gt;subPeriods.size()!=0)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>have<sp/>subperiods<sp/>when<sp/>in<sp/>Config<sp/>File<sp/>Generating<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>44:<sp/>In<sp/>Config<sp/>File<sp/>Generating<sp/>mode,<sp/>but<sp/>detected<sp/>subperiods<sp/>in<sp/>the<sp/>period<sp/>definition.<sp/>This<sp/>is<sp/>not<sp/>allowed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//histograms<sp/>are<sp/>instantiated<sp/>in<sp/>the<sp/>event<sp/>loop<sp/>as<sp/>the<sp/>channels<sp/>occur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//can<sp/>delay<sp/>period<sp/>definition<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//but<sp/>since<sp/>we<sp/>are<sp/>here,<sp/>check<sp/>that<sp/>the<sp/>user<sp/>has<sp/>at<sp/>least<sp/>defined<sp/>some<sp/>periods<sp/>..<sp/>i.e.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(m_periods.size()==1)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(&quot;Initialize&quot;,<sp/>&quot;In<sp/>Config<sp/>File<sp/>Generating<sp/>mode,<sp/>but<sp/>no<sp/>periods<sp/>have<sp/>been<sp/>defined.<sp/>This<sp/>makes<sp/>no<sp/>sense!?<sp/>Define<sp/>some<sp/>periods<sp/>please<sp/>(with<sp/>AddPeriod<sp/>method)!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::runtime_error(&quot;Throwing<sp/>43:<sp/>In<sp/>Config<sp/>File<sp/>Generating<sp/>mode,<sp/>but<sp/>no<sp/>periods<sp/>have<sp/>been<sp/>defined.<sp/>This<sp/>makes<sp/>no<sp/>sense!?<sp/>Define<sp/>some<sp/>periods<sp/>please<sp/>(with<sp/>AddPeriod<sp/>method)!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isInitialized=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>all<sp/>channels<sp/>that<sp/>have<sp/>too<sp/>much<sp/>unrepresented<sp/>data<sp/>(more<sp/>than<sp/>tolerance).<sp/>We<sp/>will<sp/>remove<sp/>these<sp/>channels<sp/>entirely<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalData(0);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//count<sp/>up<sp/>the<sp/>unrepresented<sp/>data,<sp/>indexed<sp/>by<sp/>channel<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>run<sp/>:<sp/>m_runs)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run.second.inputHists.find(</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/>==<sp/>run.second.inputHists.end())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>run.second.inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>bin,binx,biny;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(biny=1;<sp/>biny&lt;=hist-&gt;GetNbinsY();<sp/>biny++)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(binx=1;<sp/>binx&lt;=hist-&gt;GetNbinsX();<sp/>binx++)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin<sp/>=<sp/>hist-&gt;GetBin(binx,biny);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>value<sp/>=<sp/>hist-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalData<sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value==0.)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isUnrep(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>bool&gt;<sp/>doneChannels;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first<sp/>!=<sp/>period.second-&gt;id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skip<sp/>remappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!period.second-&gt;contains(run.first))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>inHist<sp/>:<sp/>period.second-&gt;inputHists)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inHist.first&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skips<sp/>any<sp/>data<sp/>hists<sp/>(shouldn&apos;t<sp/>happen<sp/>really)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((inHist.second)-&gt;GetBinContent(bin)==0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;unrepData[inHist.first]<sp/>+=<sp/>value;<sp/><sp/></highlight><highlight class="comment">//store<sp/>unrep<sp/>data<sp/>by<sp/>period<sp/>too,<sp/>because<sp/>will<sp/>use<sp/>in<sp/>GetUnrepresentedFraction<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isUnrep)<sp/>{isUnrep=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>unrepDataByChannel[-1]<sp/>+=<sp/>value;}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//store<sp/>total<sp/>unrep<sp/>data...<sp/>must<sp/>be<sp/>sure<sp/>not<sp/>to<sp/>double<sp/>count<sp/>across<sp/>the<sp/>channels<sp/>(if<sp/>multiple<sp/>channels<sp/>have<sp/>same<sp/>unrep<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doneChannels[inHist.first])<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//dont<sp/>doublecount<sp/>the<sp/>data<sp/>if<sp/>the<sp/>channel<sp/>was<sp/>to<sp/>blame<sp/>across<sp/>multiple<sp/>periods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((inHist.second)-&gt;GetBinContent(bin)==0)<sp/>{unrepDataByChannel[inHist.first]<sp/>+=<sp/>value;doneChannels[inHist.first]=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ignoreBadChannels<sp/>&amp;&amp;<sp/>unrepDataByChannel[-1]<sp/>&amp;&amp;<sp/>totalData<sp/>&amp;&amp;<sp/>(unrepDataByChannel[-1]/totalData)&gt;m_unrepDataTolerance)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>%f%%<sp/>unrepresented<sp/>data<sp/>and<sp/>&apos;IgnoreBadChannels&apos;<sp/>property<sp/>is<sp/>set<sp/>to<sp/>true.<sp/>Will<sp/>start<sp/>ignoring<sp/>channels<sp/>until<sp/>this<sp/>is<sp/>below<sp/>the<sp/>tolerance<sp/>(%f%%)&quot;</highlight><highlight class="normal">,<sp/>100.*(unrepDataByChannel[-1]/totalData),100.*m_unrepDataTolerance);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>channels<sp/>one-by-one<sp/>until<sp/>we<sp/>are<sp/>under<sp/>tolerance<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(unrepDataByChannel[-1]/totalData)&gt;m_unrepDataTolerance<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worstChannel<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>worstFraction<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>channel<sp/>:<sp/>unrepDataByChannel)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channel.first&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//ignore<sp/>the<sp/>data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channel.second/totalData<sp/>&gt;<sp/>worstFraction)<sp/>{<sp/>worstChannel=channel.first;<sp/>worstFraction<sp/>=<sp/>channel.second/totalData;<sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(worstChannel==-1)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Run<sp/>out<sp/>of<sp/>channels<sp/>to<sp/>remove.<sp/>All<sp/>your<sp/>channels<sp/>are<sp/>bad<sp/>...<sp/>oh<sp/>dear<sp/>oh<sp/>dear<sp/>oh<sp/>dear.<sp/>Please<sp/>a<sp/>better<sp/>PRW<sp/>config<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>exception<sp/>333:<sp/>Run<sp/>out<sp/>of<sp/>channels<sp/>to<sp/>remove.<sp/>All<sp/>your<sp/>channels<sp/>are<sp/>bad<sp/>...<sp/>oh<sp/>dear<sp/>oh<sp/>dear<sp/>oh<sp/>dear.<sp/>Please<sp/>a<sp/>better<sp/>PRW<sp/>config<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Ignoring<sp/>channel<sp/>%d,<sp/>which<sp/>has<sp/>%f%%<sp/>unrepresented<sp/>data<sp/>(%f%%<sp/>of<sp/>the<sp/>total<sp/>unrep<sp/>data)&quot;</highlight><highlight class="normal">,worstChannel,100.*unrepDataByChannel[worstChannel]/totalData,100.*unrepDataByChannel[worstChannel]/unrepDataByChannel[-1]);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>the<sp/>bad<sp/>channel<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a7a4de37c555bf7af25fe9867bf6f9172" kindref="member">RemoveChannel</ref>(worstChannel);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unrepDataByChannel.erase(unrepDataByChannel.find(worstChannel));</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//recalculate<sp/>the<sp/>total<sp/>unrep<sp/>data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unrepDataByChannel[-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>run<sp/>:<sp/>m_runs)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run.second.inputHists.find(</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/>==<sp/>run.second.inputHists.end())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>run.second.inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>bin,binx,biny;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(biny=1;<sp/>biny&lt;=hist-&gt;GetNbinsY();<sp/>biny++)<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(binx=1;<sp/>binx&lt;=hist-&gt;GetNbinsX();<sp/>binx++)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin<sp/>=<sp/>hist-&gt;GetBin(binx,biny);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>value<sp/>=<sp/>hist-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value==0.)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first<sp/>!=<sp/>period.second-&gt;id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skip<sp/>remappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!period.second-&gt;contains(run.first))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>inHist<sp/>:<sp/>period.second-&gt;inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inHist.first&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skips<sp/>any<sp/>data<sp/>hists<sp/>(shouldn&apos;t<sp/>happen<sp/>really)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((inHist.second)-&gt;GetBinContent(bin)==0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unrepDataByChannel[-1]<sp/>+=<sp/>value;<sp/>done=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(done)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>a<sp/>CompositeTrigger<sp/>to<sp/>hold<sp/>the<sp/>unprescaled<sp/>lumi<sp/>hists<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/>m_triggerObjs[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompositeTrigger;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>through<sp/>all<sp/>periods,<sp/>use<sp/>inputHists<sp/>to<sp/>populate<sp/>the<sp/>primary<sp/>and<sp/>secondary<sp/>dists,<sp/>and<sp/>fill<sp/>sumOfWeights<sp/>and<sp/>numberOfEntries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first<sp/>!=<sp/>period.second-&gt;id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skips<sp/>remappings<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>inputHist<sp/>:<sp/>period.second-&gt;inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>inputHist.first;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>inputHist.second;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;sumOfWeights[channel]<sp/>+=<sp/>hist-&gt;GetSumOfWeights();</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;numberOfEntries[channel]<sp/>+=<sp/>hist-&gt;GetEntries();</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;GetDimension()==1)<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;primaryHists[channel]<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1D*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(CloneEmptyHistogram(period.first,channel));</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;primaryHists[channel]-&gt;Add(hist);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//also<sp/>add<sp/>all<sp/>runs<sp/>that<sp/>belong<sp/>to<sp/>us<sp/>...<sp/>only<sp/>do<sp/>the<sp/>&quot;None&quot;<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>run<sp/>:<sp/>m_runs)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!period.second-&gt;contains(run.first))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run.second.inputHists.find(</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/>==<sp/>run.second.inputHists.end())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>to<sp/>list<sp/>of<sp/>runNumbers<sp/>for<sp/>this<sp/>period<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;runNumbers.push_back(run.first);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>run.second.inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sweep<sp/>over<sp/>bins,<sp/>checking<sp/>for<sp/>unrepresented<sp/>data<sp/>and<sp/>acting<sp/>accordingly<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>bin,binx,biny;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(biny=1;<sp/>biny&lt;=hist-&gt;GetNbinsY();<sp/>biny++)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(binx=1;<sp/>binx&lt;=hist-&gt;GetNbinsX();<sp/>binx++)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin<sp/>=<sp/>hist-&gt;GetBin(binx,biny);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>value<sp/>=<sp/>hist-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value==0.)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>channels,<sp/>check<sp/>for<sp/>zero<sp/>in<sp/>this<sp/>bin<sp/><sp/>...<sp/>only<sp/>need<sp/>to<sp/>do<sp/>if<sp/>we<sp/>haven&apos;t<sp/>checked<sp/>ourselves<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.second-&gt;inputBinRedirect.find(bin)<sp/>==<sp/>period.second-&gt;inputBinRedirect.end())<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>inputHist<sp/>:<sp/>period.second-&gt;inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inputHist.first&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skips<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>mcValue<sp/>=<sp/>(inputHist.second)-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mcValue==0.)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction!=0<sp/>&amp;&amp;<sp/>m_debugging)<sp/>Info(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrepresented<sp/>data<sp/>at<sp/>coords<sp/>[%f,%f]<sp/>caused<sp/>by<sp/>periodNumber<sp/>%d<sp/>in<sp/>channel<sp/>%d&quot;</highlight><highlight class="normal">,hist-&gt;GetXaxis()-&gt;GetBinCenter(binx),hist-&gt;GetYaxis()-&gt;GetBinCenter(biny),period.first,inputHist.first);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>are<sp/>doing<sp/>unrepaction=2,<sp/>just<sp/>set<sp/>to<sp/>&apos;not<sp/>the<sp/>bin<sp/>number&apos;.<sp/>if<sp/>we<sp/>are<sp/>doing<sp/>action=3,<sp/>find<sp/>the<sp/>nearest<sp/>good<sp/>bin<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==0)<sp/>{period.second-&gt;inputBinRedirect[bin]<sp/>=<sp/>bin-1;Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrepresented<sp/>data<sp/>at<sp/>coords<sp/>[%f,%f]<sp/>caused<sp/>by<sp/>periodNumber<sp/>%d<sp/>in<sp/>channel<sp/>%d&quot;</highlight><highlight class="normal">,hist-&gt;GetXaxis()-&gt;GetBinCenter(binx),hist-&gt;GetYaxis()-&gt;GetBinCenter(biny),period.first,inputHist.first);}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==1||m_unrepresentedDataAction==2)<sp/>period.second-&gt;inputBinRedirect[bin]<sp/>=<sp/>bin-1;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==3)<sp/>period.second-&gt;inputBinRedirect[bin]<sp/>=<sp/>GetNearestGoodBin(period.first,<sp/>bin);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.second-&gt;inputBinRedirect.find(bin)<sp/>==<sp/>period.second-&gt;inputBinRedirect.end())<sp/>period.second-&gt;inputBinRedirect[bin]<sp/>=<sp/>bin;<sp/></highlight><highlight class="comment">//a<sp/>good<sp/>bin<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>is<sp/>a<sp/>bad<sp/>bin,<sp/>act<sp/>accordingly<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.second-&gt;inputBinRedirect[bin]<sp/>!=<sp/>bin)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run.second.badBins[bin]=value;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==1)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>this<sp/>data.<sp/>we<sp/>have<sp/>to<sp/>remember<sp/>to<sp/>do<sp/>this<sp/>for<sp/>the<sp/>trigger<sp/>data<sp/>too<sp/>if<sp/>this<sp/>is<sp/>the<sp/>pileup<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist-&gt;SetBinContent(bin,0);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//also<sp/>modify<sp/>the<sp/>m_inputTriggerHistograms<sp/>...<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>triggerDists<sp/>:<sp/>run.second.inputHists)<sp/>triggerDists.second-&gt;SetBinContent(bin,0);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==3)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reassign<sp/>the<sp/>content<sp/>to<sp/>that<sp/>bin<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist-&gt;SetBinContent(period.second-&gt;inputBinRedirect[bin],hist-&gt;GetBinContent(period.second-&gt;inputBinRedirect[bin])+hist-&gt;GetBinContent(bin));</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist-&gt;SetBinContent(bin,0);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//also<sp/>modify<sp/>the<sp/>m_inputTriggerHistograms<sp/>...<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>triggerDists<sp/>:<sp/>run.second.inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggerDists.second-&gt;SetBinContent(period.second-&gt;inputBinRedirect[bin],triggerDists.second-&gt;GetBinContent(period.second-&gt;inputBinRedirect[bin])+triggerDists.second-&gt;GetBinContent(bin));</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggerDists.second-&gt;SetBinContent(bin,0);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>the<sp/>period&apos;s<sp/>&apos;data&apos;<sp/>hist<sp/>if<sp/>necessary<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hist-&gt;GetDimension()==1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!period.second-&gt;primaryHists[-1]<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;primaryHists[-1]<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1D*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(CloneEmptyHistogram(period.first,-1));</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//period.second-&gt;triggerHists[&quot;None&quot;]<sp/>=<sp/>dynamic_cast&lt;TH1D*&gt;(CloneEmptyHistogram(period.first,-1));<sp/>//this<sp/>will<sp/>remain<sp/>unnormalized,<sp/>unlike<sp/>the<sp/>&apos;primaryHist&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_triggerObjs[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;triggerHists[period.second-&gt;id][0]<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1D*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(CloneEmptyHistogram(period.first,-1));<sp/></highlight><highlight class="comment">//this<sp/>will<sp/>remain<sp/>unnormalized,<sp/>unlike<sp/>the<sp/>&apos;primaryHist&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hist-&gt;GetDimension()==2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!period.second-&gt;secondaryHists[-1]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;secondaryHists[-1]<sp/>=<sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH2D*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(CloneEmptyHistogram(period.first,-1));</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;primaryHists[-1]<sp/>=<sp/>period.second-&gt;secondaryHists[-1]-&gt;ProjectionX();<sp/>period.second-&gt;primaryHists[-1]-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;primaryHists[-1]-&gt;Reset();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//period.second-&gt;triggerHists[&quot;None&quot;]<sp/>=<sp/>static_cast&lt;TH1D*&gt;(period.second-&gt;primaryHists[-1]-&gt;Clone(&quot;triggerHist&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//period.second-&gt;triggerHists[&quot;None&quot;]-&gt;SetDirectory(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_triggerObjs[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;triggerHists[period.second-&gt;id][0]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TH1D*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(period.second-&gt;primaryHists[-1]-&gt;Clone(</highlight><highlight class="stringliteral">&quot;triggerHist&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_triggerObjs[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;triggerHists[period.second-&gt;id][0]-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>that<sp/>all<sp/>periods<sp/>and<sp/>runs<sp/>have<sp/>been<sp/>checked,<sp/>with<sp/>redirects<sp/>set<sp/>up<sp/>where<sp/>necessary,<sp/>we<sp/>actually<sp/>accumulate<sp/>the<sp/>data<sp/>across<sp/>the<sp/>runs<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>should<sp/>also<sp/>check<sp/>if<sp/>there<sp/>are<sp/>any<sp/>data<sp/>runs<sp/>that<sp/>are<sp/>not<sp/>covered<sp/>by<sp/>the<sp/>period<sp/>assignments<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ignoredData(0);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>run<sp/>:<sp/>m_runs)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>covered(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>run.second.inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!period.second-&gt;contains(run.first))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first!=-1)<sp/>covered=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//don&apos;t<sp/>count<sp/>the<sp/>global<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;GetDimension()==1)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;primaryHists[-1]-&gt;Add(hist);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_triggerObjs[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;triggerHists[period.second-&gt;id][0]-&gt;Add(hist);</highlight><highlight class="comment">//period.second-&gt;triggerHists[&quot;None&quot;]-&gt;Add(hist);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;GetDimension()==2)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;secondaryHists[-1]-&gt;Add(hist);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>proj<sp/>=<sp/>((TH2*)hist)-&gt;ProjectionX();</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;primaryHists[-1]-&gt;Add(proj);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_triggerObjs[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;triggerHists[period.second-&gt;id][0]-&gt;Add(proj);</highlight><highlight class="comment">//period.second-&gt;triggerHists[&quot;None&quot;]-&gt;Add(proj);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>proj;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;sumOfWeights[-1]<sp/>+=<sp/>hist-&gt;GetSumOfWeights();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;numberOfEntries[-1]<sp/>+=<sp/>hist-&gt;GetEntries();</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!covered<sp/>&amp;&amp;<sp/>m_periods.size()&gt;1)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;loaded<sp/>data<sp/>in<sp/>run<sp/>%d<sp/>that<sp/>is<sp/>not<sp/>covered<sp/>by<sp/>period<sp/>assignments&quot;</highlight><highlight class="normal">,run.first);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignoredData<sp/>+=<sp/>hist-&gt;GetSumOfWeights();</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>totalData<sp/>=<sp/><sp/>(m_unrepresentedDataAction==1)<sp/>?<sp/>(m_periods[-1]-&gt;sumOfWeights[-1]+unrepDataByChannel[-1])<sp/>:<sp/>m_periods[-1]-&gt;sumOfWeights[-1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ignoredData&gt;0.)<sp/>Warning(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Period<sp/>Assignments<sp/>missed<sp/>%f%%<sp/>data&quot;</highlight><highlight class="normal">,100.*ignoredData/totalData);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unrepDataByChannel[-1])<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac<sp/>=<sp/>unrepDataByChannel[-1]/totalData;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>frac<sp/><sp/>&gt;<sp/>m_unrepDataTolerance)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%f%%<sp/>unrepresented<sp/>data,<sp/>which<sp/>suggests<sp/>something<sp/>is<sp/>wrong<sp/>with<sp/>your<sp/>prw<sp/>config.<sp/>Try<sp/>EnableDebugging(true)<sp/>to<sp/>investigate&quot;</highlight><highlight class="normal">,100.*<sp/>(unrepDataByChannel[-1]/totalData));</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==1)<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;has<sp/>%f%%<sp/>unrepresented<sp/>data.<sp/>This<sp/>was<sp/>removed<sp/>(UnrepresentedDataAction=1)&quot;</highlight><highlight class="normal">,100.*frac);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==2)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;has<sp/>%f%%<sp/>unrepresented<sp/>data.<sp/>This<sp/>was<sp/>kept<sp/>in<sp/>(UnrepresentedDataAction=2)&quot;</highlight><highlight class="normal">,100.*frac);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==3)<sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;has<sp/>%f%%<sp/>unrepresented<sp/>data.<sp/>This<sp/>was<sp/>reassigned<sp/>(UnrepresentedDataAction=3)&quot;</highlight><highlight class="normal">,100.*frac);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==0)<sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;has<sp/>%f%%<sp/>unrepresented<sp/>data:&quot;</highlight><highlight class="normal">,100.*frac);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>the<sp/>report<sp/>of<sp/>which<sp/>channels<sp/>caused<sp/>it<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>it<sp/>:<sp/>unrepDataByChannel)<sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it.first&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//ignore<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Channel<sp/>%d<sp/>caused<sp/>%f%%<sp/>of<sp/>the<sp/>unrepresented<sp/>data<sp/>(nEntries=%d)&quot;</highlight><highlight class="normal">,it.first,100.*it.second/unrepDataByChannel[-1],m_periods[-1]-&gt;numberOfEntries[it.first]);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Exiting.<sp/>You<sp/>must<sp/>decide<sp/>how<sp/>to<sp/>proceed...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;1)<sp/>use<sp/>AddPeriod<sp/>or<sp/>RemapPeriod<sp/>to<sp/>redefine<sp/>the<sp/>mc<sp/>periods<sp/>to<sp/>include<sp/>this<sp/>data.<sp/>You<sp/>should<sp/>not<sp/>need<sp/>to<sp/>regenerate<sp/>your<sp/>mc<sp/>config<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;2)<sp/>use<sp/>SetUnrepresentedDataAction(1)<sp/>to<sp/>remove<sp/>this<sp/>data<sp/>from<sp/>the<sp/>weight<sp/>calculations.<sp/>You<sp/>should<sp/>also<sp/>veto<sp/>such<sp/>data<sp/>events<sp/>(using<sp/>IsUnrepresentedData(..,..)<sp/>method)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;3)<sp/>use<sp/>SetUnrepresentedDataAction(2)<sp/>to<sp/>leave<sp/>this<sp/>data<sp/>in<sp/>the<sp/>calculation.<sp/>I<sp/>hope<sp/>you<sp/>know<sp/>what<sp/>you&apos;re<sp/>doing!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;4)<sp/>use<sp/>SetUnrepresentedDataAction(3)<sp/>to<sp/>reassign<sp/>the<sp/>data<sp/>to<sp/>the<sp/>nearest<sp/>representable<sp/>bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>exception<sp/>22:<sp/>Unrepresented<sp/>data<sp/>exists.<sp/>Make<sp/>a<sp/>choice<sp/>how<sp/>to<sp/>handle<sp/>this.<sp/>See<sp/>err<sp/>log<sp/>for<sp/>details&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>get<sp/>here,<sp/>through<sp/>the<sp/>exception<sp/>if<sp/>frac<sp/>is<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>frac<sp/><sp/>&gt;<sp/>m_unrepDataTolerance)<sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>exception<sp/>222:<sp/>Some<sp/>channel<sp/>had<sp/>too<sp/>much<sp/>unrepresented<sp/>data.<sp/>You<sp/>should<sp/>fix<sp/>your<sp/>prw<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debugging)<sp/>Info(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Normalizing<sp/>histograms<sp/>and<sp/>cleaning<sp/>up...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>that<sp/>all<sp/>the<sp/>distributions<sp/>are<sp/>built.<sp/>Normalize<sp/>them<sp/>all<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first<sp/>!=<sp/>period.second-&gt;id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pHist<sp/>:<sp/>period.second-&gt;primaryHists)<sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a062a43c0ff62c4d8ca9ceedefba84609" kindref="member">normalizeHistogram</ref>(pHist.second);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pHist<sp/>:<sp/>period.second-&gt;secondaryHists)<sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a062a43c0ff62c4d8ca9ceedefba84609" kindref="member">normalizeHistogram</ref>(pHist.second);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pHist<sp/>:<sp/>period.second-&gt;inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pHist.second;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>period.second-&gt;inputHists.clear();</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>keep<sp/>the<sp/>inputHists<sp/>for<sp/>data,<sp/>because<sp/>can<sp/>use<sp/>that<sp/>to<sp/>do<sp/>random<sp/>run<sp/>numbers<sp/>based<sp/>on<sp/>mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debugging)<sp/>Info(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;...Done&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>no<sp/>input<sp/>histograms<sp/>were<sp/>added,<sp/>we<sp/>are<sp/>in<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/>m_isInitialized=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="comment">//loop<sp/>over<sp/>the<sp/>mc<sp/>histograms,<sp/>find<sp/>bin<sp/>closest<sp/>to<sp/>given<sp/>bin<sp/>that<sp/>is<sp/>&quot;ok&quot;<sp/>(has<sp/>all<sp/>nonzero)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="comment">//0<sp/>=<sp/>ok<sp/>bin,<sp/>1<sp/>=<sp/>bad<sp/>bin,<sp/>2<sp/>=<sp/>out<sp/>of<sp/>range<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::IsBadBin(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>bin)<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bin&lt;0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;<sp/></highlight><highlight class="comment">//out<sp/>of<sp/>range<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>inHist<sp/>:<sp/>p-&gt;inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelNumber<sp/>=<sp/>inHist.first;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelNumber&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skip<sp/>data<sp/>hists<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bin<sp/>&gt;<sp/>(inHist.second-&gt;GetNbinsX()+2)*(inHist.second-&gt;GetNbinsY()+2)*(inHist.second-&gt;GetNbinsZ()+2))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;<sp/></highlight><highlight class="comment">//definitely<sp/>out<sp/>of<sp/>range<sp/>by<sp/>this<sp/>point!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inHist.second-&gt;GetBinContent(bin)==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">//loop<sp/>over<sp/>the<sp/>mc<sp/>histograms,<sp/>find<sp/>bin<sp/>closest<sp/>to<sp/>given<sp/>bin<sp/>that<sp/>is<sp/>&quot;ok&quot;<sp/>(has<sp/>all<sp/>nonzero)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::GetNearestGoodBin(Int_t<sp/>thisMCRunNumber,<sp/>Int_t<sp/>bin)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binDistance<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res1<sp/>=<sp/>IsBadBin(thisMCRunNumber,bin+binDistance);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!res1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bin+binDistance;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res2<sp/>=<sp/>IsBadBin(thisMCRunNumber,bin-binDistance);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!res2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bin-binDistance;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res1==2<sp/>&amp;&amp;<sp/>res2==2)<sp/>{<sp/></highlight><highlight class="comment">//run<sp/>out<sp/>of<sp/>bins<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetNearestGoodBin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;None<sp/>of<sp/>the<sp/>bins<sp/>are<sp/>good!!??&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binDistance++;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//scary!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal">Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1abb89f438504298c97e98b4546bfaddb0" kindref="member">CP::TPileupReweighting::GetUnrepresentedDataFraction</ref>(Int_t<sp/>periodNumber,Int_t<sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>unrepDataByChannel[channel]/GetSumOfEventWeights(-1);<sp/>//the<sp/>denominator<sp/>is<sp/>equivalent<sp/>to<sp/>asking<sp/>for<sp/>the<sp/>total<sp/>data!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetUnrepresentedDataFraction&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//look<sp/>for<sp/>channel<sp/>through<sp/>sumOfWeights<sp/>-<sp/>because<sp/>if<sp/>the<sp/>channel<sp/>has<sp/>no<sp/>unrepData,<sp/>it<sp/>will<sp/>have<sp/>no<sp/>entry<sp/>in<sp/>the<sp/>unrepData<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;sumOfWeights.find(channel)<sp/>==<sp/>p-&gt;sumOfWeights.end())<sp/>channel<sp/>=<sp/>GetDefaultChannel(periodNumber);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;sumOfWeights.find(channel)<sp/>==<sp/>p-&gt;sumOfWeights.end())<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetUnrepresentedDataFraction&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>channel:<sp/>%d&quot;</highlight><highlight class="normal">,channel);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;GetUnrepresentedDataFraction:<sp/>Unrecognised<sp/>channel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;unrepData[channel]/p-&gt;sumOfWeights[-1];</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal">UInt_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a7ee8c39c9cd29f2c47805e3ce6f774f5" kindref="member">CP::TPileupReweighting::GetRandomRunNumber</ref>(Int_t<sp/>periodNumber)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetRandomRunNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight><highlight class="comment">//do<sp/>nothing<sp/>when<sp/>in<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetRandomRunNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lumi<sp/>=<sp/>p-&gt;sumOfWeights[-1]<sp/>*<sp/>m_random3-&gt;Rndm();</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>through<sp/>the<sp/>runs<sp/>assigned<sp/>to<sp/>this<sp/>period<sp/>...<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lumiSum=0;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>runNum<sp/>:<sp/>p-&gt;runNumbers)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lumiSum<sp/>+=<sp/>m_runs[runNum].inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;GetSumOfWeights();</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lumiSum<sp/>&gt;=<sp/>lumi-0.00001)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>runNum;<sp/></highlight><highlight class="comment">//small<sp/>difference<sp/>is<sp/>to<sp/>catch<sp/>rounding<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetRandomRunNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;overran<sp/>integrated<sp/>luminosity<sp/>for<sp/>periodNumber=%d<sp/>(%f<sp/>vs<sp/>%f)&quot;</highlight><highlight class="normal">,periodNumber,lumiSum,lumi);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>46.1:<sp/>overran<sp/>integrated<sp/>luminosity<sp/>for<sp/>GetRandomRunNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal">UInt_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a7ee8c39c9cd29f2c47805e3ce6f774f5" kindref="member">CP::TPileupReweighting::GetRandomRunNumber</ref>(Int_t<sp/>periodNumber,<sp/>Double_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetRandomRunNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight><highlight class="comment">//do<sp/>nothing<sp/>when<sp/>in<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetRandomRunNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>m_emptyHistogram-&gt;FindFixBin(x);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lumi<sp/>=<sp/>p-&gt;primaryHists[-1]-&gt;GetBinContent(bin)<sp/>*<sp/>p-&gt;sumOfWeights[-1]<sp/>*<sp/>m_random3-&gt;Rndm();</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lumi)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight><highlight class="comment">//no<sp/>lumi<sp/>with<sp/>that<sp/>mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>through<sp/>the<sp/>runs<sp/>assigned<sp/>to<sp/>this<sp/>period<sp/>...<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lumiSum=0;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>runNum<sp/>:<sp/>p-&gt;runNumbers)<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lumiSum<sp/>+=<sp/>m_runs[runNum].inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lumiSum<sp/>&gt;=<sp/>lumi-0.00001)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>runNum;<sp/><sp/></highlight><highlight class="comment">//small<sp/>difference<sp/>is<sp/>to<sp/>catch<sp/>rounding<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetRandomRunNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;overran<sp/>integrated<sp/>luminosity<sp/>for<sp/>periodNumber=%d<sp/>(%f<sp/>vs<sp/>%f)&quot;</highlight><highlight class="normal">,periodNumber,lumiSum,lumi);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>46.1:<sp/>overran<sp/>integrated<sp/>luminosity<sp/>for<sp/>GetRandomRunNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal">UInt_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1aadd61aa74421033e011d4bf27d0e7d09" kindref="member">CP::TPileupReweighting::GetRandomLumiBlockNumber</ref>(UInt_t<sp/>runNumber)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{Info(</highlight><highlight class="stringliteral">&quot;GetRandomLumiBlockNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight><highlight class="comment">//do<sp/>nothing<sp/>when<sp/>in<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lumi<sp/>=<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a67eaa496d5897c42eee1ae8560120ee9" kindref="member">GetIntegratedLumi</ref>(runNumber,runNumber)<sp/>*<sp/>m_random3-&gt;Rndm()<sp/>*<sp/>1E6<sp/></highlight><highlight class="comment">/*<sp/>dont<sp/>forget<sp/>the<sp/>lumi<sp/>was<sp/>divided<sp/>by<sp/>a<sp/>million<sp/>to<sp/>get<sp/>to<sp/>pb<sp/>*/</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lumisum<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lbn<sp/>:<sp/>m_runs[runNumber].lumiByLbn)<sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction==1<sp/>&amp;&amp;<sp/>IsUnrepresentedData(runNumber,lbn.second.second))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skip<sp/>over<sp/>bad<sp/>lumi<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lumisum<sp/>+=<sp/>lbn.second.first;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lumisum<sp/>&gt;=<sp/>lumi)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lbn.first;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetRandomLumiBlockNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;overran<sp/>integrated<sp/>luminosity<sp/>for<sp/>RunNumber=%d&quot;</highlight><highlight class="normal">,runNumber);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>46:<sp/>overran<sp/>integrated<sp/>luminosity<sp/>for<sp/>runNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="comment">//only<sp/>considers<sp/>periods<sp/>assigned<sp/>directly!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal">Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a33cf22b6251bbaff2d5c782337c89f7f" kindref="member">CP::TPileupReweighting::GetRandomPeriodNumber</ref>(Int_t<sp/>periodNumber)<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetRandomPeriodNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight><highlight class="comment">//do<sp/>nothing<sp/>when<sp/>in<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetRandomPeriodNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>no<sp/>subperiods,<sp/>we<sp/>just<sp/>return<sp/>ourselves<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;subPeriods.size()==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;id;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>the<sp/>total<sp/>lumi<sp/>of<sp/>this<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lumi<sp/>=<sp/>p-&gt;sumOfWeights[-1]<sp/>*<sp/>m_random3-&gt;Rndm();</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>subPeriods<sp/>..<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lumiSum=0;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>subp<sp/>:<sp/>p-&gt;subPeriods)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lumiSum<sp/>+=<sp/>subp-&gt;sumOfWeights[-1];</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lumiSum<sp/>&gt;=<sp/>lumi)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subp-&gt;id;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetRandomPeriodNumber&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;overran<sp/>integrated<sp/>luminosity<sp/>for<sp/>periodNumber=%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>46.1:<sp/>overran<sp/>integrated<sp/>luminosity<sp/>for<sp/>GetRandomPeriodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal">Bool_t<sp/>CP::TPileupReweighting::IsUnrepresentedData(Int_t<sp/>runNumber,<sp/>Float_t<sp/>x,<sp/>Float_t<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>m_emptyHistogram-&gt;FindFixBin(x,y);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>m_runs[runNumber].badBins[bin]<sp/>);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="comment">//this<sp/>method<sp/>builds<sp/>a<sp/>file<sp/>get<sp/>can<sp/>be<sp/>friended<sp/>to<sp/>a<sp/>TTree<sp/>with<sp/>a<sp/>prw-hash<sp/>branch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal">Bool_t<sp/>CP::TPileupReweighting::MakeWeightTree(TString<sp/>channelNumbers,<sp/>TString<sp/>outFile,<sp/>TString<sp/>hashBranch,<sp/>TString<sp/>weightBranch)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;MakeWeightTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>m_emptyHistogram;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hist)<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;MakeWeightTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Tool<sp/>not<sp/>configured<sp/>properly<sp/>...<sp/>please<sp/>report<sp/>this!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>47:<sp/>Tool<sp/>not<sp/>configured<sp/>properly<sp/>...<sp/>please<sp/>report<sp/>this!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>given<sp/>channels,<sp/>and<sp/>loop<sp/>over<sp/>all<sp/>periods<sp/>(except<sp/>the<sp/>global<sp/>period)<sp/>and<sp/>get<sp/>the<sp/>pileup<sp/>weight<sp/>in<sp/>each<sp/>case<sp/>for<sp/>each<sp/>bin<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/>TFile<sp/>f1(outFile,</highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/>TTree*<sp/>outTree<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree(</highlight><highlight class="stringliteral">&quot;prwTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;prwTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/>ULong64_t<sp/>prwHash(0);Float_t<sp/>weight(0.);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/>outTree-&gt;Branch(hashBranch,&amp;prwHash);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/>outTree-&gt;Branch(weightBranch,&amp;weight);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/>TObjArray<sp/>*tx<sp/>=<sp/>channelNumbers.Tokenize(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Int_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tx-&gt;GetEntries();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelNumber<sp/>=<sp/>((TObjString<sp/>*)(tx-&gt;At(i)))-&gt;String().Atoi();</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelNumber&gt;999999<sp/>||<sp/>channelNumber&lt;0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;MakeWeightTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ChannelNumber<sp/>can<sp/>not<sp/>be<sp/>bigger<sp/>than<sp/>999999<sp/>or<sp/>less<sp/>than<sp/>0<sp/>...<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,channelNumber);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1.Close();</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first==-1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>periodNumber<sp/>=<sp/>period.first;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;=hist-&gt;GetNbinsX();i++)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>hist-&gt;GetXaxis()-&gt;GetBinCenter(i);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;j&lt;=hist-&gt;GetNbinsY();j++)<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hist-&gt;GetYaxis()-&gt;GetBinCenter(j);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>=<sp/>GetCombinedWeight(periodNumber,channelNumber,x,y);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prwHash<sp/>=<sp/>GetPRWHash(periodNumber,channelNumber,x,y);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTree-&gt;Fill();</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/>outTree-&gt;BuildIndex(hashBranch.Data());</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/>outTree-&gt;Write();</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/>f1.Close();</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;MakeWeightTree&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Successfully<sp/>wrote<sp/>prwTree<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,outFile.Data());</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal">ULong64_t<sp/>CP::TPileupReweighting::GetPRWHash(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber,<sp/>Float_t<sp/>x,<sp/>Float_t<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetPRWHash&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>m_emptyHistogram;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hist)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetPRWHash&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Tool<sp/>not<sp/>configured<sp/>properly<sp/>...<sp/>please<sp/>report<sp/>this!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>47:<sp/>Tool<sp/>not<sp/>configured<sp/>properly<sp/>...<sp/>please<sp/>report<sp/>this!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/>ULong64_t<sp/>out<sp/>=<sp/>hist-&gt;FindFixBin(x,y);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/>out<sp/>+=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)(channelNumber)*10000000000;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/>out<sp/>+=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)(periodNumber)*10000;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal">Float_t<sp/>CP::TPileupReweighting::GetCombinedWeight(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber,<sp/>Float_t<sp/>x,<sp/>Float_t<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetCombinedWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetCombinedWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>get<sp/>a<sp/>weight<sp/>when<sp/>in<sp/>config<sp/>file<sp/>generating<sp/>mode.<sp/>Please<sp/>use<sp/>FillWeight<sp/>method&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>2:<sp/>You<sp/>cannot<sp/>get<sp/>a<sp/>weight<sp/>when<sp/>in<sp/>config<sp/>file<sp/>generating<sp/>mode.<sp/>Please<sp/>use<sp/>FillWeight<sp/>method&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//decide<sp/>how<sp/>many<sp/>dimensions<sp/>this<sp/>weight<sp/>has<sp/>-<sp/>use<sp/>the<sp/>emptyHistogram<sp/>to<sp/>tell...<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>m_emptyHistogram;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hist)<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetCombinedWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Tool<sp/>not<sp/>configured<sp/>properly<sp/>...<sp/>please<sp/>report<sp/>this!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>47:<sp/>Tool<sp/>not<sp/>configured<sp/>properly<sp/>...<sp/>please<sp/>report<sp/>this!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/>Float_t<sp/>out<sp/>=<sp/>GetPeriodWeight(periodNumber,channelNumber)*GetPrimaryWeight(periodNumber,channelNumber,x);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;GetDimension()&gt;1)<sp/>out<sp/>*=<sp/>GetSecondaryWeight(periodNumber,channelNumber,x,y);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal">Float_t<sp/>CP::TPileupReweighting::GetPeriodWeight(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//=<sp/>L_A/L<sp/>/<sp/>N_A/N<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetPeriodWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetPeriodWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;sumOfWeights.find(channelNumber)<sp/>==<sp/>p-&gt;sumOfWeights.end())<sp/>channelNumber<sp/>=<sp/>GetDefaultChannel(periodNumber);</highlight><highlight class="comment">//p-&gt;defaultChannel;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_a<sp/>=<sp/>p-&gt;sumOfWeights[channelNumber];</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>m_periods[-1]-&gt;sumOfWeights[channelNumber];</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l_a<sp/>=<sp/>p-&gt;sumOfWeights[-1];</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>m_periods[-1]-&gt;sumOfWeights[-1];</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(l_a/l)<sp/>/<sp/>(n_a/n);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal">Float_t<sp/>CP::TPileupReweighting::GetPrimaryWeight(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber,Float_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//=<sp/>L_i/L_A<sp/>/<sp/>N_i/N_A<sp/>..<sp/>primaryHists<sp/>have<sp/>already<sp/>been<sp/>normalized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetPrimaryWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetPrimaryWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oChanNumber<sp/>=<sp/>channelNumber;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;sumOfWeights.find(channelNumber)<sp/>==<sp/>p-&gt;sumOfWeights.end())<sp/>channelNumber<sp/>=<sp/>GetDefaultChannel(periodNumber);</highlight><highlight class="comment">//p-&gt;defaultChannel;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p-&gt;primaryHists[channelNumber])<sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetPrimaryWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>channelNumber:<sp/>%d&quot;</highlight><highlight class="normal">,oChanNumber);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>2:<sp/>Unrecognised<sp/>channelNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>p-&gt;primaryHists[channelNumber]-&gt;FindFixBin(x);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>p-&gt;primaryHists[channelNumber]-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p-&gt;primaryHists[-1])<sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetPrimaryWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;No<sp/>data<sp/>loaded<sp/>for<sp/>period<sp/>%d.<sp/>Did<sp/>you<sp/>forget<sp/>to<sp/>load<sp/>a<sp/>lumicalc<sp/>file<sp/>or<sp/>data<sp/>config<sp/>file?&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>3:<sp/>No<sp/>data<sp/>loaded.<sp/>Did<sp/>you<sp/>forget<sp/>to<sp/>load<sp/>a<sp/>lumicalc<sp/>file<sp/>or<sp/>data<sp/>config<sp/>file?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>p-&gt;primaryHists[-1]-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l/n;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal">Float_t<sp/>CP::TPileupReweighting::GetSecondaryWeight(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber,Float_t<sp/>x,Float_t<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//=<sp/>L_j/L_i<sp/>/<sp/>N_j/N_i<sp/>..<sp/>secondary<sp/>hists<sp/>have<sp/>already<sp/>been<sp/>normalized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetSecondaryWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetSecondaryWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;sumOfWeights.find(channelNumber)<sp/>==<sp/>p-&gt;sumOfWeights.end())<sp/>channelNumber<sp/>=<sp/>GetDefaultChannel(periodNumber);</highlight><highlight class="comment">//p-&gt;defaultChannel;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>p-&gt;secondaryHists[channelNumber]-&gt;FindFixBin(x,y);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>p-&gt;secondaryHists[channelNumber]-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>p-&gt;secondaryHists[-1]-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l/n;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal">Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1adb81b889115b2745a5fb6adf07a02297" kindref="member">CP::TPileupReweighting::GetDataWeight</ref>(Int_t<sp/>runNumber,<sp/>TString<sp/>trigger)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//special<sp/>mu-independent<sp/>version<sp/>of<sp/>GetDataWeight.<sp/>Will<sp/>just<sp/>use<sp/>the<sp/>global<sp/>luminosity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/>m_doGlobalDataWeight=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>out<sp/>=<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1adb81b889115b2745a5fb6adf07a02297" kindref="member">GetDataWeight</ref>(runNumber,<sp/>trigger,<sp/>0);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/>m_doGlobalDataWeight=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal">Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1adb81b889115b2745a5fb6adf07a02297" kindref="member">CP::TPileupReweighting::GetDataWeight</ref>(Int_t<sp/>runNumber,<sp/>TString<sp/>trigger,<sp/>Double_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_countingMode)<sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>get<sp/>a<sp/>weight<sp/>when<sp/>in<sp/>config<sp/>file<sp/>generating<sp/>mode.<sp/>Please<sp/>use<sp/>Fill<sp/>method&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;GetDataWeight:<sp/>You<sp/>cannot<sp/>get<sp/>a<sp/>weight<sp/>when<sp/>in<sp/>config<sp/>file<sp/>generating<sp/>mode.<sp/>Please<sp/>use<sp/>Fill<sp/>method&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//determine<sp/>which<sp/>period<sp/>this<sp/>run<sp/>number<sp/>is<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>periodNumber<sp/>=<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1aa6c5faa164c4ac197a809bdb9b278112" kindref="member">GetFirstFoundPeriodNumber</ref>(runNumber);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[periodNumber];</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>periodNumber:<sp/>%d&quot;</highlight><highlight class="normal">,periodNumber);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//see<sp/>if<sp/>we<sp/>already<sp/>made<sp/>this<sp/>trigger<sp/>hist<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tobj<sp/>=<sp/>m_triggerObjs.find(trigger);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tobj==m_triggerObjs.end())<sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>do<sp/>a<sp/>subtrigger<sp/>calculation<sp/>we<sp/>need<sp/>to<sp/>reopen<sp/>all<sp/>the<sp/>lumicalc<sp/>files<sp/>and<sp/>do<sp/>the<sp/>fiddily<sp/>prescaled<sp/>luminosity<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//will<sp/>throw<sp/>errors<sp/>if<sp/>can&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CalculatePrescaledLuminosityHistograms(trigger);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tobj<sp/>=<sp/>m_triggerObjs.find(trigger);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tobj-&gt;second-&gt;triggerHists.find(p-&gt;id)<sp/>==<sp/>tobj-&gt;second-&gt;triggerHists.end())<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>trigger<sp/>%s<sp/>in<sp/>period<sp/>%d&quot;</highlight><highlight class="normal">,trigger.Data(),p-&gt;id);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;GetDataWeight:<sp/>Could<sp/>not<sp/>find<sp/>trigger<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>we<sp/>need<sp/>to<sp/>evaluate<sp/>the<sp/>trigger<sp/>bits,<sp/>and<sp/>if<sp/>necessary<sp/>calculate<sp/>the<sp/>new<sp/>trigger<sp/>hist<sp/>for<sp/>the<sp/>new<sp/>bits<sp/>combination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tbits<sp/>=<sp/>tobj-&gt;second-&gt;getBits(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tbits==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//no<sp/>trigger<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dItr<sp/>=<sp/>tobj-&gt;second-&gt;triggerHists[p-&gt;id].find(tbits);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/>TH1D*<sp/>denomHist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dItr<sp/>==<sp/>tobj-&gt;second-&gt;triggerHists[p-&gt;id].end())<sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//possible<sp/>that<sp/>the<sp/>tbits<sp/>for<sp/>this<sp/>event<sp/>have<sp/>not<sp/>been<sp/>encountered<sp/>before,<sp/>so<sp/>just<sp/>redo<sp/>the<sp/>calculation<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calculateHistograms(tobj-&gt;second);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>denomHist<sp/>=<sp/>tobj-&gt;second-&gt;triggerHists[p-&gt;id][tbits];</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(denomHist==0)<sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>trigger<sp/>%s<sp/>in<sp/>period<sp/>%d<sp/>with<sp/>bits<sp/>%ld&quot;</highlight><highlight class="normal">,trigger.Data(),p-&gt;id,<sp/>tbits);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;GetDataWeight:<sp/>Could<sp/>not<sp/>find<sp/>trigger<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>denomHist<sp/>=<sp/>dItr-&gt;second;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/>TH1D*<sp/>numerHist<sp/>=<sp/>m_triggerObjs[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;triggerHists[p-&gt;id][0];</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numerHist==0)<sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>unprescaled<sp/>trigger<sp/>in<sp/>period<sp/>%d&quot;</highlight><highlight class="normal">,p-&gt;id);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;GetDataWeight:<sp/>Could<sp/>not<sp/>find<sp/>unprescaled<sp/>trigger.<sp/>Please<sp/>AddLumiCalc<sp/>with<sp/>a<sp/>&apos;None&apos;<sp/>trigger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doGlobalDataWeight)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numerHist-&gt;Integral(0,numerHist-&gt;GetNbinsX()+1)/denomHist-&gt;Integral(0,denomHist-&gt;GetNbinsX()+1);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>bin=numerHist-&gt;FindFixBin(x*m_dataScaleFactorX);<sp/></highlight><highlight class="comment">//MUST<sp/>SCALE<sp/>BY<sp/>THE<sp/>DATA<sp/>SCALE<sp/>FACTOR!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!denomHist-&gt;GetBinContent(bin))<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>mu<sp/>value<sp/>%f<sp/>...<sp/>are<sp/>you<sp/>sure<sp/>you<sp/>included<sp/>all<sp/>lumicalc<sp/>files&quot;</highlight><highlight class="normal">,x);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;GetDataWeight:<sp/>Unrecognised<sp/>mu<sp/>value.<sp/>Please<sp/>AddLumiCalc<sp/>enough<sp/>lumi<sp/>with<sp/>&apos;None&apos;<sp/>trigger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numerHist-&gt;GetBinContent(bin)/denomHist-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight><highlight class="comment">//fills<sp/>the<sp/>appropriate<sp/>inputHistograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::Fill(Int_t<sp/>runNumber,Int_t<sp/>channelNumber,Float_t<sp/>w,Float_t<sp/>x,<sp/>Float_t<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_isInitialized)<sp/>{<sp/>Info(</highlight><highlight class="stringliteral">&quot;Fill&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initializing<sp/>the<sp/>subtool..&quot;</highlight><highlight class="normal">);<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>only<sp/>be<sp/>given<sp/>genuine<sp/>mcRunNumbers<sp/>if<sp/>mc<sp/>(channel&gt;=0).<sp/>We<sp/>don&apos;t<sp/>fill<sp/>periodNumber<sp/>distributions<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>period<sp/>if<sp/>mc,<sp/>get<sp/>the<sp/>data<sp/>run<sp/>if<sp/>data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelNumber&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_periods.find(runNumber)==m_periods.end())<sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Fill&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>runNumber:<sp/>%d.<sp/><sp/>Check<sp/>your<sp/>period<sp/>configuration<sp/>(AddPeriod<sp/>or<sp/>UsePeriodConfig)&quot;</highlight><highlight class="normal">,runNumber);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Period*<sp/>p<sp/>=<sp/>m_periods[runNumber];</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p)<sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Fill&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unrecognised<sp/>runNumber:<sp/>%d.<sp/><sp/>Check<sp/>your<sp/>period<sp/>configuration<sp/>(AddPeriod<sp/>or<sp/>UsePeriodConfig)<sp/>...<sp/>but<sp/>should<sp/>never<sp/>have<sp/>got<sp/>here<sp/>so<sp/>please<sp/>report<sp/>this!&quot;</highlight><highlight class="normal">,runNumber);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>1:<sp/>Unrecognised<sp/>periodNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;inputHists.find(channelNumber)==p-&gt;inputHists.end())<sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>to<sp/>create<sp/>my<sp/>period<sp/>histogram<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;inputHists[channelNumber]<sp/>=<sp/>CloneEmptyHistogram(runNumber,channelNumber);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hist<sp/>=<sp/>p-&gt;inputHists[channelNumber];</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Run&amp;<sp/>r<sp/>=<sp/>m_runs[runNumber];</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]==0)<sp/>r.inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]=CloneEmptyHistogram(runNumber,channelNumber);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hist<sp/>=<sp/>r.inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hist)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;Fill&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unknown<sp/>[run,channel]<sp/>=<sp/>[%d,%d]&quot;</highlight><highlight class="normal">,runNumber,channelNumber);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>45:<sp/>Fill::<sp/>Unknown<sp/>[run,channel]<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;GetDimension()==1)<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hist-&gt;Fill(x,w);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;GetDimension()==2)<sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(static_cast&lt;TH2*&gt;(hist))-&gt;Fill(x,y,w);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::WriteToFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fname)<sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_countingMode)<sp/>{Warning(</highlight><highlight class="stringliteral">&quot;WriteToFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Not<sp/>in<sp/>counting<sp/>mode,<sp/>so<sp/>no<sp/>file<sp/>will<sp/>be<sp/>written&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//build<sp/>a<sp/>TTree<sp/>with<sp/>the<sp/>correct<sp/>mc<sp/>structure,<sp/>and<sp/>dump<sp/>the<sp/>mc<sp/>histogram<sp/>info<sp/>in<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//also<sp/>build<sp/>aggregate<sp/>histograms<sp/>across<sp/>all<sp/>channels<sp/>-<sp/>shouldn&apos;t<sp/>be<sp/>used<sp/>as<sp/>input<sp/>histograms<sp/>unless<sp/>for<sp/>a<sp/>single<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/>TString<sp/>filename<sp/>=<sp/>fname;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/>filename<sp/>+=<sp/>(filename==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>?<sp/>TString(this-&gt;GetName())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.prw.root&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>the<sp/>weights.<sp/>&quot;pileup&quot;<sp/>gets<sp/>it<sp/>own<sp/>MCPileupReweighting<sp/>ttree.<sp/>...<sp/>since<sp/>we<sp/>got<sp/>rid<sp/>of<sp/>weightNames<sp/>in<sp/>this<sp/>version,<sp/>everything<sp/>goes<sp/>in<sp/>MCPileupReweighting<sp/>now!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//data<sp/>goes<sp/>in<sp/>to<sp/>DataCustomReweighting.<sp/>other<sp/>goes<sp/>in<sp/>to<sp/>MCCustomReweighting<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/>TFile*<sp/>outFile<sp/>=<sp/>TFile::Open(filename,</highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>r<sp/>=<sp/>WriteToFile(outFile);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/>outFile-&gt;Close();</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::WriteToFile(TFile*<sp/>outFile)<sp/>{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_countingMode)<sp/>{Warning(</highlight><highlight class="stringliteral">&quot;WriteToFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Not<sp/>in<sp/>counting<sp/>mode,<sp/>so<sp/>no<sp/>file<sp/>will<sp/>be<sp/>written&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/>TDirectory*<sp/>origDir<sp/>=<sp/>gDirectory;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/>outFile-&gt;cd();</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/>TTree<sp/>*outTreeMC=0;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/>TTree<sp/>*outTreeData=0;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/>Int_t<sp/>channel<sp/>=<sp/>0;UInt_t<sp/>runNumber<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;UInt_t&gt;*<sp/>pStarts<sp/>=<sp/>0;std::vector&lt;UInt_t&gt;*<sp/>pEnds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/>Char_t<sp/>histName[150];</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>periods<sp/>...<sp/>periods<sp/>only<sp/>get<sp/>entry<sp/>in<sp/>table<sp/>if<sp/>they<sp/>have<sp/>an<sp/>input<sp/>histogram<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>period<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first<sp/>!=<sp/>period.second-&gt;id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skips<sp/>redirects<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//avoid<sp/>the<sp/>global<sp/>run<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>runNumber<sp/>=<sp/>period.first;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pStarts<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;UInt_t&gt;;pEnds<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;UInt_t&gt;;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.second-&gt;subPeriods.size()==0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pStarts-&gt;push_back(period.second-&gt;start);<sp/>pEnds-&gt;push_back(period.second-&gt;end);<sp/></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>subp<sp/>:<sp/>period.second-&gt;subPeriods)<sp/>{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pStarts-&gt;push_back(subp-&gt;start);<sp/>pEnds-&gt;push_back(subp-&gt;end);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inHist<sp/>:<sp/>period.second-&gt;inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel<sp/>=<sp/>inHist.first;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>inHist.second;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(histName,hist-&gt;GetName(),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(histName)-1);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist-&gt;Write();</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!outTreeMC)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeMC<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree(</highlight><highlight class="stringliteral">&quot;MCPileupReweighting&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;MCPileupReweighting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeMC-&gt;Branch(</highlight><highlight class="stringliteral">&quot;Channel&quot;</highlight><highlight class="normal">,&amp;channel);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeMC-&gt;Branch(</highlight><highlight class="stringliteral">&quot;RunNumber&quot;</highlight><highlight class="normal">,&amp;runNumber);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeMC-&gt;Branch(</highlight><highlight class="stringliteral">&quot;PeriodStarts&quot;</highlight><highlight class="normal">,&amp;pStarts);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeMC-&gt;Branch(</highlight><highlight class="stringliteral">&quot;PeriodEnds&quot;</highlight><highlight class="normal">,&amp;pEnds);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeMC-&gt;Branch(</highlight><highlight class="stringliteral">&quot;HistName&quot;</highlight><highlight class="normal">,&amp;histName,</highlight><highlight class="stringliteral">&quot;HistName/C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeMC-&gt;Fill();</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pStarts;<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pEnds;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>data<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>run<sp/>:<sp/>m_runs)<sp/>{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>runNumber<sp/>=<sp/>run.first;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run.second.inputHists.find(</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)==run.second.inputHists.end())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>hist<sp/>=<sp/>run.second.inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(histName,hist-&gt;GetName(),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(histName)-1);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hist-&gt;Write();</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!outTreeData)<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree(</highlight><highlight class="stringliteral">&quot;DataPileupReweighting&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DataPileupReweighting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeData-&gt;Branch(</highlight><highlight class="stringliteral">&quot;RunNumber&quot;</highlight><highlight class="normal">,&amp;runNumber);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outTreeData-&gt;Branch(</highlight><highlight class="stringliteral">&quot;HistName&quot;</highlight><highlight class="normal">,&amp;histName,</highlight><highlight class="stringliteral">&quot;HistName/C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outTreeData-&gt;Fill();</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>non-zero<sp/>ttrees<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(outTreeMC)<sp/>{outTreeMC-&gt;Write();</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>outTreeMC;outTreeMC=0;}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(outTreeData)<sp/>{outTreeData-&gt;Write();</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>outTreeData;outTreeData=0;}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;WriteToFile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Successfully<sp/>generated<sp/>config<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,outFile-&gt;GetName());</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;WriteToFile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Happy<sp/>Reweighting<sp/>:-)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/>gDirectory<sp/>=<sp/>origDir;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Method<sp/>to<sp/>calculate<sp/>the<sp/>ratio<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a062a43c0ff62c4d8ca9ceedefba84609" kindref="member">CP::TPileupReweighting::normalizeHistogram</ref>(TH1*<sp/>hist){</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>the<sp/>data<sp/>histogram<sp/>based<sp/>on<sp/>which<sp/>sort<sp/>of<sp/>histogram<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist){<sp/></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;InheritsFrom(</highlight><highlight class="stringliteral">&quot;TH3&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;normalizeHistogram&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;3D<sp/>reweighting<sp/>not<sp/>supported<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>3:<sp/>3D<sp/>reweighting<sp/>not<sp/>supported<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist-&gt;InheritsFrom(</highlight><highlight class="stringliteral">&quot;TH2&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skipNorm=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//normalize<sp/>each<sp/>bin<sp/>according<sp/>to<sp/>the<sp/>projection<sp/>in<sp/>x<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1D*<sp/>proj<sp/>=<sp/>((TH2*)hist)-&gt;ProjectionX();</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>bin,binx,biny,binz;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(binz=1;<sp/>binz&lt;=hist-&gt;GetNbinsZ();<sp/>binz++)<sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(biny=1;<sp/>biny&lt;=hist-&gt;GetNbinsY();<sp/>biny++)<sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(binx=1;<sp/>binx&lt;=hist-&gt;GetNbinsX();<sp/>binx++)<sp/>{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin<sp/>=<sp/>hist-&gt;GetBin(binx,biny,binz);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>value<sp/>=<sp/>hist-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>normalizer<sp/>=<sp/>proj-&gt;GetBinContent(binx);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(normalizer)&gt;0.00001)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist-&gt;SetBinContent(bin,value/normalizer);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipNorm=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>proj;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(skipNorm<sp/>&amp;&amp;<sp/>m_debugging)<sp/>Warning(</highlight><highlight class="stringliteral">&quot;normalizeHistogram&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Skipped<sp/>normalization<sp/>in<sp/>hist<sp/>%s&quot;</highlight><highlight class="normal">,hist-&gt;GetName());</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//normalize<sp/>to<sp/>the<sp/>sum<sp/>of<sp/>weights<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(hist-&gt;GetSumOfWeights())&gt;0.00001)<sp/>{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist-&gt;Scale(1.0/hist-&gt;GetSumOfWeights());</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_debugging)<sp/>Warning(</highlight><highlight class="stringliteral">&quot;normalizeHistogram&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Skipping<sp/>Normalizing<sp/>histogram<sp/>%s<sp/>to<sp/>~zero:<sp/>%f&quot;</highlight><highlight class="normal">,hist-&gt;GetName(),hist-&gt;GetSumOfWeights());</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;normalizeHistogram&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Non<sp/>existent<sp/>histogram<sp/>for<sp/>normalizing&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>56&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="comment">//This<sp/>allows<sp/>PROOF<sp/>to<sp/>merge<sp/>the<sp/>generated<sp/>histograms<sp/>before<sp/>the<sp/>WriteToFile<sp/>or<sp/>WriteCustomToFile<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal">Int_t<sp/>CP::TPileupReweighting::Merge(TCollection<sp/>*coll)<sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!coll)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(coll-&gt;IsEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>elements<sp/>of<sp/>the<sp/>collection:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/>TIter<sp/>next(<sp/>coll<sp/>);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/>TObject*<sp/>obj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(<sp/>obj<sp/>=<sp/>next()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>element<sp/>is<sp/>of<sp/>the<sp/>right<sp/>type:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">CP::TPileupReweighting</ref>*<sp/>vobj<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">CP::TPileupReweighting</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>obj<sp/>);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>vobj<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="stringliteral">&quot;Merge&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>object<sp/>type<sp/>encountered:<sp/>%s&quot;</highlight><highlight class="normal">,obj-&gt;ClassName()<sp/>);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//merge<sp/>the<sp/>inputHistograms<sp/>...<sp/>all<sp/>the<sp/>periods<sp/>should<sp/>be<sp/>identical<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>period<sp/>:<sp/>vobj-&gt;m_periods)<sp/>{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(period.first<sp/>!=<sp/>period.second-&gt;id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iHist<sp/>:<sp/>period.second-&gt;inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetInputHistogram(period.first,iHist.first)==0)<sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[period.first]-&gt;inputHists[iHist.first]<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(iHist.second-&gt;Clone(iHist.second-&gt;GetName()));</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[period.first]-&gt;inputHists[iHist.first]-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetInputHistogram(period.first,iHist.first)-&gt;Add(iHist.second);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//also<sp/>must<sp/>remember<sp/>to<sp/>merge<sp/>the<sp/>runs<sp/>too<sp/>(where<sp/>the<sp/>data<sp/>is<sp/>held)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>run<sp/>:<sp/>vobj-&gt;m_runs)<sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iHist<sp/>:<sp/>run.second.inputHists)<sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_runs[run.first].inputHists[iHist.first]==0)<sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_runs[run.first].inputHists[iHist.first]<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(iHist.second-&gt;Clone(iHist.second-&gt;GetName()));</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_runs[run.first].inputHists[iHist.first]-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_runs[run.first].inputHists[iHist.first]-&gt;Add(iHist.second);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CP::TPileupReweighting::CalculatePrescaledLuminosityHistograms(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>this<sp/>is<sp/>a<sp/>composite<sp/>trigger<sp/>(user<sp/>has<sp/>provided<sp/>OR<sp/>of<sp/>triggers<sp/>that<sp/>are<sp/>passed<sp/>before<sp/>prescale)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/>TString<sp/>triggerCopy<sp/>=<sp/>trigger;<sp/>triggerCopy.ReplaceAll(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/>triggerCopy.ReplaceAll(</highlight><highlight class="stringliteral">&quot;&amp;&amp;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">);triggerCopy.ReplaceAll(</highlight><highlight class="stringliteral">&quot;||&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/>CompositeTrigger*<sp/>t<sp/>=<sp/>makeTrigger(triggerCopy);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t==0)<sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Error<sp/>parsing<sp/>composite<sp/>trigger<sp/>set:<sp/>%s&quot;</highlight><highlight class="normal">,trigger.Data());</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>parse<sp/>composite<sp/>trigger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>subTriggers;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/>t-&gt;getTriggers(subTriggers);<sp/></highlight><highlight class="comment">//fills<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/>t-&gt;subTriggers<sp/>=<sp/>subTriggers;<sp/></highlight><highlight class="comment">//cache<sp/>the<sp/>vector<sp/>of<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/>calculateHistograms(t);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//save<sp/>trigger<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/>m_triggerObjs[trigger]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CP::TPileupReweighting::calculateHistograms(CompositeTrigger*<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>we<sp/>need<sp/>the<sp/>trigger<sp/>bits<sp/>for<sp/>this<sp/>trigger<sp/>for<sp/>this<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tbits<sp/>=<sp/>t-&gt;getBits(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//1.<sp/>Open<sp/>all<sp/>the<sp/>lumicalc<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//2.<sp/>For<sp/>each<sp/>entry<sp/>in<sp/>the<sp/>&apos;None&apos;<sp/>lumicalc<sp/>file,<sp/>lookup<sp/>the<sp/>run<sp/>and<sp/>lb<sp/>in<sp/>the<sp/>subTriggers,<sp/>and<sp/>get<sp/>the<sp/>prescales<sp/>(if<sp/>not<sp/>found,<sp/>assume<sp/>trigger<sp/>not<sp/>in,<sp/>prescale=infinity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//3.<sp/>perform<sp/>calculation<sp/>of<sp/>lumi<sp/>as:<sp/>Lumi*(1<sp/>-<sp/>Prod_triggers(1-1/prescale))<sp/>..<sp/>sum<sp/>this<sp/>up<sp/>into<sp/>the<sp/>output<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Note:<sp/>Put<sp/>each<sp/>lumi<sp/>into<sp/>the<sp/>period<sp/>that<sp/>contains<sp/>the<sp/>run<sp/>(<sp/>use<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/>TDirectory*<sp/>origDir<sp/>=<sp/>gDirectory;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;TString,<sp/>std::map&lt;Int_t,<sp/>std::map&lt;Int_t,<sp/>Float_t&gt;<sp/>&gt;<sp/>&gt;<sp/>prescaleByRunAndLbn;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Load<sp/>the<sp/>prescales<sp/>for<sp/>each<sp/>lumicalc<sp/>subTrigger<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;TString&gt;::iterator<sp/>it<sp/>=<sp/>t-&gt;subTriggers.begin();it!=t-&gt;subTriggers.end();++it)<sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;aa&quot;,&quot;subtrigger<sp/>%s<sp/>Int<sp/>lumi<sp/>is<sp/>%f&quot;,<sp/>it-&gt;Data(),<sp/>m_triggerPrimaryDistributions[*it][1]-&gt;Integral());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fileName<sp/>:<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ad8ff01dfb40bdd39d0d9ffa285bee4fc" kindref="member">m_lumicalcFiles</ref>[*it])<sp/>{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TFile*<sp/>rootFile<sp/>=<sp/>TFile::Open(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rootFile-&gt;IsZombie()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,fileName.Data());</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>toThrow<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Throwing<sp/>6:<sp/>Could<sp/>not<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal">;<sp/>toThrow<sp/>+=<sp/>fileName;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(toThrow);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>get<sp/>the<sp/>the<sp/>known<sp/>TTrees<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TTree<sp/>*tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/></highlight><highlight class="stringliteral">&quot;LumiMetaData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//structure<sp/>expected<sp/>is<sp/>as<sp/>given<sp/>by<sp/>iLumiCalc:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>RunNbr,<sp/>AvergeInteractionPerXing,<sp/>IntLumi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/>runNbr=0;Float_t<sp/>ps1=0;Float_t<sp/>ps2=0;<sp/>Float_t<sp/>ps3=0;UInt_t<sp/>lbn=0;TBranch<sp/>*b_runNbr=0;TBranch<sp/>*b_L1Presc=0;TBranch<sp/>*b_L2Presc=0;TBranch<sp/>*b_L3Presc=0;TBranch<sp/>*b_lbn=0;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;RunNbr&quot;</highlight><highlight class="normal">,&amp;runNbr,&amp;b_runNbr)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>RunNbr<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>RunNbr<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;L1Presc&quot;</highlight><highlight class="normal">,&amp;ps1,&amp;b_L1Presc)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>L1Presc<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>L1Presc<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;L2Presc&quot;</highlight><highlight class="normal">,&amp;ps2,&amp;b_L2Presc)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>L2Presc<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>L2Presc<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;L3Presc&quot;</highlight><highlight class="normal">,&amp;ps3,&amp;b_L3Presc)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>L3Presc<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>L3Presc<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;LBStart&quot;</highlight><highlight class="normal">,&amp;lbn,&amp;b_lbn)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>LBStart<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>LBStart<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nEntries<sp/>=<sp/>tmp-&gt;GetEntries();</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i=0;i&lt;nEntries;i++)<sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_runNbr-&gt;GetEntry(i);b_L1Presc-&gt;GetEntry(i);b_L2Presc-&gt;GetEntry(i);b_L3Presc-&gt;GetEntry(i);b_lbn-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runNbr<sp/>+=<sp/>m_lumicalcRunNumberOffset;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//save<sp/>the<sp/>prescale<sp/>by<sp/>run<sp/>and<sp/>lbn<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(runNbr==215643)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debugging)<sp/>Info(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;prescale<sp/>in<sp/>[%d,%d]<sp/>=<sp/>%f<sp/>%f<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>runNbr,lbn,ps1,ps2,ps3);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps1&gt;0&amp;&amp;ps2&gt;0&amp;&amp;ps3&gt;0)<sp/>prescaleByRunAndLbn[*it][runNbr][lbn]<sp/>=<sp/>ps1*ps2*ps3;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>of<sp/>loop<sp/>over<sp/>lumicalc<sp/>files<sp/>for<sp/>this<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fileName<sp/>:<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ad8ff01dfb40bdd39d0d9ffa285bee4fc" kindref="member">m_lumicalcFiles</ref>[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">])<sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>data<sp/>ROOT<sp/>file<sp/>for<sp/>the<sp/>&apos;None&apos;<sp/>lumicalc<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile*<sp/>rootFile<sp/>=<sp/>TFile::Open(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rootFile-&gt;IsZombie()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,fileName.Data());</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>toThrow<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Throwing<sp/>6:<sp/>Could<sp/>not<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal">;<sp/>toThrow<sp/>+=<sp/>fileName;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(toThrow);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>get<sp/>the<sp/>the<sp/>known<sp/>TTrees<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TTree<sp/>*tmp<sp/>=<sp/>(TTree*)rootFile-&gt;Get(<sp/></highlight><highlight class="stringliteral">&quot;LumiMetaData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp)<sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//structure<sp/>expected<sp/>is<sp/>as<sp/>given<sp/>by<sp/>iLumiCalc:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>RunNbr,<sp/>AvergeInteractionPerXing,<sp/>IntLumi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/>runNbr=0;Float_t<sp/>intLumi=0;UInt_t<sp/>lbn=0;TBranch<sp/>*b_runNbr=0;TBranch<sp/>*b_intLumi=0;TBranch<sp/>*b_lbn=0;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>mu=0.;<sp/>TBranch<sp/>*b_mu=0;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;RunNbr&quot;</highlight><highlight class="normal">,&amp;runNbr,&amp;b_runNbr)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>RunNbr<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>RunNbr<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;AvergeInteractionPerXing&quot;</highlight><highlight class="normal">,&amp;mu,&amp;b_mu)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>AvergeInteractionPerXing<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>AvergeInteractionPerXing<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;IntLumi&quot;</highlight><highlight class="normal">,&amp;intLumi,&amp;b_intLumi)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>IntLumi<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>IntLumi<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;LBStart&quot;</highlight><highlight class="normal">,&amp;lbn,&amp;b_lbn)!=0)<sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>LBStart<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>LBStart<sp/>branch<sp/>in<sp/>Data<sp/>TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nEntries<sp/>=<sp/>tmp-&gt;GetEntries();</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>loop<sp/>ends<sp/>up<sp/>calling<sp/>the<sp/>triggerBeforePrescale<sp/>method<sp/>each<sp/>time,<sp/>but<sp/>this<sp/>should<sp/>hopefully<sp/>stop<sp/>once<sp/>the<sp/>loading<sp/>is<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i=0;i&lt;nEntries;i++)<sp/>{</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_runNbr-&gt;GetEntry(i);b_intLumi-&gt;GetEntry(i);b_mu-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_lbn-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runNbr<sp/>+=<sp/>m_lumicalcRunNumberOffset;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>each<sp/>subtrigger,<sp/>lookup<sp/>prescale,<sp/>and<sp/>calculate<sp/>pFactor<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>pFactor(1);</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(std::vector&lt;TString&gt;::iterator<sp/>it<sp/>=<sp/>subTriggers.begin();it!=subTriggers.end();++it)<sp/>{</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(prescaleByRunAndLbn[*it][runNbr].find(lbn)<sp/>!=<sp/>prescaleByRunAndLbn[*it][runNbr].end())<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFactor<sp/>*=<sp/>(1.<sp/>-<sp/>1./prescaleByRunAndLbn[*it][runNbr][lbn]);</highlight></codeline>
<codeline lineno="1967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1968"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFactor<sp/>=<sp/>1.<sp/>-<sp/>pFactor;</highlight></codeline>
<codeline lineno="1970"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pFactor<sp/>=<sp/>t-&gt;eval(prescaleByRunAndLbn,runNbr,lbn,</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;...&quot;,&quot;prescale<sp/>in<sp/>[%d,%d]<sp/>=<sp/>%f&quot;,<sp/>runNbr,lbn,1./pFactor);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>m_emptyHistogram-&gt;FindFixBin(mu*m_dataScaleFactorX);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>into<sp/>all<sp/>periods<sp/>that<sp/>contain<sp/>this<sp/>runNbr<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>m_periods)<sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p.first<sp/>!=<sp/>p.second-&gt;id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//skips<sp/>remappings<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p.second-&gt;contains(runNbr))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;long,TH1D*&gt;&amp;<sp/>triggerHists<sp/>=<sp/>t-&gt;triggerHists[p.second-&gt;id];</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(triggerHists.find(tbits)<sp/>==<sp/>triggerHists.end())<sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggerHists[tbits]<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1D*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(CloneEmptyHistogram(p.first,-1));</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debugging)<sp/>Info(</highlight><highlight class="stringliteral">&quot;CalculatePrescaledLuminosityHistograms&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Created<sp/>Data<sp/>Weight<sp/>Histogram<sp/>for<sp/>[%s,%d,%ld]&quot;</highlight><highlight class="normal">,t-&gt;val.Data(),p.first,<sp/>tbits);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>we<sp/>were<sp/>about<sp/>to<sp/>fill<sp/>a<sp/>bad<sp/>bin<sp/>...<sp/>if<sp/>we<sp/>are,<sp/>we<sp/>either<sp/>skipp<sp/>the<sp/>fill<sp/>(unrep<sp/>action=1)<sp/>or<sp/>redirect<sp/>(unrep<sp/>action=3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(m_unrepresentedDataAction==1)<sp/>&amp;&amp;<sp/>p.second-&gt;inputBinRedirect[bin]!=bin)<sp/>{<sp/>}<sp/></highlight><highlight class="comment">//do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_unrepresentedDataAction==3<sp/>)<sp/>{triggerHists[tbits]-&gt;Fill(triggerHists[tbits]-&gt;GetBinCenter(p.second-&gt;inputBinRedirect[bin]),<sp/>intLumi*pFactor);}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>triggerHists[tbits]-&gt;Fill(mu*m_dataScaleFactorX,intLumi*pFactor);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rootFile;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>loop<sp/>over<sp/>unprescaled<sp/>lumicalc<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Info(&quot;aa&quot;,&quot;Int<sp/>lumi<sp/>is<sp/>%f&quot;,<sp/>m_triggerPrimaryDistributions[trigger][1]-&gt;Integral());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>to<sp/>the<sp/>original<sp/>ROOT<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/>gDirectory<sp/>=<sp/>origDir;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><ref refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" kindref="compound">CP::TPileupReweighting::CompositeTrigger</ref>*<sp/>CP::TPileupReweighting::makeTrigger(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debugging)<sp/>Info(</highlight><highlight class="stringliteral">&quot;makeTrigger&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Doing<sp/>%s&quot;</highlight><highlight class="normal">,s.Data());</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>first<sp/>operand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/>TString<sp/>oper1;<sp/>CompositeTrigger*<sp/>cOper1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s.BeginsWith(</highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>closing<sp/>bracket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bCounter=1;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bCounter!=0<sp/>&amp;&amp;<sp/>i&lt;=s.Length())<sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(i)==</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">)<sp/>bCounter++;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(i)==</highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)<sp/>bCounter--;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bCounter!=0)<sp/>{<sp/>Error(</highlight><highlight class="stringliteral">&quot;makeTrigger&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Missing<sp/>closing<sp/>bracket&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oper1<sp/>=<sp/>s(1,i-2);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==s.Length()+1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>makeTrigger(oper1);<sp/></highlight><highlight class="comment">//meainingless<sp/>brackets,<sp/>just<sp/>return<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{cOper1<sp/>=<sp/>makeTrigger(oper1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cOper1==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>second<sp/>operand.<sp/>Do<sp/>this<sp/>by<sp/>finding<sp/>the<sp/>first<sp/>operation<sp/>at<sp/>this<sp/>level.<sp/>if<sp/>cannot<sp/>find,<sp/>then<sp/>just<sp/>set<sp/>val</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bCounter=0;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op=0;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i&lt;=s.Length())<sp/>{</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(i)==</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">)<sp/>bCounter++;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(i)==</highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)<sp/>bCounter--;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(i)==</highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>bCounter==0)<sp/>{<sp/>op=2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(i)==</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>bCounter==0)<sp/>{<sp/>op=1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(op==0)<sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_lumicalcFiles.find(s)==m_lumicalcFiles.end())<sp/>{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>subTrigger<sp/>%s&quot;</highlight><highlight class="normal">,s.Data());</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cOper1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cOper1;<sp/></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CompositeTrigger*<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompositeTrigger;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;op=op;out-&gt;val<sp/>=<sp/>s;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="comment">//just<sp/>a<sp/>value<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/>CompositeTrigger*<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompositeTrigger;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/>out-&gt;op=op;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(op==1)<sp/>{<sp/></highlight><highlight class="comment">//an<sp/>OR<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cOper1)<sp/>out-&gt;trig1=cOper1;<sp/><sp/></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{oper1=s(0,i);<sp/>out-&gt;trig1=makeTrigger(oper1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out-&gt;trig1==0)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>oper2<sp/>=<sp/>s(i+1,s.Length());<sp/>out-&gt;trig2<sp/>=<sp/>makeTrigger(oper2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out-&gt;trig2==0)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//got<sp/>here,<sp/>must<sp/>be<sp/>an<sp/>AND<sp/>keep<sp/>going<sp/>until<sp/>we<sp/>hit<sp/>an<sp/>OR<sp/>at<sp/>this<sp/>level,<sp/>then<sp/>make<sp/>all<sp/>that<sp/>the<sp/>first<sp/>operand<sp/>(delete<sp/>cOper<sp/>if<sp/>necessary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=i;bCounter=0;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j&lt;=s.Length())<sp/>{</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(j)==</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">)<sp/>bCounter++;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(j)==</highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)<sp/>bCounter--;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s(j)==</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>bCounter==0)<sp/>{<sp/>op=1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j==s.Length()+1<sp/>&amp;&amp;<sp/>op==2)<sp/>{<sp/></highlight><highlight class="comment">//no<sp/>more<sp/>OR<sp/>found,<sp/>set<sp/>oper2<sp/>to<sp/>remainder<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cOper1)<sp/>out-&gt;trig1=cOper1;<sp/><sp/></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{oper1=s(0,i);<sp/>out-&gt;trig1=makeTrigger(oper1);<sp/>}</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>oper2<sp/>=<sp/>s(i+1,s.Length());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debugging)<sp/>Info(</highlight><highlight class="stringliteral">&quot;makeTrigger&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Found<sp/>&amp;<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,oper1.Data(),oper2.Data());</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;trig2<sp/>=<sp/>makeTrigger(oper2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out-&gt;trig2==0)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(op==1)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//found<sp/>an<sp/>OR,<sp/>set<sp/>oper1<sp/>to<sp/>everything<sp/>up<sp/>to<sp/>this<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oper1<sp/>=<sp/>s(0,j);<sp/>TString<sp/>oper2<sp/>=<sp/>s(j+1,s.Length());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_debugging)<sp/>Info(</highlight><highlight class="stringliteral">&quot;makeTrigger&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Found<sp/>&amp;<sp/>then<sp/>|<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,oper1.Data(),oper2.Data());</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cOper1)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cOper1;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;op=op;<sp/></highlight><highlight class="comment">//updates<sp/>to<sp/>an<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;trig1=makeTrigger(oper1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out-&gt;trig1==0)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;trig2=makeTrigger(oper2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out-&gt;trig2==0)<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>out;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}<sp/></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;makeTrigger&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Should<sp/>never<sp/>have<sp/>got<sp/>here!,<sp/>but<sp/>did<sp/>with<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>s.Data());</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/Root/TPileupReweighting.cxx"/>
  </compounddef>
</doxygen>
