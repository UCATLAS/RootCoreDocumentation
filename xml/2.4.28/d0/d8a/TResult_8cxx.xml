<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/d8a/TResult_8cxx" kind="file">
    <compoundname>TResult.cxx</compoundname>
    <includes refid="de/d64/TResult_8h" local="yes">PATCore/TResult.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">utility</includes>
    <includes local="no">map</includes>
    <includes local="no">iostream</includes>
    <includes local="no">TString.h</includes>
    <incdepgraph>
      <node id="224899">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx</label>
        <link refid="TResult.cxx"/>
        <childnode refid="224900" relation="include">
        </childnode>
        <childnode refid="224904" relation="include">
        </childnode>
        <childnode refid="224905" relation="include">
        </childnode>
        <childnode refid="224902" relation="include">
        </childnode>
        <childnode refid="224906" relation="include">
        </childnode>
        <childnode refid="224901" relation="include">
        </childnode>
      </node>
      <node id="224902">
        <label>map</label>
      </node>
      <node id="224903">
        <label>vector</label>
      </node>
      <node id="224905">
        <label>utility</label>
      </node>
      <node id="224900">
        <label>PATCore/TResult.h</label>
        <link refid="de/d64/TResult_8h_source"/>
        <childnode refid="224901" relation="include">
        </childnode>
        <childnode refid="224902" relation="include">
        </childnode>
        <childnode refid="224903" relation="include">
        </childnode>
      </node>
      <node id="224904">
        <label>math.h</label>
      </node>
      <node id="224906">
        <label>iostream</label>
      </node>
      <node id="224901">
        <label>TString.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Name:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TResult</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Author:<sp/><sp/><sp/><sp/><sp/><sp/>Karsten<sp/>Koeneke<sp/>(CERN)</highlight></codeline>
<codeline lineno="6"><highlight class="comment">Created:<sp/><sp/><sp/><sp/><sp/>October<sp/>2011</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">Description:<sp/>Object<sp/>to<sp/>encode<sp/>the<sp/>result<sp/>of<sp/>efficiency/scale<sp/>factor/resolution<sp/>calculation</highlight></codeline>
<codeline lineno="9"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class&apos;<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PATCore/TResult.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="d1/d94/classRoot_1_1TResult_1ae02bfe6b3b46800571a72b6f05b97f7c" kindref="member">Root::TResult::TResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>m_name(name),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>m_defaultResult(0.0),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>m_result(),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>m_resultMap(),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>m_emptyString(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>Constructor:<sp/>DO<sp/>NOT<sp/>COPY<sp/>IT!<sp/>It<sp/>is<sp/>expensive<sp/>to<sp/>copy!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="d1/d94/classRoot_1_1TResult_1ae02bfe6b3b46800571a72b6f05b97f7c" kindref="member">Root::TResult::TResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d7c/classTResult" kindref="compound" tooltip="Object to encode the result of retrieving efficiencies, scale factors,...">TResult</ref>&amp;<sp/>parent)<sp/>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>m_defaultResult(<sp/>parent.m_defaultResult<sp/>),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>m_result(<sp/>parent.m_result<sp/>),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>m_resultMap(<sp/>parent.m_resultMap<sp/>),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>m_emptyString(<sp/>parent.m_emptyString<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>assignment<sp/>operator:<sp/>DO<sp/>NOT<sp/>COPY<sp/>IT!<sp/>It<sp/>is<sp/>expensive<sp/>to<sp/>copy!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">Root::TResult</ref>&amp;<sp/><ref refid="d1/d94/classRoot_1_1TResult_1a4cd008c4a7238489e77ed245a3f34cbb" kindref="member">Root::TResult::operator= </ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d7c/classTResult" kindref="compound" tooltip="Object to encode the result of retrieving efficiencies, scale factors,...">TResult</ref>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>self-assignment<sp/>by<sp/>comparing<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;rhs)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_defaultResult<sp/>=<sp/>rhs.m_defaultResult;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>m_result<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rhs.m_result;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>m_resultMap<sp/><sp/><sp/><sp/><sp/>=<sp/>rhs.m_resultMap;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>m_emptyString<sp/><sp/><sp/>=<sp/>rhs.m_emptyString;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>existing<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="d1/d94/classRoot_1_1TResult_1a11d144d4803282e65ed122e5d8bb8ba0" kindref="member">Root::TResult::~TResult</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d1/d94/classRoot_1_1TResult_1ac29132f0031bb68c07df437abc47c839" kindref="member">Root::TResult::addResult</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>resultName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>resultDescription<sp/>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>result<sp/>to<sp/>the<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>std::pair&lt;<sp/>TString,<sp/>unsigned<sp/>int<sp/>&gt;<sp/>resultPair<sp/>=<sp/>std::make_pair(<sp/>resultDescription,<sp/>m_resultMap.size()<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>m_resultMap.insert(<sp/>std::make_pair(<sp/>resultName,<sp/>resultPair<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>default<sp/>result<sp/>entry<sp/>to<sp/>the<sp/>vector<sp/>of<sp/>results<sp/>(doubles)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>m_result.push_back(<sp/>m_defaultResult<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>position<sp/>of<sp/>the<sp/>newly<sp/>added<sp/>result<sp/>in<sp/>the<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(m_resultMap.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>description<sp/>of<sp/>a<sp/>result<sp/>based<sp/>on<sp/>the<sp/>result<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/><ref refid="d1/d94/classRoot_1_1TResult_1a05f178657b4a1828aad0c0bc3d9c8d37" kindref="member">Root::TResult::getResultName</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resultPosition<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="106"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>this<sp/>result<sp/>doesn&apos;t<sp/>exceed<sp/>the<sp/>number<sp/>of<sp/>defined<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>resultPosition<sp/>&gt;=<sp/>m_resultMap.size()<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_emptyString;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>over<sp/>the<sp/>map<sp/>and<sp/>find<sp/>the<sp/>right<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>std::map&lt;<sp/>TString,<sp/>std::pair&lt;<sp/>TString,<sp/>unsigned<sp/>int<sp/>&gt;<sp/>&gt;::const_iterator<sp/>it<sp/><sp/><sp/><sp/>=<sp/>m_resultMap.begin();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>std::map&lt;<sp/>TString,<sp/>std::pair&lt;<sp/>TString,<sp/>unsigned<sp/>int<sp/>&gt;<sp/>&gt;::const_iterator<sp/>itEnd<sp/>=<sp/>m_resultMap.end();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>it<sp/>!=<sp/>itEnd;<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(it-&gt;second).second<sp/>==<sp/>resultPosition<sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(it-&gt;first);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_emptyString;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>description<sp/>of<sp/>a<sp/>result<sp/>based<sp/>on<sp/>the<sp/>result<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/><ref refid="d1/d94/classRoot_1_1TResult_1a84843939b6bbe666df7990e906bda4a0" kindref="member">Root::TResult::getResultDescription</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resultPosition<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="134"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>this<sp/>result<sp/>doesn&apos;t<sp/>exceed<sp/>the<sp/>number<sp/>of<sp/>defined<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>resultPosition<sp/>&gt;=<sp/>m_resultMap.size()<sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_emptyString;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>over<sp/>the<sp/>map<sp/>and<sp/>find<sp/>the<sp/>right<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>std::map&lt;<sp/>TString,<sp/>std::pair&lt;<sp/>TString,<sp/>unsigned<sp/>int<sp/>&gt;<sp/>&gt;::const_iterator<sp/>it<sp/><sp/><sp/><sp/>=<sp/>m_resultMap.begin();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>std::map&lt;<sp/>TString,<sp/>std::pair&lt;<sp/>TString,<sp/>unsigned<sp/>int<sp/>&gt;<sp/>&gt;::const_iterator<sp/>itEnd<sp/>=<sp/>m_resultMap.end();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>it<sp/>!=<sp/>itEnd;<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(it-&gt;second).second<sp/>==<sp/>resultPosition<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(it-&gt;second).first;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_emptyString;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>description<sp/>of<sp/>a<sp/>result<sp/>based<sp/>on<sp/>the<sp/>result<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d94/classRoot_1_1TResult_1a2d5b3ffbbed3cf6c55f7a0a924975449" kindref="member">Root::TResult::setResultDescription</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resultPosition,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>resultDescription<sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>over<sp/>the<sp/>map<sp/>and<sp/>find<sp/>the<sp/>right<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>std::map&lt;<sp/>TString,<sp/>std::pair&lt;<sp/>TString,<sp/>unsigned<sp/>int<sp/>&gt;<sp/>&gt;::iterator<sp/>it<sp/><sp/><sp/><sp/>=<sp/>m_resultMap.begin();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>std::map&lt;<sp/>TString,<sp/>std::pair&lt;<sp/>TString,<sp/>unsigned<sp/>int<sp/>&gt;<sp/>&gt;::iterator<sp/>itEnd<sp/>=<sp/>m_resultMap.end();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>it<sp/>!=<sp/>itEnd;<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(it-&gt;second).second<sp/>==<sp/>resultPosition<sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((it-&gt;second).first)<sp/>=<sp/>resultDescription;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx"/>
  </compounddef>
</doxygen>
