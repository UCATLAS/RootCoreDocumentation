<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/de8/PackedParameters__test_8cxx" kind="file">
    <compoundname>PackedParameters_test.cxx</compoundname>
    <includes refid="d4/d43/PackedParameters_8h" local="yes">AthContainers/PackedParameters.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="74227">
        <label>limits</label>
      </node>
      <node id="74224">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="74225" relation="include">
        </childnode>
        <childnode refid="74226" relation="include">
        </childnode>
      </node>
      <node id="74228">
        <label>stdint.h</label>
      </node>
      <node id="74230">
        <label>cassert</label>
      </node>
      <node id="74225">
        <label>string</label>
      </node>
      <node id="74223">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="74224" relation="include">
        </childnode>
        <childnode refid="74227" relation="include">
        </childnode>
        <childnode refid="74228" relation="include">
        </childnode>
        <childnode refid="74229" relation="include">
        </childnode>
      </node>
      <node id="74229">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="74226">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="74231">
        <label>iostream</label>
      </node>
      <node id="74222">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx</label>
        <link refid="PackedParameters_test.cxx"/>
        <childnode refid="74223" relation="include">
        </childnode>
        <childnode refid="74230" relation="include">
        </childnode>
        <childnode refid="74231" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/de8/PackedParameters__test_8cxx_1a1440a7779ac56f47a3f355ce4a8c7da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test1</definition>
        <argsstring>()</argsstring>
        <name>test1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" bodystart="16" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="d0/de8/PackedParameters__test_8cxx_1a71f84f939146a14723ab0c2c0d32da79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testvalid</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>testvalid</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" line="132" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="d0/de8/PackedParameters__test_8cxx_1a0283886819c7c140a023582b7269e2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test2</definition>
        <argsstring>()</argsstring>
        <name>test2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" line="136" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" bodystart="135" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="d0/de8/PackedParameters__test_8cxx_1a6d0455dd5c30adda100e95f0423c786e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test3</definition>
        <argsstring>()</argsstring>
        <name>test3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" line="150" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" bodystart="149" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="d0/de8/PackedParameters__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" line="194" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx" bodystart="193" bodyend="199"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regression tests for PackedParameters. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Nov, 2014 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d43/PackedParameters_8h" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">AthContainers/PackedParameters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test1()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/>p1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>23);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2841715b42294fcde806e44b818a9d71" kindref="member" tooltip="Return the scale for floating-point numbers.">scale</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2f1971577699df4279cb2b0803cca255" kindref="member" tooltip="Additional flags describing the packing.">flags</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>());</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8b991c9260dfd8e8ecdb617d9b2b7d75" kindref="member" tooltip="Should floats be rounded during writing?">rounding</ref>());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/>p2<sp/>(27,<sp/>SG::PackedParameters::FLAG_IS_SIGNED);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>assert<sp/>(p2.nbits()<sp/>==<sp/>27);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>assert<sp/>(p2.nmantissa()<sp/>==<sp/>26);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>assert<sp/>(p2.scale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>assert<sp/>(p2.flags()<sp/>==<sp/>SG::PackedParameters::FLAG_IS_SIGNED);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>assert<sp/>(<sp/>p2.isSigned());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>assert<sp/>(!p2.isFloat());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>assert<sp/>(!p2.hasScale());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>assert<sp/>(!p2.rounding());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/>p3<sp/>(static_cast&lt;uint16_t&gt;(0));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>assert<sp/>(p3.nbits()<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>assert<sp/>(p3.nmantissa()<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>assert<sp/>(p3.scale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>assert<sp/>(!p3.isSigned());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>assert<sp/>(!p3.isFloat());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>assert<sp/>(!p3.hasScale());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>assert<sp/>(!p3.rounding());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/>p4<sp/>(static_cast&lt;int32_t&gt;(0));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>assert<sp/>(p4.nbits()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>assert<sp/>(p4.nmantissa()<sp/>==<sp/>23);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>assert<sp/>(p4.scale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>assert<sp/>(<sp/>p4.isSigned());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>assert<sp/>(!p4.isFloat());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>assert<sp/>(!p4.hasScale());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>assert<sp/>(!p4.rounding());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/>p5<sp/>(static_cast&lt;float&gt;(0));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>assert<sp/>(p5.nbits()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>assert<sp/>(p5.nmantissa()<sp/>==<sp/>23);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>assert<sp/>(p5.scale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>assert<sp/>(<sp/>p5.isSigned());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>assert<sp/>(<sp/>p5.isFloat());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>assert<sp/>(!p5.hasScale());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>assert<sp/>(!p5.rounding());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/>p6<sp/>(static_cast&lt;double&gt;(0));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>assert<sp/>(p6.nbits()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>assert<sp/>(p6.nmantissa()<sp/>==<sp/>23);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>assert<sp/>(p6.scale()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>assert<sp/>(<sp/>p6.isSigned());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>assert<sp/>(<sp/>p6.isFloat());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>assert<sp/>(!p6.hasScale());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>assert<sp/>(!p6.rounding());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a44550d4e5aea2dfec93e19913e65e9cb" kindref="member" tooltip="Set the number of bits to be used for each element.">setNbits</ref><sp/>(16));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a44550d4e5aea2dfec93e19913e65e9cb" kindref="member" tooltip="Set the number of bits to be used for each element.">setNbits</ref><sp/>(0));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a44550d4e5aea2dfec93e19913e65e9cb" kindref="member" tooltip="Set the number of bits to be used for each element.">setNbits</ref><sp/>(33));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a44550d4e5aea2dfec93e19913e65e9cb" kindref="member" tooltip="Set the number of bits to be used for each element.">setNbits</ref><sp/>(1));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c9c89c0fd8bc3247af0fce0e410c0b" kindref="member" tooltip="Set the signedness flag for the packed representation.">setSigned</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a44550d4e5aea2dfec93e19913e65e9cb" kindref="member" tooltip="Set the number of bits to be used for each element.">setNbits</ref><sp/>(7));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8f0db66e9e394f5623f42dd66463629f" kindref="member" tooltip="Set the number of mantissa bits used in the packed representation.">setNmantissa</ref><sp/>(7));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c9c89c0fd8bc3247af0fce0e410c0b" kindref="member" tooltip="Set the signedness flag for the packed representation.">setSigned</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>6);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c9c89c0fd8bc3247af0fce0e410c0b" kindref="member" tooltip="Set the signedness flag for the packed representation.">setSigned</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>6);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8f0db66e9e394f5623f42dd66463629f" kindref="member" tooltip="Set the number of mantissa bits used in the packed representation.">setNmantissa</ref><sp/>(0));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8f0db66e9e394f5623f42dd66463629f" kindref="member" tooltip="Set the number of mantissa bits used in the packed representation.">setNmantissa</ref><sp/>(8));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>6);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2841715b42294fcde806e44b818a9d71" kindref="member" tooltip="Return the scale for floating-point numbers.">scale</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aa85188c0b04fd4f53245f824e6d8e3aa" kindref="member" tooltip="Set the scale to use when packing floating-point data.">setScale</ref>(2));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2841715b42294fcde806e44b818a9d71" kindref="member" tooltip="Return the scale for floating-point numbers.">scale</ref>()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aa85188c0b04fd4f53245f824e6d8e3aa" kindref="member" tooltip="Set the scale to use when packing floating-point data.">setScale</ref>(1));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2841715b42294fcde806e44b818a9d71" kindref="member" tooltip="Return the scale for floating-point numbers.">scale</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aa85188c0b04fd4f53245f824e6d8e3aa" kindref="member" tooltip="Set the scale to use when packing floating-point data.">setScale</ref>(0));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2841715b42294fcde806e44b818a9d71" kindref="member" tooltip="Return the scale for floating-point numbers.">scale</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8b991c9260dfd8e8ecdb617d9b2b7d75" kindref="member" tooltip="Should floats be rounded during writing?">rounding</ref>());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a3f260dad30c53288316a60bde64225bb" kindref="member" tooltip="Set the rounding mode.">setRounding</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8b991c9260dfd8e8ecdb617d9b2b7d75" kindref="member" tooltip="Should floats be rounded during writing?">rounding</ref>());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a3f260dad30c53288316a60bde64225bb" kindref="member" tooltip="Set the rounding mode.">setRounding</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8b991c9260dfd8e8ecdb617d9b2b7d75" kindref="member" tooltip="Should floats be rounded during writing?">rounding</ref>());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a7ce48614e33a7cc69abbece8a6085eff" kindref="member" tooltip="Set the floating-point flag.">setFloat</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>assert<sp/>(p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a7ce48614e33a7cc69abbece8a6085eff" kindref="member" tooltip="Set the floating-point flag.">setFloat</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>assert<sp/>(!p1.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>());</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>testvalid<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters_1a00cad74348560687381e448c7780e757" kindref="member" tooltip="Test to see if option is a recognized packing option.">SG::PackedParameters::isValidOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(s,<sp/>0));</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test2()</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test2\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>assert<sp/>(testvalid<sp/>(</highlight><highlight class="stringliteral">&quot;nbits&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>assert<sp/>(testvalid<sp/>(</highlight><highlight class="stringliteral">&quot;nmantissa&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>assert<sp/>(testvalid<sp/>(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>assert<sp/>(testvalid<sp/>(</highlight><highlight class="stringliteral">&quot;signed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>assert<sp/>(testvalid<sp/>(</highlight><highlight class="stringliteral">&quot;rounding&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>assert<sp/>(testvalid<sp/>(</highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>assert<sp/>(!testvalid<sp/>(</highlight><highlight class="stringliteral">&quot;xxx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test3()</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test3\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/>p;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;nbits&quot;</highlight><highlight class="normal">,<sp/>17)));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>()<sp/>==<sp/>17);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;nbits&quot;</highlight><highlight class="normal">,<sp/>33)));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>17);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;nmantissa&quot;</highlight><highlight class="normal">,<sp/>13)));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>()<sp/>==<sp/>13);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;nmantissa&quot;</highlight><highlight class="normal">,<sp/>23)));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2841715b42294fcde806e44b818a9d71" kindref="member" tooltip="Return the scale for floating-point numbers.">scale</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>2)));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2841715b42294fcde806e44b818a9d71" kindref="member" tooltip="Return the scale for floating-point numbers.">scale</ref>()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>());</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;signed&quot;</highlight><highlight class="normal">,<sp/>1)));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;signed&quot;</highlight><highlight class="normal">,<sp/>0)));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ae9c63dc34ab78d75897b526a28518455" kindref="member" tooltip="Are elements being written as signed numbers?">isSigned</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8b991c9260dfd8e8ecdb617d9b2b7d75" kindref="member" tooltip="Should floats be rounded during writing?">rounding</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;rounding&quot;</highlight><highlight class="normal">,<sp/>1)));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8b991c9260dfd8e8ecdb617d9b2b7d75" kindref="member" tooltip="Should floats be rounded during writing?">rounding</ref>());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;rounding&quot;</highlight><highlight class="normal">,<sp/>0)));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8b991c9260dfd8e8ecdb617d9b2b7d75" kindref="member" tooltip="Should floats be rounded during writing?">rounding</ref>());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">,<sp/>1)));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>assert<sp/>(p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">,<sp/>0)));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>assert<sp/>(!p.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a53a1b2a959f1f54d131e82fefa7cc947" kindref="member" tooltip="Set a packing option.  option The option to set.">setOption</ref><sp/>(<ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;xxx&quot;</highlight><highlight class="normal">,<sp/>1)));</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>test1();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>test2();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>test3();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/PackedParameters_test.cxx"/>
  </compounddef>
</doxygen>
