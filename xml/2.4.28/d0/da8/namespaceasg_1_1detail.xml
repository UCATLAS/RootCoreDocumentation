<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/da8/namespaceasg_1_1detail" kind="namespace">
    <compoundname>asg::detail</compoundname>
    <innerclass refid="da/d8e/classasg_1_1detail_1_1AnaToolCleanup" prot="public">asg::detail::AnaToolCleanup</innerclass>
    <innerclass refid="d0/de6/classasg_1_1detail_1_1AnaToolProperty" prot="public">asg::detail::AnaToolProperty</innerclass>
    <innerclass refid="de/dcb/classasg_1_1detail_1_1AnaToolConfig" prot="public">asg::detail::AnaToolConfig</innerclass>
    <innerclass refid="df/dff/classasg_1_1detail_1_1AnaToolShare" prot="public">asg::detail::AnaToolShare</innerclass>
    <innerclass refid="d2/d02/classasg_1_1detail_1_1AnaToolShareList" prot="public">asg::detail::AnaToolShareList</innerclass>
    <innerclass refid="d0/db7/structasg_1_1detail_1_1PropertyValueManager" prot="public">asg::detail::PropertyValueManager</innerclass>
    <innerclass refid="d0/d06/classasg_1_1detail_1_1AnaToolPropertyValueAthena" prot="public">asg::detail::AnaToolPropertyValueAthena</innerclass>
    <innerclass refid="df/dad/classasg_1_1detail_1_1AnaToolPropertyPrivateTool" prot="public">asg::detail::AnaToolPropertyPrivateTool</innerclass>
    <innerclass refid="df/d35/classasg_1_1detail_1_1AnaToolPropertyCopyTool" prot="public">asg::detail::AnaToolPropertyCopyTool</innerclass>
    <innerclass refid="db/d95/classasg_1_1detail_1_1AnaToolPropertyPublicTool" prot="public">asg::detail::AnaToolPropertyPublicTool</innerclass>
    <innerclass refid="d4/dd6/structasg_1_1detail_1_1ToolRefManager" prot="public">asg::detail::ToolRefManager</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="d0/da8/namespaceasg_1_1detail_1a97a8985d6d28617e9a6a12a197cd262c" prot="public" static="no">
        <name>AnaToolHandleMode</name>
        <enumvalue id="d0/da8/namespaceasg_1_1detail_1a97a8985d6d28617e9a6a12a197cd262ca56f66fa7f804acb6d0c17d66b4b35f0e" prot="public">
          <name>EMPTY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>do not create a tool</para><para>this can be either explicitly an empty tool handle set by the user, or an AnaToolHandle that was never configured in the first place. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/da8/namespaceasg_1_1detail_1a97a8985d6d28617e9a6a12a197cd262ca03bb45d5fbee99b5d49396fbd263cc23" prot="public">
          <name>CREATE_PRIVATE</name>
          <briefdescription>
<para>create a private tool normally </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/da8/namespaceasg_1_1detail_1a97a8985d6d28617e9a6a12a197cd262caca4124abaed60d8ce172ee5ec92d15c1" prot="public">
          <name>CREATE_SHARED</name>
          <briefdescription>
<para>create a shared tool normally </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/da8/namespaceasg_1_1detail_1a97a8985d6d28617e9a6a12a197cd262cae028d126e25c3014cb8a0f087ebd85a8" prot="public">
          <name>RETRIEVE_SHARED</name>
          <briefdescription>
<para>retrieve a shared tool </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/da8/namespaceasg_1_1detail_1a97a8985d6d28617e9a6a12a197cd262ca835a949dfded88a3085420fdc580e4af" prot="public">
          <name>USER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>retrieve a tool from the user tool handle</para><para>this can still refer to a tool handle that is empty, though usually it will point to an actual tool </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>the mode with which an AnaToolHandle object is initialized </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.h" line="331" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.h" bodystart="330" bodyend="353"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1aa321ac927c1d0b9e9b0a12e3768f055e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::detail::copyPropertiesInCatalogue</definition>
        <argsstring>(const std::string &amp;fromTool, const std::string &amp;toTool)</argsstring>
        <name>copyPropertiesInCatalogue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fromTool</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>toTool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.icc" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/AnaToolHandle.cxx" bodystart="256" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1ac96106767aa18cec4dc120ec7f8dc8b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::detail::hasPropertiesInCatalogue</definition>
        <argsstring>(const std::string &amp;toolName)</argsstring>
        <name>hasPropertiesInCatalogue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>toolName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.icc" line="20" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/AnaToolHandle.cxx" bodystart="196" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1a773f2f358abfda937f3d73bac9096e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::detail::addPropertyToCatalogue</definition>
        <argsstring>(const std::string &amp;toolName, const std::string &amp;property, const std::string &amp;val)</argsstring>
        <name>addPropertyToCatalogue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>toolName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.icc" line="21" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/AnaToolHandle.cxx" bodystart="207" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1a6a418c3e2f6f8e178a843e27c7fe233f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::detail::removePropertyFromCatalogue</definition>
        <argsstring>(const std::string &amp;toolName, const std::string &amp;property)</argsstring>
        <name>removePropertyFromCatalogue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>toolName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.icc" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/AnaToolHandle.cxx" bodystart="224" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1a06bc154ed4d588b3ebb505c1ba580d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::detail::toolExists</definition>
        <argsstring>(const std::string &amp;fullName, interfaceType_t *&amp;tool)</argsstring>
        <name>toolExists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fullName</declname>
        </param>
        <param>
          <type>interfaceType_t *&amp;</type>
          <declname>tool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.icc" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/AnaToolHandle.cxx" bodystart="237" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1a8e9d9961fbb9adce32b25c8b44cfc6ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>StatusCode</type>
        <definition>StatusCode asg::detail::toolHandleCast</definition>
        <argsstring>(ToolHandle&lt; T1 &gt; &amp;to, ToolHandle&lt; T2 &gt; &amp;from)</argsstring>
        <name>toolHandleCast</name>
        <param>
          <type>ToolHandle&lt; T1 &gt; &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>ToolHandle&lt; T2 &gt; &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>do a checked cast from one ToolHandle interface to another </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>interface not supported for tool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.icc" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.icc" bodystart="36" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1a97de8c608537dd3f924b1292094b5407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMessageSvc *</type>
        <definition>IMessageSvc * asg::detail::getMessageSvcAthena</definition>
        <argsstring>()</argsstring>
        <name>getMessageSvcAthena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref> message service TODO: Look into using AthenaKernel/MsgStreamMember.h </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="259" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/MessageCheck.cxx" bodystart="37" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1a624b91bfd3aa00ccddbab178a379683d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asg::detail::throw_check_fail</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>throw_check_fail</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>throw an error for a failed check </para>        </briefdescription>
        <detaileddescription>
<para>the main reason to have a separate function for this is to cut down on the number of includes in the header file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="266" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/MessageCheck.cxx" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1a1ca008fe2d7020f374e96733899adbde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool asg::detail::matchesRegex</definition>
        <argsstring>(const std::string &amp;regex, const std::string &amp;str)</argsstring>
        <name>matchesRegex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>regex</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>return whether str matches regex </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II<linebreak/>
 expression error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/UnitTest.cxx" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="d0/da8/namespaceasg_1_1detail_1ab9ccdd659961dd9a28c92e37d896eb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::detail::factoryExists</definition>
        <argsstring>(const std::string &amp;type)</argsstring>
        <name>factoryExists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/AnaToolHandle.cxx" line="249" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/AnaToolHandle.cxx" bodystart="249" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.h" line="38"/>
  </compounddef>
</doxygen>
