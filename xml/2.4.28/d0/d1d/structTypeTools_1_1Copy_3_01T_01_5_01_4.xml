<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/d1d/structTypeTools_1_1Copy_3_01T_01_5_01_4" kind="struct" prot="public">
    <compoundname>TypeTools::Copy&lt; T * &gt;</compoundname>
    <includes refid="dd/db1/TypeTools_8h" local="no">TypeTools.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d0/d1d/structTypeTools_1_1Copy_3_01T_01_5_01_4_1a14d25f78dfd4b60f4bcf75c829c89d38" prot="public" static="no">
        <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
        <definition>typedef const T* TypeTools::Copy&lt; T * &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Type of the elements in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d1d/structTypeTools_1_1Copy_3_01T_01_5_01_4_1aab50bc272fddcbf487a679487733ea1f" prot="public" static="no">
        <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
        <definition>typedef const T* TypeTools::Copy&lt; T * &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Constant reference to an element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d1d/structTypeTools_1_1Copy_3_01T_01_5_01_4_1adb413c1e4f58a09fedc249c06151a856" prot="public" static="no">
        <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *const *</type>
        <definition>typedef const T* const* TypeTools::Copy&lt; T * &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>Constant pointer to an element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Specialisation for containers storing pointers </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" bodystart="27" bodyend="34"/>
    <listofallmembers>
      <member refid="d0/d1d/structTypeTools_1_1Copy_3_01T_01_5_01_4_1adb413c1e4f58a09fedc249c06151a856" prot="public" virt="non-virtual"><scope>TypeTools::Copy&lt; T * &gt;</scope><name>const_pointer</name></member>
      <member refid="d0/d1d/structTypeTools_1_1Copy_3_01T_01_5_01_4_1aab50bc272fddcbf487a679487733ea1f" prot="public" virt="non-virtual"><scope>TypeTools::Copy&lt; T * &gt;</scope><name>const_reference</name></member>
      <member refid="d0/d1d/structTypeTools_1_1Copy_3_01T_01_5_01_4_1a14d25f78dfd4b60f4bcf75c829c89d38" prot="public" virt="non-virtual"><scope>TypeTools::Copy&lt; T * &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
