<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/d6a/binomial-heap_8h" kind="file">
    <compoundname>binomial-heap.h</compoundname>
    <includedby refid="d7/d3a/libcalg_8h" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/libcalg.h</includedby>
    <invincdepgraph>
      <node id="108134">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h</label>
        <link refid="binomial-heap.h"/>
        <childnode refid="108135" relation="include">
        </childnode>
      </node>
      <node id="108135">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/libcalg.h</label>
        <link refid="d7/d3a/libcalg_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d0/d6a/binomial-heap_8h_1ad382d408292812d4148d3a2cb207c787" prot="public" static="no">
        <name>BINOMIAL_HEAP_NULL</name>
        <initializer>((void *) 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> null <ref refid="d0/d6a/binomial-heap_8h_1ab45f6a0783e20d9c3641d02175e785d6" kindref="member">BinomialHeapValue</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84" prot="public" static="no">
        <name>BinomialHeapType</name>
        <enumvalue id="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84aa7b70f6d9ad8c7a26cf9c0afb78c9b7e" prot="public">
          <name>BINOMIAL_HEAP_TYPE_MIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> minimum heap. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84a33b934527934428084ab32fd2ad01322" prot="public">
          <name>BINOMIAL_HEAP_TYPE_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> maximum heap. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Heap type. If a heap is a min heap (<ref refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84aa7b70f6d9ad8c7a26cf9c0afb78c9b7e" kindref="member">BINOMIAL_HEAP_TYPE_MIN</ref>), the values with the lowest priority are stored at the top of the heap and will be the first returned. If a heap is a max heap (<ref refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84a33b934527934428084ab32fd2ad01322" kindref="member">BINOMIAL_HEAP_TYPE_MAX</ref>), the values with the greatest priority are stored at the top of the heap. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" bodystart="53" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d0/d6a/binomial-heap_8h_1ab45f6a0783e20d9c3641d02175e785d6" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* BinomialHeapValue</definition>
        <argsstring></argsstring>
        <name>BinomialHeapValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> value stored in a <ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d6a/binomial-heap_8h_1a588358b0435f33ab12dbe39884646238" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* BinomialHeapCompareFunc)(BinomialHeapValue value1, BinomialHeapValue value2)</definition>
        <argsstring>)(BinomialHeapValue value1, BinomialHeapValue value2)</argsstring>
        <name>BinomialHeapCompareFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of function used to compare values in a binomial heap.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> negative number if value1 is less than value2, a positive number if value1 is greater than value2, zero if the two are equal. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="86" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" prot="public" static="no">
        <type>struct _BinomialHeap</type>
        <definition>typedef struct _BinomialHeap BinomialHeap</definition>
        <argsstring></argsstring>
        <name>BinomialHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> binomial heap data structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/d6a/binomial-heap_8h_1a2fb09ae421e9c1235c3c4e33fedb7e32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref> *</type>
        <definition>BinomialHeap* binomial_heap_new</definition>
        <argsstring>(BinomialHeapType heap_type, BinomialHeapCompareFunc compare_func)</argsstring>
        <name>binomial_heap_new</name>
        <param>
          <type><ref refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84" kindref="member">BinomialHeapType</ref></type>
          <declname>heap_type</declname>
        </param>
        <param>
          <type><ref refid="d0/d6a/binomial-heap_8h_1a588358b0435f33ab12dbe39884646238" kindref="member">BinomialHeapCompareFunc</ref></type>
          <declname>compare_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>heap_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of heap: min heap or max heap. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a function used to compare the priority of values in the heap. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> new binomial heap, or NULL if it was not possible to allocate the memory. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="d0/d6a/binomial-heap_8h_1af01919a206290a9a1b4dc77d3f825481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binomial_heap_free</definition>
        <argsstring>(BinomialHeap *heap)</argsstring>
        <name>binomial_heap_free</name>
        <param>
          <type><ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref> *</type>
          <declname>heap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a binomial heap.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>heap</parametername>
</parameternamelist>
<parameterdescription>
<para>The heap to destroy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="d0/d6a/binomial-heap_8h_1adbed2108b1e6f9865cdee56fde53da36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int binomial_heap_insert</definition>
        <argsstring>(BinomialHeap *heap, BinomialHeapValue value)</argsstring>
        <name>binomial_heap_insert</name>
        <param>
          <type><ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref> *</type>
          <declname>heap</declname>
        </param>
        <param>
          <type><ref refid="d0/d6a/binomial-heap_8h_1ab45f6a0783e20d9c3641d02175e785d6" kindref="member">BinomialHeapValue</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a value into a binomial heap.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>heap</parametername>
</parameternamelist>
<parameterdescription>
<para>The heap to insert into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero if the entry was added, or zero if it was not possible to allocate memory for the new entry. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="d0/d6a/binomial-heap_8h_1a06fa7608f0a0d37d872d7aa2c753d726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d6a/binomial-heap_8h_1ab45f6a0783e20d9c3641d02175e785d6" kindref="member">BinomialHeapValue</ref></type>
        <definition>BinomialHeapValue binomial_heap_pop</definition>
        <argsstring>(BinomialHeap *heap)</argsstring>
        <name>binomial_heap_pop</name>
        <param>
          <type><ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref> *</type>
          <declname>heap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the first value from a binomial heap.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>heap</parametername>
</parameternamelist>
<parameterdescription>
<para>The heap. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The first value in the heap, or <ref refid="d0/d6a/binomial-heap_8h_1ad382d408292812d4148d3a2cb207c787" kindref="member">BINOMIAL_HEAP_NULL</ref> if the heap is empty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="135"/>
      </memberdef>
      <memberdef kind="function" id="d0/d6a/binomial-heap_8h_1a9770ffe4fe1d8cab6cf774bd2a19f228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int binomial_heap_num_entries</definition>
        <argsstring>(BinomialHeap *heap)</argsstring>
        <name>binomial_heap_num_entries</name>
        <param>
          <type><ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref> *</type>
          <declname>heap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the number of values stored in a binomial heap.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>heap</parametername>
</parameternamelist>
<parameterdescription>
<para>The heap. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of values in the heap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h" line="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Binomial heap. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> binomial heap is a heap data structure implemented using a binomial tree. In a heap, values are ordered by priority.</para><para>To create a binomial heap, use <ref refid="d0/d6a/binomial-heap_8h_1a2fb09ae421e9c1235c3c4e33fedb7e32" kindref="member">binomial_heap_new</ref>. To destroy a binomial heap, use <ref refid="d0/d6a/binomial-heap_8h_1af01919a206290a9a1b4dc77d3f825481" kindref="member">binomial_heap_free</ref>.</para><para>To insert a value into a binomial heap, use <ref refid="d0/d6a/binomial-heap_8h_1adbed2108b1e6f9865cdee56fde53da36" kindref="member">binomial_heap_insert</ref>.</para><para>To remove the first value from a binomial heap, use <ref refid="d0/d6a/binomial-heap_8h_1a06fa7608f0a0d37d872d7aa2c753d726" kindref="member">binomial_heap_pop</ref>. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(c)<sp/>2005-2008,<sp/>Simon<sp/>Howard</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment">for<sp/>any<sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">that<sp/>the<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">in<sp/>all<sp/>copies.<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment">WARRANTIES<sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment">AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES<sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment">NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment">CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor">#ifndef<sp/>ALGORITHM_BINOMIAL_HEAP_H</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ALGORITHM_BINOMIAL_HEAP_H</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="53" refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56" refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84aa7b70f6d9ad8c7a26cf9c0afb78c9b7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84aa7b70f6d9ad8c7a26cf9c0afb78c9b7e" kindref="member">BINOMIAL_HEAP_TYPE_MIN</ref>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84a33b934527934428084ab32fd2ad01322" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84a33b934527934428084ab32fd2ad01322" kindref="member">BINOMIAL_HEAP_TYPE_MAX</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/><ref refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84" kindref="member">BinomialHeapType</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="d0/d6a/binomial-heap_8h_1ab45f6a0783e20d9c3641d02175e785d6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="d0/d6a/binomial-heap_8h_1ab45f6a0783e20d9c3641d02175e785d6" kindref="member">BinomialHeapValue</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="d0/d6a/binomial-heap_8h_1ad382d408292812d4148d3a2cb207c787" refkind="member"><highlight class="preprocessor">#define<sp/>BINOMIAL_HEAP_NULL<sp/>((void<sp/>*)<sp/>0)</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="85" refid="d0/d6a/binomial-heap_8h_1a588358b0435f33ab12dbe39884646238" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="d0/d6a/binomial-heap_8h_1a588358b0435f33ab12dbe39884646238" kindref="member">BinomialHeapCompareFunc</ref>)(BinomialHeapValue<sp/>value1,<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinomialHeapValue<sp/>value2);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_BinomialHeap<sp/><ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref><sp/>*<ref refid="d0/d6a/binomial-heap_8h_1a2fb09ae421e9c1235c3c4e33fedb7e32" kindref="member">binomial_heap_new</ref>(<ref refid="d0/d6a/binomial-heap_8h_1a916c20f243cca4d64951cc8eb0903c84" kindref="member">BinomialHeapType</ref><sp/>heap_type,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d6a/binomial-heap_8h_1a588358b0435f33ab12dbe39884646238" kindref="member">BinomialHeapCompareFunc</ref><sp/>compare_func);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d6a/binomial-heap_8h_1af01919a206290a9a1b4dc77d3f825481" kindref="member">binomial_heap_free</ref>(<ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref><sp/>*heap);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d6a/binomial-heap_8h_1adbed2108b1e6f9865cdee56fde53da36" kindref="member">binomial_heap_insert</ref>(<ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref><sp/>*heap,<sp/>BinomialHeapValue<sp/>value);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">BinomialHeapValue<sp/><ref refid="d0/d6a/binomial-heap_8h_1a06fa7608f0a0d37d872d7aa2c753d726" kindref="member">binomial_heap_pop</ref>(<ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref><sp/>*heap);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d6a/binomial-heap_8h_1a9770ffe4fe1d8cab6cf774bd2a19f228" kindref="member">binomial_heap_num_entries</ref>(<ref refid="d0/d6a/binomial-heap_8h_1a36e6d365c4b95853f6f424a7207ba091" kindref="member">BinomialHeap</ref><sp/>*heap);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>ALGORITHM_BINOMIAL_HEAP_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/binomial-heap.h"/>
  </compounddef>
</doxygen>
