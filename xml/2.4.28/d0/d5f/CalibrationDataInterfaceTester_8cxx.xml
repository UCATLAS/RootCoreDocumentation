<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/d5f/CalibrationDataInterfaceTester_8cxx" kind="file">
    <compoundname>CalibrationDataInterfaceTester.cxx</compoundname>
    <includes refid="d3/d06/CalibrationDataInterfaceTester_8h" local="yes">CalibrationDataInterface/CalibrationDataInterfaceTester.h</includes>
    <includes local="yes">JetEvent/JetCollection.h</includes>
    <includes local="yes">JetEvent/Jet.h</includes>
    <includes local="yes">JetTagInfo/TruthInfo.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">utility</includes>
    <includes local="no">cctype</includes>
    <incdepgraph>
      <node id="96906">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/src/CalibrationDataInterfaceTester.cxx</label>
        <link refid="CalibrationDataInterfaceTester.cxx"/>
        <childnode refid="96907" relation="include">
        </childnode>
        <childnode refid="96923" relation="include">
        </childnode>
        <childnode refid="96924" relation="include">
        </childnode>
        <childnode refid="96925" relation="include">
        </childnode>
        <childnode refid="96919" relation="include">
        </childnode>
        <childnode refid="96918" relation="include">
        </childnode>
        <childnode refid="96926" relation="include">
        </childnode>
      </node>
      <node id="96921">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="96912">
        <label>JetTagCalibration/CalibrationBroker.h</label>
      </node>
      <node id="96916">
        <label>string</label>
      </node>
      <node id="96917">
        <label>map</label>
      </node>
      <node id="96909">
        <label>CalibrationDataInterface/CalibrationDataInterfaceTool.h</label>
        <link refid="d2/d29/CalibrationDataInterfaceTool_8h_source"/>
        <childnode refid="96910" relation="include">
        </childnode>
        <childnode refid="96911" relation="include">
        </childnode>
        <childnode refid="96912" relation="include">
        </childnode>
        <childnode refid="96913" relation="include">
        </childnode>
        <childnode refid="96920" relation="include">
        </childnode>
        <childnode refid="96922" relation="include">
        </childnode>
        <childnode refid="96915" relation="include">
        </childnode>
        <childnode refid="96916" relation="include">
        </childnode>
        <childnode refid="96918" relation="include">
        </childnode>
      </node>
      <node id="96910">
        <label>AthenaBaseComps/AthAlgTool.h</label>
      </node>
      <node id="96911">
        <label>GaudiKernel/ToolHandle.h</label>
      </node>
      <node id="96907">
        <label>CalibrationDataInterface/CalibrationDataInterfaceTester.h</label>
        <link refid="d3/d06/CalibrationDataInterfaceTester_8h_source"/>
        <childnode refid="96908" relation="include">
        </childnode>
        <childnode refid="96909" relation="include">
        </childnode>
        <childnode refid="96916" relation="include">
        </childnode>
      </node>
      <node id="96915">
        <label>vector</label>
      </node>
      <node id="96923">
        <label>JetEvent/JetCollection.h</label>
      </node>
      <node id="96918">
        <label>utility</label>
      </node>
      <node id="96922">
        <label>Rtypes.h</label>
      </node>
      <node id="96926">
        <label>cctype</label>
      </node>
      <node id="96914">
        <label>TNamed.h</label>
      </node>
      <node id="96908">
        <label>AthenaBaseComps/AthAlgorithm.h</label>
      </node>
      <node id="96924">
        <label>JetEvent/Jet.h</label>
      </node>
      <node id="96925">
        <label>JetTagInfo/TruthInfo.h</label>
      </node>
      <node id="96913">
        <label>CalibrationDataInterface/CalibrationDataInterfaceBase.h</label>
        <link refid="d8/d11/CalibrationDataInterfaceBase_8h_source"/>
        <childnode refid="96914" relation="include">
        </childnode>
        <childnode refid="96915" relation="include">
        </childnode>
        <childnode refid="96916" relation="include">
        </childnode>
        <childnode refid="96917" relation="include">
        </childnode>
        <childnode refid="96918" relation="include">
        </childnode>
        <childnode refid="96919" relation="include">
        </childnode>
      </node>
      <node id="96919">
        <label>algorithm</label>
      </node>
      <node id="96920">
        <label>CalibrationDataInterface/ICalibrationDataInterfaceTool.h</label>
        <link refid="d7/d64/ICalibrationDataInterfaceTool_8h_source"/>
        <childnode refid="96921" relation="include">
        </childnode>
        <childnode refid="96916" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/>CalibrationDataInterfaceTester.cxx,<sp/>(c)<sp/>ATLAS<sp/>Detector<sp/>software</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CalibrationDataInterface/CalibrationDataInterfaceTester.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JetEvent/JetCollection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JetEvent/Jet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JetTagInfo/TruthInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cctype&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool" kindref="compound">Analysis::CalibrationDataInterfaceTool</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//================<sp/>Constructor<sp/>=================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="db/dba/classAnalysis_1_1CalibrationDataInterfaceTester_1a8a561fd3d7f590f5658c1a1350e659f0" kindref="member">Analysis::CalibrationDataInterfaceTester::CalibrationDataInterfaceTester</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>ISvcLocator*<sp/>pSvcLocator)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>:<sp/><sp/><sp/>AthAlgorithm(name,<sp/>pSvcLocator)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>template<sp/>for<sp/>property<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;JetCollection&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_jetCollection,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;name<sp/>of<sp/>the<sp/>jet<sp/>collection<sp/>to<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;Tagger&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tagger,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;name<sp/>of<sp/>the<sp/>tagging<sp/>algorithm<sp/>to<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;OperatingPoint&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_operatingPoint,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;name<sp/>of<sp/>the<sp/>tagging<sp/>algorithm<sp/>operating<sp/>point<sp/>to<sp/>be<sp/>used&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;CalibrationUncertainty&quot;</highlight><highlight class="normal">,<sp/>m_calibrationUncertainty,<sp/></highlight><highlight class="stringliteral">&quot;calibration<sp/>uncertainty<sp/>result&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;CalibrationInterface&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>m_calibrationInterface,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;interface<sp/>tool<sp/>instance<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//================<sp/>Destructor<sp/>=================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="db/dba/classAnalysis_1_1CalibrationDataInterfaceTester_1a68e9e6666ad7208a95d46ab58cded1ef" kindref="member">Analysis::CalibrationDataInterfaceTester::~CalibrationDataInterfaceTester</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//================<sp/>Initialisation<sp/>=================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">StatusCode<sp/><ref refid="db/dba/classAnalysis_1_1CalibrationDataInterfaceTester_1ad6972a84918d652b99b86294135c76a6" kindref="member">Analysis::CalibrationDataInterfaceTester::initialize</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>the<sp/>&quot;calibration<sp/>uncertainty&quot;<sp/>to<sp/>lowercase,<sp/>to<sp/>limit<sp/>the<sp/>comparisons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(int<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>m_calibrationUncertainty.size();<sp/>++l)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_calibrationUncertainty[l]<sp/>=<sp/>tolower(m_calibrationUncertainty[l]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>StatusCode<sp/>sc<sp/>=<sp/>m_calibrationInterface.retrieve();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sc.isFailure())<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::FATAL<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;initialize()<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>unable<sp/>to<sp/>retrieve<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;calibration<sp/>interface<sp/>tool!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>std::transform(m_calibrationUncertainty.begin(),<sp/>m_calibrationUncertainty.end(),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_calibrationUncertainty.begin(),<sp/>tolower);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_calibrationUncertainty.find(</highlight><highlight class="stringliteral">&quot;total&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>m_uncertaintyType<sp/>=<sp/>CalibrationDataInterfaceTool::Total;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_calibrationUncertainty.find(</highlight><highlight class="stringliteral">&quot;syst&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>m_uncertaintyType<sp/>=<sp/>CalibrationDataInterfaceTool::Systematic;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_calibrationUncertainty.find(</highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>m_uncertaintyType<sp/>=<sp/>CalibrationDataInterfaceTool::Statistical;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>m_uncertaintyType<sp/>=<sp/>CalibrationDataInterfaceTool::None;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;initialize()<sp/>successful<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name()<sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//================<sp/>Finalisation<sp/>=================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">StatusCode<sp/><ref refid="db/dba/classAnalysis_1_1CalibrationDataInterfaceTester_1af18abba10e986c721c3805b4fa4e9359" kindref="member">Analysis::CalibrationDataInterfaceTester::finalize</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Code<sp/>entered<sp/>here<sp/>will<sp/>be<sp/>executed<sp/>once<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>program<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//================<sp/>Execution<sp/>====================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">StatusCode<sp/><ref refid="db/dba/classAnalysis_1_1CalibrationDataInterfaceTester_1ab04f55873243f8ed904cac094d85cbb5" kindref="member">Analysis::CalibrationDataInterfaceTester::execute</ref>()</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Code<sp/>entered<sp/>here<sp/>will<sp/>be<sp/>executed<sp/>once<sp/>per<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>the<sp/>desired<sp/>jet<sp/>collection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>JetCollection*<sp/>jets;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>StatusCode<sp/>m_sc<sp/>=<sp/>evtStore()-&gt;retrieve(jets,<sp/>m_jetCollection);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_sc.isFailure())<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::WARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;JetCollection<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_jetCollection<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>njtag<sp/>=<sp/>(*jets).size();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;JetCollection<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_jetCollection</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>found<sp/>with<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>njtag<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>jets.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>(*jets).begin()<sp/>etc.?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>JetCollection::const_iterator<sp/>jetItr<sp/>=<sp/>jets-&gt;begin();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>JetCollection::const_iterator<sp/>jetEnd<sp/>=<sp/>jets-&gt;end();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>jetItr<sp/>!=<sp/>jetEnd;<sp/>++jetItr)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---<sp/>get<sp/>btagging<sp/>weight<sp/>for<sp/>the<sp/>tagger<sp/>under<sp/>consideration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight<sp/>=<sp/>(*jetItr)-&gt;getFlavourTagWeight(m_tagger);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---<sp/>get<sp/>the<sp/>true<sp/>label<sp/>of<sp/>the<sp/>jet<sp/>from<sp/>MC<sp/>Truth:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Analysis::TruthInfo*<sp/>mcinfo<sp/>=<sp/>(*jetItr)-&gt;tagInfo&lt;Analysis::TruthInfo&gt;(</highlight><highlight class="stringliteral">&quot;TruthInfo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>mcinfo)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::VERBOSE<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>TruthInfo<sp/>for<sp/>matching<sp/>jet&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label<sp/>=<sp/>mcinfo-&gt;jetTruthLabel();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>sfResult<sp/>=</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_calibrationInterface-&gt;getScaleFactor(**jetItr,<sp/>label,<sp/>m_operatingPoint,<sp/>m_uncertaintyType);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>effResult<sp/>=</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_calibrationInterface-&gt;getEfficiency(**jetItr,<sp/>label,<sp/>m_operatingPoint,<sp/>m_uncertaintyType);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::VERBOSE<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Jet<sp/>with<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_tagger<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>weight:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>weight;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::VERBOSE<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>label:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>label;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::VERBOSE<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>SF<sp/>(unc.):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sfResult.first</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sfResult.second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>MSG::VERBOSE<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eff<sp/>(unc.):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>effResult.first</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>effResult.second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//============================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/src/CalibrationDataInterfaceTester.cxx"/>
  </compounddef>
</doxygen>
