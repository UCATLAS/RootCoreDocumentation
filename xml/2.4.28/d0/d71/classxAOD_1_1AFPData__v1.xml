<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/d71/classxAOD_1_1AFPData__v1" kind="class" prot="public">
    <compoundname>xAOD::AFPData_v1</compoundname>
    <basecompoundref refid="dc/db0/classSG_1_1AuxElement" prot="public" virt="non-virtual">SG::AuxElement</basecompoundref>
    <includes refid="d7/d2f/AFPData__v1_8h" local="no">AFPData_v1.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a6575346cf47eeaeea10276375cd828fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AFPData_v1::AFPData_v1</definition>
        <argsstring>()</argsstring>
        <name>AFPData_v1</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/AFPData_v1.cxx" bodystart="11" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a41d7e5c911fc6f35663a52e28f3160a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::AFPData_v1::pixelTotNum</definition>
        <argsstring>() const </argsstring>
        <name>pixelTotNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="30"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a9a697a96ef079caac794257c2a211924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setPixelTotNum</definition>
        <argsstring>(int value)</argsstring>
        <name>setPixelTotNum</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="31"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a96270c70ded7a9e6185f954f96b766cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::pixelStID</definition>
        <argsstring>() const </argsstring>
        <name>pixelStID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="32"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a8edb00798d45af34c1f38b890b2ef57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setPixelStID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setPixelStID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="33"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a2834e5c903509678f75178f075e45847" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::pixelLayerID</definition>
        <argsstring>() const </argsstring>
        <name>pixelLayerID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="34"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a7d18b1eaae1ed94cfb8e36792279779e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setPixelLayerID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setPixelLayerID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="35"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ae92f8bcd2b66f299c71daaff4da8bea0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::pixelRow</definition>
        <argsstring>() const </argsstring>
        <name>pixelRow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="36"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a34ad385b4da69a6a60c462d3e651eb76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setPixelRow</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setPixelRow</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ad4ba95348fa95c1c0c8dc086cbfec0a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::pixelCol</definition>
        <argsstring>() const </argsstring>
        <name>pixelCol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ad42b7b88d54d71f8efb9f18ca9726f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setPixelCol</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setPixelCol</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a49fad9a9bcfd6cc28adba09c8485e9b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::pixelE</definition>
        <argsstring>() const </argsstring>
        <name>pixelE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="40"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a32f2477d69616e19b035d6caecb70f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setPixelE</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setPixelE</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="41"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a64863e50caee31b5091d399eeddef198" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::AFPData_v1::layerTotNum</definition>
        <argsstring>() const </argsstring>
        <name>layerTotNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aa5b1d66aa343f5217a41dc065cfa05cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setLayerTotNum</definition>
        <argsstring>(int value)</argsstring>
        <name>setLayerTotNum</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aa1868bbab5a7857ce73ebe6f2fc036bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::layerStID</definition>
        <argsstring>() const </argsstring>
        <name>layerStID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a777f0164a03c8a69757ce7314023bc11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setLayerStID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setLayerStID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a64f3a71c2226ee468fe7ca51dcd50fb6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::layerLayerID</definition>
        <argsstring>() const </argsstring>
        <name>layerLayerID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ab211fedf5a79f6f06d02cda348b8fa3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setLayerLayerID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setLayerLayerID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="49"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aa199eef09b2e182367089e73cd0628e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::layerNpix</definition>
        <argsstring>() const </argsstring>
        <name>layerNpix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a255713e0f285ce187794ff272068885a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setLayerNpix</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setLayerNpix</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aabc5e2587d8ff853aef5d55538d111ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::layerEtot</definition>
        <argsstring>() const </argsstring>
        <name>layerEtot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a62bf5bb918fb3625ef0dd6149ebcd1da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setLayerEtot</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setLayerEtot</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ab1a86cc0a683d5547b7afdda0d5bd3e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::AFPData_v1::statTotNum</definition>
        <argsstring>() const </argsstring>
        <name>statTotNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aaa581377ddf60d9b47c2e3fad21ffe16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setStatTotNum</definition>
        <argsstring>(int value)</argsstring>
        <name>setStatTotNum</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1addc32b431e9e7ba7de1365dc784dca26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::statStID</definition>
        <argsstring>() const </argsstring>
        <name>statStID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a394580383d34e7cc2023e6e113649401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setStatStID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setStatStID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="58"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a2a043600d7ad439fd48b1e2707d8412f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::statNpix</definition>
        <argsstring>() const </argsstring>
        <name>statNpix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ad9eb486b5722360a103f43693a9f914e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setStatNpix</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setStatNpix</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a56c5ac6446792a5b99b66ba0c2218e48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::statEtot</definition>
        <argsstring>() const </argsstring>
        <name>statEtot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a45f89bdc515b2e3d766049d8346fe007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setStatEtot</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setStatEtot</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ae0834fc550f98390050fd09ac86bde4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::AFPData_v1::trkTotNumTracks</definition>
        <argsstring>() const </argsstring>
        <name>trkTotNumTracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a829aa2715e856bda0d6805b75483f5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkTotNumTracks</definition>
        <argsstring>(int value)</argsstring>
        <name>setTrkTotNumTracks</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="67"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1acf4c48bcf22267e0637639a1166fd4d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::trkStID</definition>
        <argsstring>() const </argsstring>
        <name>trkStID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a1234c3116eaea7ac25015889951ba403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkStID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setTrkStID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="69"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1af3a9d6bbdcea740247c7caf6836653bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::trkX</definition>
        <argsstring>() const </argsstring>
        <name>trkX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a167386dc237f1bfe1199e7de587cb610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkX</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setTrkX</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="71"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ae72befe7006d582ac7c3b07e497356c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::trkY</definition>
        <argsstring>() const </argsstring>
        <name>trkY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="72"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a1854ae6902d55985108a2d1aa9c5a7e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkY</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setTrkY</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aa8cda29affdb33f3c8838269952a7d98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::trkZ</definition>
        <argsstring>() const </argsstring>
        <name>trkZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="74"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a6516f7b329abd3c66fa0c27ac5618268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkZ</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setTrkZ</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ae9c5a51f38a8acc8003241c21e1dfada" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::trkXslope</definition>
        <argsstring>() const </argsstring>
        <name>trkXslope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="76"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ac3b8cb1aa0ec1c90d0de3aca674792e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkXslope</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setTrkXslope</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="77"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a6ce46324ebb2fbce66cf556449d46bf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::trkYslope</definition>
        <argsstring>() const </argsstring>
        <name>trkYslope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="78"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a2b0d5b73b41e17cd544c4efdd0057d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkYslope</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setTrkYslope</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a3895e978c31738cca285d12b37b4fb46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::trkNpix</definition>
        <argsstring>() const </argsstring>
        <name>trkNpix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ab16ac6763cf4b96183f50ce6a4f8280d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkNpix</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setTrkNpix</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a0cf9e5f6619f1d272f0d73d978cd066b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::trkNholes</definition>
        <argsstring>() const </argsstring>
        <name>trkNholes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a3fb9cab74084cff9faa33e128971bb2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkNholes</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setTrkNholes</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a71855c89220f635b17c8d4517d76eb5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::trkQuality</definition>
        <argsstring>() const </argsstring>
        <name>trkQuality</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="84"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a0dbe6bb8ab82ba6e6dc2949813022054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTrkQuality</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setTrkQuality</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aa4235deb33ee335f30f7960f2ce30de0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::AFPData_v1::simSidTotNumHits</definition>
        <argsstring>() const </argsstring>
        <name>simSidTotNumHits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="88"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a59b13b7d47e84200f188139053fc1cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidTotNumHits</definition>
        <argsstring>(int value)</argsstring>
        <name>setSimSidTotNumHits</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ab130ff2651d91fb3bc83af5f30e551cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simSidHitID</definition>
        <argsstring>() const </argsstring>
        <name>simSidHitID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a6824ac92f66e9dc3e7acfcc5a7de809b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidHitID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimSidHitID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="91"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a5a270208300396d23fc25f6c287d71e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simSidTrackID</definition>
        <argsstring>() const </argsstring>
        <name>simSidTrackID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a9648c365658a927576e9e71c1913f7fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidTrackID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimSidTrackID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="93"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aa9a90be38e6d14511195914727a4831e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simSidEncoding</definition>
        <argsstring>() const </argsstring>
        <name>simSidEncoding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="94"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a78ca6986eb14c9afb32c64a4c278ae97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidEncoding</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimSidEncoding</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="95"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a56b9cf38b5c4500c7ce699bb48280d32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidKineticE</definition>
        <argsstring>() const </argsstring>
        <name>simSidKineticE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="96"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aecf67497a23e49aec132130f17960b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidKineticE</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidKineticE</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ae5b5567a102ebd34b7e4ba72e16b882b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidDepE</definition>
        <argsstring>() const </argsstring>
        <name>simSidDepE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a48b420757fa1db7808e22489edd7b8ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidDepE</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidDepE</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="99"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a805878407248694f72438a47382ae935" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidPreStepX</definition>
        <argsstring>() const </argsstring>
        <name>simSidPreStepX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="100"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a5202983593c06ff444cdcd7d33694a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidPreStepX</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidPreStepX</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="101"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a081a29ae46fcc5b427e6351f6d769544" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidPreStepY</definition>
        <argsstring>() const </argsstring>
        <name>simSidPreStepY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="102"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1af2379bab375c1c5ec53ffcc977390725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidPreStepY</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidPreStepY</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a99162cc922909441c6ea86620bb6007d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidPreStepZ</definition>
        <argsstring>() const </argsstring>
        <name>simSidPreStepZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1af17c25ba2eb00631de017c1108416951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidPreStepZ</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidPreStepZ</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a39a76297dc5fb4b0b098258a9120de12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidPostStepX</definition>
        <argsstring>() const </argsstring>
        <name>simSidPostStepX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="106"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aaef4730bfc353e2e0c408bdcc693b147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidPostStepX</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidPostStepX</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aaf4fed0677f2488207fb127a88e7ffe6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidPostStepY</definition>
        <argsstring>() const </argsstring>
        <name>simSidPostStepY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="108"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a4a6d7edfb99fb9a33b2d96a814f93f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidPostStepY</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidPostStepY</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a771e00a06fe878b456a7f791afc24669" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidPostStepZ</definition>
        <argsstring>() const </argsstring>
        <name>simSidPostStepZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aa4be33bfd68e341057e4b8c04da63cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidPostStepZ</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidPostStepZ</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="111"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ab906515b5c12bbc1584e1d0e9b9b883c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simSidTime</definition>
        <argsstring>() const </argsstring>
        <name>simSidTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a25ae3ecc1344b6a88b84d96ff74da824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidTime</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimSidTime</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a1ec11d291a409676bd0f4ecaaa280897" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simSidStID</definition>
        <argsstring>() const </argsstring>
        <name>simSidStID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a03f70b1dbe1b4de82ebe900b4e3dbbc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidStID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimSidStID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a49343e942e5a4e7ea71b6f069e9e4c1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simSidLayerID</definition>
        <argsstring>() const </argsstring>
        <name>simSidLayerID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a81748952cc30c36e8bce995fa3ea080c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidLayerID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimSidLayerID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1abfcd1cf8cdc7bd35db11206215bf80b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simSidIsVacLayer</definition>
        <argsstring>() const </argsstring>
        <name>simSidIsVacLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a88d347f5e1f0d3d15f137fc984650390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidIsVacLayer</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimSidIsVacLayer</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1af42b2ba945af2a357b448ca7f813b982" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simSidPixelRow</definition>
        <argsstring>() const </argsstring>
        <name>simSidPixelRow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a8edc7e26c1bffe3af046fec2fb389fa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidPixelRow</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimSidPixelRow</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aa97166efbcca01dc8446c25f3776cffa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simSidPixelCol</definition>
        <argsstring>() const </argsstring>
        <name>simSidPixelCol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a3cead9fb1fa5b447163a8d7c7551c7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimSidPixelCol</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimSidPixelCol</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aead7724cc9ef2235045a0ab9bf9731de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::AFPData_v1::tidTotNumTracks</definition>
        <argsstring>() const </argsstring>
        <name>tidTotNumTracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a01f432c72f4610888ee63d278bdbe098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTidTotNumTracks</definition>
        <argsstring>(int value)</argsstring>
        <name>setTidTotNumTracks</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="129"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a3d25a66c7798439a7de7838190b725b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::tidStID</definition>
        <argsstring>() const </argsstring>
        <name>tidStID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="130"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1af782732b6aff5c0386cd843c8919b08d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTidStID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setTidStID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ac42efdc391c7960423d77cdb0c77921e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::tidQID</definition>
        <argsstring>() const </argsstring>
        <name>tidQID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a2a6d9b51bc1e3ac8658970b6a51f775e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTidQID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setTidQID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="133"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ae455018f2532a62a269038f978fa279f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::tidTrainID</definition>
        <argsstring>() const </argsstring>
        <name>tidTrainID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a71fc17f58c36a576bf874fc9cbc8b81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTidTrainID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setTidTrainID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="135"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a2bdf472bac0f87d54e42b604fb265cb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::tidTime</definition>
        <argsstring>() const </argsstring>
        <name>tidTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a82f10cbe867f30925d01ac2283f22d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTidTime</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setTidTime</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a8e8b7a311f251aba9a59d6777044a3cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::tidAmplitude</definition>
        <argsstring>() const </argsstring>
        <name>tidAmplitude</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a869bd7d7edf4e6292768afcdeb663ee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTidAmplitude</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setTidAmplitude</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="139"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a25ea3bfdf602b6b6c871579a3c5cc20e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::tidNumSaturatedBars</definition>
        <argsstring>() const </argsstring>
        <name>tidNumSaturatedBars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1abd97404bbb62bd9e5ab6e5bff42c0a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setTidNumSaturatedBars</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setTidNumSaturatedBars</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1af01ae9b21b5cff90513dc86a6f76d7a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::AFPData_v1::simTidTotNumHits</definition>
        <argsstring>() const </argsstring>
        <name>simTidTotNumHits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a7cb5435b9b843de90bfab1b0f016d6c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidTotNumHits</definition>
        <argsstring>(int value)</argsstring>
        <name>setSimTidTotNumHits</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="145"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a79c46698a50dd064da88ec366f6e4d4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simTidHitID</definition>
        <argsstring>() const </argsstring>
        <name>simTidHitID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="146"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ad556a017279b89be7815acb7f9502fe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidHitID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimTidHitID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1adcc5865d00214f25ff944ff5430d91ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simTidTrackID</definition>
        <argsstring>() const </argsstring>
        <name>simTidTrackID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="148"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a49c7332b35d817119e979bd768cf18ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidTrackID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimTidTrackID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="149"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a33f6ebd6a7f3807c2378c18b6ae2e8dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simTidEncoding</definition>
        <argsstring>() const </argsstring>
        <name>simTidEncoding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a4250c6a361ee3a5128e3b5c2595fc54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidEncoding</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimTidEncoding</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a6640df914bb33d96fababd3a84c94a2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidKineticE</definition>
        <argsstring>() const </argsstring>
        <name>simTidKineticE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="152"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a48f60d007beaf95e8852561a093522b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidKineticE</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidKineticE</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a80bb0b566306a323fec36820595e9c95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidDepE</definition>
        <argsstring>() const </argsstring>
        <name>simTidDepE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a1b5dad1addc91490136865ebfa344a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidDepE</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidDepE</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="155"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a37ae579cb30384d9b7cc330858781dd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidPreStepX</definition>
        <argsstring>() const </argsstring>
        <name>simTidPreStepX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="156"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a05e219d3c38fab4a79ac2187b0e9c8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidPreStepX</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidPreStepX</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="157"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a27f7d5a4e1d4fbec2493357774d2da09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidPreStepY</definition>
        <argsstring>() const </argsstring>
        <name>simTidPreStepY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="158"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a8364a9a23dbfc39ea63863a510954a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidPreStepY</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidPreStepY</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a11d105df42460629d8169755d55efad2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidPreStepZ</definition>
        <argsstring>() const </argsstring>
        <name>simTidPreStepZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="160"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a74fbd0ce17e012b0ddcc9c3dba2aa796" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidPreStepZ</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidPreStepZ</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="161"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a19e772685ca1471821b5b6ba40a7d0b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidPostStepX</definition>
        <argsstring>() const </argsstring>
        <name>simTidPostStepX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="162"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a80a6ebb55fffb85bf823ce14ea91d501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidPostStepX</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidPostStepX</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="163"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a6fcad459a7282fd012086ab72cb05192" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidPostStepY</definition>
        <argsstring>() const </argsstring>
        <name>simTidPostStepY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="164"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a5367d2ee96615d409b75a9f1180549bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidPostStepY</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidPostStepY</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1abd35589c9057784f227dfa6b3789accb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidPostStepZ</definition>
        <argsstring>() const </argsstring>
        <name>simTidPostStepZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="166"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a84d97453140ad3bb5253ee8f180cb790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidPostStepZ</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidPostStepZ</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="167"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1afbf3c4b3712c8dc919f04d27a8e7251e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt;float&gt;&amp; xAOD::AFPData_v1::simTidTime</definition>
        <argsstring>() const </argsstring>
        <name>simTidTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="168"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a08a80bb2b70d203fd907d199c67a95ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidTime</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setSimTidTime</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="169"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1aea0c84115b7f3e24b445fd48e06ca04a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simTidStID</definition>
        <argsstring>() const </argsstring>
        <name>simTidStID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="170"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a1e89ce7122a9d8038567f488995415e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidStID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimTidStID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="171"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a0d8a26a3c23d280a3f7f049c0e6cb601" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simTidLayerID</definition>
        <argsstring>() const </argsstring>
        <name>simTidLayerID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="172"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a27ea0e5cdc40ceed272b685eee1433bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidLayerID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimTidLayerID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="173"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1a358a5cfcd5b1cb2a9f99c656a855d8fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; xAOD::AFPData_v1::simTidSensElID</definition>
        <argsstring>() const </argsstring>
        <name>simTidSensElID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="174"/>
      </memberdef>
      <memberdef kind="function" id="d0/d71/classxAOD_1_1AFPData__v1_1ab76dff9d24ed32f55b0f676db1e8704b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AFPData_v1::setSimTidSensElID</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setSimTidSensElID</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class containing AFP information</para><para>For information how to retrive, and to some level use this object, see the detailed package description.</para><para><simplesect kind="author"><para>Libor Nozka &lt;<ulink url="mailto:Libor.Nozka@cern.ch">Libor.Nozka@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>693858 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2015-09-09 12:30:15 +0200 (Wed, 09 Sep 2015) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="162">
        <label>xAOD::AFPData_v1</label>
        <link refid="d0/d71/classxAOD_1_1AFPData__v1"/>
        <childnode refid="163" relation="public-inheritance">
        </childnode>
      </node>
      <node id="164">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="163">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="164" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="178">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="179">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="174">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="183">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="168" relation="public-inheritance">
        </childnode>
      </node>
      <node id="177">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="178" relation="public-inheritance">
        </childnode>
        <childnode refid="179" relation="public-inheritance">
        </childnode>
        <childnode refid="180" relation="public-inheritance">
        </childnode>
      </node>
      <node id="172">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="165">
        <label>xAOD::AFPData_v1</label>
        <link refid="d0/d71/classxAOD_1_1AFPData__v1"/>
        <childnode refid="166" relation="public-inheritance">
        </childnode>
      </node>
      <node id="173">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="167">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="170">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="171">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="172" relation="public-inheritance">
        </childnode>
        <childnode refid="173" relation="public-inheritance">
        </childnode>
        <childnode refid="174" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="170" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="169">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="170" relation="public-inheritance">
        </childnode>
      </node>
      <node id="176">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="177" relation="public-inheritance">
        </childnode>
      </node>
      <node id="180">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="181">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="182" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="175">
        <label>mutex</label>
      </node>
      <node id="166">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="167" relation="public-inheritance">
        </childnode>
        <childnode refid="168" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="183" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="182">
        <label>void</label>
      </node>
      <node id="168">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="169" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="171" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="170" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="175" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="176" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="181" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/xAODForward/versions/AFPData_v1.h" bodystart="22" bodyend="177"/>
    <listofallmembers>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a6575346cf47eeaeea10276375cd828fe" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>AFPData_v1</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a7aaa8e9eb54091ab7ee43bb7c73918e4" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5279e0349d690c26121f60b5a8778322" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>clearDecorations</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>getConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>getStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>IAuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>index</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af727b22ab51f1d848fc3cf59065b99ea" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>isAvailable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a864fc1dab026cbcf20b2c7e3904b89a4" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aabc5e2587d8ff853aef5d55538d111ea" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>layerEtot</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a64f3a71c2226ee468fe7ca51dcd50fb6" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>layerLayerID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aa199eef09b2e182367089e73cd0628e2" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>layerNpix</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aa1868bbab5a7857ce73ebe6f2fc036bd" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>layerStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a64863e50caee31b5091d399eeddef198" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>layerTotNum</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>operator=</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ad4ba95348fa95c1c0c8dc086cbfec0a2" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>pixelCol</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a49fad9a9bcfd6cc28adba09c8485e9b1" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>pixelE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a2834e5c903509678f75178f075e45847" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>pixelLayerID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ae92f8bcd2b66f299c71daaff4da8bea0" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>pixelRow</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a96270c70ded7a9e6185f954f96b766cf" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>pixelStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a41d7e5c911fc6f35663a52e28f3160a8" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>pixelTotNum</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>releasePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setConstStore</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a62bf5bb918fb3625ef0dd6149ebcd1da" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setLayerEtot</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ab211fedf5a79f6f06d02cda348b8fa3d" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setLayerLayerID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a255713e0f285ce187794ff272068885a" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setLayerNpix</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a777f0164a03c8a69757ce7314023bc11" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setLayerStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aa5b1d66aa343f5217a41dc065cfa05cc" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setLayerTotNum</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setNonConstStore</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ad42b7b88d54d71f8efb9f18ca9726f85" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setPixelCol</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a32f2477d69616e19b035d6caecb70f94" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setPixelE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a7d18b1eaae1ed94cfb8e36792279779e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setPixelLayerID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a34ad385b4da69a6a60c462d3e651eb76" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setPixelRow</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a8edb00798d45af34c1f38b890b2ef57f" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setPixelStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a9a697a96ef079caac794257c2a211924" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setPixelTotNum</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a48b420757fa1db7808e22489edd7b8ee" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidDepE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a78ca6986eb14c9afb32c64a4c278ae97" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidEncoding</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a6824ac92f66e9dc3e7acfcc5a7de809b" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidHitID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a88d347f5e1f0d3d15f137fc984650390" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidIsVacLayer</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aecf67497a23e49aec132130f17960b10" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidKineticE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a81748952cc30c36e8bce995fa3ea080c" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidLayerID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a3cead9fb1fa5b447163a8d7c7551c7bd" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidPixelCol</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a8edc7e26c1bffe3af046fec2fb389fa1" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidPixelRow</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aaef4730bfc353e2e0c408bdcc693b147" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidPostStepX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a4a6d7edfb99fb9a33b2d96a814f93f5e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidPostStepY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aa4be33bfd68e341057e4b8c04da63cb6" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidPostStepZ</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a5202983593c06ff444cdcd7d33694a8b" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidPreStepX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1af2379bab375c1c5ec53ffcc977390725" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidPreStepY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1af17c25ba2eb00631de017c1108416951" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidPreStepZ</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a03f70b1dbe1b4de82ebe900b4e3dbbc1" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a25ae3ecc1344b6a88b84d96ff74da824" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidTime</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a59b13b7d47e84200f188139053fc1cb1" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidTotNumHits</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a9648c365658a927576e9e71c1913f7fc" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimSidTrackID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a1b5dad1addc91490136865ebfa344a48" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidDepE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a4250c6a361ee3a5128e3b5c2595fc54f" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidEncoding</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ad556a017279b89be7815acb7f9502fe2" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidHitID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a48f60d007beaf95e8852561a093522b4" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidKineticE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a27ea0e5cdc40ceed272b685eee1433bd" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidLayerID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a80a6ebb55fffb85bf823ce14ea91d501" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidPostStepX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a5367d2ee96615d409b75a9f1180549bd" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidPostStepY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a84d97453140ad3bb5253ee8f180cb790" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidPostStepZ</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a05e219d3c38fab4a79ac2187b0e9c8c0" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidPreStepX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a8364a9a23dbfc39ea63863a510954a2f" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidPreStepY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a74fbd0ce17e012b0ddcc9c3dba2aa796" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidPreStepZ</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ab76dff9d24ed32f55b0f676db1e8704b" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidSensElID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a1e89ce7122a9d8038567f488995415e6" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a08a80bb2b70d203fd907d199c67a95ad" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidTime</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a7cb5435b9b843de90bfab1b0f016d6c0" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidTotNumHits</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a49c7332b35d817119e979bd768cf18ca" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setSimTidTrackID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a45f89bdc515b2e3d766049d8346fe007" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setStatEtot</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ad9eb486b5722360a103f43693a9f914e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setStatNpix</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a394580383d34e7cc2023e6e113649401" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setStatStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aaa581377ddf60d9b47c2e3fad21ffe16" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setStatTotNum</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setStore</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a869bd7d7edf4e6292768afcdeb663ee5" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTidAmplitude</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1abd97404bbb62bd9e5ab6e5bff42c0a7e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTidNumSaturatedBars</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a2a6d9b51bc1e3ac8658970b6a51f775e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTidQID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1af782732b6aff5c0386cd843c8919b08d" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTidStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a82f10cbe867f30925d01ac2283f22d20" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTidTime</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a01f432c72f4610888ee63d278bdbe098" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTidTotNumTracks</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a71fc17f58c36a576bf874fc9cbc8b81a" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTidTrainID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a3fb9cab74084cff9faa33e128971bb2d" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkNholes</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ab16ac6763cf4b96183f50ce6a4f8280d" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkNpix</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a0dbe6bb8ab82ba6e6dc2949813022054" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkQuality</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a1234c3116eaea7ac25015889951ba403" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a829aa2715e856bda0d6805b75483f5c1" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkTotNumTracks</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a167386dc237f1bfe1199e7de587cb610" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ac3b8cb1aa0ec1c90d0de3aca674792e1" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkXslope</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a1854ae6902d55985108a2d1aa9c5a7e5" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a2b0d5b73b41e17cd544c4efdd0057d79" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkYslope</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a6516f7b329abd3c66fa0c27ac5618268" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>setTrkZ</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ae5b5567a102ebd34b7e4ba72e16b882b" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidDepE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aa9a90be38e6d14511195914727a4831e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidEncoding</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ab130ff2651d91fb3bc83af5f30e551cb" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidHitID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1abfcd1cf8cdc7bd35db11206215bf80b0" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidIsVacLayer</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a56b9cf38b5c4500c7ce699bb48280d32" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidKineticE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a49343e942e5a4e7ea71b6f069e9e4c1c" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidLayerID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aa97166efbcca01dc8446c25f3776cffa" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidPixelCol</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1af42b2ba945af2a357b448ca7f813b982" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidPixelRow</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a39a76297dc5fb4b0b098258a9120de12" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidPostStepX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aaf4fed0677f2488207fb127a88e7ffe6" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidPostStepY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a771e00a06fe878b456a7f791afc24669" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidPostStepZ</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a805878407248694f72438a47382ae935" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidPreStepX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a081a29ae46fcc5b427e6351f6d769544" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidPreStepY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a99162cc922909441c6ea86620bb6007d" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidPreStepZ</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a1ec11d291a409676bd0f4ecaaa280897" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ab906515b5c12bbc1584e1d0e9b9b883c" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidTime</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aa4235deb33ee335f30f7960f2ce30de0" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidTotNumHits</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a5a270208300396d23fc25f6c287d71e5" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simSidTrackID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a80bb0b566306a323fec36820595e9c95" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidDepE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a33f6ebd6a7f3807c2378c18b6ae2e8dc" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidEncoding</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a79c46698a50dd064da88ec366f6e4d4e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidHitID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a6640df914bb33d96fababd3a84c94a2f" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidKineticE</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a0d8a26a3c23d280a3f7f049c0e6cb601" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidLayerID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a19e772685ca1471821b5b6ba40a7d0b8" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidPostStepX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a6fcad459a7282fd012086ab72cb05192" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidPostStepY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1abd35589c9057784f227dfa6b3789accb" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidPostStepZ</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a37ae579cb30384d9b7cc330858781dd2" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidPreStepX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a27f7d5a4e1d4fbec2493357774d2da09" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidPreStepY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a11d105df42460629d8169755d55efad2" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidPreStepZ</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a358a5cfcd5b1cb2a9f99c656a855d8fb" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidSensElID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aea0c84115b7f3e24b445fd48e06ca04a" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1afbf3c4b3712c8dc919f04d27a8e7251e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidTime</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1af01ae9b21b5cff90513dc86a6f76d7a5" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidTotNumHits</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1adcc5865d00214f25ff944ff5430d91ca" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>simTidTrackID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a56c5ac6446792a5b99b66ba0c2218e48" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>statEtot</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a2a043600d7ad439fd48b1e2707d8412f" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>statNpix</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1addc32b431e9e7ba7de1365dc784dca26" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>statStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ab1a86cc0a683d5547b7afdda0d5bd3e8" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>statTotNum</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a8e8b7a311f251aba9a59d6777044a3cc" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>tidAmplitude</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a25ea3bfdf602b6b6c871579a3c5cc20e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>tidNumSaturatedBars</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ac42efdc391c7960423d77cdb0c77921e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>tidQID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a3d25a66c7798439a7de7838190b725b1" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>tidStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a2bdf472bac0f87d54e42b604fb265cb8" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>tidTime</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aead7724cc9ef2235045a0ab9bf9731de" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>tidTotNumTracks</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ae455018f2532a62a269038f978fa279f" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>tidTrainID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a0cf9e5f6619f1d272f0d73d978cd066b" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkNholes</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a3895e978c31738cca285d12b37b4fb46" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkNpix</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a71855c89220f635b17c8d4517d76eb5c" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkQuality</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1acf4c48bcf22267e0637639a1166fd4d2" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkStID</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ae0834fc550f98390050fd09ac86bde4b" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkTotNumTracks</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1af3a9d6bbdcea740247c7caf6836653bf" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkX</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ae9c5a51f38a8acc8003241c21e1dfada" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkXslope</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1ae72befe7006d582ac7c3b07e497356c8" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkY</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1a6ce46324ebb2fbce66cf556449d46bf5" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkYslope</name></member>
      <member refid="d0/d71/classxAOD_1_1AFPData__v1_1aa8cda29affdb33f3c8838269952a7d98" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>trkZ</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::AFPData_v1</scope><name>~AuxElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
