<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/dbf/HLTTriggerElement_8cxx" kind="file">
    <compoundname>HLTTriggerElement.cxx</compoundname>
    <includes refid="dc/d9c/HLTTriggerElement_8h" local="yes">TrigConfHLTData/HLTTriggerElement.h</includes>
    <includes refid="d8/d48/HLTUtils_8h" local="yes">TrigConfHLTData/HLTUtils.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <incdepgraph>
      <node id="309265">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="309252">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTTriggerElement.cxx</label>
        <link refid="HLTTriggerElement.cxx"/>
        <childnode refid="309253" relation="include">
        </childnode>
        <childnode refid="309259" relation="include">
        </childnode>
        <childnode refid="309263" relation="include">
        </childnode>
        <childnode refid="309257" relation="include">
        </childnode>
        <childnode refid="309264" relation="include">
        </childnode>
        <childnode refid="309265" relation="include">
        </childnode>
      </node>
      <node id="309264">
        <label>stdexcept</label>
      </node>
      <node id="309256">
        <label>string</label>
      </node>
      <node id="309258">
        <label>map</label>
      </node>
      <node id="309254">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="309255" relation="include">
        </childnode>
        <childnode refid="309256" relation="include">
        </childnode>
      </node>
      <node id="309257">
        <label>fstream</label>
      </node>
      <node id="309259">
        <label>TrigConfHLTData/HLTUtils.h</label>
        <link refid="d8/d48/HLTUtils_8h_source"/>
        <childnode refid="309256" relation="include">
        </childnode>
        <childnode refid="309260" relation="include">
        </childnode>
        <childnode refid="309261" relation="include">
        </childnode>
        <childnode refid="309262" relation="include">
        </childnode>
      </node>
      <node id="309253">
        <label>TrigConfHLTData/HLTTriggerElement.h</label>
        <link refid="dc/d9c/HLTTriggerElement_8h_source"/>
        <childnode refid="309254" relation="include">
        </childnode>
        <childnode refid="309255" relation="include">
        </childnode>
        <childnode refid="309257" relation="include">
        </childnode>
        <childnode refid="309256" relation="include">
        </childnode>
        <childnode refid="309258" relation="include">
        </childnode>
      </node>
      <node id="309262">
        <label>vector</label>
      </node>
      <node id="309255">
        <label>iosfwd</label>
      </node>
      <node id="309263">
        <label>iostream</label>
      </node>
      <node id="309261">
        <label>set</label>
      </node>
      <node id="309260">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTTriggerElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">TrigConf;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">map&lt;unsigned<sp/>int,string&gt;<sp/>HLTTriggerElement::m_IdToLabel;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">HLTTriggerElement::HLTTriggerElement()<sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><ref refid="d0/d3d/classTrigConf_1_1TrigConfData" kindref="compound">TrigConfData</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/>m_hashId(0),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>m_level(0)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement_1ab8b3c62a03ee6d391d213ad78d695be2" kindref="member" tooltip="default constructor">HLTTriggerElement::HLTTriggerElement</ref>(<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref><sp/>)<sp/>:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><ref refid="d0/d3d/classTrigConf_1_1TrigConfData" kindref="compound">TrigConfData</ref>(name),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/>m_hashId(<ref refid="d8/d97/classTrigConf_1_1HLTUtils" kindref="compound">HLTUtils</ref>::string2hash(name)),<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>for<sp/>external<sp/>setting<sp/>of<sp/>trigger<sp/>element<sp/>id&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>m_level(0)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>CheckAndStoreHash();</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement_1ab8b3c62a03ee6d391d213ad78d695be2" kindref="member" tooltip="default constructor">HLTTriggerElement::HLTTriggerElement</ref>(<sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref><sp/>)<sp/>:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><ref refid="d0/d3d/classTrigConf_1_1TrigConfData" kindref="compound">TrigConfData</ref>(name),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/>m_hashId(<ref refid="d8/d97/classTrigConf_1_1HLTUtils" kindref="compound">HLTUtils</ref>::string2hash(name)<sp/>),<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>for<sp/>external<sp/>setting<sp/>of<sp/>trigger<sp/>element<sp/>id&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>m_level(0)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/>CheckAndStoreHash();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement_1ab8b3c62a03ee6d391d213ad78d695be2" kindref="member" tooltip="default constructor">HLTTriggerElement::HLTTriggerElement</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;unsigned<sp/>int,string&gt;&amp;<sp/>p<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><ref refid="d0/d3d/classTrigConf_1_1TrigConfData" kindref="compound">TrigConfData</ref>(p.second),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>m_hashId(<sp/><ref refid="d8/d97/classTrigConf_1_1HLTUtils" kindref="compound">HLTUtils</ref>::string2hash(p.second)<sp/>),<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>yet<sp/>allow<sp/>for<sp/>external<sp/>setting<sp/>of<sp/>trigger<sp/>element<sp/>id&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>m_level(0)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>CheckAndStoreHash();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement_1ac8ff94bddb4a1bef84bfc5147556692d" kindref="member" tooltip="destructor">HLTTriggerElement::~HLTTriggerElement</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">HLTTriggerElement::writeXML(std::ofstream<sp/>&amp;<sp/>xmlfile)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>xmlfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;TRIGGERELEMENT<sp/>te_name=\&quot;&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement_1a2f8859810584a749990ba6c85a6668c0" kindref="member" tooltip="print method">HLTTriggerElement::print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*detail*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">std::ostream<sp/>&amp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">TrigConf::operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement" kindref="compound" tooltip="HLT trigger element configuration information.">HLTTriggerElement</ref><sp/>&amp;<sp/>te)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>te.name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>te.m_hashId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">HLTTriggerElement::CheckAndStoreHash()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>map&lt;unsigned<sp/>int,<sp/>string&gt;::const_iterator<sp/>it<sp/>=<sp/>m_IdToLabel.find(<sp/>hashId()<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_IdToLabel.end())<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_IdToLabel.insert(<sp/>pair&lt;unsigned<sp/>int,<sp/>string&gt;(hashId(),<ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref>())<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>it-&gt;second==<ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref>()<sp/>)<sp/></highlight><highlight class="comment">//<sp/>TE<sp/>was<sp/>build<sp/>before<sp/>(identical<sp/>(hash,name)<sp/>pair<sp/>was<sp/>found)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>abort<sp/>only<sp/>when<sp/>hash<sp/>conflict<sp/>occured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hash<sp/>ID<sp/>already<sp/>exists<sp/>in<sp/>the<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>either<sp/>the<sp/>hash<sp/>is<sp/>not<sp/>unique,<sp/>or<sp/>the<sp/>same<sp/>TE<sp/>is<sp/>inserted<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>either<sp/>case<sp/>we<sp/>should<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;TrigConf::HLTTriggerElement:<sp/>hash<sp/>conflict<sp/>between<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;second<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>and<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;,<sp/>both<sp/>result<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>boost::lexical_cast&lt;string,unsigned<sp/>int&gt;(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">())<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement_1a541bf6f15c84f59e6184bf127cd46605" kindref="member" tooltip="find name from ID in the map m_IdToLabel">HLTTriggerElement::getLabel</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>label)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>map&lt;unsigned<sp/>int,<sp/>string&gt;::const_iterator<sp/>it<sp/>=<sp/>m_IdToLabel.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it<sp/>!=<sp/>m_IdToLabel.end())<sp/>{<sp/>label<sp/>=<sp/>it-&gt;second;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement_1aea177fc76d7e22d8c07781a256840729" kindref="member" tooltip="find ID from name in the map m_IdToLabel">HLTTriggerElement::getId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>label,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>map&lt;unsigned<sp/>int,<sp/>string&gt;::const_iterator<sp/>it<sp/>=<sp/>m_IdToLabel.begin();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>m_IdToLabel.begin();<sp/>it<sp/>!=<sp/>m_IdToLabel.end();<sp/>it++)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;second<sp/>==<sp/>label)<sp/>{<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>it-&gt;first;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTTriggerElement.cxx"/>
  </compounddef>
</doxygen>
