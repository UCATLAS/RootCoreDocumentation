<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/d86/MCBunchCrossingTool_8cxx" kind="file">
    <compoundname>MCBunchCrossingTool.cxx</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="yes">AthenaKernel/errorcheck.h</includes>
    <includes refid="dd/d16/hashtable_8h" local="yes">CxxUtils/hashtable.h</includes>
    <includes local="yes">AthenaPoolUtilities/AthenaAttributeList.h</includes>
    <includes refid="d7/d28/MCBunchCrossingTool_8h" local="yes">MCBunchCrossingTool.h</includes>
    <includes refid="dc/ddd/BunchCrossing_8h" local="yes">TrigBunchCrossingTool/BunchCrossing.h</includes>
    <incdepgraph>
      <node id="308601">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="308588" relation="include">
        </childnode>
        <childnode refid="308600" relation="include">
        </childnode>
        <childnode refid="308602" relation="include">
        </childnode>
        <childnode refid="308603" relation="include">
        </childnode>
      </node>
      <node id="308589">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="308587">
        <label>limits</label>
      </node>
      <node id="308603">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="308584">
        <label>iterator</label>
      </node>
      <node id="308595">
        <label>TrigBunchCrossingTool/BunchCrossingToolBase.h</label>
        <link refid="db/d0d/BunchCrossingToolBase_8h_source"/>
        <childnode refid="308596" relation="include">
        </childnode>
        <childnode refid="308597" relation="include">
        </childnode>
        <childnode refid="308588" relation="include">
        </childnode>
        <childnode refid="308598" relation="include">
        </childnode>
        <childnode refid="308607" relation="include">
        </childnode>
        <childnode refid="308608" relation="include">
        </childnode>
        <childnode refid="308613" relation="include">
        </childnode>
      </node>
      <node id="308586">
        <label>cmath</label>
      </node>
      <node id="308604">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="308588" relation="include">
        </childnode>
        <childnode refid="308600" relation="include">
        </childnode>
        <childnode refid="308605" relation="include">
        </childnode>
      </node>
      <node id="308580">
        <label>AthenaKernel/errorcheck.h</label>
      </node>
      <node id="308607">
        <label>TrigAnalysisInterfaces/IBunchCrossingTool.h</label>
        <link refid="db/d9f/IBunchCrossingTool_8h_source"/>
        <childnode refid="308597" relation="include">
        </childnode>
        <childnode refid="308601" relation="include">
        </childnode>
      </node>
      <node id="308600">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="308578">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx</label>
        <link refid="MCBunchCrossingTool.cxx"/>
        <childnode refid="308579" relation="include">
        </childnode>
        <childnode refid="308580" relation="include">
        </childnode>
        <childnode refid="308581" relation="include">
        </childnode>
        <childnode refid="308590" relation="include">
        </childnode>
        <childnode refid="308591" relation="include">
        </childnode>
        <childnode refid="308608" relation="include">
        </childnode>
      </node>
      <node id="308588">
        <label>string</label>
      </node>
      <node id="308614">
        <label>BunchCrossingConfProviderBase.h</label>
        <link refid="dc/d79/BunchCrossingConfProviderBase_8h_source"/>
        <childnode refid="308615" relation="include">
        </childnode>
        <childnode refid="308607" relation="include">
        </childnode>
      </node>
      <node id="308592">
        <label>GaudiKernel/ServiceHandle.h</label>
      </node>
      <node id="308605">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="308608">
        <label>TrigBunchCrossingTool/BunchCrossing.h</label>
        <link refid="dc/ddd/BunchCrossing_8h_source"/>
        <childnode refid="308609" relation="include">
        </childnode>
        <childnode refid="308610" relation="include">
        </childnode>
      </node>
      <node id="308598">
        <label>AsgTools/AsgMetadataTool.h</label>
        <link refid="dc/dde/AsgMetadataTool_8h_source"/>
        <childnode refid="308599" relation="include">
        </childnode>
      </node>
      <node id="308581">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="308582" relation="include">
        </childnode>
        <childnode refid="308583" relation="include">
        </childnode>
        <childnode refid="308584" relation="include">
        </childnode>
        <childnode refid="308585" relation="include">
        </childnode>
        <childnode refid="308579" relation="include">
        </childnode>
        <childnode refid="308586" relation="include">
        </childnode>
        <childnode refid="308587" relation="include">
        </childnode>
        <childnode refid="308588" relation="include">
        </childnode>
        <childnode refid="308589" relation="include">
        </childnode>
      </node>
      <node id="308594">
        <label>AthenaKernel/IOVSvcDefs.h</label>
      </node>
      <node id="308590">
        <label>AthenaPoolUtilities/AthenaAttributeList.h</label>
      </node>
      <node id="308597">
        <label>vector</label>
      </node>
      <node id="308591">
        <label>MCBunchCrossingTool.h</label>
        <link refid="d7/d28/MCBunchCrossingTool_8h_source"/>
        <childnode refid="308592" relation="include">
        </childnode>
        <childnode refid="308593" relation="include">
        </childnode>
        <childnode refid="308594" relation="include">
        </childnode>
        <childnode refid="308595" relation="include">
        </childnode>
        <childnode refid="308614" relation="include">
        </childnode>
      </node>
      <node id="308583">
        <label>utility</label>
      </node>
      <node id="308611">
        <label>sstream</label>
      </node>
      <node id="308615">
        <label>TrigAnalysisInterfaces/IBunchCrossingConfProvider.h</label>
        <link refid="d7/d6d/IBunchCrossingConfProvider_8h_source"/>
        <childnode refid="308597" relation="include">
        </childnode>
        <childnode refid="308601" relation="include">
        </childnode>
      </node>
      <node id="308609">
        <label>iosfwd</label>
      </node>
      <node id="308579">
        <label>cstdlib</label>
      </node>
      <node id="308585">
        <label>cstddef</label>
      </node>
      <node id="308612">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="308610">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="308588" relation="include">
        </childnode>
        <childnode refid="308611" relation="include">
        </childnode>
        <childnode refid="308600" relation="include">
        </childnode>
        <childnode refid="308604" relation="include">
        </childnode>
        <childnode refid="308601" relation="include">
        </childnode>
        <childnode refid="308612" relation="include">
        </childnode>
      </node>
      <node id="308602">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="308613">
        <label>TrigBunchCrossingTool/BunchTrain.h</label>
        <link refid="d5/d28/BunchTrain_8h_source"/>
        <childnode refid="308596" relation="include">
        </childnode>
        <childnode refid="308609" relation="include">
        </childnode>
        <childnode refid="308610" relation="include">
        </childnode>
        <childnode refid="308608" relation="include">
        </childnode>
      </node>
      <node id="308593">
        <label>GaudiKernel/IIncidentSvc.h</label>
      </node>
      <node id="308596">
        <label>set</label>
      </node>
      <node id="308582">
        <label>algorithm</label>
      </node>
      <node id="308599">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="308600" relation="include">
        </childnode>
        <childnode refid="308601" relation="include">
        </childnode>
        <childnode refid="308604" relation="include">
        </childnode>
        <childnode refid="308606" relation="include">
        </childnode>
      </node>
      <node id="308606">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/d87/namespaceTrig">Trig</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>MCBunchCrossingTool.cxx<sp/>618331<sp/>2014-09-24<sp/>11:55:26Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gaudi/Athena<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthenaKernel/errorcheck.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d16/hashtable_8h" kindref="compound" tooltip="This is the TR1 hashtable implementation from gcc4, adapted to build in Atlas. Once...">CxxUtils/hashtable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthenaPoolUtilities/AthenaAttributeList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MCBunchCrossingTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigBunchCrossingTool/BunchCrossing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Trig<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>MC_DIGI_PARAM<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/Digitization/Parameters&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>BEAM_INTENSITY_PATTERN<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BeamIntensityPattern&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a48547c6c75f8d0f73d1027b424838a72" kindref="member" tooltip="Standard AlgTool constructor.">MCBunchCrossingTool::MCBunchCrossingTool</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*type*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IInterface*<sp/></highlight><highlight class="comment">/*parent*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>BunchCrossingToolBase(<sp/>name<sp/>),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_incidentSvc(<sp/></highlight><highlight class="stringliteral">&quot;IncidentSvc&quot;</highlight><highlight class="normal">,<sp/>name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>the<sp/>interfaces<sp/>provided<sp/>by<sp/>the<sp/>tool:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>declareInterface&lt;<sp/>IBunchCrossingTool<sp/>&gt;(<sp/>this<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>declareInterface&lt;<sp/>IBunchCrossingConfProvider<sp/>&gt;(<sp/>this<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>the<sp/>properties<sp/>of<sp/>the<sp/>tool:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;MinBunchIntensity&quot;</highlight><highlight class="normal">,<sp/>m_minBunchIntensity<sp/>=<sp/>0.1,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Minimum<sp/>intensity<sp/>for<sp/>a<sp/>bunch<sp/>crossing<sp/>to<sp/>be<sp/>considered<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;filled<sp/>crossing&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>StatusCode<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a0a2be26c85b96cb88dbf5baf31255753" kindref="member" tooltip="Regular AlgTool initialization function.">MCBunchCrossingTool::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>about<sp/>the<sp/>initialization:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>MCBunchCrossingTool<sp/>-<sp/>package<sp/>version:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>PACKAGE_VERSION<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Maximal<sp/>bunch<sp/>spacing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="db/df3/classTrig_1_1BunchCrossingToolBase_1acc703223701968694a4f2d576b84c1d7" kindref="member" tooltip="The maximum bunch spacing that the tool should consider.">m_maxBunchSpacing</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ns&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Length<sp/>of<sp/>train<sp/>front:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad7b926a368d2961e6ce655c9d81dd89d" kindref="member" tooltip="Length of the &amp;quot;front&amp;quot; of a bunch train.">m_frontLength</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ns&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Length<sp/>of<sp/>train<sp/>tail<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="db/df3/classTrig_1_1BunchCrossingToolBase_1afca1209ab406f0572af565103c65ca62" kindref="member" tooltip="Length of the &amp;quot;tail&amp;quot; of a bunch train.">m_tailLength</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ns&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Minimum<sp/>bunch-x<sp/>int.<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_minBunchIntensity<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>callback(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>detStore()-&gt;contains&lt;<sp/>AthenaAttributeList<sp/>&gt;(<sp/>MC_DIGI_PARAM<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataHandle&lt;<sp/>AthenaAttributeList<sp/>&gt;<sp/>aptr;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>detStore()-&gt;regFcn(<sp/>&amp;MCBunchCrossingTool::update,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>aptr,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MC_DIGI_PARAM,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isConfigured<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally<sp/>retrieve<sp/>the<sp/>incident<sp/>service:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>m_incidentSvc.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac8fde5be2aa2f7589131ccf6589662ed" kindref="member" tooltip="The simplest query: Is the bunch crossing filled or not?">MCBunchCrossingTool::isFilled</ref>(<sp/>bcid_type<sp/>bcid<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac8fde5be2aa2f7589131ccf6589662ed" kindref="member" tooltip="The simplest query: Is the bunch crossing filled or not?">BunchCrossingToolBase::isFilled</ref>(<sp/>bcid<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a3ab0a18ef9d9bdc06b4c18acddfc36f3" kindref="member" tooltip="Function deciding if there was a bunch from &amp;quot;beam 1&amp;quot; in this bunch crossing...">MCBunchCrossingTool::isBeam1</ref>(<sp/>bcid_type<sp/>bcid<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a3ab0a18ef9d9bdc06b4c18acddfc36f3" kindref="member" tooltip="Function deciding if there was a bunch from &amp;quot;beam 1&amp;quot; in this bunch crossing...">BunchCrossingToolBase::isBeam1</ref>(<sp/>bcid<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac9ae6d6ba637900092c1d26b1d82c217" kindref="member" tooltip="Function deciding if there was a bunch from &amp;quot;beam 2&amp;quot; in this bunch crossing...">MCBunchCrossingTool::isBeam2</ref>(<sp/>bcid_type<sp/>bcid<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac9ae6d6ba637900092c1d26b1d82c217" kindref="member" tooltip="Function deciding if there was a bunch from &amp;quot;beam 2&amp;quot; in this bunch crossing...">BunchCrossingToolBase::isBeam2</ref>(<sp/>bcid<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a461c2b1eb11d7c3333b0229923d034f2" kindref="member" tooltip="Function returning the &amp;quot;intensity&amp;quot; of a given bunch crossing.">MCBunchCrossingTool::bcIntensity</ref>(<sp/>bcid_type<sp/>bcid,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeamType<sp/>type<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a461c2b1eb11d7c3333b0229923d034f2" kindref="member" tooltip="Function returning the &amp;quot;intensity&amp;quot; of a given bunch crossing.">BunchCrossingToolBase::bcIntensity</ref>(<sp/>bcid,<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cf" kindref="member" tooltip="Simplified type for a given bunch crossing.">IBunchCrossingTool::BunchCrossingType</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ae73075ec935b72664f7a585414372693" kindref="member" tooltip="Get the type of the specific bunch crossing.">MCBunchCrossingTool::bcType</ref>(<sp/>bcid_type<sp/>bcid<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfad69950ed575625ca7e0c9905bb99f14d" kindref="member" tooltip="This is a filled, single bunch (not in a train).">Single</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ae73075ec935b72664f7a585414372693" kindref="member" tooltip="Get the type of the specific bunch crossing.">BunchCrossingToolBase::bcType</ref>(<sp/>bcid<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1acc68b272d6f04a98fd8cc147833b6a64" kindref="member" tooltip="Gap before a particular bunch.">MCBunchCrossingTool::gapBeforeBunch</ref>(<sp/>bcid_type<sp/>bcid,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BunchDistanceType<sp/>dtype,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BunchFillType<sp/>ftype<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1acc68b272d6f04a98fd8cc147833b6a64" kindref="member" tooltip="Gap before a particular bunch.">BunchCrossingToolBase::gapBeforeBunch</ref>(<sp/>bcid,<sp/>dtype,<sp/>ftype<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a8f78cac1b71b78cf767767524ed199d7" kindref="member" tooltip="Gap after a particular bunch.">MCBunchCrossingTool::gapAfterBunch</ref>(<sp/>bcid_type<sp/>bcid,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BunchDistanceType<sp/>dtype,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BunchFillType<sp/>ftype<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a8f78cac1b71b78cf767767524ed199d7" kindref="member" tooltip="Gap after a particular bunch.">BunchCrossingToolBase::gapAfterBunch</ref>(<sp/>bcid,<sp/>dtype,<sp/>ftype<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1acd8316f25da4cce67f4bb9f2d9c0201b" kindref="member" tooltip="Function returning whether the previous bunches were filled, and how.">MCBunchCrossingTool::bunchesInFront</ref>(<sp/>bcid_type<sp/>bcid,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bunches<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bunches<sp/>-<sp/>1;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1acd8316f25da4cce67f4bb9f2d9c0201b" kindref="member" tooltip="Function returning whether the previous bunches were filled, and how.">BunchCrossingToolBase::bunchesInFront</ref>(<sp/>bcid,<sp/>bunches<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a259a9ab1e51ad92af759b09309fb4845" kindref="member" tooltip="Function returning whether the following bunches were filled, and how.">MCBunchCrossingTool::bunchesAfter</ref>(<sp/>bcid_type<sp/>bcid,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bunches<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bunches<sp/>-<sp/>1;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a259a9ab1e51ad92af759b09309fb4845" kindref="member" tooltip="Function returning whether the following bunches were filled, and how.">BunchCrossingToolBase::bunchesAfter</ref>(<sp/>bcid,<sp/>bunches<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a2371cd65b547f431e0781fda40f991c9" kindref="member" tooltip="Function returning the intensities of the bunch crossings before the reference.">MCBunchCrossingTool::bunchIntInFront</ref>(<sp/>bcid_type<sp/>bcid,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bunches,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeamType<sp/>type<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bunches<sp/>-<sp/>1;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a2371cd65b547f431e0781fda40f991c9" kindref="member" tooltip="Function returning the intensities of the bunch crossings before the reference.">BunchCrossingToolBase::bunchIntInFront</ref>(<sp/>bcid,<sp/>bunches,<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a5cc5fa16b7c9746c169e0d3bf48e63f9" kindref="member" tooltip="Function returning the intensities of the bunch crossings after the reference.">MCBunchCrossingTool::bunchIntAfter</ref>(<sp/>bcid_type<sp/>bcid,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bunches,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeamType<sp/>type<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bunches<sp/>-<sp/>1;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a5cc5fa16b7c9746c169e0d3bf48e63f9" kindref="member" tooltip="Function returning the intensities of the bunch crossings after the reference.">BunchCrossingToolBase::bunchIntAfter</ref>(<sp/>bcid,<sp/>bunches,<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1adcd6b90147d8f2f57488fe486288e1cb" kindref="member" tooltip="Get the number of filled bunches in the current configuration.">MCBunchCrossingTool::numberOfFilledBunches</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1adcd6b90147d8f2f57488fe486288e1cb" kindref="member" tooltip="Get the number of filled bunches in the current configuration.">BunchCrossingToolBase::numberOfFilledBunches</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1ad30fc9b02c7c88c2beadda0071a0d4a6" kindref="member" tooltip="Declare the interface that this class provides.">IBunchCrossingConfProvider::configid_type</ref><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a39d11665c402dd15251de49f17678658" kindref="member" tooltip="Unique identifier for the current configuration.">MCBunchCrossingTool::configID</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac3e74e966a491d171f98fc57379202a5" kindref="member" tooltip="Function providing the BCIDs of the configured colliding bunches.">MCBunchCrossingTool::configuredBCIDs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>int<sp/>&gt;();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac3e74e966a491d171f98fc57379202a5" kindref="member" tooltip="Function providing the BCIDs of the configured colliding bunches.">BunchCrossingConfProviderBase::configuredBCIDs</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1accf5d0162458465ee6cf4cc5843a83b5" kindref="member" tooltip="Function providing the intensities of the configured colliding bunches.">MCBunchCrossingTool::configuredIntensitiesBeam1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_isConfigured<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>float<sp/>&gt;();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>intensities;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d6/db1/classTrig_1_1BunchCrossing_1a9008ae1417ffbe698a792bd4fc19caa7" kindref="member" tooltip="The maximum number of bunches that can be in the LHC.">BunchCrossing::MAX_BCID</ref>;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac8fde5be2aa2f7589131ccf6589662ed" kindref="member" tooltip="The simplest query: Is the bunch crossing filled or not?">isFilled</ref>(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensities.push_back(<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a461c2b1eb11d7c3333b0229923d034f2" kindref="member" tooltip="Function returning the &amp;quot;intensity&amp;quot; of a given bunch crossing.">bcIntensity</ref>(<sp/>i,<sp/><ref refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a9d05da22e67bd5be8ea2807a72563690" kindref="member" tooltip="The returned intensity should describe the BC.">Crossing</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intensities;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/><ref refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a09b94e2b5e0e0efbdcf059561a80b0f3" kindref="member" tooltip="Function providing the intensities of the configured colliding bunches.">MCBunchCrossingTool::configuredIntensitiesBeam2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>float<sp/>&gt;();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>StatusCode<sp/>MCBunchCrossingTool::update(<sp/>IOVSVC_CALLBACK_ARGS_P(<sp/></highlight><highlight class="comment">/*I*/</highlight><highlight class="normal">,<sp/>keys<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Updating<sp/>the<sp/>bunch<sp/>configuration&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>internal<sp/>settings:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>run_update<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isConfigured<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>what<sp/>kind<sp/>of<sp/>keys<sp/>we<sp/>got.<sp/>In<sp/>principle<sp/>the<sp/>function<sp/>should<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>receive<sp/>the<sp/>&quot;/Digitization/Parameters&quot;<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg(<sp/>MSG::DEBUG<sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Update<sp/>called<sp/>with<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>keys.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>keys:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::list&lt;<sp/>std::string<sp/>&gt;::const_iterator<sp/>itr<sp/>=<sp/>keys.begin();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::list&lt;<sp/>std::string<sp/>&gt;::const_iterator<sp/>end<sp/>=<sp/>keys.end();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>itr<sp/>!=<sp/>end;<sp/>++itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*itr<sp/>==<sp/>MC_DIGI_PARAM<sp/>)<sp/>run_update<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>*itr;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg()<sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>that&apos;s<sp/>not<sp/>the<sp/>key<sp/>that<sp/>we<sp/>received<sp/>after<sp/>all,<sp/>let&apos;s<sp/>just<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>silently...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>run_update<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>object<sp/>describing<sp/>the<sp/>configuration:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataHandle&lt;<sp/>AthenaAttributeList<sp/>&gt;<sp/>digiParam;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>detStore()-&gt;retrieve(<sp/>digiParam,<sp/>MC_DIGI_PARAM<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>data<sp/>to<sp/>extract:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>bunches;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>the<sp/>helper<sp/>variable<sp/>to<sp/>extract<sp/>it<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sbunches;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>the<sp/>bunch<sp/>pattern:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AthenaAttributeList::const_iterator<sp/>attr_itr<sp/>=<sp/>digiParam-&gt;begin();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AthenaAttributeList::const_iterator<sp/>attr_end<sp/>=<sp/>digiParam-&gt;end();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>attr_itr<sp/>!=<sp/>attr_end;<sp/>++attr_itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>attr_itr-&gt;specification().name()<sp/>==<sp/>BEAM_INTENSITY_PATTERN<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbunches<sp/>=<sp/>attr_itr-&gt;data&lt;<sp/>std::string<sp/>&gt;();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REPORT_MESSAGE(<sp/>MSG::VERBOSE<sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Beam<sp/>pattern<sp/>string:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sbunches;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>the<sp/>string<sp/>into<sp/>a<sp/>vector<sp/>of<sp/>floats:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bunches<sp/>=<sp/>tokenize(<sp/>sbunches<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REPORT_MESSAGE(<sp/>MSG::DEBUG<sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Beam<sp/>pattern:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bunches;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>found<sp/>the<sp/>metadata:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>bunches.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Bunch<sp/>structure<sp/>information<sp/>not<sp/>found<sp/>in:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>MC_DIGI_PARAM<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Tool<sp/>will<sp/>report<sp/>all<sp/>BCIDs<sp/>as<sp/>single<sp/>filled<sp/>bunches&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isConfigured<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>everybody<sp/>know<sp/>that<sp/>the<sp/>configuration<sp/>of<sp/>the<sp/>tool<sp/>has<sp/>changed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_incidentSvc-&gt;fireIncident(<sp/>Incident(<sp/></highlight><highlight class="stringliteral">&quot;BunchConfiguration<sp/>update&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1af55d06296531100f4d78dfd5aee04e81" kindref="member" tooltip="Type name for the incident that such tools should emit.">BUNCH_CONFIG_INCIDENT_NAME</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>it<sp/>into<sp/>vectors<sp/>of<sp/>filled<sp/>bunches<sp/>and<sp/>intensities:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>filled_bunches;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>filled_intensities;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>pattern<sp/>&quot;fits<sp/>into&quot;<sp/>the<sp/>LHC:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>BunchCrossing::MAX_BCID<sp/>%<sp/>bunches.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Bunch<sp/>pattern<sp/>doesn&apos;t<sp/>\&quot;fit<sp/>into\&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>BunchCrossing::MAX_BCID<sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>loop<sp/>doesn&apos;t<sp/>go<sp/>all<sp/>the<sp/>way<sp/>up<sp/>to<sp/>MAX_BCID/2<sp/>in<sp/>order<sp/>not<sp/>to<sp/>produce<sp/>&quot;weird&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>patterns<sp/>half<sp/>way.<sp/>This<sp/>should<sp/>be<sp/>pretty<sp/>safe<sp/>to<sp/>do,<sp/>because<sp/>the<sp/>MC<sp/>BCIDs<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>be<sp/>in<sp/>the<sp/>range<sp/>defined<sp/>by<sp/>the<sp/>pattern<sp/>from<sp/>the<sp/>metadata.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<sp/>BunchCrossing::MAX_BCID<sp/>/<sp/>2<sp/>-<sp/>20<sp/>);<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos1<sp/>=<sp/>i<sp/>%<sp/>bunches.size();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos2<sp/>=<sp/>bunches.size()<sp/>-<sp/>1<sp/>-<sp/>(<sp/>i<sp/>%<sp/>bunches.size()<sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bunches[<sp/>pos1<sp/>]<sp/>&gt;<sp/>m_minBunchIntensity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filled_bunches.push_back(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filled_intensities.push_back(<sp/>bunches[<sp/>pos1<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bunches[<sp/>pos2<sp/>]<sp/>&gt;<sp/>m_minBunchIntensity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filled_bunches.push_back(<sp/>BunchCrossing::MAX_BCID<sp/>-<sp/>1<sp/>-<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filled_intensities.push_back(<sp/>bunches[<sp/>pos2<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>sample<sp/>size<sp/>fits<sp/>into<sp/>the<sp/>number<sp/>of<sp/>available<sp/>bunches,<sp/>the<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>pretty<sp/>simple:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Bunch<sp/>pattern<sp/>\&quot;fits<sp/>into\&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>BunchCrossing::MAX_BCID<sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BunchCrossing::MAX_BCID;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>i<sp/>%<sp/>bunches.size();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bunches[<sp/>pos<sp/>]<sp/>&gt;<sp/>m_minBunchIntensity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filled_bunches.push_back(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filled_intensities.push_back(<sp/>bunches[<sp/>pos<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>let<sp/>the<sp/>base<sp/>class<sp/>interpret<sp/>the<sp/>information:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_CHECK(<sp/><ref refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ac983cbae796e341d7371902b41a4587c" kindref="member" tooltip="Interpret the configuration for single bunches.">loadSingleBunches</ref>(<sp/>filled_bunches,<sp/>filled_intensities<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_CHECK(<sp/><ref refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a289406fc3f36e544aa02e16673dd3a04" kindref="member" tooltip="Interpret the configuration for bunch trains.">loadBunchTrains</ref>(<sp/>filled_bunches,<sp/>filled_intensities<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_CHECK(<sp/><ref refid="db/df3/classTrig_1_1BunchCrossingToolBase_1ad84da5ff8344107234e53aeff5e18bee" kindref="member" tooltip="Interpret the configuration for unpaired bunches.">loadUnpairedBunches</ref>(<sp/>std::vector&lt;<sp/>int<sp/>&gt;(),</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>configuration<sp/>to<sp/>give<sp/>some<sp/>feedback<sp/>to<sp/>the<sp/>user:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/df3/classTrig_1_1BunchCrossingToolBase_1a29b990621fc9b619cf2b7bd653a36c1d" kindref="member" tooltip="Function printing the configuration of the tool.">printConfig</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isConfigured<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_id<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1ad30fc9b02c7c88c2beadda0071a0d4a6" kindref="member" tooltip="Declare the interface that this class provides.">configid_type</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="d4/dbc/structSG_1_1hash_3_01std_1_1string_01_4" kindref="compound">SG::hash&lt; std::string &gt;</ref>()(<sp/>sbunches<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REPORT_MESSAGE(<sp/>MSG::DEBUG<sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ID<sp/>assigned<sp/>to<sp/>configuration:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_id;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>everybody<sp/>know<sp/>that<sp/>the<sp/>configuration<sp/>of<sp/>the<sp/>tool<sp/>has<sp/>changed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_incidentSvc-&gt;fireIncident(<sp/>Incident(<sp/></highlight><highlight class="stringliteral">&quot;BunchConfiguration<sp/>update&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1af55d06296531100f4d78dfd5aee04e81" kindref="member" tooltip="Type name for the incident that such tools should emit.">BUNCH_CONFIG_INCIDENT_NAME</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>MCBunchCrossingTool::tokenize(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pattern<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>vector:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>&apos;[&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string::size_type<sp/>pos<sp/>=<sp/>pattern.find(<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pos<sp/>==<sp/>pattern.npos<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>string,<sp/>finding<sp/>all<sp/>the<sp/>float<sp/>numbers<sp/>in<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string::size_type<sp/>prev_pos<sp/>=<sp/>pos<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>last_number<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>&quot;end&quot;<sp/>of<sp/>the<sp/>number:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>pattern.find(<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>prev_pos<sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pos<sp/>==<sp/>pattern.npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>pattern.find(<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/>prev_pos<sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pos<sp/>==<sp/>pattern.npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_number<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Show<sp/>that<sp/>we<sp/>reached<sp/>the<sp/>end<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>string<sp/>into<sp/>a<sp/>float:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>number<sp/>=<sp/>pattern.substr(<sp/>prev_pos,<sp/>pos<sp/>-<sp/>prev_pos<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(<sp/>atof(<sp/>number.c_str()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_pos<sp/>=<sp/>pos<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>last_number<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Leave<sp/>the<sp/>loop<sp/>if<sp/>we&apos;re<sp/>finished...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namesapce<sp/>Trig</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx"/>
  </compounddef>
</doxygen>
