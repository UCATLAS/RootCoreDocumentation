<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/d9b/classSH_1_1DiskListSRM" kind="class" prot="public">
    <compoundname>SH::DiskListSRM</compoundname>
    <basecompoundref refid="d1/d5b/classSH_1_1DiskList" prot="public" virt="non-virtual">SH::DiskList</basecompoundref>
    <includes refid="dc/d68/DiskListSRM_8h" local="no">DiskListSRM.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d0/d9b/classSH_1_1DiskListSRM_1a536f54d479ba2c414a0f643fa5cdd33c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListSRM::m_dir</definition>
        <argsstring></argsstring>
        <name>m_dir</name>
        <briefdescription>
<para>the directory we are reading </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d9b/classSH_1_1DiskListSRM_1ac65874819c3af8f23d8331d7aa247bfe" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListSRM::m_prefix</definition>
        <argsstring></argsstring>
        <name>m_prefix</name>
        <briefdescription>
<para>the directory from with to read actual files </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="100" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d9b/classSH_1_1DiskListSRM_1aaffc46cd363769dcc29119d21e450aeb" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListSRM::m_list</definition>
        <argsstring></argsstring>
        <name>m_list</name>
        <briefdescription>
<para>the result of the directory listing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="104" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d9b/classSH_1_1DiskListSRM_1a757a67441b36f3619eccc6db974ac774" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListSRM::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <briefdescription>
<para>the last file we read </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d9b/classSH_1_1DiskListSRM_1a3fa9117b360de2190e597f1616739db4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SH::DiskListSRM::m_isDir</definition>
        <argsstring></argsstring>
        <name>m_isDir</name>
        <briefdescription>
<para>whether this is a directory </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="112" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/d9b/classSH_1_1DiskListSRM_1abb108b296e857d6e58d1605bff6e55a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SH::DiskListSRM::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1afe1f3b7accb6b9f2b3536956daf72d0f">testInvariant</reimplements>
        <briefdescription>
<para>test the invariant of this object </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListSRM.cxx" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9b/classSH_1_1DiskListSRM_1a3893b52bf754cc756adbdb238c21280e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SH::DiskListSRM::DiskListSRM</definition>
        <argsstring>(const std::string &amp;val_dir)</argsstring>
        <name>DiskListSRM</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_dir</declname>
        </param>
        <briefdescription>
<para>make the listing for the given directory </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory to list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Guarantee</title><para>strong<linebreak/>
 </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListSRM.cxx" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9b/classSH_1_1DiskListSRM_1a85e19ada5b46bef2582c058186a6f267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SH::DiskListSRM::DiskListSRM</definition>
        <argsstring>(const std::string &amp;val_dir, const std::string &amp;val_prefix)</argsstring>
        <name>DiskListSRM</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_prefix</declname>
        </param>
        <briefdescription>
<para>make the listing for the given directory, but replacing the directory with prefix for the path </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory to list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>the prefix with which val_dir will be replaced in the reported paths </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Guarantee</title><para>strong<linebreak/>
 </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II<linebreak/>
 </para></simplesect>
<simplesect kind="par"><title>Rationale</title><para>this mechanism is meant to allow scanning file servers using one protocol, but then accessing them using another </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListSRM.cxx" bodystart="45" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d0/d9b/classSH_1_1DiskListSRM_1a6372afe61bfbee45d3d7dd036a62d95b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SH::DiskListSRM::getNext</definition>
        <argsstring>()</argsstring>
        <name>getNext</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1abdeb673c1a9e9c0db6719d888247130f">getNext</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getNext()"><para><copydoc link="next()"><para>get the next list entry </para><para><simplesect kind="return"><para>whether we found another entry </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>i/o errors </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">DiskList::next()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="71" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListSRM.cxx" bodystart="54" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9b/classSH_1_1DiskListSRM_1afa1c1e566bdb1def2bbc2a5a2c36c872" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string SH::DiskListSRM::getPath</definition>
        <argsstring>() const </argsstring>
        <name>getPath</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1abdd1551b406aad8a16ad3a06e5b50dad">getPath</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getPath()"><para><copydoc link="path()"><para>the path for the current entry. </para><para><simplesect kind="return"><para>the path for the current entry </para></simplesect>
<simplesect kind="pre"><para>(soft) <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">next()</ref> has been called successfully </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>strong failures: out of memory III </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1a260a5bf756383588dadee7b6dfe67138" kindref="member">DiskList::path()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="76" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListSRM.cxx" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9b/classSH_1_1DiskListSRM_1a3b45d8af241b2e6d5a0a213a881f5c3b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d1/d5b/classSH_1_1DiskList" kindref="compound">DiskList</ref> *</type>
        <definition>DiskList * SH::DiskListSRM::doOpenDir</definition>
        <argsstring>() const </argsstring>
        <name>doOpenDir</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1a93f295d8f42dbdab1dbb8a7e03004a32">doOpenDir</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::doOpenDir()"><para><copydoc link="openDir()"><para>make a new list object for the sub-directory </para><para><simplesect kind="return"><para>a new list object for the sub-directory, or <computeroutput>NULL</computeroutput> if it is not a directory </para></simplesect>
<simplesect kind="pre"><para>(soft) <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">next()</ref> has been called successfully </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory III </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1af847547a93cff6e6e27c75c8a84dd2f3" kindref="member">DiskList::openDir()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListSRM.cxx" bodystart="106" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9b/classSH_1_1DiskListSRM_1af187656e45b29a9f245f1fe62558296a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string SH::DiskListSRM::getDirname</definition>
        <argsstring>() const </argsstring>
        <name>getDirname</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1a55ab282c7345c5c4e6acafa9b5972fd6">getDirname</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getDirname()"><para><copydoc link="dirname()"><para>the base path for the directory listed </para><para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1a663385469f51471d4cd3053f7671f741" kindref="member">DiskList::dirname()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="86" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListSRM.cxx" bodystart="119" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a <ref refid="d1/d5b/classSH_1_1DiskList" kindref="compound">DiskList</ref> implementation for the SRM protocol </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5137">
        <label>SH::DiskList</label>
        <link refid="d1/d5b/classSH_1_1DiskList"/>
      </node>
      <node id="5136">
        <label>SH::DiskListSRM</label>
        <link refid="d0/d9b/classSH_1_1DiskListSRM"/>
        <childnode refid="5137" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5139">
        <label>SH::DiskList</label>
        <link refid="d1/d5b/classSH_1_1DiskList"/>
      </node>
      <node id="5140">
        <label>string</label>
      </node>
      <node id="5138">
        <label>SH::DiskListSRM</label>
        <link refid="d0/d9b/classSH_1_1DiskListSRM"/>
        <childnode refid="5139" relation="public-inheritance">
        </childnode>
        <childnode refid="5140" relation="usage">
          <edgelabel>m_list</edgelabel>
          <edgelabel>m_dir</edgelabel>
          <edgelabel>m_prefix</edgelabel>
          <edgelabel>m_file</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListSRM.h" bodystart="21" bodyend="113"/>
    <listofallmembers>
      <member refid="d1/d5b/classSH_1_1DiskList_1a663385469f51471d4cd3053f7671f741" prot="public" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>dirname</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1ae4be65474961b630fec4158f7ce3185e" prot="protected" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>DiskList</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1a3893b52bf754cc756adbdb238c21280e" prot="public" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>DiskListSRM</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1a85e19ada5b46bef2582c058186a6f267" prot="public" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>DiskListSRM</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1a3b45d8af241b2e6d5a0a213a881f5c3b" prot="protected" virt="virtual"><scope>SH::DiskListSRM</scope><name>doOpenDir</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1a17d746155a8cacb20f97fd34bd11e427" prot="public" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>fileName</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1af187656e45b29a9f245f1fe62558296a" prot="protected" virt="virtual"><scope>SH::DiskListSRM</scope><name>getDirname</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1a6372afe61bfbee45d3d7dd036a62d95b" prot="protected" virt="virtual"><scope>SH::DiskListSRM</scope><name>getNext</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1afa1c1e566bdb1def2bbc2a5a2c36c872" prot="protected" virt="virtual"><scope>SH::DiskListSRM</scope><name>getPath</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1a536f54d479ba2c414a0f643fa5cdd33c" prot="private" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>m_dir</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1a757a67441b36f3619eccc6db974ac774" prot="private" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>m_file</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1a3fa9117b360de2190e597f1616739db4" prot="private" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>m_isDir</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1aaffc46cd363769dcc29119d21e450aeb" prot="private" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>m_list</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1ac65874819c3af8f23d8331d7aa247bfe" prot="private" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>m_prefix</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" prot="public" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>next</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1af847547a93cff6e6e27c75c8a84dd2f3" prot="public" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>openDir</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1a260a5bf756383588dadee7b6dfe67138" prot="public" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>path</name></member>
      <member refid="d0/d9b/classSH_1_1DiskListSRM_1abb108b296e857d6e58d1605bff6e55a7" prot="public" virt="non-virtual"><scope>SH::DiskListSRM</scope><name>testInvariant</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1aba03cd19b877c25e63b78c5fd27da7c5" prot="public" virt="virtual"><scope>SH::DiskListSRM</scope><name>~DiskList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
