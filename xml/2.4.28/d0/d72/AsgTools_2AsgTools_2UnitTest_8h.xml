<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h" kind="file">
    <compoundname>UnitTest.h</compoundname>
    <includes refid="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h" local="no">AsgTools/MessageCheck.h</includes>
    <includes local="no">string</includes>
    <includes local="no">exception</includes>
    <includes refid="d8/d73/gtest_8h" local="no">gtest/gtest.h</includes>
    <includedby refid="d5/d94/AsgExampleTools_2test_2gt__AnaToolHandle__test_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/test/gt_AnaToolHandle_test.cxx</includedby>
    <includedby refid="d1/daf/gt__ToolHandle__test_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/test/gt_ToolHandle_test.cxx</includedby>
    <includedby refid="d8/d58/AsgTools_2Root_2UnitTest_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/UnitTest.cxx</includedby>
    <includedby refid="da/d8d/gt__asgtools__toolhandle__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/test/gt_asgtools_toolhandle_test.cxx</includedby>
    <includedby refid="d6/d77/gt__UnitTest__test_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/test/gt_UnitTest_test.cxx</includedby>
    <includedby refid="da/d1b/AssociationUtils_2test_2gt__AnaToolHandle__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/test/gt_AnaToolHandle_test.cxx</includedby>
    <includedby refid="d9/da5/gt__OverlapRemovalInit__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/test/gt_OverlapRemovalInit_test.cxx</includedby>
    <includedby refid="d9/da4/gt__toolbox__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/test/gt_toolbox_test.cxx</includedby>
    <includedby refid="d5/d55/gt__KinSelect_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/test/gt_KinSelect.cxx</includedby>
    <includedby refid="d6/d45/it__BaseTools__test_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/test/it_BaseTools_test.cxx</includedby>
    <includedby refid="da/d24/gt__hadd_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/test/gt_hadd.cxx</includedby>
    <includedby refid="dd/d2f/it__GridTools_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/test/it_GridTools.cxx</includedby>
    <incdepgraph>
      <node id="9870">
        <label>sys/stat.h</label>
      </node>
      <node id="9897">
        <label>gtest/gtest-printers.h</label>
        <link refid="d0/d6d/gtest-printers_8h_source"/>
        <childnode refid="9860" relation="include">
        </childnode>
        <childnode refid="9873" relation="include">
        </childnode>
        <childnode refid="9856" relation="include">
        </childnode>
        <childnode refid="9874" relation="include">
        </childnode>
        <childnode refid="9861" relation="include">
        </childnode>
        <childnode refid="9863" relation="include">
        </childnode>
        <childnode refid="9862" relation="include">
        </childnode>
        <childnode refid="9898" relation="include">
        </childnode>
      </node>
      <node id="9903">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="de/dce/gtest-typed-test_8h_source"/>
        <childnode refid="9863" relation="include">
        </childnode>
        <childnode refid="9889" relation="include">
        </childnode>
      </node>
      <node id="9893">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="dc/df2/gtest-param-util_8h_source"/>
        <childnode refid="9864" relation="include">
        </childnode>
        <childnode refid="9894" relation="include">
        </childnode>
        <childnode refid="9885" relation="include">
        </childnode>
        <childnode refid="9874" relation="include">
        </childnode>
        <childnode refid="9861" relation="include">
        </childnode>
        <childnode refid="9862" relation="include">
        </childnode>
        <childnode refid="9895" relation="include">
        </childnode>
        <childnode refid="9863" relation="include">
        </childnode>
        <childnode refid="9897" relation="include">
        </childnode>
      </node>
      <node id="9904">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="db/d6e/gtest__pred__impl_8h_source"/>
      </node>
      <node id="9883">
        <label>iomanip</label>
      </node>
      <node id="9859">
        <label>limits</label>
      </node>
      <node id="9898">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="da/db0/internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="9896">
        <label>assert.h</label>
      </node>
      <node id="9894">
        <label>iterator</label>
      </node>
      <node id="9882">
        <label>float.h</label>
      </node>
      <node id="9862">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="d5/da1/gtest-internal_8h_source"/>
        <childnode refid="9863" relation="include">
        </childnode>
        <childnode refid="9864" relation="include">
        </childnode>
        <childnode refid="9882" relation="include">
        </childnode>
        <childnode refid="9868" relation="include">
        </childnode>
        <childnode refid="9883" relation="include">
        </childnode>
        <childnode refid="9859" relation="include">
        </childnode>
        <childnode refid="9884" relation="include">
        </childnode>
        <childnode refid="9885" relation="include">
        </childnode>
        <childnode refid="9856" relation="include">
        </childnode>
        <childnode refid="9861" relation="include">
        </childnode>
        <childnode refid="9886" relation="include">
        </childnode>
        <childnode refid="9887" relation="include">
        </childnode>
        <childnode refid="9888" relation="include">
        </childnode>
        <childnode refid="9889" relation="include">
        </childnode>
      </node>
      <node id="9854">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="9866">
        <label>stdlib.h</label>
      </node>
      <node id="9851">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h</label>
        <link refid="AsgTools/AsgTools/UnitTest.h"/>
        <childnode refid="9852" relation="include">
        </childnode>
        <childnode refid="9856" relation="include">
        </childnode>
        <childnode refid="9857" relation="include">
        </childnode>
        <childnode refid="9858" relation="include">
        </childnode>
      </node>
      <node id="9856">
        <label>string</label>
      </node>
      <node id="9884">
        <label>map</label>
      </node>
      <node id="9855">
        <label>AthenaBaseComps/AthMessaging.h</label>
      </node>
      <node id="9857">
        <label>exception</label>
      </node>
      <node id="9899">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="dc/db7/gtest-param-util-generated_8h_source"/>
        <childnode refid="9893" relation="include">
        </childnode>
        <childnode refid="9863" relation="include">
        </childnode>
      </node>
      <node id="9865">
        <label>stddef.h</label>
      </node>
      <node id="9881">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="d1/d63/gtest-tuple_8h_source"/>
        <childnode refid="9874" relation="include">
        </childnode>
      </node>
      <node id="9890">
        <label>gtest/gtest-death-test.h</label>
        <link refid="d4/d59/gtest-death-test_8h_source"/>
        <childnode refid="9891" relation="include">
        </childnode>
      </node>
      <node id="9860">
        <label>ostream</label>
      </node>
      <node id="9892">
        <label>gtest/gtest-param-test.h</label>
        <link refid="d0/d31/gtest-param-test_8h_source"/>
        <childnode refid="9863" relation="include">
        </childnode>
        <childnode refid="9874" relation="include">
        </childnode>
        <childnode refid="9862" relation="include">
        </childnode>
        <childnode refid="9893" relation="include">
        </childnode>
        <childnode refid="9899" relation="include">
        </childnode>
      </node>
      <node id="9900">
        <label>gtest/gtest_prod.h</label>
        <link refid="d4/db1/gtest__prod_8h_source"/>
      </node>
      <node id="9869">
        <label>sys/types.h</label>
      </node>
      <node id="9888">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="dc/d79/gtest-filepath_8h_source"/>
        <childnode refid="9887" relation="include">
        </childnode>
      </node>
      <node id="9868">
        <label>string.h</label>
      </node>
      <node id="9880">
        <label>typeinfo</label>
      </node>
      <node id="9852">
        <label>AsgTools/MessageCheck.h</label>
        <link refid="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_source"/>
        <childnode refid="9853" relation="include">
        </childnode>
        <childnode refid="9854" relation="include">
        </childnode>
        <childnode refid="9855" relation="include">
        </childnode>
      </node>
      <node id="9886">
        <label>gtest/gtest-message.h</label>
        <link refid="d6/da4/gtest-message_8h_source"/>
        <childnode refid="9859" relation="include">
        </childnode>
        <childnode refid="9863" relation="include">
        </childnode>
      </node>
      <node id="9877">
        <label>unistd.h</label>
      </node>
      <node id="9861">
        <label>vector</label>
      </node>
      <node id="9876">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="d5/d66/custom_2gtest-port_8h_source"/>
      </node>
      <node id="9874">
        <label>utility</label>
      </node>
      <node id="9895">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="d0/d03/gtest-linked__ptr_8h_source"/>
        <childnode refid="9866" relation="include">
        </childnode>
        <childnode refid="9896" relation="include">
        </childnode>
        <childnode refid="9863" relation="include">
        </childnode>
      </node>
      <node id="9873">
        <label>sstream</label>
      </node>
      <node id="9858">
        <label>gtest/gtest.h</label>
        <link refid="d8/d73/gtest_8h_source"/>
        <childnode refid="9859" relation="include">
        </childnode>
        <childnode refid="9860" relation="include">
        </childnode>
        <childnode refid="9861" relation="include">
        </childnode>
        <childnode refid="9862" relation="include">
        </childnode>
        <childnode refid="9887" relation="include">
        </childnode>
        <childnode refid="9890" relation="include">
        </childnode>
        <childnode refid="9886" relation="include">
        </childnode>
        <childnode refid="9892" relation="include">
        </childnode>
        <childnode refid="9897" relation="include">
        </childnode>
        <childnode refid="9900" relation="include">
        </childnode>
        <childnode refid="9901" relation="include">
        </childnode>
        <childnode refid="9903" relation="include">
        </childnode>
        <childnode refid="9904" relation="include">
        </childnode>
      </node>
      <node id="9902">
        <label>iosfwd</label>
      </node>
      <node id="9887">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="d0/d45/gtest-string_8h_source"/>
        <childnode refid="9868" relation="include">
        </childnode>
        <childnode refid="9856" relation="include">
        </childnode>
        <childnode refid="9863" relation="include">
        </childnode>
      </node>
      <node id="9872">
        <label>iostream</label>
      </node>
      <node id="9878">
        <label>strings.h</label>
      </node>
      <node id="9889">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="d9/d97/gtest-type-util_8h_source"/>
        <childnode refid="9863" relation="include">
        </childnode>
      </node>
      <node id="9864">
        <label>ctype.h</label>
      </node>
      <node id="9863">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="d3/dc9/gtest-port_8h_source"/>
        <childnode refid="9864" relation="include">
        </childnode>
        <childnode refid="9865" relation="include">
        </childnode>
        <childnode refid="9866" relation="include">
        </childnode>
        <childnode refid="9867" relation="include">
        </childnode>
        <childnode refid="9868" relation="include">
        </childnode>
        <childnode refid="9869" relation="include">
        </childnode>
        <childnode refid="9870" relation="include">
        </childnode>
        <childnode refid="9871" relation="include">
        </childnode>
        <childnode refid="9872" relation="include">
        </childnode>
        <childnode refid="9873" relation="include">
        </childnode>
        <childnode refid="9856" relation="include">
        </childnode>
        <childnode refid="9874" relation="include">
        </childnode>
        <childnode refid="9861" relation="include">
        </childnode>
        <childnode refid="9875" relation="include">
        </childnode>
        <childnode refid="9876" relation="include">
        </childnode>
        <childnode refid="9877" relation="include">
        </childnode>
        <childnode refid="9878" relation="include">
        </childnode>
        <childnode refid="9879" relation="include">
        </childnode>
        <childnode refid="9880" relation="include">
        </childnode>
        <childnode refid="9881" relation="include">
        </childnode>
      </node>
      <node id="9853">
        <label>type_traits</label>
      </node>
      <node id="9885">
        <label>set</label>
      </node>
      <node id="9891">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="d0/d1a/gtest-death-test-internal_8h_source"/>
        <childnode refid="9862" relation="include">
        </childnode>
        <childnode refid="9867" relation="include">
        </childnode>
      </node>
      <node id="9871">
        <label>algorithm</label>
      </node>
      <node id="9879">
        <label>regex.h</label>
      </node>
      <node id="9875">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="d6/d76/gtest-port-arch_8h_source"/>
      </node>
      <node id="9867">
        <label>stdio.h</label>
      </node>
      <node id="9901">
        <label>gtest/gtest-test-part.h</label>
        <link refid="d1/d01/gtest-test-part_8h_source"/>
        <childnode refid="9902" relation="include">
        </childnode>
        <childnode refid="9861" relation="include">
        </childnode>
        <childnode refid="9862" relation="include">
        </childnode>
        <childnode refid="9887" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d1/d56/namespaceasg">asg</innernamespace>
    <innernamespace refid="d0/da8/namespaceasg_1_1detail">asg::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1a81a2a6b37b4705f9455c73261dab0f11" prot="public" static="no">
        <name>ASSERT_SUCCESS</name>
        <param><defname>x</defname></param>
        <initializer>ASSERT_EQ (asg::CheckHelper&lt;decltype(x)&gt;::successCode(), x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1aa8471b305e81ccd5deb55c47e342b6cf" prot="public" static="no">
        <name>EXPECT_SUCCESS</name>
        <param><defname>x</defname></param>
        <initializer>EXPECT_EQ (asg::CheckHelper&lt;decltype(x)&gt;::successCode(), x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1a50d031dcf90729b5e65711ac0e352ec2" prot="public" static="no">
        <name>ASSERT_FAILURE</name>
        <param><defname>x</defname></param>
        <initializer>ASSERT_EQ (asg::CheckHelper&lt;decltype(x)&gt;::failureCode(), x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1a89fc2cd0ef4a301216f2ffbf78c7f9b2" prot="public" static="no">
        <name>EXPECT_FAILURE</name>
        <param><defname>x</defname></param>
        <initializer>EXPECT_EQ (asg::CheckHelper&lt;decltype(x)&gt;::failureCode(), x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1a341a9141e4ee38ec8b9bc79185e1f7ca" prot="public" static="no">
        <name>ASSERT_THROW_REGEX</name>
        <param><defname>x</defname></param>
        <param><defname>regex</defname></param>
        <initializer>{ std::string internalTestMessage; try {				\
      x; internalTestMessage = std::string (&quot;expected statement &quot;) + #x &quot; to throw, but it didn&apos;t&quot;; \
    } catch (std::exception&amp; e) {					\
      if (!::asg::detail::matchesRegex ((regex), e.what())) {		\
	internalTestMessage = std::string (&quot;expected statement &quot;) + #x &quot; to throw message matching &quot; + (regex) + &quot;, but actual message didn&apos;t match: &quot; + e.what(); \
      } } catch (...) {							\
      internalTestMessage = std::string (&quot;statement &quot;) + #x &quot; threw an exception that didn&apos;t derive from std::exception&quot;; } \
    if (!internalTestMessage.empty())					\
      FAIL() &lt;&lt; internalTestMessage;					\
    else SUCCEED(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1a72e3dff88791e5688a72f887dbe549cf" prot="public" static="no">
        <name>EXPECT_THROW_REGEX</name>
        <param><defname>x</defname></param>
        <param><defname>regex</defname></param>
        <initializer>{ std::string internalTestMessage; try {				\
      x; internalTestMessage = std::string (&quot;expected statement &quot;) + #x &quot; to throw, but it didn&apos;t&quot;; \
    } catch (std::exception&amp; e) {					\
      if (!::asg::detail::matchesRegex ((regex), e.what())) {		\
	internalTestMessage = std::string (&quot;expected statement &quot;) + #x &quot; to throw message matching &quot; + (regex) + &quot;, but actual message didn&apos;t match: &quot; + e.what(); \
      } } catch (...) {							\
      internalTestMessage = std::string (&quot;statement &quot;) + #x &quot; threw an exception that didn&apos;t derive from std::exception&quot;; } \
    if (!internalTestMessage.empty())					\
      ADD_FAILURE() &lt;&lt; internalTestMessage;				\
    else SUCCEED(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1aa4dc25cfbd05be42fddfdbeb63ffcf0d" prot="public" static="no">
        <name>ASSERT_MATCH_REGEX</name>
        <param><defname>reg</defname></param>
        <param><defname>str</defname></param>
        <initializer>ASSERT_PRED2 (::asg::detail::matchesRegex, reg, str)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="71" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1af3fbd87e0ecbc0070e38fdcf3a4a6841" prot="public" static="no">
        <name>EXPECT_MATCH_REGEX</name>
        <param><defname>reg</defname></param>
        <param><defname>str</defname></param>
        <initializer>EXPECT_PRED2 (::asg::detail::matchesRegex, reg, str)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_1aefb28fcfc7932bc574c6452313572147" prot="public" static="no">
        <name>ATLAS_GOOGLE_TEST_MAIN</name>
        <initializer>int main (int argc, char **argv)		\
  {						\
    ::testing::InitGoogleTest (&amp;argc, argv);	\
    return RUN_ALL_TESTS();			\
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ASG_TOOLS__UNIT_TEST_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASG_TOOLS__UNIT_TEST_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2016.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgTools/MessageCheck.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">asg</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchesRegex<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>regex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CheckHelper;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_SUCCESS(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>ASSERT_EQ<sp/>(asg::CheckHelper&lt;decltype(x)&gt;::successCode(),<sp/>x)</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_SUCCESS(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ<sp/>(asg::CheckHelper&lt;decltype(x)&gt;::successCode(),<sp/>x)</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_FAILURE(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/>ASSERT_EQ<sp/>(asg::CheckHelper&lt;decltype(x)&gt;::failureCode(),<sp/>x)</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_FAILURE(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ<sp/>(asg::CheckHelper&lt;decltype(x)&gt;::failureCode(),<sp/>x)</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_THROW_REGEX(x,regex)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/>{<sp/>std::string<sp/>internalTestMessage;<sp/>try<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>x;<sp/>internalTestMessage<sp/>=<sp/>std::string<sp/>(&quot;expected<sp/>statement<sp/>&quot;)<sp/>+<sp/>#x<sp/>&quot;<sp/>to<sp/>throw,<sp/>but<sp/>it<sp/>didn&apos;t&quot;;<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!::asg::detail::matchesRegex<sp/>((regex),<sp/>e.what()))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>internalTestMessage<sp/>=<sp/>std::string<sp/>(&quot;expected<sp/>statement<sp/>&quot;)<sp/>+<sp/>#x<sp/>&quot;<sp/>to<sp/>throw<sp/>message<sp/>matching<sp/>&quot;<sp/>+<sp/>(regex)<sp/>+<sp/>&quot;,<sp/>but<sp/>actual<sp/>message<sp/>didn&apos;t<sp/>match:<sp/>&quot;<sp/>+<sp/>e.what();<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>}<sp/>catch<sp/>(...)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>internalTestMessage<sp/>=<sp/>std::string<sp/>(&quot;statement<sp/>&quot;)<sp/>+<sp/>#x<sp/>&quot;<sp/>threw<sp/>an<sp/>exception<sp/>that<sp/>didn&apos;t<sp/>derive<sp/>from<sp/>std::exception&quot;;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!internalTestMessage.empty())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>FAIL()<sp/>&lt;&lt;<sp/>internalTestMessage;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>SUCCEED();<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_THROW_REGEX(x,regex)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/>{<sp/>std::string<sp/>internalTestMessage;<sp/>try<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>x;<sp/>internalTestMessage<sp/>=<sp/>std::string<sp/>(&quot;expected<sp/>statement<sp/>&quot;)<sp/>+<sp/>#x<sp/>&quot;<sp/>to<sp/>throw,<sp/>but<sp/>it<sp/>didn&apos;t&quot;;<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!::asg::detail::matchesRegex<sp/>((regex),<sp/>e.what()))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>internalTestMessage<sp/>=<sp/>std::string<sp/>(&quot;expected<sp/>statement<sp/>&quot;)<sp/>+<sp/>#x<sp/>&quot;<sp/>to<sp/>throw<sp/>message<sp/>matching<sp/>&quot;<sp/>+<sp/>(regex)<sp/>+<sp/>&quot;,<sp/>but<sp/>actual<sp/>message<sp/>didn&apos;t<sp/>match:<sp/>&quot;<sp/>+<sp/>e.what();<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>}<sp/>catch<sp/>(...)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>internalTestMessage<sp/>=<sp/>std::string<sp/>(&quot;statement<sp/>&quot;)<sp/>+<sp/>#x<sp/>&quot;<sp/>threw<sp/>an<sp/>exception<sp/>that<sp/>didn&apos;t<sp/>derive<sp/>from<sp/>std::exception&quot;;<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!internalTestMessage.empty())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ADD_FAILURE()<sp/>&lt;&lt;<sp/>internalTestMessage;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>SUCCEED();<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_MATCH_REGEX(reg,str)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/>ASSERT_PRED2<sp/>(::asg::detail::matchesRegex,<sp/>reg,<sp/>str)</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_MATCH_REGEX(reg,str)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/>EXPECT_PRED2<sp/>(::asg::detail::matchesRegex,<sp/>reg,<sp/>str)</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ASGTOOL_STANDALONE</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATLAS_GOOGLE_TEST_MAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/>int<sp/>main<sp/>(int<sp/>argc,<sp/>char<sp/>**argv)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::InitGoogleTest<sp/>(&amp;argc,<sp/>argv);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>RUN_ALL_TESTS();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xAODRootAccess/Init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATLAS_GOOGLE_TEST_MAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/>int<sp/>main<sp/>(int<sp/>argc,<sp/>char<sp/>**argv)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>using<sp/>namespace<sp/>asg::msgUserCode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ANA_CHECK_SET_TYPE<sp/>(int);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::StatusCode::enableFailure();<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(xAOD::Init<sp/>());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::InitGoogleTest<sp/>(&amp;argc,<sp/>argv);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>RUN_ALL_TESTS();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h"/>
  </compounddef>
</doxygen>
