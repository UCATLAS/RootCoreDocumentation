<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d0/dde/Menu_8cxx" kind="file">
    <compoundname>Menu.cxx</compoundname>
    <includes refid="df/dde/Menu_8h" local="yes">TrigConfL1Data/Menu.h</includes>
    <includes refid="df/d33/DiffStruct_8h" local="yes">TrigConfL1Data/DiffStruct.h</includes>
    <includes refid="dc/d13/TriggerItem_8h" local="yes">TrigConfL1Data/TriggerItem.h</includes>
    <includes refid="d6/dc6/TrigConfL1Data_2TrigConfL1Data_2HelperFunctions_8h" local="yes">TrigConfL1Data/HelperFunctions.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <incdepgraph>
      <node id="310212">
        <label>boost/multi_index/ordered_index.hpp</label>
      </node>
      <node id="310201">
        <label>TrigConfL1Data/TriggerThresholdValue.h</label>
        <link refid="dd/d1d/TriggerThresholdValue_8h_source"/>
        <childnode refid="310187" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
      </node>
      <node id="310187">
        <label>TrigConfL1Data/L1DataBaseclass.h</label>
        <link refid="d8/db1/L1DataBaseclass_8h_source"/>
        <childnode refid="310188" relation="include">
        </childnode>
      </node>
      <node id="310221">
        <label>iomanip</label>
      </node>
      <node id="310207">
        <label>TrigConfL1Data/PIT.h</label>
        <link refid="d7/d7e/PIT_8h_source"/>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310196" relation="include">
        </childnode>
        <childnode refid="310187" relation="include">
        </childnode>
      </node>
      <node id="310202">
        <label>TrigConfL1Data/CaloInfo.h</label>
        <link refid="d2/d93/CaloInfo_8h_source"/>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310195" relation="include">
        </childnode>
        <childnode refid="310187" relation="include">
        </childnode>
        <childnode refid="310203" relation="include">
        </childnode>
        <childnode refid="310204" relation="include">
        </childnode>
        <childnode refid="310205" relation="include">
        </childnode>
      </node>
      <node id="310196">
        <label>stdint.h</label>
      </node>
      <node id="310204">
        <label>TrigConfL1Data/METSigParam.h</label>
        <link refid="d3/dab/METSigParam_8h_source"/>
        <childnode refid="310190" relation="include">
        </childnode>
      </node>
      <node id="310197">
        <label>stdexcept</label>
      </node>
      <node id="310190">
        <label>string</label>
      </node>
      <node id="310192">
        <label>TrigConfL1Data/TriggerItemNode.h</label>
        <link refid="d7/d8a/TriggerItemNode_8h_source"/>
        <childnode refid="310193" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310196" relation="include">
        </childnode>
      </node>
      <node id="310194">
        <label>map</label>
      </node>
      <node id="310188">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="310189" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
      </node>
      <node id="310191">
        <label>TrigConfL1Data/TriggerItem.h</label>
        <link refid="dc/d13/TriggerItem_8h_source"/>
        <childnode refid="310192" relation="include">
        </childnode>
        <childnode refid="310187" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310197" relation="include">
        </childnode>
        <childnode refid="310198" relation="include">
        </childnode>
      </node>
      <node id="310206">
        <label>TrigConfL1Data/ThresholdMonitor.h</label>
        <link refid="de/dce/ThresholdMonitor_8h_source"/>
        <childnode refid="310187" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310195" relation="include">
        </childnode>
        <childnode refid="310196" relation="include">
        </childnode>
      </node>
      <node id="310208">
        <label>TrigConfL1Data/TIP.h</label>
        <link refid="d9/dd3/TIP_8h_source"/>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310196" relation="include">
        </childnode>
        <childnode refid="310187" relation="include">
        </childnode>
      </node>
      <node id="310220">
        <label>sys/types.h</label>
      </node>
      <node id="310203">
        <label>TrigConfL1Data/CaloSinCos.h</label>
        <link refid="d0/da4/CaloSinCos_8h_source"/>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310187" relation="include">
        </childnode>
      </node>
      <node id="310185">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/Menu.cxx</label>
        <link refid="Menu.cxx"/>
        <childnode refid="310186" relation="include">
        </childnode>
        <childnode refid="310215" relation="include">
        </childnode>
        <childnode refid="310191" relation="include">
        </childnode>
        <childnode refid="310217" relation="include">
        </childnode>
        <childnode refid="310198" relation="include">
        </childnode>
        <childnode refid="310221" relation="include">
        </childnode>
      </node>
      <node id="310217">
        <label>TrigConfL1Data/HelperFunctions.h</label>
        <link refid="d6/dc6/TrigConfL1Data_2TrigConfL1Data_2HelperFunctions_8h_source"/>
        <childnode refid="310196" relation="include">
        </childnode>
        <childnode refid="310218" relation="include">
        </childnode>
        <childnode refid="310195" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310197" relation="include">
        </childnode>
        <childnode refid="310219" relation="include">
        </childnode>
        <childnode refid="310220" relation="include">
        </childnode>
      </node>
      <node id="310216">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="310195">
        <label>vector</label>
      </node>
      <node id="310211">
        <label>boost/multi_index/hashed_index.hpp</label>
      </node>
      <node id="310189">
        <label>iosfwd</label>
      </node>
      <node id="310218">
        <label>cstdlib</label>
      </node>
      <node id="310198">
        <label>iostream</label>
      </node>
      <node id="310199">
        <label>TrigConfL1Data/ThresholdConfig.h</label>
        <link refid="d5/da1/ThresholdConfig_8h_source"/>
        <childnode refid="310200" relation="include">
        </childnode>
        <childnode refid="310202" relation="include">
        </childnode>
        <childnode refid="310187" relation="include">
        </childnode>
        <childnode refid="310193" relation="include">
        </childnode>
      </node>
      <node id="310215">
        <label>TrigConfL1Data/DiffStruct.h</label>
        <link refid="df/d33/DiffStruct_8h_source"/>
        <childnode refid="310216" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310195" relation="include">
        </childnode>
      </node>
      <node id="310209">
        <label>boost/multi_index_container.hpp</label>
      </node>
      <node id="310205">
        <label>TrigConfL1Data/IsolationParam.h</label>
        <link refid="d3/d5c/IsolationParam_8h_source"/>
        <childnode refid="310187" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
      </node>
      <node id="310193">
        <label>TrigConfL1Data/L1DataDef.h</label>
        <link refid="da/d67/L1DataDef_8h_source"/>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310194" relation="include">
        </childnode>
        <childnode refid="310195" relation="include">
        </childnode>
      </node>
      <node id="310200">
        <label>TrigConfL1Data/TriggerThreshold.h</label>
        <link refid="d1/de2/TriggerThreshold_8h_source"/>
        <childnode refid="310201" relation="include">
        </childnode>
        <childnode refid="310193" relation="include">
        </childnode>
        <childnode refid="310187" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
        <childnode refid="310195" relation="include">
        </childnode>
        <childnode refid="310198" relation="include">
        </childnode>
      </node>
      <node id="310213">
        <label>boost/multi_index/sequenced_index.hpp</label>
      </node>
      <node id="310210">
        <label>boost/multi_index/mem_fun.hpp</label>
      </node>
      <node id="310214">
        <label>boost/multi_index/random_access_index.hpp</label>
      </node>
      <node id="310186">
        <label>TrigConfL1Data/Menu.h</label>
        <link refid="df/dde/Menu_8h_source"/>
        <childnode refid="310187" relation="include">
        </childnode>
        <childnode refid="310191" relation="include">
        </childnode>
        <childnode refid="310199" relation="include">
        </childnode>
        <childnode refid="310206" relation="include">
        </childnode>
        <childnode refid="310207" relation="include">
        </childnode>
        <childnode refid="310208" relation="include">
        </childnode>
        <childnode refid="310209" relation="include">
        </childnode>
        <childnode refid="310210" relation="include">
        </childnode>
        <childnode refid="310211" relation="include">
        </childnode>
        <childnode refid="310212" relation="include">
        </childnode>
        <childnode refid="310213" relation="include">
        </childnode>
        <childnode refid="310214" relation="include">
        </childnode>
        <childnode refid="310189" relation="include">
        </childnode>
        <childnode refid="310195" relation="include">
        </childnode>
        <childnode refid="310190" relation="include">
        </childnode>
      </node>
      <node id="310219">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/Menu.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/DiffStruct.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/TriggerItem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/HelperFunctions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">TrigConf;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">TrigConf::Menu::Menu()</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/>:<sp/><ref refid="d2/db1/classTrigConf_1_1L1DataBaseclass" kindref="compound">L1DataBaseclass</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">TrigConf::Menu::~Menu()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">std::vector&lt;uint16_t&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">TrigConf::Menu::bunchgroupMask()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;uint16_t&gt;<sp/>bgmask(512);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref><sp/>*<sp/>item<sp/>:<sp/><sp/>item_by_ctpid()<sp/>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bgmask[item-&gt;ctpId()]<sp/>=<sp/>item-&gt;bunchgroupMask();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bgmask;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__COVERITY__</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigConf::Menu::addTriggerItem(<ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref>*<sp/>ti)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>all<sp/>work:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pair&lt;item_by_ctpid_iterator,<sp/>bool&gt;<sp/>ins<sp/>=<sp/>item_by_ctpid().insert(ti);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pair&lt;item_by_name_iterator,<sp/>bool&gt;<sp/>ins<sp/>=<sp/>item_by_name().insert(ti);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>pair&lt;ItemContainer::iterator,<sp/>bool&gt;<sp/>ins<sp/>=<sp/>m_TriggerItemVector.push_back(ti);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>ins.second)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FATAL<sp/>Menu:<sp/>insertion<sp/>of<sp/>TriggerItem<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ti-&gt;name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>ctp<sp/>ID=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ti-&gt;ctpId()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>failed,<sp/>uniqueness<sp/>constraint<sp/>violated.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Menu<sp/>insertion<sp/>of<sp/>TriggerItem<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigConf::Menu::addThresholdMonitor(<ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref>*<sp/>thrm)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>m_ThresholdMonitorVector.push_back(thrm);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigConf::Menu::addPit(<ref refid="d2/d46/classTrigConf_1_1PIT" kindref="compound">PIT</ref>*<sp/>pit)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>m_PITs.push_back(pit);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigConf::Menu::addTip(<ref refid="d2/d44/classTrigConf_1_1TIP" kindref="compound">TIP</ref>*<sp/>tip)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TIPs.push_back(tip);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal">TrigConf::Menu::addLutOutputName(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lutCounter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>lutCondition)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_LUT.find(lutCounter)<sp/>!=<sp/>m_LUT.end())<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING<sp/>Menu:<sp/>insertion<sp/>of<sp/>LUT<sp/>output<sp/>(counter<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lutCounter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lutCounter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>failed,<sp/>uniqueness<sp/>constraint<sp/>violated.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>m_LUT[lutCounter]<sp/>=<sp/>lutCondition;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TrigConf::TriggerItem</ref>*</highlight></codeline>
<codeline lineno="64"><highlight class="normal">TrigConf::Menu::item(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctpid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>item_by_ctpid_t&amp;<sp/>byctpid<sp/>=<sp/>item_by_ctpid();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>item_by_ctpid_iterator<sp/>item<sp/>=<sp/>byctpid.find(ctpid);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item<sp/>==<sp/>byctpid.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*item;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TrigConf::TriggerItem</ref>*</highlight></codeline>
<codeline lineno="72"><highlight class="normal">TrigConf::Menu::item(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>item_by_name_t&amp;<sp/>byname<sp/>=<sp/>items().get&lt;<ref refid="d6/d3a/structTrigConf_1_1tag__name__hash" kindref="compound">tag_name_hash</ref>&gt;();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>item_by_name_iterator<sp/>item<sp/>=<sp/>byname.find(name);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item<sp/>==<sp/>byname.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*item;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">TrigConf::ThresholdMonitor</ref>*</highlight></codeline>
<codeline lineno="80"><highlight class="normal">TrigConf::Menu::findThresholdMonitor(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref>*<sp/>thrm<sp/>:<sp/>m_ThresholdMonitorVector)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>thrm-&gt;id()==id<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thrm;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="d2/d46/classTrigConf_1_1PIT" kindref="compound">TrigConf::PIT</ref>*</highlight></codeline>
<codeline lineno="87"><highlight class="normal">TrigConf::Menu::findPIT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d46/classTrigConf_1_1PIT" kindref="compound">PIT</ref>*<sp/>pit<sp/>:<sp/>m_PITs)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pit-&gt;id()==id<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pit;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="d2/d44/classTrigConf_1_1TIP" kindref="compound">TrigConf::TIP</ref>*</highlight></codeline>
<codeline lineno="94"><highlight class="normal">TrigConf::Menu::findTIP(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d44/classTrigConf_1_1TIP" kindref="compound">TIP</ref>*<sp/>tip<sp/>:<sp/>m_TIPs)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tip-&gt;id()==id<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tip;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>another<sp/>interface<sp/>to<sp/>access<sp/>the<sp/>TriggerThreshold<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::TriggerThreshold*&gt;&amp;<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">TrigConf::Menu::thresholdVector()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ThresholdConfig.getThresholdVector();</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">TrigConf::Menu::addTriggerThreshold(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TrigConf::TriggerThreshold</ref>*<sp/>tt)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>m_ThresholdConfig.addTriggerThreshold(tt);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="d2/d81/classTrigConf_1_1DiffStruct" kindref="compound">TrigConf::DiffStruct</ref>*</highlight></codeline>
<codeline lineno="114"><highlight class="normal">TrigConf::Menu::compareTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d5d/classTrigConf_1_1Menu" kindref="compound">Menu</ref>*<sp/>o)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/d81/classTrigConf_1_1DiffStruct" kindref="compound">DiffStruct</ref><sp/>*<sp/>ds<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d81/classTrigConf_1_1DiffStruct" kindref="compound">DiffStruct</ref>(</highlight><highlight class="stringliteral">&quot;TriggerMenu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>ds-&gt;check(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>name(),<sp/>o-&gt;name());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref>*<sp/>item<sp/>:<sp/>items()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref>*<sp/>o_item(o-&gt;item(item-&gt;name()));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(o_item)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds-&gt;addSub(<sp/>item-&gt;compareTo(o_item)<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds-&gt;addLeftOnlySub(<sp/></highlight><highlight class="stringliteral">&quot;TriggerItem&quot;</highlight><highlight class="normal">,<sp/>item-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref>*<sp/>o_item<sp/>:<sp/>o-&gt;items())<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref><sp/>*item<sp/>=<sp/>this-&gt;item(o_item-&gt;name());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item==0)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds-&gt;addRightOnlySub(<sp/></highlight><highlight class="stringliteral">&quot;TriggerItem&quot;</highlight><highlight class="normal">,<sp/>o_item-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ds-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ds;<sp/>ds=0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__COVERITY__</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">TrigConf::Menu::clear()<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>m_ThresholdConfig.clear();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref>*<sp/>item<sp/>:<sp/>m_TriggerItemVector)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>m_TriggerItemVector.clear();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref>*<sp/>thrMon<sp/>:<sp/>m_ThresholdMonitorVector)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>thrMon;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>m_ThresholdMonitorVector.clear();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d2/d46/classTrigConf_1_1PIT" kindref="compound">PIT</ref>*<sp/>pit<sp/>:<sp/>m_PITs)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pit;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>m_PITs.clear();</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strict<sp/>weak<sp/>ordering:<sp/>x<sp/>and<sp/>y<sp/>are<sp/>equivalent<sp/>if<sp/>compX(x,y)<sp/>and<sp/>compX(y,x)<sp/>are<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compThr(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref><sp/>*x,<sp/><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref><sp/>*y)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;id()<sp/>&lt;<sp/>y-&gt;id();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compMon(<ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref><sp/>*x,<sp/><ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref><sp/>*y)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x-&gt;thresholdName()<sp/>!=<sp/>y-&gt;thresholdName()<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;thresholdName()<sp/>&lt;<sp/>y-&gt;thresholdName();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;multiplicity()<sp/>&lt;<sp/>y-&gt;multiplicity();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compMonByID(<ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref><sp/>*x,<sp/><ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref><sp/>*y)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;internalCounter()<sp/>&lt;<sp/>y-&gt;internalCounter();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compTIP(<ref refid="d2/d44/classTrigConf_1_1TIP" kindref="compound">TIP</ref><sp/>*x,<sp/><ref refid="d2/d44/classTrigConf_1_1TIP" kindref="compound">TIP</ref><sp/>*y)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x-&gt;tipNumber()<sp/>!=<sp/>y-&gt;tipNumber())</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;tipNumber()<sp/>&lt;<sp/>y-&gt;tipNumber();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;thresholdBit()&lt;y-&gt;thresholdBit();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compPIT(<ref refid="d2/d46/classTrigConf_1_1PIT" kindref="compound">PIT</ref><sp/>*x,<sp/><ref refid="d2/d46/classTrigConf_1_1PIT" kindref="compound">PIT</ref><sp/>*y)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x-&gt;pitNumber()<sp/>!=<sp/>y-&gt;pitNumber())</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;pitNumber()<sp/>&lt;<sp/>y-&gt;pitNumber();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;thresholdBit()&lt;y-&gt;thresholdBit();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__COVERITY__</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">TrigConf::Menu::print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detail)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=1)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Trigger<sp/>menu<sp/>&quot;</highlight><highlight class="normal">;<sp/>printNameIdV();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>pits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pitVector().size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>tips<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tipVector().size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>thresholds<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_ThresholdConfig.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>items<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_TriggerItemVector.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>thr<sp/>monitors:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_ThresholdMonitorVector.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=2)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Trigger<sp/>Items<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_TriggerItemVector.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref>*<sp/>item<sp/>:<sp/>m_TriggerItemVector)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;print(indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>detail);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Trigger<sp/>Thresholds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ThresholdConfig.print(indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>detail);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=3)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>The<sp/>ThresholdMonitorVector:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sortedMon<sp/>=<sp/>m_ThresholdMonitorVector;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(sortedMon.begin(),sortedMon.end(),compMonByID);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref>*<sp/>thrm<sp/>:<sp/>sortedMon)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrm-&gt;print(indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>detail);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=3<sp/>&amp;&amp;<sp/>m_PITs.size()&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>PITs:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sortedPITs<sp/>=<sp/>m_PITs;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(sortedPITs.begin(),sortedPITs.end(),compPIT);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d46/classTrigConf_1_1PIT" kindref="compound">PIT</ref>*<sp/>pit<sp/>:<sp/>sortedPITs)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pit-&gt;print(indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=3)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>TIPs:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sortedTIPs<sp/>=<sp/>m_TIPs;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(sortedTIPs.begin(),sortedTIPs.end(),compTIP);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d44/classTrigConf_1_1TIP" kindref="compound">TIP</ref>*<sp/>tip<sp/>:<sp/>sortedTIPs)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip-&gt;print(indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=4)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>TriggerType<sp/>summary:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;8;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TriggerType<sp/>bit<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref>*<sp/>item<sp/>:<sp/>m_TriggerItemVector)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;isTriggerTypeBitOn(i))</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item-&gt;name()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=4)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>BunchGroup<sp/>mask<sp/>summary:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint16_t<sp/>m<sp/>:<sp/>bunchgroupMask()<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>ctpid=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setw(3)<sp/>&lt;&lt;<sp/>i++<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>bgmask=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>uint2bin(m,<sp/>16)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">TrigConf::Menu::writeXMLItems(std::ostream<sp/>&amp;<sp/>xmlfile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentLevel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentWidth)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel,<sp/>indentWidth)<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;TriggerMenu<sp/>name=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>phase=\&quot;lumi\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d71/classTrigConf_1_1TriggerItem" kindref="compound">TriggerItem</ref>*<sp/>item:<sp/>m_TriggerItemVector)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;writeXML(xmlfile,<sp/>indentLevel+1,<sp/>indentWidth);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel,<sp/>indentWidth)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/TriggerMenu&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">TrigConf::Menu::writeXMLThresholds(std::ostream<sp/>&amp;<sp/>xmlfile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentLevel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentWidth)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel,<sp/>indentWidth)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;TriggerThresholdList&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sortedThresholds<sp/>=<sp/>m_ThresholdConfig.getThresholdVector();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>sort(sortedThresholds.begin(),sortedThresholds.end(),compThr);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr:<sp/>sortedThresholds)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!thr-&gt;isInternal())</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thr-&gt;writeXML(xmlfile,<sp/>indentLevel+1,<sp/>indentWidth);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel,<sp/>indentWidth)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/TriggerThresholdList&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">TrigConf::Menu::writeXMLMonCounters(std::ostream<sp/>&amp;<sp/>xmlfile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentLevel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentWidth)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel,<sp/>indentWidth)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;TriggerCounterList&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sortedMonitors<sp/>=<sp/>m_ThresholdMonitorVector;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>sort(sortedMonitors.begin(),sortedMonitors.end(),compMon);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dab/classTrigConf_1_1ThresholdMonitor" kindref="compound">ThresholdMonitor</ref><sp/>*<sp/>mon:<sp/>sortedMonitors)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mon-&gt;writeXML(xmlfile,<sp/>indentLevel+1,<sp/>indentWidth);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel,<sp/>indentWidth)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/TriggerCounterList&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">vector&lt;TriggerItem*&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">Menu::itemsV()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>vector&lt;TriggerItem*&gt;<sp/>it(items().size());</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>copy(items().begin(),<sp/>items().end(),<sp/>it.begin());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/Menu.cxx"/>
  </compounddef>
</doxygen>
